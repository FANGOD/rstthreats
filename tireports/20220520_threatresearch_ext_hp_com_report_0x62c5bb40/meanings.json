{
    "title": "PDF Malware Is Not Yet Dead",
    "url": "https://threatresearch.ext.hp.com/pdf-malware-is-not-yet-dead",
    "threats": {
        "Threat": [
            {
                "token": {
                    "id": "<THREAT_0x548435b5>",
                    "type": "Threat",
                    "value": "snake_keylogger"
                },
                "references": {
                    "sentences": [
                        "Snake Keylogger payload URL<crlf>hxxp://192.227.196[.]211/FRESH/fresh.exe",
                        "Snake Keylogger exfiltration via SMTP<crlf>mail.saadzakhary[.]com:587",
                        "fresh.exe (Snake Keylogger)<crlf>20a3e59a047b8a05c7fd31b62ee57ed3510787a979a23ce1fde4996514fae803",
                        "Without running it further, we see that the malware downloads an executable called fresh.exe and runs it in the public user directory using ShellExecuteExW. The executable is Snake Keylogger, a family of information-stealing malware that we have written about before. We can now extract indicators of compromise (IOCs) from this malware, for example using dynamic analysis. At this point, we have analyzed the complete infection chain and collected IOCs, which can now be used for threat hunts or building new detections."
                    ],
                    "titles": [
                        "IOCs",
                        "Encrypted Equation Editor Exploit",
                        "PDF Campaign Delivering Snake Keylogger"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe27e2769>",
                            "type": "File",
                            "value": "fresh.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x548435b5>",
                            "type": "Threat",
                            "value": "snake_keylogger"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x38985cb7>",
                            "type": "File",
                            "value": "invoice.pdf"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x548435b5>",
                            "type": "Threat",
                            "value": "snake_keylogger"
                        }
                    }
                ]
            }
        ]
    },
    "ttps": {},
    "meanings": {
        "Category": [
            {
                "token": {
                    "id": "<CATEGORY_0xf1a480bb>",
                    "type": "Category",
                    "value": "malware"
                },
                "references": {
                    "sentences": [
                        "In this post, we look at a malware campaign isolated by HP Wolf Security earlier this year that had an unusual infection chain. The malware arrived in a PDF document a format attackers less commonly use to infect PCs and relied on several tricks to evade detection, such as embedding malicious files, loading remotely-hosted exploits, and shellcode encryption.",
                        "While Office formats remain popular, this campaign shows how attackers are also using weaponized PDF documents to infect systems. Embedding files, loading remotely-hosted exploits and encrypting shellcode are just three techniques attackers use to run malware under the radar. The exploited vulnerability in this campaign (CVE-2017-11882) is over four years old, yet continues being used, suggesting the exploit remains effective for attackers.",
                        "PDF Malware Is Not Yet Dead",
                        "Figure 1 Alert timeline in HP Wolf Security Controller showing the malware being isolated.",
                        "Without running it further, we see that the malware downloads an executable called fresh.exe and runs it in the public user directory using ShellExecuteExW. The executable is Snake Keylogger, a family of information-stealing malware that we have written about before. We can now extract indicators of compromise (IOCs) from this malware, for example using dynamic analysis. At this point, we have analyzed the complete infection chain and collected IOCs, which can now be used for threat hunts or building new detections.",
                        "For the past decade, attackers have preferred to package malware in Microsoft Office file formats, particularly Word and Excel. In fact, in Q1 2022 nearly half (45%) of malware stopped by HP Wolf Security used Office formats. The reasons are clear: users are familiar with these file types, the applications used to open them are ubiquitous, and they are suited to social engineering lures."
                    ],
                    "titles": [
                        "Conclusion",
                        "Encrypted Equation Editor Exploit",
                        "PDF Malware Is Not Yet Dead"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe27e2769>",
                            "type": "File",
                            "value": "fresh.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xb68aa214>",
                    "type": "Category",
                    "value": "rat"
                },
                "references": {
                    "sentences": [
                        "Exploit shellcode<crlf>f1794bfabeae40abc925a14f4e9158b92616269ed9bcf9aff95d1c19fa79352e",
                        "Figure 13 Decrypted shellcode presenting the payload URL.",
                        "Examining the OLE object reveals shellcode that exploits the CVE-2017-11882 remote code execution vulnerability in Equation Editor. There are many analyses of this vulnerability, so we wont analyze it in detail. Instead we focus below on how the attacker encrypted the shellcode to evade detection.",
                        "The key is multiplied by a constant and added at each iteration. The ciphertext is then decrypted each time with an XOR operation. The decrypted data is more shellcode, which is executed afterwards.",
                        "In this post, we look at a malware campaign isolated by HP Wolf Security earlier this year that had an unusual infection chain. The malware arrived in a PDF document a format attackers less commonly use to infect PCs and relied on several tricks to evade detection, such as embedding malicious files, loading remotely-hosted exploits, and shellcode encryption.",
                        "While Office formats remain popular, this campaign shows how attackers are also using weaponized PDF documents to infect systems. Embedding files, loading remotely-hosted exploits and encrypting shellcode are just three techniques attackers use to run malware under the radar. The exploited vulnerability in this campaign (CVE-2017-11882) is over four years old, yet continues being used, suggesting the exploit remains effective for attackers.",
                        "Without running it further, we see that the malware downloads an executable called fresh.exe and runs it in the public user directory using ShellExecuteExW. The executable is Snake Keylogger, a family of information-stealing malware that we have written about before. We can now extract indicators of compromise (IOCs) from this malware, for example using dynamic analysis. At this point, we have analyzed the complete infection chain and collected IOCs, which can now be used for threat hunts or building new detections.",
                        "The shellcode is stored in the OLENativeStream structure at the end of the object. We can then run the shellcode in a debugger, looking for a call to GlobalLock. This function returns a pointer to the first byte of the memory block, a technique used by shellcode to locate itself in memory. Using this information, the shellcode jumps to a defined offset and runs a decryption routine.",
                        "Figure 11 Shellcode that exploits CVE-2017-11882."
                    ],
                    "titles": [
                        "Conclusion",
                        "IOCs",
                        "Encrypted Equation Editor Exploit",
                        "PDF Malware Is Not Yet Dead"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe27e2769>",
                            "type": "File",
                            "value": "fresh.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            }
        ],
        "CVE": [
            {
                "token": {
                    "id": "<CVE_0xac7ff143>",
                    "type": "CVE",
                    "value": "cve-2017-11882"
                },
                "references": {
                    "sentences": [
                        "CVE-2017-11882",
                        "While Office formats remain popular, this campaign shows how attackers are also using weaponized PDF documents to infect systems. Embedding files, loading remotely-hosted exploits and encrypting shellcode are just three techniques attackers use to run malware under the radar. The exploited vulnerability in this campaign (CVE-2017-11882) is over four years old, yet continues being used, suggesting the exploit remains effective for attackers.",
                        "Examining the OLE object reveals shellcode that exploits the CVE-2017-11882 remote code execution vulnerability in Equation Editor. There are many analyses of this vulnerability, so we wont analyze it in detail. Instead we focus below on how the attacker encrypted the shellcode to evade detection.",
                        "Figure 11 Shellcode that exploits CVE-2017-11882."
                    ],
                    "titles": [
                        "Conclusion",
                        "IOCs",
                        "Encrypted Equation Editor Exploit"
                    ]
                },
                "info": {
                    "vulners_score": 8.3,
                    "cvss_score": 9.3,
                    "exploit": true,
                    "softs": {
                        "microsoft office": [
                            "2013",
                            "2010",
                            "2016",
                            "2007"
                        ]
                    },
                    "patch": "official fix",
                    "risk_level": 7.8
                }
            }
        ]
    },
    "iocs": {
        "File": [
            {
                "token": {
                    "id": "<FILE_0x38985cb7>",
                    "type": "File",
                    "value": "invoice.pdf"
                },
                "references": {
                    "sentences": [
                        "A PDF document named REMMITANCE INVOICE.pdf was sent as an email attachment to a target. Since the document came from a risky vector email, in this case when the user opened it, HP Sure Click ran the file in an isolated micro virtual machine, preventing their system from being infected.",
                        "REMMITANCE INVOICE.pdf<crlf>05dc0792a89e18f5485d9127d2063b343cfd2a5d497c9b5df91dc687f9a1341d"
                    ],
                    "titles": [
                        "IOCs",
                        "PDF Campaign Delivering Snake Keylogger"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x38985cb7>",
                            "type": "File",
                            "value": "invoice.pdf"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x644c0cc1>",
                            "type": "UnknownWord",
                            "value": "remmitance"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x38985cb7>",
                            "type": "File",
                            "value": "invoice.pdf"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x548435b5>",
                            "type": "Threat",
                            "value": "snake_keylogger"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xe89a42fa>",
                    "type": "File",
                    "value": "document.xml.rels"
                },
                "references": {
                    "sentences": [
                        "The highlighted URL caught our eye because its not a legitimate domain found in Office documents. This URL is in the document.xml.rels file, which lists the documents relationships. The relationship that caught our eye shows an external object linking and embedding (OLE) object being loaded from this URL (Figure 8)."
                    ],
                    "titles": [
                        "Embedded Word Document"
                    ]
                }
            },
            {
                "token": {
                    "id": "<FILE_0xe27e2769>",
                    "type": "File",
                    "value": "fresh.exe"
                },
                "references": {
                    "sentences": [
                        "fresh.exe (Snake Keylogger)<crlf>20a3e59a047b8a05c7fd31b62ee57ed3510787a979a23ce1fde4996514fae803",
                        "Without running it further, we see that the malware downloads an executable called fresh.exe and runs it in the public user directory using ShellExecuteExW. The executable is Snake Keylogger, a family of information-stealing malware that we have written about before. We can now extract indicators of compromise (IOCs) from this malware, for example using dynamic analysis. At this point, we have analyzed the complete infection chain and collected IOCs, which can now be used for threat hunts or building new detections."
                    ],
                    "titles": [
                        "IOCs",
                        "Encrypted Equation Editor Exploit"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe27e2769>",
                            "type": "File",
                            "value": "fresh.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xe27e2769>",
                            "type": "File",
                            "value": "fresh.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x548435b5>",
                            "type": "Threat",
                            "value": "snake_keylogger"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xe27e2769>",
                            "type": "File",
                            "value": "fresh.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            }
        ],
        "Hash": [
            {
                "token": {
                    "id": "<SHA256_0x8a3d1a96>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "05dc0792a89e18f5485d9127d2063b343cfd2a5d497c9b5df91dc687f9a1341d"
                },
                "references": {
                    "sentences": [
                        "REMMITANCE INVOICE.pdf<crlf>05dc0792a89e18f5485d9127d2063b343cfd2a5d497c9b5df91dc687f9a1341d"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            },
            {
                "token": {
                    "id": "<SHA256_0x238b2b6f>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "250d2cd13474133227c3199467a30f4e1e17de7c7c4190c4784e46ecf77e51fe"
                },
                "references": {
                    "sentences": [
                        "has been verified. however pdf, jpeg, xlsx, .docx<crlf>250d2cd13474133227c3199467a30f4e1e17de7c7c4190c4784e46ecf77e51fe"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            },
            {
                "token": {
                    "id": "<SHA256_0xdfa04fd1>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "f1794bfabeae40abc925a14f4e9158b92616269ed9bcf9aff95d1c19fa79352e"
                },
                "references": {
                    "sentences": [
                        "Exploit shellcode<crlf>f1794bfabeae40abc925a14f4e9158b92616269ed9bcf9aff95d1c19fa79352e"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            },
            {
                "token": {
                    "id": "<SHA256_0x423d2eba>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "20a3e59a047b8a05c7fd31b62ee57ed3510787a979a23ce1fde4996514fae803"
                },
                "references": {
                    "sentences": [
                        "fresh.exe (Snake Keylogger)<crlf>20a3e59a047b8a05c7fd31b62ee57ed3510787a979a23ce1fde4996514fae803"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            },
            {
                "token": {
                    "id": "<HASHSET_0x8cee261d>",
                    "type": "HashSet",
                    "value": [
                        {
                            "id": "<SHA256_0x76a3cfe8>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "165305d6744591b745661e93dc9feaea73ee0a8ce4dbe93fde8f76d0fc2f8c3f"
                        },
                        {
                            "id": "<FILE_0xe248c076>",
                            "type": "File",
                            "value": "f_document_shp.doc"
                        }
                    ]
                },
                "references": {
                    "sentences": [
                        "f_document_shp.doc<crlf>165305d6744591b745661e93dc9feaea73ee0a8ce4dbe93fde8f76d0fc2f8c3f",
                        "Connecting to this URL leads to a redirect and then downloads an RTF document called f_document_shp.doc. To examine this document more closely, we can use rtfobj to check if it contains any OLE objects."
                    ],
                    "titles": [
                        "IOCs",
                        "External OLE Object"
                    ]
                }
            },
            {
                "token": {
                    "id": "<HASHSET_0x589645ad>",
                    "type": "HashSet",
                    "value": [
                        {
                            "id": "<SHA256_0x760a1565>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "297f318975256c22e5069d714dd42753b78b0a23e24266b9b67feb7352942962"
                        },
                        {
                            "id": "<FILE_0x14c7bcae>",
                            "type": "File",
                            "value": "f_document_shp.doc_object_00001707.raw"
                        }
                    ]
                },
                "references": {
                    "sentences": [
                        "f_document_shp.doc_object_00001707.raw<crlf>297f318975256c22e5069d714dd42753b78b0a23e24266b9b67feb7352942962"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            }
        ],
        "Url": [
            {
                "token": {
                    "id": "<URL_0x1168124c>",
                    "type": "Url",
                    "value": "https://vtaurl.com/ihytw"
                },
                "references": {
                    "sentences": [
                        "External OLE reference URL<crlf>hxxps://vtaurl[.]com/IHytw"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            },
            {
                "token": {
                    "id": "<URL_0xd8fc44a5>",
                    "type": "Url",
                    "value": "http://192.227.196.211/tea_shipping/f_document_shp.doc"
                },
                "references": {
                    "sentences": [
                        "External OLE reference final URL<crlf>hxxp://192.227.196[.]211/tea_shipping/f_document_shp.doc"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            },
            {
                "token": {
                    "id": "<URL_0x2f11fb57>",
                    "type": "Url",
                    "value": "http://192.227.196.211/fresh/fresh.exe"
                },
                "references": {
                    "sentences": [
                        "Snake Keylogger payload URL<crlf>hxxp://192.227.196[.]211/FRESH/fresh.exe"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            }
        ],
        "Domain": [
            {
                "token": {
                    "id": "<DOMAIN_0xde1791cc>",
                    "type": "Domain",
                    "value": "mail.saadzakhary.com:587"
                },
                "references": {
                    "sentences": [
                        "Snake Keylogger exfiltration via SMTP<crlf>mail.saadzakhary[.]com:587"
                    ],
                    "titles": [
                        "IOCs"
                    ]
                }
            }
        ]
    },
    "unknownwords": {
        "UnknownWord": [
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe2ad84ab>",
                    "type": "UnknownWord",
                    "value": "ubiquitous"
                },
                "references": {
                    "sentences": [
                        "For the past decade, attackers have preferred to package malware in Microsoft Office file formats, particularly Word and Excel. In fact, in Q1 2022 nearly half (45%) of malware stopped by HP Wolf Security used Office formats. The reasons are clear: users are familiar with these file types, the applications used to open them are ubiquitous, and they are suited to social engineering lures."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x50f06b94>",
                    "type": "UnknownWord",
                    "value": "suited"
                },
                "references": {
                    "sentences": [
                        "For the past decade, attackers have preferred to package malware in Microsoft Office file formats, particularly Word and Excel. In fact, in Q1 2022 nearly half (45%) of malware stopped by HP Wolf Security used Office formats. The reasons are clear: users are familiar with these file types, the applications used to open them are ubiquitous, and they are suited to social engineering lures."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfb655d07>",
                    "type": "UnknownWord",
                    "value": "arrived"
                },
                "references": {
                    "sentences": [
                        "In this post, we look at a malware campaign isolated by HP Wolf Security earlier this year that had an unusual infection chain. The malware arrived in a PDF document a format attackers less commonly use to infect PCs and relied on several tricks to evade detection, such as embedding malicious files, loading remotely-hosted exploits, and shellcode encryption."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe4e11af9>",
                    "type": "UnknownWord",
                    "value": "pcs"
                },
                "references": {
                    "sentences": [
                        "In this post, we look at a malware campaign isolated by HP Wolf Security earlier this year that had an unusual infection chain. The malware arrived in a PDF document a format attackers less commonly use to infect PCs and relied on several tricks to evade detection, such as embedding malicious files, loading remotely-hosted exploits, and shellcode encryption."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x86d400da>",
                    "type": "UnknownWord",
                    "value": "relied"
                },
                "references": {
                    "sentences": [
                        "In this post, we look at a malware campaign isolated by HP Wolf Security earlier this year that had an unusual infection chain. The malware arrived in a PDF document a format attackers less commonly use to infect PCs and relied on several tricks to evade detection, such as embedding malicious files, loading remotely-hosted exploits, and shellcode encryption."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x27c8c796>",
                    "type": "UnknownWord",
                    "value": "remotely-hosted"
                },
                "references": {
                    "sentences": [
                        "In this post, we look at a malware campaign isolated by HP Wolf Security earlier this year that had an unusual infection chain. The malware arrived in a PDF document a format attackers less commonly use to infect PCs and relied on several tricks to evade detection, such as embedding malicious files, loading remotely-hosted exploits, and shellcode encryption.",
                        "While Office formats remain popular, this campaign shows how attackers are also using weaponized PDF documents to infect systems. Embedding files, loading remotely-hosted exploits and encrypting shellcode are just three techniques attackers use to run malware under the radar. The exploited vulnerability in this campaign (CVE-2017-11882) is over four years old, yet continues being used, suggesting the exploit remains effective for attackers."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe34d47e0>",
                    "type": "UnknownWord",
                    "value": "patrick schlpfer"
                },
                "references": {
                    "sentences": [
                        "Patrick Schlpfer"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x644c0cc1>",
                    "type": "UnknownWord",
                    "value": "remmitance"
                },
                "references": {
                    "sentences": [
                        "A PDF document named REMMITANCE INVOICE.pdf was sent as an email attachment to a target. Since the document came from a risky vector email, in this case when the user opened it, HP Sure Click ran the file in an isolated micro virtual machine, preventing their system from being infected.",
                        "REMMITANCE INVOICE.pdf<crlf>05dc0792a89e18f5485d9127d2063b343cfd2a5d497c9b5df91dc687f9a1341d"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x38985cb7>",
                            "type": "File",
                            "value": "invoice.pdf"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x644c0cc1>",
                            "type": "UnknownWord",
                            "value": "remmitance"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5d1cceeb>",
                    "type": "UnknownWord",
                    "value": "micro"
                },
                "references": {
                    "sentences": [
                        "A PDF document named REMMITANCE INVOICE.pdf was sent as an email attachment to a target. Since the document came from a risky vector email, in this case when the user opened it, HP Sure Click ran the file in an isolated micro virtual machine, preventing their system from being infected."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3eea08b7>",
                    "type": "UnknownWord",
                    "value": "prompting"
                },
                "references": {
                    "sentences": [
                        "Figure 2 PDF document prompting the user to open another document."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd6b08bee>",
                    "type": "UnknownWord",
                    "value": "embeddedfile"
                },
                "references": {
                    "sentences": [
                        "Analyzing the PDF file reveals that the .docx file is stored as an EmbeddedFile object. Investigators can quickly summarize the most important properties of a PDF document using Didier Stevens pdfid script (Figure 3).",
                        "To analyze the EmbeddedFile, we can use another tool from Didier Stevens toolbox, pdf-parser. This script allows us to extract the file from the PDF document and save it to disk."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x63150877>",
                    "type": "UnknownWord",
                    "value": "stevens pdfid"
                },
                "references": {
                    "sentences": [
                        "Analyzing the PDF file reveals that the .docx file is stored as an EmbeddedFile object. Investigators can quickly summarize the most important properties of a PDF document using Didier Stevens pdfid script (Figure 3)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb8c02ad>",
                    "type": "UnknownWord",
                    "value": "investigators"
                },
                "references": {
                    "sentences": [
                        "Analyzing the PDF file reveals that the .docx file is stored as an EmbeddedFile object. Investigators can quickly summarize the most important properties of a PDF document using Didier Stevens pdfid script (Figure 3)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa7e0ec80>",
                    "type": "UnknownWord",
                    "value": "didier"
                },
                "references": {
                    "sentences": [
                        "Analyzing the PDF file reveals that the .docx file is stored as an EmbeddedFile object. Investigators can quickly summarize the most important properties of a PDF document using Didier Stevens pdfid script (Figure 3).",
                        "To analyze the EmbeddedFile, we can use another tool from Didier Stevens toolbox, pdf-parser. This script allows us to extract the file from the PDF document and save it to disk."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x68ea4211>",
                    "type": "UnknownWord",
                    "value": "pdfid"
                },
                "references": {
                    "sentences": [
                        "Figure 3 PDFiD analysis of document."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2d242b3f>",
                    "type": "UnknownWord",
                    "value": "stevens toolbox"
                },
                "references": {
                    "sentences": [
                        "To analyze the EmbeddedFile, we can use another tool from Didier Stevens toolbox, pdf-parser. This script allows us to extract the file from the PDF document and save it to disk."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x58add40a>",
                    "type": "UnknownWord",
                    "value": "pdf-parser"
                },
                "references": {
                    "sentences": [
                        "To analyze the EmbeddedFile, we can use another tool from Didier Stevens toolbox, pdf-parser. This script allows us to extract the file from the PDF document and save it to disk.",
                        "Figure 4 Using pdf-parser to save embedded file to disk."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2a99886b>",
                    "type": "UnknownWord",
                    "value": "rich"
                },
                "references": {
                    "sentences": [
                        "If we return to our PDF document and click on Open this file at the prompt, Microsoft Word opens. If Protected View is disabled, Word downloads a Rich Text Format (.rtf) file from a web server, which is then run in the context of the open document."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5bdd30f>",
                    "type": "UnknownWord",
                    "value": "returning"
                },
                "references": {
                    "sentences": [
                        "Figure 6 HTTP GET request returning RTF file."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd7b62fb6>",
                    "type": "UnknownWord",
                    "value": "ooxml"
                },
                "references": {
                    "sentences": [
                        "Lets switch back to the Word document to understand how it downloads the .rtf. Since it is an OOXML (Office Open XML) file, we can unzip its contents and look for URLs in the document using the command shown in Figure 7."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1ba37e2>",
                    "type": "UnknownWord",
                    "value": "unzip"
                },
                "references": {
                    "sentences": [
                        "Lets switch back to the Word document to understand how it downloads the .rtf. Since it is an OOXML (Office Open XML) file, we can unzip its contents and look for URLs in the document using the command shown in Figure 7."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x137b5c42>",
                    "type": "UnknownWord",
                    "value": "eye"
                },
                "references": {
                    "sentences": [
                        "The highlighted URL caught our eye because its not a legitimate domain found in Office documents. This URL is in the document.xml.rels file, which lists the documents relationships. The relationship that caught our eye shows an external object linking and embedding (OLE) object being loaded from this URL (Figure 8)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcc566ce4>",
                    "type": "UnknownWord",
                    "value": "rtfobj"
                },
                "references": {
                    "sentences": [
                        "Figure 9 RTFObj output showing two OLE objects.",
                        "Connecting to this URL leads to a redirect and then downloads an RTF document called f_document_shp.doc. To examine this document more closely, we can use rtfobj to check if it contains any OLE objects."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf23fca1f>",
                    "type": "UnknownWord",
                    "value": "well-formed"
                },
                "references": {
                    "sentences": [
                        "Here there are two OLE objects we can save to disk using the same tool. As indicated in the console output, both objects are not well-formed, meaning analyzing them with oletools could lead to confusing results. To fix this, we can use foremost to reconstruct the malformed objects. Then we can view basic information about the objects using oleid. This tells us the object relates to Microsoft Equation Editor, a feature in Word that is commonly exploited by attackers to run arbitrary code."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x48eabb32>",
                    "type": "UnknownWord",
                    "value": "oletools"
                },
                "references": {
                    "sentences": [
                        "Here there are two OLE objects we can save to disk using the same tool. As indicated in the console output, both objects are not well-formed, meaning analyzing them with oletools could lead to confusing results. To fix this, we can use foremost to reconstruct the malformed objects. Then we can view basic information about the objects using oleid. This tells us the object relates to Microsoft Equation Editor, a feature in Word that is commonly exploited by attackers to run arbitrary code."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd248f180>",
                    "type": "UnknownWord",
                    "value": "confusing"
                },
                "references": {
                    "sentences": [
                        "Here there are two OLE objects we can save to disk using the same tool. As indicated in the console output, both objects are not well-formed, meaning analyzing them with oletools could lead to confusing results. To fix this, we can use foremost to reconstruct the malformed objects. Then we can view basic information about the objects using oleid. This tells us the object relates to Microsoft Equation Editor, a feature in Word that is commonly exploited by attackers to run arbitrary code."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x25ffb9f2>",
                    "type": "UnknownWord",
                    "value": "foremost"
                },
                "references": {
                    "sentences": [
                        "Here there are two OLE objects we can save to disk using the same tool. As indicated in the console output, both objects are not well-formed, meaning analyzing them with oletools could lead to confusing results. To fix this, we can use foremost to reconstruct the malformed objects. Then we can view basic information about the objects using oleid. This tells us the object relates to Microsoft Equation Editor, a feature in Word that is commonly exploited by attackers to run arbitrary code."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x13629e71>",
                    "type": "UnknownWord",
                    "value": "oleid"
                },
                "references": {
                    "sentences": [
                        "Figure 10 Basic OLE information extracted with oleid.",
                        "Here there are two OLE objects we can save to disk using the same tool. As indicated in the console output, both objects are not well-formed, meaning analyzing them with oletools could lead to confusing results. To fix this, we can use foremost to reconstruct the malformed objects. Then we can view basic information about the objects using oleid. This tells us the object relates to Microsoft Equation Editor, a feature in Word that is commonly exploited by attackers to run arbitrary code."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3c9b08a6>",
                    "type": "UnknownWord",
                    "value": "relates"
                },
                "references": {
                    "sentences": [
                        "Here there are two OLE objects we can save to disk using the same tool. As indicated in the console output, both objects are not well-formed, meaning analyzing them with oletools could lead to confusing results. To fix this, we can use foremost to reconstruct the malformed objects. Then we can view basic information about the objects using oleid. This tells us the object relates to Microsoft Equation Editor, a feature in Word that is commonly exploited by attackers to run arbitrary code."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x960dd513>",
                    "type": "UnknownWord",
                    "value": "olenativestream"
                },
                "references": {
                    "sentences": [
                        "The shellcode is stored in the OLENativeStream structure at the end of the object. We can then run the shellcode in a debugger, looking for a call to GlobalLock. This function returns a pointer to the first byte of the memory block, a technique used by shellcode to locate itself in memory. Using this information, the shellcode jumps to a defined offset and runs a decryption routine."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x66c3e586>",
                    "type": "UnknownWord",
                    "value": "globallock"
                },
                "references": {
                    "sentences": [
                        "The shellcode is stored in the OLENativeStream structure at the end of the object. We can then run the shellcode in a debugger, looking for a call to GlobalLock. This function returns a pointer to the first byte of the memory block, a technique used by shellcode to locate itself in memory. Using this information, the shellcode jumps to a defined offset and runs a decryption routine."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x97194fbf>",
                    "type": "UnknownWord",
                    "value": "pointer"
                },
                "references": {
                    "sentences": [
                        "The shellcode is stored in the OLENativeStream structure at the end of the object. We can then run the shellcode in a debugger, looking for a call to GlobalLock. This function returns a pointer to the first byte of the memory block, a technique used by shellcode to locate itself in memory. Using this information, the shellcode jumps to a defined offset and runs a decryption routine."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbb5d1923>",
                    "type": "UnknownWord",
                    "value": "multiplication"
                },
                "references": {
                    "sentences": [
                        "Figure 12 Multiplication and addition part of decryption routine."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc7a9d5a3>",
                    "type": "UnknownWord",
                    "value": "multiplied"
                },
                "references": {
                    "sentences": [
                        "The key is multiplied by a constant and added at each iteration. The ciphertext is then decrypted each time with an XOR operation. The decrypted data is more shellcode, which is executed afterwards."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x35b58925>",
                    "type": "UnknownWord",
                    "value": "iteration"
                },
                "references": {
                    "sentences": [
                        "The key is multiplied by a constant and added at each iteration. The ciphertext is then decrypted each time with an XOR operation. The decrypted data is more shellcode, which is executed afterwards."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdbc3af6>",
                    "type": "UnknownWord",
                    "value": "ciphertext"
                },
                "references": {
                    "sentences": [
                        "The key is multiplied by a constant and added at each iteration. The ciphertext is then decrypted each time with an XOR operation. The decrypted data is more shellcode, which is executed afterwards."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcb6b113>",
                    "type": "UnknownWord",
                    "value": "presenting"
                },
                "references": {
                    "sentences": [
                        "Figure 13 Decrypted shellcode presenting the payload URL."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xff24ab43>",
                    "type": "UnknownWord",
                    "value": "information-stealing"
                },
                "references": {
                    "sentences": [
                        "Without running it further, we see that the malware downloads an executable called fresh.exe and runs it in the public user directory using ShellExecuteExW. The executable is Snake Keylogger, a family of information-stealing malware that we have written about before. We can now extract indicators of compromise (IOCs) from this malware, for example using dynamic analysis. At this point, we have analyzed the complete infection chain and collected IOCs, which can now be used for threat hunts or building new detections."
                    ],
                    "titles": []
                }
            }
        ]
    },
    "other_links": [],
    "info": {
        "potential_threats": {
            "<UNKNOWNWORD_0x644c0cc1>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x644c0cc1>",
                    "type": "UnknownWord",
                    "value": "remmitance"
                },
                "references": {
                    "sentences": [
                        "A PDF document named REMMITANCE INVOICE.pdf was sent as an email attachment to a target. Since the document came from a risky vector email, in this case when the user opened it, HP Sure Click ran the file in an isolated micro virtual machine, preventing their system from being infected.",
                        "REMMITANCE INVOICE.pdf<crlf>05dc0792a89e18f5485d9127d2063b343cfd2a5d497c9b5df91dc687f9a1341d"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x38985cb7>",
                            "type": "File",
                            "value": "invoice.pdf"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x644c0cc1>",
                            "type": "UnknownWord",
                            "value": "remmitance"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0xd6b08bee>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xd6b08bee>",
                    "type": "UnknownWord",
                    "value": "embeddedfile"
                },
                "references": {
                    "sentences": [
                        "Analyzing the PDF file reveals that the .docx file is stored as an EmbeddedFile object. Investigators can quickly summarize the most important properties of a PDF document using Didier Stevens pdfid script (Figure 3).",
                        "To analyze the EmbeddedFile, we can use another tool from Didier Stevens toolbox, pdf-parser. This script allows us to extract the file from the PDF document and save it to disk."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xa7e0ec80>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xa7e0ec80>",
                    "type": "UnknownWord",
                    "value": "didier"
                },
                "references": {
                    "sentences": [
                        "Analyzing the PDF file reveals that the .docx file is stored as an EmbeddedFile object. Investigators can quickly summarize the most important properties of a PDF document using Didier Stevens pdfid script (Figure 3).",
                        "To analyze the EmbeddedFile, we can use another tool from Didier Stevens toolbox, pdf-parser. This script allows us to extract the file from the PDF document and save it to disk."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x68ea4211>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x68ea4211>",
                    "type": "UnknownWord",
                    "value": "pdfid"
                },
                "references": {
                    "sentences": [
                        "Figure 3 PDFiD analysis of document."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xd7b62fb6>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xd7b62fb6>",
                    "type": "UnknownWord",
                    "value": "ooxml"
                },
                "references": {
                    "sentences": [
                        "Lets switch back to the Word document to understand how it downloads the .rtf. Since it is an OOXML (Office Open XML) file, we can unzip its contents and look for URLs in the document using the command shown in Figure 7."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x960dd513>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x960dd513>",
                    "type": "UnknownWord",
                    "value": "olenativestream"
                },
                "references": {
                    "sentences": [
                        "The shellcode is stored in the OLENativeStream structure at the end of the object. We can then run the shellcode in a debugger, looking for a call to GlobalLock. This function returns a pointer to the first byte of the memory block, a technique used by shellcode to locate itself in memory. Using this information, the shellcode jumps to a defined offset and runs a decryption routine."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x66c3e586>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x66c3e586>",
                    "type": "UnknownWord",
                    "value": "globallock"
                },
                "references": {
                    "sentences": [
                        "The shellcode is stored in the OLENativeStream structure at the end of the object. We can then run the shellcode in a debugger, looking for a call to GlobalLock. This function returns a pointer to the first byte of the memory block, a technique used by shellcode to locate itself in memory. Using this information, the shellcode jumps to a defined offset and runs a decryption routine."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xbb5d1923>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xbb5d1923>",
                    "type": "UnknownWord",
                    "value": "multiplication"
                },
                "references": {
                    "sentences": [
                        "Figure 12 Multiplication and addition part of decryption routine."
                    ],
                    "titles": []
                }
            }
        },
        "sigma": false,
        "yara": false
    },
    "keywords": {
        "classified": [],
        "dubbed": [],
        "associated": [],
        "targets": [],
        "attributed": []
    },
    "resources": {
        "links": {
            "github": [
                "https://github.com/decalage2/oletools/wiki/rtfobj",
                "https://github.com/decalage2/oletools/wiki/oleid"
            ],
            "pastebin": [],
            "text_files": [],
            "other": [
                "https://www.hp.com/uk-en/security/endpoint-security-solutions.html",
                "https://threatresearch.ext.hp.com/blog/",
                "https://threatresearch.ext.hp.com/blog/?wpv-category=threat-research",
                "https://threatresearch.ext.hp.com/blog/?author-filter=46",
                "https://twitter.com/share?url=https://threatresearch.ext.hp.com/pdf-malware-is-not-yet-dead/",
                "https://www.linkedin.com/shareArticle?url=https://threatresearch.ext.hp.com/pdf-malware-is-not-yet-dead/",
                "https://www.facebook.com/sharer.php?u=https://threatresearch.ext.hp.com/pdf-malware-is-not-yet-dead/",
                "https://blog.didierstevens.com/programs/pdf-tools/",
                "https://blog.didierstevens.com/programs/pdf-tools/",
                "http://www.decalage.info/python/oletools",
                "http://foremost.sourceforge.net/",
                "https://msrc.microsoft.com/update-guide/vulnerability/CVE-2017-11882",
                "https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-globallock",
                "https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shellexecuteexw",
                "https://threatresearch.ext.hp.com/the-many-skins-of-snake-keylogger/",
                "https://threatresearch.ext.hp.com/blog/?post-tag=CVE-2017-11882",
                "https://threatresearch.ext.hp.com/blog/?post-tag=PDF",
                "https://threatresearch.ext.hp.com/blog/?post-tag=snake"
            ]
        },
        "images": [
            "https://threatresearch.ext.hp.com/wp-content/uploads/2021/05/blogImage__b2.jpg"
        ]
    }
}