{
    "title": "Malware Campaigns Targeting African Banking Sector",
    "url": "https://threatresearch.ext.hp.com/malware-campaigns-targeting-african-banking-sector",
    "threats": {
        "Threat": [
            {
                "token": {
                    "id": "<THREAT_0x56fcd8a5>",
                    "type": "Threat",
                    "value": "html_smuggling_technique"
                },
                "references": {
                    "sentences": [
                        "The top motivation behind cybercrime is financial enrichment and the financial services industry is an attractive target for cybercriminals. In early 2022, HP Wolf Security detected a targeted malware campaign against an employee of an African bank. The campaign caught our attention because of its targeted nature and how the threat actor attempted to deliver malware using HTML smuggling, a technique for sneaking malicious email attachments past gateway security controls. In this article, we describe the campaign, sharing how the attacker registered fake banking domains to build a credible lure, and explain how HTML smuggling works.",
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security.",
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection.",
                        "html smuggling"
                    ],
                    "titles": [
                        "Typosquatted Domains",
                        "HTML Smuggling",
                        "Malware Campaigns Targeting African Banking Sector",
                        "Conclusion"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x38a6089b>",
                            "type": "File",
                            "value": "candidature.vbs"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc01d0f1>",
                            "type": "File",
                            "value": "powershell.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x94f39e13>",
                            "type": "Threat",
                            "value": "remcos_rat"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x5d7c2202>",
                            "type": "File",
                            "value": "bad.iso"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xd83f519a>",
                            "type": "Threat",
                            "value": "cloudeye"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0xd83f519a>",
                    "type": "Threat",
                    "value": "cloudeye"
                },
                "references": {
                    "sentences": [
                        "Encrypted GuLoader shellcode:",
                        "The downloader used in the described campaign is GuLoader, which is executed using PowerShell via code stored the Registry and is otherwise only run in memory. Detecting such a chain of infection is not easy, as the malware is only located in memory and the Registry. However, one simple way of breaking the infection chain is changing the default application for script files from Windows Script Host to something else, for example, Notepad. Organizations should also make sure they have visibility over their network to monitor and block unusual process behavior at an early stage. Beyond this, it is important for employees to critically question emails, especially those that appeal to a sense of urgency, curiosity and authority characteristics that are commonly exploited by attackers.",
                        "The decrypted code is GuLoader. This malware is a loader that downloads and executes other malware families from the web. In this campaign GuLoader was configured to download and run RemcosRAT malware. For this purpose, there are two URLs in GuLoaders configuration that lead to the RemcosRAT payload. One payload URL leads to OneDrive and the other to Dropbox. We have analyzed other malware campaigns involving GuLoader have also used file sharing services to host malware payloads. Since the payload is also encrypted, it can be challenging for service providers to detect and remove them.",
                        "guloader"
                    ],
                    "titles": [
                        "Typosquatted Domains",
                        "Indicators of Compromise",
                        "HTML Smuggling",
                        "Conclusion"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xd83f519a>",
                            "type": "Threat",
                            "value": "cloudeye"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0x3a7f7911>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "d681b39362fae43843b1c6058c0aa8199673052507e5c500b7361c935037e05e"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xd83f519a>",
                            "type": "Threat",
                            "value": "cloudeye"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xd83f519a>",
                            "type": "Threat",
                            "value": "cloudeye"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x94f39e13>",
                            "type": "Threat",
                            "value": "remcos_rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0x94f39e13>",
                    "type": "Threat",
                    "value": "remcos_rat"
                },
                "references": {
                    "sentences": [
                        "Encrypted RemcosRAT payload:",
                        "Remcos is a commercial Windows remote access tool (RAT) that gives the operator significant control over the infected system. Its capabilities include running remote commands, downloading and uploading files, taking screenshots, recording keystrokes and recording the users webcam and microphone. While we dont know for certain what the attacker would have used their access for, but here are some possibilities:",
                        "The decrypted code is GuLoader. This malware is a loader that downloads and executes other malware families from the web. In this campaign GuLoader was configured to download and run RemcosRAT malware. For this purpose, there are two URLs in GuLoaders configuration that lead to the RemcosRAT payload. One payload URL leads to OneDrive and the other to Dropbox. We have analyzed other malware campaigns involving GuLoader have also used file sharing services to host malware payloads. Since the payload is also encrypted, it can be challenging for service providers to detect and remove them.",
                        "RemcosRAT Payload URLs:",
                        "remcos"
                    ],
                    "titles": [
                        "Typosquatted Domains",
                        "Delivered Payload",
                        "Indicators of Compromise",
                        "HTML Smuggling"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0x94f39e13>",
                            "type": "Threat",
                            "value": "remcos_rat"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0x12a83b5c>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "5d45422cf2c38af734cee5a5c9fa2fef005f9409d5d5b74814aea1a5f246835d"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x94f39e13>",
                            "type": "Threat",
                            "value": "remcos_rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xd83f519a>",
                            "type": "Threat",
                            "value": "cloudeye"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x94f39e13>",
                            "type": "Threat",
                            "value": "remcos_rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x41fdcbaa>",
                            "type": "Url",
                            "value": "https://onedrive.live.com/download?cid=50d26408c26a8b34&resid=50d26408c26a8b34%21114&authkey=agw61dvt-rt_fru"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x94f39e13>",
                            "type": "Threat",
                            "value": "remcos_rat"
                        }
                    }
                ]
            }
        ]
    },
    "ttps": {},
    "meanings": {
        "Category": [
            {
                "token": {
                    "id": "<CATEGORY_0xf1a480bb>",
                    "type": "Category",
                    "value": "malware"
                },
                "references": {
                    "sentences": [
                        "Figure 7 PowerShell code using C# type definitions to execute malicious code.",
                        "The third domain showed the mimicked banks homepage, which was also likely copied from the legitimate website, but again we found no malware or signs that the site was being used for phishing.",
                        "There is no malware hosted on the page itself, and no input form that could be used to elicit login credentials or sensitive information from visitors.",
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email.",
                        "The decrypted code is GuLoader. This malware is a loader that downloads and executes other malware families from the web. In this campaign GuLoader was configured to download and run RemcosRAT malware. For this purpose, there are two URLs in GuLoaders configuration that lead to the RemcosRAT payload. One payload URL leads to OneDrive and the other to Dropbox. We have analyzed other malware campaigns involving GuLoader have also used file sharing services to host malware payloads. Since the payload is also encrypted, it can be challenging for service providers to detect and remove them.",
                        "Inside there is a Visual Basic Script (VBS) file called Fiche de candidature.vbs which is executed when double-clicked. One way to prevent the accidental execution of malicious VBS scripts is to change the default application of .vbs files to a text editor. This way a direct execution can be prevented. If we now open this file in an editor, we see the following code (Figure 5).",
                        "Malware Campaigns Targeting African Banking Sector",
                        "Searching for other typosquatted domains relating to the mimicked organization revealed two more (Appendix 1) that may be related to the same malware campaign. The second domain displayed a web page about the banks employment application process, which was likely copied from the legitimate website.",
                        "We werent able to link all three domains together conclusively, however, domain 2 references the banks job application process the lure used in the malware campaign and follows a very similar naming convention to domain 1, so we think the same threat actor probably registered that infrastructure.",
                        "The downloader used in the described campaign is GuLoader, which is executed using PowerShell via code stored the Registry and is otherwise only run in memory. Detecting such a chain of infection is not easy, as the malware is only located in memory and the Registry. However, one simple way of breaking the infection chain is changing the default application for script files from Windows Script Host to something else, for example, Notepad. Organizations should also make sure they have visibility over their network to monitor and block unusual process behavior at an early stage. Beyond this, it is important for employees to critically question emails, especially those that appeal to a sense of urgency, curiosity and authority characteristics that are commonly exploited by attackers.",
                        "The files of the following hashes can also be found MalwareBazaar.",
                        "The top motivation behind cybercrime is financial enrichment and the financial services industry is an attractive target for cybercriminals. In early 2022, HP Wolf Security detected a targeted malware campaign against an employee of an African bank. The campaign caught our attention because of its targeted nature and how the threat actor attempted to deliver malware using HTML smuggling, a technique for sneaking malicious email attachments past gateway security controls. In this article, we describe the campaign, sharing how the attacker registered fake banking domains to build a credible lure, and explain how HTML smuggling works.",
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security.",
                        "The PowerShell script uses C# type definitions to call Windows API functions. First the script allocates a memory area with NtAllocateVirtualMemory. Then the previously stored hexadecimal string is read from the Registry and a new byte array is created. The array is copied with RtlMoveMemory into the newly allocated memory area. The copied byte array is shellcode which is executed via an API call to CallWindowProcW. For this purpose, only the memory address of the shellcode is passed to the function as the first argument (WNDPROC), which is used as the callback address causing malware to run.",
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection."
                    ],
                    "titles": [
                        "Purpose of the Typosquatted Domains",
                        "Indicators of Compromise",
                        "Malware Campaigns Targeting African Banking Sector",
                        "The Campaign",
                        "HTML Smuggling",
                        "Common Fraud Methods Related to Banks",
                        "Malware Analysis",
                        "Conclusion"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xeca45a41>",
                            "type": "File",
                            "value": "dossiers.htm"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0x2ff279a6>",
                    "type": "Category",
                    "value": "phishing"
                },
                "references": {
                    "sentences": [
                        "The third domain showed the mimicked banks homepage, which was also likely copied from the legitimate website, but again we found no malware or signs that the site was being used for phishing.",
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email."
                    ],
                    "titles": [
                        "Purpose of the Typosquatted Domains",
                        "The Campaign"
                    ]
                }
            },
            {
                "token": {
                    "id": "<CATEGORY_0xe42cc34c>",
                    "type": "Category",
                    "value": "dns"
                },
                "references": {
                    "sentences": [
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email."
                    ],
                    "titles": [
                        "Purpose of the Typosquatted Domains"
                    ]
                }
            },
            {
                "token": {
                    "id": "<CATEGORY_0xfcd9d15e>",
                    "type": "Category",
                    "value": "fraud"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Common Fraud Methods Related to Banks"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xfcd9d15e>",
                            "type": "Category",
                            "value": "fraud"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0x8a10eea2>",
                    "type": "Category",
                    "value": "scam"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Common Fraud Methods Related to Banks"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0x8a10eea2>",
                            "type": "Category",
                            "value": "scam"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xb68aa214>",
                    "type": "Category",
                    "value": "rat"
                },
                "references": {
                    "sentences": [
                        "Remcos is a commercial Windows remote access tool (RAT) that gives the operator significant control over the infected system. Its capabilities include running remote commands, downloading and uploading files, taking screenshots, recording keystrokes and recording the users webcam and microphone. While we dont know for certain what the attacker would have used their access for, but here are some possibilities:",
                        "Analyzing the shellcode with a debugger reveals a simple decryption function at the very beginning of the code. The code is then decrypted using an XOR operation, which is located directly after the decryption function, and then executed.",
                        "Encrypted GuLoader shellcode:",
                        "The PowerShell script uses C# type definitions to call Windows API functions. First the script allocates a memory area with NtAllocateVirtualMemory. Then the previously stored hexadecimal string is read from the Registry and a new byte array is created. The array is copied with RtlMoveMemory into the newly allocated memory area. The copied byte array is shellcode which is executed via an API call to CallWindowProcW. For this purpose, only the memory address of the shellcode is passed to the function as the first argument (WNDPROC), which is used as the callback address causing malware to run.",
                        "Figure 8 Shellcode decryption function."
                    ],
                    "titles": [
                        "HTML Smuggling",
                        "Indicators of Compromise",
                        "Delivered Payload"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0x3a7f7911>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "d681b39362fae43843b1c6058c0aa8199673052507e5c500b7361c935037e05e"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xa179f90c>",
                    "type": "Category",
                    "value": "ransomware"
                },
                "references": {
                    "sentences": [
                        "Long term persistent access with the objective of making fraudulent transactions, for example through the SWIFT payment system. This would require the threat actor to deploy tools to understand the network, move laterally, monitor internal procedures and take advantage of them. The attacker might take advantage of the employees position in the bank since they would have access to their corporate email account.<crlf>Move laterally with the goal of compromising domain controllers to deploy ransomware. They might also steal sensitive/protected data that could be used to extort the target.<crlf>Sell their access to another threat actor."
                    ],
                    "titles": [
                        "Delivered Payload"
                    ]
                }
            }
        ],
        "Geo": [
            {
                "token": {
                    "id": "<GEO_0x77550f79>",
                    "type": "Geo",
                    "value": "african"
                },
                "references": {
                    "sentences": [
                        "The top motivation behind cybercrime is financial enrichment and the financial services industry is an attractive target for cybercriminals. In early 2022, HP Wolf Security detected a targeted malware campaign against an employee of an African bank. The campaign caught our attention because of its targeted nature and how the threat actor attempted to deliver malware using HTML smuggling, a technique for sneaking malicious email attachments past gateway security controls. In this article, we describe the campaign, sharing how the attacker registered fake banking domains to build a credible lure, and explain how HTML smuggling works.",
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank.",
                        "Malware Campaigns Targeting African Banking Sector"
                    ],
                    "titles": [
                        "Malware Campaigns Targeting African Banking Sector",
                        "The Campaign"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    },
                    {
                        "src": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<GEO_0xa0531c28>",
                    "type": "Geo",
                    "value": "africa"
                },
                "references": {
                    "sentences": [
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security.",
                        "africa"
                    ],
                    "titles": [
                        "Typosquatted Domains",
                        "Conclusion"
                    ]
                }
            }
        ],
        "Industry": [
            {
                "token": {
                    "id": "<INDUSTRY_0xf74966f7>",
                    "type": "Industry",
                    "value": "financial"
                },
                "references": {
                    "sentences": [
                        "Figure 1 Typosquatted bank website describing the job application process.",
                        "Long term persistent access with the objective of making fraudulent transactions, for example through the SWIFT payment system. This would require the threat actor to deploy tools to understand the network, move laterally, monitor internal procedures and take advantage of them. The attacker might take advantage of the employees position in the bank since they would have access to their corporate email account.<crlf>Move laterally with the goal of compromising domain controllers to deploy ransomware. They might also steal sensitive/protected data that could be used to extort the target.<crlf>Sell their access to another threat actor.",
                        "The third domain showed the mimicked banks homepage, which was also likely copied from the legitimate website, but again we found no malware or signs that the site was being used for phishing.",
                        "banking",
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email.",
                        "Malware Campaigns Targeting African Banking Sector",
                        "Searching for other typosquatted domains relating to the mimicked organization revealed two more (Appendix 1) that may be related to the same malware campaign. The second domain displayed a web page about the banks employment application process, which was likely copied from the legitimate website.",
                        "The top motivation behind cybercrime is financial enrichment and the financial services industry is an attractive target for cybercriminals. In early 2022, HP Wolf Security detected a targeted malware campaign against an employee of an African bank. The campaign caught our attention because of its targeted nature and how the threat actor attempted to deliver malware using HTML smuggling, a technique for sneaking malicious email attachments past gateway security controls. In this article, we describe the campaign, sharing how the attacker registered fake banking domains to build a credible lure, and explain how HTML smuggling works.",
                        "We werent able to link all three domains together conclusively, however, domain 2 references the banks job application process the lure used in the malware campaign and follows a very similar naming convention to domain 1, so we think the same threat actor probably registered that infrastructure.",
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank.",
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security."
                    ],
                    "titles": [
                        "Purpose of the Typosquatted Domains",
                        "Typosquatted Domains",
                        "Malware Campaigns Targeting African Banking Sector",
                        "The Campaign",
                        "Common Fraud Methods Related to Banks",
                        "Delivered Payload",
                        "Conclusion"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0x8a10eea2>",
                            "type": "Category",
                            "value": "scam"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xfcd9d15e>",
                            "type": "Category",
                            "value": "fraud"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<GEO_0x77550f79>",
                            "type": "Geo",
                            "value": "african"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    }
                ]
            }
        ]
    },
    "iocs": {
        "File": [
            {
                "token": {
                    "id": "<FILE_0xeca45a41>",
                    "type": "File",
                    "value": "dossiers.htm"
                },
                "references": {
                    "sentences": [
                        "Figure 2 Source code of HTML attachment Fiche de dossiers.htm.",
                        "In this campaign, the threat actor sent an HTML attachment Fiche de dossiers.htm to the recipient. Opening the file in a text editor reveals the source code of the page (Figure 2)."
                    ],
                    "titles": [
                        "Malware Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xeca45a41>",
                            "type": "File",
                            "value": "dossiers.htm"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xeca45a41>",
                            "type": "File",
                            "value": "dossiers.htm"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef685c37>",
                            "type": "UnknownWord",
                            "value": "fiche"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x5d7c2202>",
                    "type": "File",
                    "value": "bad.iso"
                },
                "references": {
                    "sentences": [
                        "Figure 4 Contents of ISO file Dossier Bad.iso."
                    ],
                    "titles": [
                        "HTML Smuggling"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x5d7c2202>",
                            "type": "File",
                            "value": "bad.iso"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x5d7c2202>",
                            "type": "File",
                            "value": "bad.iso"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x6f5bf5e0>",
                            "type": "UnknownWord",
                            "value": "dossier"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x38a6089b>",
                    "type": "File",
                    "value": "candidature.vbs"
                },
                "references": {
                    "sentences": [
                        "Inside there is a Visual Basic Script (VBS) file called Fiche de candidature.vbs which is executed when double-clicked. One way to prevent the accidental execution of malicious VBS scripts is to change the default application of .vbs files to a text editor. This way a direct execution can be prevented. If we now open this file in an editor, we see the following code (Figure 5)."
                    ],
                    "titles": [
                        "HTML Smuggling"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x38a6089b>",
                            "type": "File",
                            "value": "candidature.vbs"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x38a6089b>",
                            "type": "File",
                            "value": "candidature.vbs"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x82dcbf06>",
                            "type": "UnknownWord",
                            "value": "double-clicked"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x38a6089b>",
                            "type": "File",
                            "value": "candidature.vbs"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd0d24dc2>",
                            "type": "UnknownWord",
                            "value": "visual"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x38a6089b>",
                            "type": "File",
                            "value": "candidature.vbs"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef685c37>",
                            "type": "UnknownWord",
                            "value": "fiche"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xc01d0f1>",
                    "type": "File",
                    "value": "powershell.exe"
                },
                "references": {
                    "sentences": [
                        "The script contains variables, such as a registry key or a path to PowerShell.exe, and some encoded data. When the script is executed, it creates a new Registry key and stores a long hexadecimal string in it. Then PowerShell is executed and passing an encoded command. The corresponding code sequences can be seen in Figure 6."
                    ],
                    "titles": [
                        "HTML Smuggling"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc01d0f1>",
                            "type": "File",
                            "value": "powershell.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x56fcd8a5>",
                            "type": "Threat",
                            "value": "html_smuggling_technique"
                        }
                    }
                ]
            }
        ],
        "Hash": [
            {
                "token": {
                    "id": "<SHA256_0x855dd114>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "9af5400545853d895f82b0259a7dafd0a9c1465c374b0925cc83f14dd29b29c5"
                },
                "references": {
                    "sentences": [
                        "9af5400545853d895f82b0259a7dafd0a9c1465c374b0925cc83f14dd29b29c5"
                    ],
                    "titles": [
                        "Indicators of Compromise"
                    ]
                }
            },
            {
                "token": {
                    "id": "<SHA256_0x20085250>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "7079ff76eb4b9d891fd04159008c477f6c7b10357b5bba52907c2eb0645887aa"
                },
                "references": {
                    "sentences": [
                        "7079ff76eb4b9d891fd04159008c477f6c7b10357b5bba52907c2eb0645887aa"
                    ],
                    "titles": [
                        "Indicators of Compromise"
                    ]
                }
            },
            {
                "token": {
                    "id": "<SHA256_0x7d6dd567>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "43aaa7f39e9bb4039f70daf61d84b4cde2b3273112f9d022242f841a4829da03"
                },
                "references": {
                    "sentences": [
                        "43aaa7f39e9bb4039f70daf61d84b4cde2b3273112f9d022242f841a4829da03"
                    ],
                    "titles": [
                        "Indicators of Compromise"
                    ]
                }
            },
            {
                "token": {
                    "id": "<SHA256_0xb1118e0f>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "0407eab084e910bdd6368f73b75ba2e951e3b545d0c9477e6971ffe6a52a273a"
                },
                "references": {
                    "sentences": [
                        "0407eab084e910bdd6368f73b75ba2e951e3b545d0c9477e6971ffe6a52a273a"
                    ],
                    "titles": [
                        "Indicators of Compromise"
                    ]
                }
            },
            {
                "token": {
                    "id": "<SHA256_0x3a7f7911>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "d681b39362fae43843b1c6058c0aa8199673052507e5c500b7361c935037e05e"
                },
                "references": {
                    "sentences": [
                        "d681b39362fae43843b1c6058c0aa8199673052507e5c500b7361c935037e05e"
                    ],
                    "titles": [
                        "Indicators of Compromise"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<SHA256_0x3a7f7911>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "d681b39362fae43843b1c6058c0aa8199673052507e5c500b7361c935037e05e"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xd83f519a>",
                            "type": "Threat",
                            "value": "cloudeye"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0x3a7f7911>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "d681b39362fae43843b1c6058c0aa8199673052507e5c500b7361c935037e05e"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<SHA256_0x12a83b5c>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "5d45422cf2c38af734cee5a5c9fa2fef005f9409d5d5b74814aea1a5f246835d"
                },
                "references": {
                    "sentences": [
                        "5d45422cf2c38af734cee5a5c9fa2fef005f9409d5d5b74814aea1a5f246835d"
                    ],
                    "titles": [
                        "Indicators of Compromise"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<SHA256_0x12a83b5c>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "5d45422cf2c38af734cee5a5c9fa2fef005f9409d5d5b74814aea1a5f246835d"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x94f39e13>",
                            "type": "Threat",
                            "value": "remcos_rat"
                        }
                    }
                ]
            }
        ],
        "Url": [
            {
                "token": {
                    "id": "<URL_0x41fdcbaa>",
                    "type": "Url",
                    "value": "https://onedrive.live.com/download?cid=50d26408c26a8b34&resid=50d26408c26a8b34%21114&authkey=agw61dvt-rt_fru"
                },
                "references": {
                    "sentences": [
                        "hxxps://onedrive.live[.]com/download?cid=50D26408C26A8B34&resid=50D26408C26A8B34%21114&authkey=AGW61DvT-RT_FRU"
                    ],
                    "titles": [
                        "Indicators of Compromise"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0x41fdcbaa>",
                            "type": "Url",
                            "value": "https://onedrive.live.com/download?cid=50d26408c26a8b34&resid=50d26408c26a8b34%21114&authkey=agw61dvt-rt_fru"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x94f39e13>",
                            "type": "Threat",
                            "value": "remcos_rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<URL_0x560b3ccb>",
                    "type": "Url",
                    "value": "https://www.dropbox.com/s/veqimnoofpaqmx1/rmss_umuigf84.bin?dl=1"
                },
                "references": {
                    "sentences": [
                        "hxxps://www.dropbox[.]com/s/veqimnoofpaqmx1/rmss_umUIGF84.bin?dl=1"
                    ],
                    "titles": [
                        "Indicators of Compromise"
                    ]
                }
            }
        ],
        "Domain": [
            {
                "token": {
                    "id": "<DOMAIN_0x37cfc1ec>",
                    "type": "Domain",
                    "value": "afbd-bad.org"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Typosquatted Domains"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<DOMAIN_0x37cfc1ec>",
                            "type": "Domain",
                            "value": "afbd-bad.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<DOMAIN_0x98ad1ca1>",
                    "type": "Domain",
                    "value": "afdb-bad.org"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Typosquatted Domains"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<DOMAIN_0x98ad1ca1>",
                            "type": "Domain",
                            "value": "afdb-bad.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<DOMAIN_0x301f6739>",
                    "type": "Domain",
                    "value": "afdb-za.org"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Typosquatted Domains"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<DOMAIN_0x301f6739>",
                            "type": "Domain",
                            "value": "afdb-za.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    }
                ]
            }
        ]
    },
    "unknownwords": {
        "UnknownWord": [
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x14aab7fb>",
                    "type": "UnknownWord",
                    "value": "enrichment"
                },
                "references": {
                    "sentences": [
                        "The top motivation behind cybercrime is financial enrichment and the financial services industry is an attractive target for cybercriminals. In early 2022, HP Wolf Security detected a targeted malware campaign against an employee of an African bank. The campaign caught our attention because of its targeted nature and how the threat actor attempted to deliver malware using HTML smuggling, a technique for sneaking malicious email attachments past gateway security controls. In this article, we describe the campaign, sharing how the attacker registered fake banking domains to build a credible lure, and explain how HTML smuggling works."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc7bc5a96>",
                    "type": "UnknownWord",
                    "value": "sneaking"
                },
                "references": {
                    "sentences": [
                        "The top motivation behind cybercrime is financial enrichment and the financial services industry is an attractive target for cybercriminals. In early 2022, HP Wolf Security detected a targeted malware campaign against an employee of an African bank. The campaign caught our attention because of its targeted nature and how the threat actor attempted to deliver malware using HTML smuggling, a technique for sneaking malicious email attachments past gateway security controls. In this article, we describe the campaign, sharing how the attacker registered fake banking domains to build a credible lure, and explain how HTML smuggling works."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8bdfc512>",
                    "type": "UnknownWord",
                    "value": "credible"
                },
                "references": {
                    "sentences": [
                        "The top motivation behind cybercrime is financial enrichment and the financial services industry is an attractive target for cybercriminals. In early 2022, HP Wolf Security detected a targeted malware campaign against an employee of an African bank. The campaign caught our attention because of its targeted nature and how the threat actor attempted to deliver malware using HTML smuggling, a technique for sneaking malicious email attachments past gateway security controls. In this article, we describe the campaign, sharing how the attacker registered fake banking domains to build a credible lure, and explain how HTML smuggling works.",
                        "The following domains were typosquatted by the threat actor to impersonate a credible and legitimate organization and do not represent a vulnerability affecting the organization.",
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe34d47e0>",
                    "type": "UnknownWord",
                    "value": "patrick schlpfer"
                },
                "references": {
                    "sentences": [
                        "Patrick Schlpfer"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x195b486c>",
                    "type": "UnknownWord",
                    "value": "west"
                },
                "references": {
                    "sentences": [
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x368c4cfc>",
                    "type": "UnknownWord",
                    "value": "typosquatted"
                },
                "references": {
                    "sentences": [
                        "The following domains were typosquatted by the threat actor to impersonate a credible and legitimate organization and do not represent a vulnerability affecting the organization.",
                        "Figure 1 Typosquatted bank website describing the job application process.",
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email.",
                        "Searching for other typosquatted domains relating to the mimicked organization revealed two more (Appendix 1) that may be related to the same malware campaign. The second domain displayed a web page about the banks employment application process, which was likely copied from the legitimate website.",
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank.",
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security."
                    ],
                    "titles": [
                        "Purpose of the Typosquatted Domains",
                        "Typosquatted Domains"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<DOMAIN_0x301f6739>",
                            "type": "Domain",
                            "value": "afdb-za.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    },
                    {
                        "src": {
                            "id": "<DOMAIN_0x98ad1ca1>",
                            "type": "Domain",
                            "value": "afdb-bad.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    },
                    {
                        "src": {
                            "id": "<DOMAIN_0x37cfc1ec>",
                            "type": "Domain",
                            "value": "afbd-bad.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcec70af5>",
                    "type": "UnknownWord",
                    "value": "mimicked"
                },
                "references": {
                    "sentences": [
                        "Searching for other typosquatted domains relating to the mimicked organization revealed two more (Appendix 1) that may be related to the same malware campaign. The second domain displayed a web page about the banks employment application process, which was likely copied from the legitimate website.",
                        "The third domain showed the mimicked banks homepage, which was also likely copied from the legitimate website, but again we found no malware or signs that the site was being used for phishing.",
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2ac70b58>",
                    "type": "UnknownWord",
                    "value": "whois"
                },
                "references": {
                    "sentences": [
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbf20d9a8>",
                    "type": "UnknownWord",
                    "value": "recruiting"
                },
                "references": {
                    "sentences": [
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x95622a9f>",
                    "type": "UnknownWord",
                    "value": "elicit"
                },
                "references": {
                    "sentences": [
                        "There is no malware hosted on the page itself, and no input form that could be used to elicit login credentials or sensitive information from visitors."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x453c18ae>",
                    "type": "UnknownWord",
                    "value": "homepage"
                },
                "references": {
                    "sentences": [
                        "The third domain showed the mimicked banks homepage, which was also likely copied from the legitimate website, but again we found no malware or signs that the site was being used for phishing."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xff5c86d9>",
                    "type": "UnknownWord",
                    "value": "spf"
                },
                "references": {
                    "sentences": [
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbcad1266>",
                    "type": "UnknownWord",
                    "value": "spending"
                },
                "references": {
                    "sentences": [
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7847628a>",
                    "type": "UnknownWord",
                    "value": "configure"
                },
                "references": {
                    "sentences": [
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xda83709b>",
                    "type": "UnknownWord",
                    "value": "act"
                },
                "references": {
                    "sentences": [
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf401c6b5>",
                    "type": "UnknownWord",
                    "value": "werent"
                },
                "references": {
                    "sentences": [
                        "We werent able to link all three domains together conclusively, however, domain 2 references the banks job application process the lure used in the malware campaign and follows a very similar naming convention to domain 1, so we think the same threat actor probably registered that infrastructure."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe9ca26f6>",
                    "type": "UnknownWord",
                    "value": "conclusively"
                },
                "references": {
                    "sentences": [
                        "We werent able to link all three domains together conclusively, however, domain 2 references the banks job application process the lure used in the malware campaign and follows a very similar naming convention to domain 1, so we think the same threat actor probably registered that infrastructure."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcc7b4862>",
                    "type": "UnknownWord",
                    "value": "naming"
                },
                "references": {
                    "sentences": [
                        "We werent able to link all three domains together conclusively, however, domain 2 references the banks job application process the lure used in the malware campaign and follows a very similar naming convention to domain 1, so we think the same threat actor probably registered that infrastructure."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9dc385f5>",
                    "type": "UnknownWord",
                    "value": "convention"
                },
                "references": {
                    "sentences": [
                        "We werent able to link all three domains together conclusively, however, domain 2 references the banks job application process the lure used in the malware campaign and follows a very similar naming convention to domain 1, so we think the same threat actor probably registered that infrastructure."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5e3ecae7>",
                    "type": "UnknownWord",
                    "value": "attract"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x87e2aa46>",
                    "type": "UnknownWord",
                    "value": "promising"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x929c2531>",
                    "type": "UnknownWord",
                    "value": "fund"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf26db065>",
                    "type": "UnknownWord",
                    "value": "convinces"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9491c7f7>",
                    "type": "UnknownWord",
                    "value": "stricter"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xaee8850b>",
                    "type": "UnknownWord",
                    "value": "anti-fraud"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfb20465c>",
                    "type": "UnknownWord",
                    "value": "balance"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x460e92fc>",
                    "type": "UnknownWord",
                    "value": "fraudster"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x533d2d76>",
                    "type": "UnknownWord",
                    "value": "lost"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x58971289>",
                    "type": "UnknownWord",
                    "value": "pretending"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb381dce8>",
                    "type": "UnknownWord",
                    "value": "popularity"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x730fce34>",
                    "type": "UnknownWord",
                    "value": "smartphone"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xedd6f487>",
                    "type": "UnknownWord",
                    "value": "accessed"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xef685c37>",
                    "type": "UnknownWord",
                    "value": "fiche"
                },
                "references": {
                    "sentences": [
                        "Figure 2 Source code of HTML attachment Fiche de dossiers.htm.",
                        "In this campaign, the threat actor sent an HTML attachment Fiche de dossiers.htm to the recipient. Opening the file in a text editor reveals the source code of the page (Figure 2).",
                        "Inside there is a Visual Basic Script (VBS) file called Fiche de candidature.vbs which is executed when double-clicked. One way to prevent the accidental execution of malicious VBS scripts is to change the default application of .vbs files to a text editor. This way a direct execution can be prevented. If we now open this file in an editor, we see the following code (Figure 5)."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xeca45a41>",
                            "type": "File",
                            "value": "dossiers.htm"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef685c37>",
                            "type": "UnknownWord",
                            "value": "fiche"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x38a6089b>",
                            "type": "File",
                            "value": "candidature.vbs"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef685c37>",
                            "type": "UnknownWord",
                            "value": "fiche"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6e8c46f7>",
                    "type": "UnknownWord",
                    "value": "offered"
                },
                "references": {
                    "sentences": [
                        "The file contains encoded data and a decoding function. As can already be seen from the comment in the image above, it is a Base64 encoded ISO file. Further down in the source code, this ISO file is decoded and offered to the user in a web browser download prompt using a JavaScript blob (Figure 3)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3a759d4a>",
                    "type": "UnknownWord",
                    "value": "sneak"
                },
                "references": {
                    "sentences": [
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2c248229>",
                    "type": "UnknownWord",
                    "value": "html5"
                },
                "references": {
                    "sentences": [
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1dbd296b>",
                    "type": "UnknownWord",
                    "value": "reconstruct"
                },
                "references": {
                    "sentences": [
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8d0378b7>",
                    "type": "UnknownWord",
                    "value": "prompted"
                },
                "references": {
                    "sentences": [
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security.",
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xae0d9cad>",
                    "type": "UnknownWord",
                    "value": "bypasses"
                },
                "references": {
                    "sentences": [
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x46561443>",
                    "type": "UnknownWord",
                    "value": "challenging"
                },
                "references": {
                    "sentences": [
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection.",
                        "The decrypted code is GuLoader. This malware is a loader that downloads and executes other malware families from the web. In this campaign GuLoader was configured to download and run RemcosRAT malware. For this purpose, there are two URLs in GuLoaders configuration that lead to the RemcosRAT payload. One payload URL leads to OneDrive and the other to Dropbox. We have analyzed other malware campaigns involving GuLoader have also used file sharing services to host malware payloads. Since the payload is also encrypted, it can be challenging for service providers to detect and remove them."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xab0c6b08>",
                    "type": "UnknownWord",
                    "value": "smuggled"
                },
                "references": {
                    "sentences": [
                        "HTML smuggling is a technique that enables attackers to sneak file formats that would otherwise be blocked past email gateways by encoding them in an HTML file. JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file. When the user opens the HTML attachment using a web browser, they are prompted to download the file, which is already stored on the local system. This way HTML smuggling bypasses security controls that block malicious website traffic, such as web proxies. The technique is dangerous because HTML email attachments are not typically blocked at gateways and detecting the encoded malware can be challenging. Using this technique, dangerous file types can be smuggled into an organization and lead to malware infection."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf2f8fba8>",
                    "type": "UnknownWord",
                    "value": "disc"
                },
                "references": {
                    "sentences": [
                        "In Windows 10, double clicking the ISO file causes it to be mounted as disc media, which opens a new File Explorer window that shows its contents."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6f5bf5e0>",
                    "type": "UnknownWord",
                    "value": "dossier"
                },
                "references": {
                    "sentences": [
                        "Figure 4 Contents of ISO file Dossier Bad.iso."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x5d7c2202>",
                            "type": "File",
                            "value": "bad.iso"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x6f5bf5e0>",
                            "type": "UnknownWord",
                            "value": "dossier"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd0d24dc2>",
                    "type": "UnknownWord",
                    "value": "visual"
                },
                "references": {
                    "sentences": [
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security.",
                        "Figure 6 Visual Basic Script code containing PowerShell execution.",
                        "Inside there is a Visual Basic Script (VBS) file called Fiche de candidature.vbs which is executed when double-clicked. One way to prevent the accidental execution of malicious VBS scripts is to change the default application of .vbs files to a text editor. This way a direct execution can be prevented. If we now open this file in an editor, we see the following code (Figure 5)."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x38a6089b>",
                            "type": "File",
                            "value": "candidature.vbs"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd0d24dc2>",
                            "type": "UnknownWord",
                            "value": "visual"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x82dcbf06>",
                    "type": "UnknownWord",
                    "value": "double-clicked"
                },
                "references": {
                    "sentences": [
                        "Inside there is a Visual Basic Script (VBS) file called Fiche de candidature.vbs which is executed when double-clicked. One way to prevent the accidental execution of malicious VBS scripts is to change the default application of .vbs files to a text editor. This way a direct execution can be prevented. If we now open this file in an editor, we see the following code (Figure 5)."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x38a6089b>",
                            "type": "File",
                            "value": "candidature.vbs"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x82dcbf06>",
                            "type": "UnknownWord",
                            "value": "double-clicked"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb01da247>",
                    "type": "UnknownWord",
                    "value": "accidental"
                },
                "references": {
                    "sentences": [
                        "Inside there is a Visual Basic Script (VBS) file called Fiche de candidature.vbs which is executed when double-clicked. One way to prevent the accidental execution of malicious VBS scripts is to change the default application of .vbs files to a text editor. This way a direct execution can be prevented. If we now open this file in an editor, we see the following code (Figure 5)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2948724b>",
                    "type": "UnknownWord",
                    "value": "prevented"
                },
                "references": {
                    "sentences": [
                        "Inside there is a Visual Basic Script (VBS) file called Fiche de candidature.vbs which is executed when double-clicked. One way to prevent the accidental execution of malicious VBS scripts is to change the default application of .vbs files to a text editor. This way a direct execution can be prevented. If we now open this file in an editor, we see the following code (Figure 5)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe5d199b1>",
                    "type": "UnknownWord",
                    "value": "ntallocatevirtualmemory"
                },
                "references": {
                    "sentences": [
                        "The PowerShell script uses C# type definitions to call Windows API functions. First the script allocates a memory area with NtAllocateVirtualMemory. Then the previously stored hexadecimal string is read from the Registry and a new byte array is created. The array is copied with RtlMoveMemory into the newly allocated memory area. The copied byte array is shellcode which is executed via an API call to CallWindowProcW. For this purpose, only the memory address of the shellcode is passed to the function as the first argument (WNDPROC), which is used as the callback address causing malware to run."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfef8ab30>",
                    "type": "UnknownWord",
                    "value": "rtlmovememory"
                },
                "references": {
                    "sentences": [
                        "The PowerShell script uses C# type definitions to call Windows API functions. First the script allocates a memory area with NtAllocateVirtualMemory. Then the previously stored hexadecimal string is read from the Registry and a new byte array is created. The array is copied with RtlMoveMemory into the newly allocated memory area. The copied byte array is shellcode which is executed via an API call to CallWindowProcW. For this purpose, only the memory address of the shellcode is passed to the function as the first argument (WNDPROC), which is used as the callback address causing malware to run."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3131d19a>",
                    "type": "UnknownWord",
                    "value": "allocated"
                },
                "references": {
                    "sentences": [
                        "The PowerShell script uses C# type definitions to call Windows API functions. First the script allocates a memory area with NtAllocateVirtualMemory. Then the previously stored hexadecimal string is read from the Registry and a new byte array is created. The array is copied with RtlMoveMemory into the newly allocated memory area. The copied byte array is shellcode which is executed via an API call to CallWindowProcW. For this purpose, only the memory address of the shellcode is passed to the function as the first argument (WNDPROC), which is used as the callback address causing malware to run."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x97e34f0b>",
                    "type": "UnknownWord",
                    "value": "callwindowprocw"
                },
                "references": {
                    "sentences": [
                        "The PowerShell script uses C# type definitions to call Windows API functions. First the script allocates a memory area with NtAllocateVirtualMemory. Then the previously stored hexadecimal string is read from the Registry and a new byte array is created. The array is copied with RtlMoveMemory into the newly allocated memory area. The copied byte array is shellcode which is executed via an API call to CallWindowProcW. For this purpose, only the memory address of the shellcode is passed to the function as the first argument (WNDPROC), which is used as the callback address causing malware to run."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xab330b43>",
                    "type": "UnknownWord",
                    "value": "wndproc"
                },
                "references": {
                    "sentences": [
                        "The PowerShell script uses C# type definitions to call Windows API functions. First the script allocates a memory area with NtAllocateVirtualMemory. Then the previously stored hexadecimal string is read from the Registry and a new byte array is created. The array is copied with RtlMoveMemory into the newly allocated memory area. The copied byte array is shellcode which is executed via an API call to CallWindowProcW. For this purpose, only the memory address of the shellcode is passed to the function as the first argument (WNDPROC), which is used as the callback address causing malware to run."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x29ea7e36>",
                    "type": "UnknownWord",
                    "value": "causing"
                },
                "references": {
                    "sentences": [
                        "The PowerShell script uses C# type definitions to call Windows API functions. First the script allocates a memory area with NtAllocateVirtualMemory. Then the previously stored hexadecimal string is read from the Registry and a new byte array is created. The array is copied with RtlMoveMemory into the newly allocated memory area. The copied byte array is shellcode which is executed via an API call to CallWindowProcW. For this purpose, only the memory address of the shellcode is passed to the function as the first argument (WNDPROC), which is used as the callback address causing malware to run."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x58b1b2f3>",
                    "type": "UnknownWord",
                    "value": "guloaders"
                },
                "references": {
                    "sentences": [
                        "The decrypted code is GuLoader. This malware is a loader that downloads and executes other malware families from the web. In this campaign GuLoader was configured to download and run RemcosRAT malware. For this purpose, there are two URLs in GuLoaders configuration that lead to the RemcosRAT payload. One payload URL leads to OneDrive and the other to Dropbox. We have analyzed other malware campaigns involving GuLoader have also used file sharing services to host malware payloads. Since the payload is also encrypted, it can be challenging for service providers to detect and remove them."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5dfcdf14>",
                    "type": "UnknownWord",
                    "value": "swift"
                },
                "references": {
                    "sentences": [
                        "Long term persistent access with the objective of making fraudulent transactions, for example through the SWIFT payment system. This would require the threat actor to deploy tools to understand the network, move laterally, monitor internal procedures and take advantage of them. The attacker might take advantage of the employees position in the bank since they would have access to their corporate email account.<crlf>Move laterally with the goal of compromising domain controllers to deploy ransomware. They might also steal sensitive/protected data that could be used to extort the target.<crlf>Sell their access to another threat actor."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7de80e1d>",
                    "type": "UnknownWord",
                    "value": "sell"
                },
                "references": {
                    "sentences": [
                        "Long term persistent access with the objective of making fraudulent transactions, for example through the SWIFT payment system. This would require the threat actor to deploy tools to understand the network, move laterally, monitor internal procedures and take advantage of them. The attacker might take advantage of the employees position in the bank since they would have access to their corporate email account.<crlf>Move laterally with the goal of compromising domain controllers to deploy ransomware. They might also steal sensitive/protected data that could be used to extort the target.<crlf>Sell their access to another threat actor."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9d4e8d00>",
                    "type": "UnknownWord",
                    "value": "smuggle"
                },
                "references": {
                    "sentences": [
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xebbb7253>",
                    "type": "UnknownWord",
                    "value": "breaking"
                },
                "references": {
                    "sentences": [
                        "The downloader used in the described campaign is GuLoader, which is executed using PowerShell via code stored the Registry and is otherwise only run in memory. Detecting such a chain of infection is not easy, as the malware is only located in memory and the Registry. However, one simple way of breaking the infection chain is changing the default application for script files from Windows Script Host to something else, for example, Notepad. Organizations should also make sure they have visibility over their network to monitor and block unusual process behavior at an early stage. Beyond this, it is important for employees to critically question emails, especially those that appeal to a sense of urgency, curiosity and authority characteristics that are commonly exploited by attackers."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe67b1f1a>",
                    "type": "UnknownWord",
                    "value": "critically"
                },
                "references": {
                    "sentences": [
                        "The downloader used in the described campaign is GuLoader, which is executed using PowerShell via code stored the Registry and is otherwise only run in memory. Detecting such a chain of infection is not easy, as the malware is only located in memory and the Registry. However, one simple way of breaking the infection chain is changing the default application for script files from Windows Script Host to something else, for example, Notepad. Organizations should also make sure they have visibility over their network to monitor and block unusual process behavior at an early stage. Beyond this, it is important for employees to critically question emails, especially those that appeal to a sense of urgency, curiosity and authority characteristics that are commonly exploited by attackers."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa6ae2344>",
                    "type": "UnknownWord",
                    "value": "appeal"
                },
                "references": {
                    "sentences": [
                        "The downloader used in the described campaign is GuLoader, which is executed using PowerShell via code stored the Registry and is otherwise only run in memory. Detecting such a chain of infection is not easy, as the malware is only located in memory and the Registry. However, one simple way of breaking the infection chain is changing the default application for script files from Windows Script Host to something else, for example, Notepad. Organizations should also make sure they have visibility over their network to monitor and block unusual process behavior at an early stage. Beyond this, it is important for employees to critically question emails, especially those that appeal to a sense of urgency, curiosity and authority characteristics that are commonly exploited by attackers."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x21cc07c5>",
                    "type": "UnknownWord",
                    "value": "sense"
                },
                "references": {
                    "sentences": [
                        "The downloader used in the described campaign is GuLoader, which is executed using PowerShell via code stored the Registry and is otherwise only run in memory. Detecting such a chain of infection is not easy, as the malware is only located in memory and the Registry. However, one simple way of breaking the infection chain is changing the default application for script files from Windows Script Host to something else, for example, Notepad. Organizations should also make sure they have visibility over their network to monitor and block unusual process behavior at an early stage. Beyond this, it is important for employees to critically question emails, especially those that appeal to a sense of urgency, curiosity and authority characteristics that are commonly exploited by attackers."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xac3a017c>",
                    "type": "UnknownWord",
                    "value": "urgency"
                },
                "references": {
                    "sentences": [
                        "The downloader used in the described campaign is GuLoader, which is executed using PowerShell via code stored the Registry and is otherwise only run in memory. Detecting such a chain of infection is not easy, as the malware is only located in memory and the Registry. However, one simple way of breaking the infection chain is changing the default application for script files from Windows Script Host to something else, for example, Notepad. Organizations should also make sure they have visibility over their network to monitor and block unusual process behavior at an early stage. Beyond this, it is important for employees to critically question emails, especially those that appeal to a sense of urgency, curiosity and authority characteristics that are commonly exploited by attackers."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf6cfbac7>",
                    "type": "UnknownWord",
                    "value": "curiosity"
                },
                "references": {
                    "sentences": [
                        "The downloader used in the described campaign is GuLoader, which is executed using PowerShell via code stored the Registry and is otherwise only run in memory. Detecting such a chain of infection is not easy, as the malware is only located in memory and the Registry. However, one simple way of breaking the infection chain is changing the default application for script files from Windows Script Host to something else, for example, Notepad. Organizations should also make sure they have visibility over their network to monitor and block unusual process behavior at an early stage. Beyond this, it is important for employees to critically question emails, especially those that appeal to a sense of urgency, curiosity and authority characteristics that are commonly exploited by attackers."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf7c6e763>",
                    "type": "UnknownWord",
                    "value": "html"
                },
                "references": {
                    "sentences": [
                        "HTML file:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc17b7955>",
                    "type": "UnknownWord",
                    "value": "typosquatting"
                },
                "references": {
                    "sentences": [
                        "typosquatting"
                    ],
                    "titles": []
                }
            }
        ]
    },
    "other_links": [],
    "info": {
        "potential_threats": {
            "<UNKNOWNWORD_0x368c4cfc>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x368c4cfc>",
                    "type": "UnknownWord",
                    "value": "typosquatted"
                },
                "references": {
                    "sentences": [
                        "The following domains were typosquatted by the threat actor to impersonate a credible and legitimate organization and do not represent a vulnerability affecting the organization.",
                        "Figure 1 Typosquatted bank website describing the job application process.",
                        "On typosquatted domains 2 and 3 we found had DNS TXT records for Sender Policy Framework (SPF) set up, suggesting that they were likely used for sending malicious emails. If the websites were used for phishing or hosting malware, spending time to configure these records would not serve any purpose. Visiting the websites increases the recipients trust in the email lure because they are shown content copied from the legitimate bank, ultimately making them more likely to act upon the email.",
                        "Searching for other typosquatted domains relating to the mimicked organization revealed two more (Appendix 1) that may be related to the same malware campaign. The second domain displayed a web page about the banks employment application process, which was likely copied from the legitimate website.",
                        "In early 2022, an employee of a West African bank received an email purporting to be from a recruiter from another African bank with information about job opportunities there. The domain used to send the email was typosquatted and does not belong to the legitimate mimicked organization. A WHOIS request reveals the domain was registered in December 2021 and visiting the website returned an HTTP 404 Not found response. To make the lure more credible, the threat actor also included a reply-to address of another supposed employee of the recruiting bank.",
                        "HP Wolf Security detected a targeted malware campaign on the banking sector in Africa. The attacker sent emails from typosquatted domains of a legitimate bank luring them to apply for a job by opening a malicious attachment. If the user opens the HTML file, they are prompted to download an ISO file, which in turn contains a Visual Basic script that leads to a malware infection when executed. This technique is called HTML smuggling and is dangerous because it enables attackers to smuggle malicious files past email gateway security."
                    ],
                    "titles": [
                        "Purpose of the Typosquatted Domains",
                        "Typosquatted Domains"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<DOMAIN_0x301f6739>",
                            "type": "Domain",
                            "value": "afdb-za.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    },
                    {
                        "src": {
                            "id": "<DOMAIN_0x98ad1ca1>",
                            "type": "Domain",
                            "value": "afdb-bad.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    },
                    {
                        "src": {
                            "id": "<DOMAIN_0x37cfc1ec>",
                            "type": "Domain",
                            "value": "afbd-bad.org"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x368c4cfc>",
                            "type": "UnknownWord",
                            "value": "typosquatted"
                        }
                    }
                ]
            }
        },
        "sigma": false,
        "yara": false
    },
    "keywords": {
        "classified": [],
        "dubbed": [],
        "associated": [],
        "targets": [
            "In early 2022, HP Wolf Security detected a targeted malware campaign against an employee of an African bank"
        ],
        "attributed": [
            "JavaScript blobs or HTML5 download attributes can be used to decode and reconstruct the file"
        ]
    },
    "resources": {
        "links": {
            "github": [],
            "pastebin": [],
            "text_files": [],
            "other": [
                "https://www.verizon.com/business/resources/reports/dbir/2021/results-and-analysis/",
                "https://threatresearch.ext.hp.com/blog/",
                "https://threatresearch.ext.hp.com/blog/?wpv-category=threat-research",
                "https://threatresearch.ext.hp.com/blog/?author-filter=46",
                "https://twitter.com/share?url=https://threatresearch.ext.hp.com/malware-campaigns-targeting-african-banking-sector/",
                "https://www.linkedin.com/shareArticle?url=https://threatresearch.ext.hp.com/malware-campaigns-targeting-african-banking-sector/",
                "https://www.facebook.com/sharer.php?u=https://threatresearch.ext.hp.com/malware-campaigns-targeting-african-banking-sector/",
                "mailto:?subject=I%20wanted%20to%20share%20this%20post%20with%20you%20from%20https://threatresearch.ext.hp.com/malware-campaigns-targeting-african-banking-sector/&body=Malware%20Campaigns%20Targeting%20African%20Banking%20Sector",
                "https://datatracker.ietf.org/doc/html/rfc7208",
                "https://attack.mitre.org/techniques/T1027/006/",
                "https://docs.microsoft.com/en-us/windows-hardware/drivers/ddi/ntifs/nf-ntifs-ntallocatevirtualmemory",
                "https://docs.microsoft.com/en-us/windows/win32/devnotes/rtlmovememory",
                "https://en.wikipedia.org/wiki/Shellcode",
                "https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-callwindowprocw",
                "https://docs.microsoft.com/en-us/windows/win32/api/winuser/nc-winuser-wndproc#:~:text=A%20callback%20function%2C%20which%20you,you%20define%20in%20your%20application.",
                "https://malpedia.caad.fkie.fraunhofer.de/details/win.cloudeye",
                "https://malpedia.caad.fkie.fraunhofer.de/details/win.remcos",
                "https://threatresearch.ext.hp.com/wp-content/uploads/2021/10/HP-Wolf-Security-Threat-Insights-Report-Q3-2021.pdf",
                "https://bazaar.abuse.ch/browse/",
                "https://threatresearch.ext.hp.com/blog/?post-tag=africa",
                "https://threatresearch.ext.hp.com/blog/?post-tag=banking",
                "https://threatresearch.ext.hp.com/blog/?post-tag=guloader",
                "https://threatresearch.ext.hp.com/blog/?post-tag=html%20smuggling",
                "https://threatresearch.ext.hp.com/blog/?post-tag=remcos",
                "https://threatresearch.ext.hp.com/blog/?post-tag=typosquatting"
            ]
        },
        "images": [
            "https://threatresearch.ext.hp.com/wp-content/uploads/2021/05/blogImage__b7.jpg",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/03/africa_malware_campaign_image1.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/03/africa_malware_campaign_image2.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/03/africa_malware_campaign_03.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/03/africa_malware_campaign_image4.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/03/africa_malware_campaign_image5.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/03/africa_malware_campaign_image6.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/03/africa_malware_campaign_image7.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/03/africa_malware_campaign_image8.png"
        ]
    }
}