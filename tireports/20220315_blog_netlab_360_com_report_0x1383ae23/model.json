{
    "id": "<report_0x1383ae23>",
    "url": "https://blog.netlab.360.com/b1txor20-use-of-dns-tunneling_en",
    "title": "New Threat: B1txor20, A Linux Backdoor Using DNS Tunnel",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0xdff441c1>",
            "title": "New Threat: B1txor20, A Linux Backdoor Using DNS Tunnel",
            "title_level": 1,
            "sentences": []
        },
        {
            "id": "<chapter_0x6488e9b1>",
            "title": "New Threat: B1txor20, A Linux Backdoor Using DNS Tunnel",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xf7ffd5bb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "15 March 2022<crlf>/",
                    "html": "\n15 March 2022\n/ "
                },
                {
                    "id": "<sentence_0x2523d1c1>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x56ad5df6>": "https://blog.netlab.360.com/tag/botnet/"
                    },
                    "text": "Botnet",
                    "html": "<a href=\"/tag/botnet/\">Botnet</a>"
                }
            ]
        },
        {
            "id": "<chapter_0xd9cc2ae4>",
            "title": "Background",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x261118df>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Since the Log4J vulnerability was exposed, we see more and more malware jumped on the wagon, Elknot, Gafgyt, Mirai are all too familiar, on February 9, 2022, 360Netlab's honeypot system captured an unknown ELF file propagating through the Log4J vulnerability. What stands out is that the network traffic generated by this sample triggered a DNS Tunnel alert in our system, We decided to take a close look, and indeed, it is a new botnet family, which we named B1txor20 based on its propagation using the file name \"b1t\", the XOR encryption algorithm, and the RC4 algorithm key length of 20 bytes.",
                    "html": "<p>Since the Log4J vulnerability was exposed, we see more and more malware jumped on the wagon, Elknot, Gafgyt, Mirai are all too familiar, on February 9, 2022, 360Netlab's honeypot system captured an unknown ELF file propagating through the Log4J vulnerability. What stands out is that the network traffic generated by this sample triggered a DNS Tunnel alert in our system, We decided to take a close look, and indeed, it is a new botnet family, which we named B1txor20 based on its propagation using the file name \"b1t\", the XOR encryption algorithm, and the RC4 algorithm key length of 20 bytes.</p>"
                },
                {
                    "id": "<sentence_0x65a00324>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In short, B1txor20 is a Backdoor for the Linux platform, which uses DNS Tunnel technology to build C2 communication channels. In addition to the traditional backdoor functions, B1txor20 also has functions such as opening Socket5 proxy and remotely downloading and installing Rootkit.",
                    "html": "<p>In short, B1txor20 is a Backdoor for the Linux platform, which uses DNS Tunnel technology to build C2 communication channels. In addition to the traditional backdoor functions, B1txor20 also has functions such as opening Socket5 proxy and remotely downloading and installing Rootkit.</p>"
                },
                {
                    "id": "<sentence_0x2fbbb0a9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Another interesting point is that we found that many developed features are not put into use (in IDA, there is no cross-reference); some features have bugs. we presume that the author of B1txor20 will continue to improve and open different features according to different scenarios, so maybe we will meet B1txor20's siblings in the future.",
                    "html": "<p>Another interesting point is that we found that many developed features are not put into use (in IDA, there is no cross-reference); some features have bugs. we presume that the author of B1txor20 will continue to improve and open different features according to different scenarios, so maybe we will meet B1txor20's siblings in the future.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xdf6e4c7f>",
            "title": "B1txor20 Overview",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xb7f4e2e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x2b1c36a7>": "ZLIB compression, RC4 encryption, BASE64 encoding",
                        "<code_0xcb50e51e>": "ARM, X64 CPU"
                    },
                    "text": "We have captured a total of four different B1txor20 samples, their functions are almost the same, a total of 15 function numbers are supported, according to these functions, B1txor20 can be characterized as: using DNS Tunnel to establish C2 channel, support direct connection and relay, while using ZLIB compression, RC4 encryption, BASE64 encodingto protect the traffic of the backdoor Trojan, mainly targets ARM, X64 CPU architecture of the Linux platform.",
                    "html": "<p>We have captured a total of four different B1txor20 samples, their functions are almost the same, a total of 15 function numbers are supported, according to these functions, B1txor20 can be characterized as: using DNS Tunnel to establish C2 channel, support direct connection and relay, while using <code>ZLIB compression, RC4 encryption, BASE64 encoding</code>to protect the traffic of the backdoor Trojan, mainly targets <code>ARM, X64 CPU</code> architecture of the Linux platform.</p>"
                },
                {
                    "id": "<sentence_0xf8ad2fb3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The main features currently supported are shown below.",
                    "html": "<p>The main features currently supported are shown below.</p>"
                },
                {
                    "id": "<sentence_0xde50fa7e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "SHELL<crlf>Proxy<crlf>Execute arbitrary commands<crlf>Install Rootkit<crlf>Upload sensitive information",
                    "html": "<ol>\n<li>SHELL</li>\n<li>Proxy</li>\n<li>Execute arbitrary commands</li>\n<li>Install Rootkit</li>\n<li>Upload sensitive information</li>\n</ol>"
                },
                {
                    "id": "<sentence_0x5fac6375>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Its basic flowchart is shown below.",
                    "html": "<p>Its basic flowchart is shown below.</p>"
                },
                {
                    "id": "<sentence_0x60a81927>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x89e99b20>": "https://blog.netlab.360.com/content/images/2022/03/b1t_net.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_net.png\" width=\"860px\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0x783926a4>",
            "title": "Reverse Analysis",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xcd88d466>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We choose the sample on February 09, 2022 as the main object of analysis, and its basic information is shown as follows.",
                    "html": "<p>We choose the sample on February 09, 2022 as the main object of analysis, and its basic information is shown as follows.</p>"
                },
                {
                    "id": "<sentence_0xd3c0b461>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x533c0bb1>": "MD5:0a0c43726fd256ad827f4108bdf5e772\nELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.18, stripped\nPacker:None\n"
                    },
                    "text": "",
                    "html": "<code>MD5:0a0c43726fd256ad827f4108bdf5e772\nELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.18, stripped\nPacker:None\n</code>"
                },
                {
                    "id": "<sentence_0xf6f132>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xbc2f2a30>": "/var/run/.netns.pid",
                        "<code_0x90b1917c>": "/etc/machine-id",
                        "<code_0x9c67dafa>": "/tmp/.138171241",
                        "<code_0x9b9add19>": "/dev/urandom"
                    },
                    "text": "The sample of B1txor20 is dynamically linked, so it is relatively easy to reverse. Simply put, when B1txor20 executes, it will first disguise itself as a [netns] process, run a single instance through the PID file/var/run/.netns.pid, and then use /etc/machine-id, /tmp/.138171241 or /dev/urandom to generate the BotID, then decrypt the domain name used for DNS Tunnel and the RC4 secret key used to encrypt the traffic and test the connectivity of the DNS server, and finally use DNS Tunnel to send registration information to C2 and wait for the execution of the commands issued by C2. Here we will not go into details about the regular functions, we will take a look at the DNS Tunnel implementation of the B1txor20.",
                    "html": "<p>The sample of B1txor20 is dynamically linked, so it is relatively easy to reverse. Simply put, when B1txor20 executes, it will first disguise itself as a [netns] process, run a single instance through the PID file<code>/var/run/.netns.pid</code>, and then use <code>/etc/machine-id</code>, <code>/tmp/.138171241</code> or <code>/dev/urandom</code> to generate the BotID, then decrypt the domain name used for DNS Tunnel and the RC4 secret key used to encrypt the traffic and test the connectivity of the DNS server, and finally use DNS Tunnel to send registration information to C2 and wait for the execution of the commands issued by C2. Here we will not go into details about the regular functions, we will take a look at the DNS Tunnel implementation of the B1txor20.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x93af5ad2>",
            "title": "Generating Bot ID",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x9d05687b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x450f63ba>": "/etc/machine-id",
                        "<code_0x2df13ba2>": "/tmp/.138171241"
                    },
                    "text": "B1txor20 uses the following code snippet to read 32 bytes from /etc/machine-id, or /tmp/.138171241, for generating BotId, and if it fails, a 16 bytes of data will be generated via /dev/urandom and will be written to the previous 2 files.",
                    "html": "<p>B1txor20 uses the following code snippet to read 32 bytes from <code>/etc/machine-id</code>, or <code>/tmp/.138171241</code>, for generating BotId, and if it fails, a 16 bytes of data will be generated via /dev/urandom and will be written to the previous 2 files.</p>"
                },
                {
                    "id": "<sentence_0x76b23734>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x7178ae20>": "https://blog.netlab.360.com/content/images/2022/03/b1t_id.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_id.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x6aa49944>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The following code snippet shows the process of BotId calculation.",
                    "html": "<p>The following code snippet shows the process of BotId calculation.</p>"
                },
                {
                    "id": "<sentence_0xcd164f80>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x9fcfe22a>": "https://blog.netlab.360.com/content/images/2022/03/b1t_calc.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_calc.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0xa0e0d58d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x429ec2d1>": "ab3b49d10ec42c38b1093b8ce9ad12af"
                    },
                    "text": "Taking the machine-id valueab3b49d10ec42c38b1093b8ce9ad12afof our VM as an example, the following equivalent python code can be used to calculate the value of BotId as 0x125d.",
                    "html": "<p>Taking the machine-id value<code>ab3b49d10ec42c38b1093b8ce9ad12af</code>of our VM as an example, the following equivalent python code can be used to calculate the value of BotId as 0x125d.</p>"
                },
                {
                    "id": "<sentence_0x1e480d89>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xf326a0f7>": "import struct\nid='ab3b49d10ec42c38b1093b8ce9ad12af'\nvalues=struct.unpack(\"<16H\",id)\nsum=0\nfor i in values:\n sum ^= i\nprint hex(sum)\nif sum&0xff <0xf:\n sum+=0x10\nif sum>>8 < 0xf:\n sum+=0x1000\nprint hex(sum) # sum=0x125d\n"
                    },
                    "text": "",
                    "html": "<code class=\"language-python\">import struct\nid='ab3b49d10ec42c38b1093b8ce9ad12af'\nvalues=struct.unpack(\"&lt;16H\",id)\nsum=0\nfor i in values:\n sum ^= i\nprint hex(sum)\nif sum&amp;0xff &lt;0xf:\n sum+=0x10\nif sum&gt;&gt;8 &lt; 0xf:\n sum+=0x1000\nprint hex(sum) # sum=0x125d\n</code>"
                }
            ]
        },
        {
            "id": "<chapter_0x1618cf80>",
            "title": "Decryption",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xbefbe015>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "B1txor20 decrypts the domain name and RC4 secret key stored in the sample with the following code snippet.",
                    "html": "<p>B1txor20 decrypts the domain name and RC4 secret key stored in the sample with the following code snippet.</p>"
                },
                {
                    "id": "<sentence_0xc9d8bb63>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x3c58fb28>": "https://blog.netlab.360.com/content/images/2022/03/b1t_dec.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_dec.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0xaf6ffa17>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa524b779>": "49 D3 4F A7 A2 BC 4D FA 40 CF A6 32 31 E9 59 A1"
                    },
                    "text": "Its principle is very simple, it is a single-byte xor operation, where xor_key is49 D3 4F A7 A2 BC 4D FA 40 CF A6 32 31 E9 59 A1.",
                    "html": "<p>Its principle is very simple, it is a single-byte xor operation, where xor_key is<code>49 D3 4F A7 A2 BC 4D FA 40 CF A6 32 31 E9 59 A1</code>.</p>"
                },
                {
                    "id": "<sentence_0x2ec7778b>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x80a21307>": "https://blog.netlab.360.com/content/images/2022/03/b1t_xor.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_xor.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x4dcba4fa>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xc4e0ab05>": ".dns.webserv.systems",
                        "<code_0x8d880d74>": "EnLgLKHhy20f8A1dX85l"
                    },
                    "text": "The decryption process is equivalent to the CyberChef implementation in the following figure, which shows that the domain name is.dns.webserv.systems and the RC4 secret key is EnLgLKHhy20f8A1dX85l.",
                    "html": "<p>The decryption process is equivalent to the CyberChef implementation in the following figure, which shows that the domain name is<code>.dns.webserv.systems</code> and the RC4 secret key is <code>EnLgLKHhy20f8A1dX85l</code>.</p>"
                },
                {
                    "id": "<sentence_0xa418a615>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x7075a6be>": "https://blog.netlab.360.com/content/images/2022/03/b1t_chef_xor.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_chef_xor.png\" width=\"860px\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0x4234618e>",
            "title": "Measure the connectivity of DNS servers",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x6c20a53e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "B1txor20 tests the connectivity of 3 DNS (8.8.8.8:53, 8.8.8.4:53, 194.165.16.24:443) servers with the following code snippet.",
                    "html": "<p>B1txor20 tests the connectivity of 3 DNS (8.8.8.8:53, 8.8.8.4:53, 194.165.16.24:443) servers with the following code snippet.</p>"
                },
                {
                    "id": "<sentence_0xcf637d79>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xe867cb7f>": "https://blog.netlab.360.com/content/images/2022/03/b1t_dns.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_dns.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0xca424452>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xc51db8e>": "http://google.com",
                        "<code_0x2d0bd659>": "res_mkquery",
                        "<code_0x755f619c>": "res_send"
                    },
                    "text": "The principle is to use res_mkquery API to build the DNS request message for \"google.com\", then send the request via res_send, and as long as it can be sent successfully, the network is considered to be connected to the corresponding DNS server, and they are saved for subsequent use.",
                    "html": "<p>The principle is to use <code>res_mkquery</code> API to build the DNS request message for \"<a class=\"vglnk\" href=\"http://google.com\" rel=\"nofollow\">google.com</a>\", then send the request via <code>res_send</code>, and as long as it can be sent successfully, the network is considered to be connected to the corresponding DNS server, and they are saved for subsequent use.</p>"
                },
                {
                    "id": "<sentence_0x83cb054b>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x38ffe03c>": "https://blog.netlab.360.com/content/images/2022/03/b1t_test.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_test.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0xd7fc7fe7>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The actual traffic generated by Bot and 194.165.16.24 is as follows.",
                    "html": "<p>The actual traffic generated by Bot and 194.165.16.24 is as follows.</p>"
                },
                {
                    "id": "<sentence_0xfadcece8>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x26383c6a>": "https://blog.netlab.360.com/content/images/2022/03/b1t_show.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_show.png\" width=\"860px\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0xb7f767f7>",
            "title": "C&C Communication",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x4fd0e0ed>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "When the above preparations are completed, B1txor20 enters the final stage, using DNS Tunnel to establish communication with C2 and wait for the execution of the commands sent by C2.",
                    "html": "<p>When the above preparations are completed, B1txor20 enters the final stage, using DNS Tunnel to establish communication with C2 and wait for the execution of the commands sent by C2.</p>"
                },
                {
                    "id": "<sentence_0x172e1cae>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x6838b8f8>": "https://blog.netlab.360.com/content/images/2022/03/b1t_final.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_final.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x2e5acfa8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Generally speaking, the scenario of malware using DNS Tunnel is as follows:",
                    "html": "<p>Generally speaking, the scenario of malware using DNS Tunnel is as follows:</p>"
                },
                {
                    "id": "<sentence_0x17b6e343>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Bot sends the stolen sensitive information, command execution results, and any other information that needs to be delivered, after hiding it using specific encoding techniques, to C2 as a DNS request; After receiving the request, C2 sends the payload to the Bot side as a response to the DNS request. In this way, Bot and C2 achieve communication with the help of DNS protocol.",
                    "html": "<p>Bot sends the stolen sensitive information, command execution results, and any other information that needs to be delivered, after hiding it using specific encoding techniques, to C2 as a DNS request; After receiving the request, C2 sends the payload to the Bot side as a response to the DNS request. In this way, Bot and C2 achieve communication with the help of DNS protocol.</p>"
                },
                {
                    "id": "<sentence_0x6ecd8114>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In such a network structure, there are 3 key points:",
                    "html": "<p>In such a network structure, there are 3 key points:</p>"
                },
                {
                    "id": "<sentence_0x86945323>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "1:C2 must support the DNS protocol<crlf>2: Specific encoding techniques<crlf>3: The way DNS requests are sent",
                    "html": "<p>1:C2 must support the DNS protocol\n2: Specific encoding techniques\n3: The way DNS requests are sent</p>"
                },
                {
                    "id": "<sentence_0xf5cd582d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xc34061c6>": "https://blog.netlab.360.com/content/images/2022/03/b1t_packet.png"
                    },
                    "text": "The following section will analyze the technical details of B1txor20's communication around these points, in conjunction with the traffic generated by B1txor20 in practice.",
                    "html": "<p>The following section will analyze the technical details of B1txor20's communication around these points, in conjunction with the traffic generated by B1txor20 in practice.\n<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_packet.png\" width=\"860px\"/></p>"
                }
            ]
        },
        {
            "id": "<chapter_0xfda32d87>",
            "title": "0x01:Locating C2",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x221e6ebf>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Through the traffic in the above figure, we can see that the SLD used by B1txor20 is webserv.systems, and using the DIG command, we can see that this SLD is point to IP 194.165.16.24; and the DNS resolution service is turned on at this IP 194, so we can determine that the C2 of B1txor20 is exactly 194.165.16.24.",
                    "html": "<p>Through the traffic in the above figure, we can see that the SLD used by B1txor20 is webserv.systems, and using the DIG command, we can see that this SLD is point to IP 194.165.16.24; and the DNS resolution service is turned on at this IP 194, so we can determine that the C2 of B1txor20 is exactly 194.165.16.24.</p>"
                },
                {
                    "id": "<sentence_0xb847432c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x27cacecc>": "https://blog.netlab.360.com/content/images/2022/03/b1t_dnstxt.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_dnstxt.png\" width=\"860px\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0x33a67a71>",
            "title": "0x02:Generate Tunnel domain name",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xe36448b0>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x929d007a>": "Base64-Like String+.dns.websrv.systems"
                    },
                    "text": "The format of B1txor20's Tunnel domain name isBase64-Like String+.dns.websrv.systems. It is obvious that the front Base64 string is the information sent by Bot to C2, how is it generated?",
                    "html": "<p>The format of B1txor20's Tunnel domain name is<code>Base64-Like String+.dns.websrv.systems</code>. It is obvious that the front Base64 string is the information sent by Bot to C2, how is it generated?</p>"
                },
                {
                    "id": "<sentence_0x52afe97b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xe6e12c0>": "0xFF + BotId + 0xFF + Stage + 0xFF + TaskInfo",
                        "<code_0x513dee76>": "TaskInfo"
                    },
                    "text": "First, the B1txor20 packet has a pre-construction process, which can be seen in the format of0xFF + BotId + 0xFF + Stage + 0xFF + TaskInfo, 0xFF is used to separate different items, and when the construction is finished, according to different Stage values, different tasks will fill theTaskInfosection accordingly.",
                    "html": "<p>First, the B1txor20 packet has a pre-construction process, which can be seen in the format of<code>0xFF + BotId + 0xFF + Stage + 0xFF + TaskInfo</code>, 0xFF is used to separate different items, and when the construction is finished, according to different Stage values, different tasks will fill the<code>TaskInfo</code>section accordingly.</p>"
                },
                {
                    "id": "<sentence_0xc00e7fdf>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x449a3a4c>": "https://blog.netlab.360.com/content/images/2022/03/b1t_pre.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_pre.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x1e94e38c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x38cfcb7d>": "gather_info",
                        "<code_0x5570ad18>": "TaskInfo"
                    },
                    "text": "Take the above task as an example, the Stage value is 1. Through the gather_info function, the information of \"sysinfo_uptime,uid,hostname\" is filled into TaskInfo, and they are separated by0x0a.",
                    "html": "<p>Take the above task as an example, the Stage value is 1. Through the <code>gather_info</code> function, the information of \"sysinfo_uptime,uid,hostname\" is filled into <code>TaskInfo</code>, and they are separated by0x0a.</p>"
                },
                {
                    "id": "<sentence_0x9090e377>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x1b42ee4a>": "https://blog.netlab.360.com/content/images/2022/03/b1t_reg.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_reg.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x547f61d1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "When the required information is ready, B1txor20 uses theprocess_queryfunction to further process the above information, which includes three processes: ZLIB compression, RC4 encryption, and Base64 encoding.",
                    "html": "<p>When the required information is ready, B1txor20 uses theprocess_queryfunction to further process the above information, which includes three processes: ZLIB compression, RC4 encryption, and Base64 encoding.</p>"
                },
                {
                    "id": "<sentence_0xbef99967>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x1f230a2a>": "https://blog.netlab.360.com/content/images/2022/03/b1t_process.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_process.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x64b6d53d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xeb146739>": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789^_"
                    },
                    "text": "The secret key used in RC4 encryption is the string \"EnLgLKHhy20f8A1dX85l\" mentioned in the previous decryption section, and the Alphabet String used in Base64 is ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789^_.",
                    "html": "<p>The secret key used in RC4 encryption is the string \"EnLgLKHhy20f8A1dX85l\" mentioned in the previous decryption section, and the Alphabet String used in Base64 is <code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789^_</code>.</p>"
                },
                {
                    "id": "<sentence_0x67bd8674>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Finally, B1txor20 adds 1 byte of status and 4 bytes of random string before the Base64 string generated above, and then splices it with domain, which is the final domain name to be queried. The value of status is ['0', '1', '2'], 0 means that the current query is truncated, the subsequent query and the current should be spelled into the same; 1 means that when the query is complete.",
                    "html": "<p>Finally, B1txor20 adds 1 byte of status and 4 bytes of random string before the Base64 string generated above, and then splices it with domain, which is the final domain name to be queried. The value of status is ['0', '1', '2'], 0 means that the current query is truncated, the subsequent query and the current should be spelled into the same; 1 means that when the query is complete.</p>"
                },
                {
                    "id": "<sentence_0x346591b7>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x8d26af58>": "https://blog.netlab.360.com/content/images/2022/03/b1t_tun.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_tun.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x3789f061>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x27aa9c78>": "1HQoOKPvBKs8yqO1tTUQkCqGWN9anB4RAGWhnJy8A.dns.webserv.systems",
                        "<code_0x90da97e2>": "KPvBKs8yqO1tTUQkCqGWN9anB4RAGWhnJy8A"
                    },
                    "text": "Let's take a look at the actual generated query 1HQoOKPvBKs8yqO1tTUQkCqGWN9anB4RAGWhnJy8A.dns.webserv.systems, removing the first 5 bytes, and the .dns.webserv.systems part to get KPvBKs8yqO1tTUQkCqGWN9anB4RAGWhnJy8A, then use Base64 decoding, RC4 decryption, ZLIB decompression, you can get the following raw data.",
                    "html": "<p>Let's take a look at the actual generated query <code>1HQoOKPvBKs8yqO1tTUQkCqGWN9anB4RAGWhnJy8A.dns.webserv.systems</code>, removing the first 5 bytes, and the .dns.webserv.systems part to get <code>KPvBKs8yqO1tTUQkCqGWN9anB4RAGWhnJy8A</code>, then use Base64 decoding, RC4 decryption, ZLIB decompression, you can get the following raw data.</p>"
                },
                {
                    "id": "<sentence_0xa1ddbc6f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x961b11a5>": "https://blog.netlab.360.com/content/images/2022/03/b1t_origin.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_origin.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x2909ef4e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "From the data content and format, it can correspond with our previous description one by one, indicating that our previous analysis is correct.",
                    "html": "<p>From the data content and format, it can correspond with our previous description one by one, indicating that our previous analysis is correct.</p>"
                },
                {
                    "id": "<sentence_0x53c4e0e9>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x4a943d9f>": "Botid =0x125d\nStage=1\nsysinfo.uptime = 34\nuid=30\nhostname=debian\n"
                    },
                    "text": "",
                    "html": "<code>Botid =0x125d\nStage=1\nsysinfo.uptime = 34\nuid=30\nhostname=debian\n</code>"
                }
            ]
        },
        {
            "id": "<chapter_0x15d0e0cb>",
            "title": "0x3:Send DNS request",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x7a2d0b9f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "When the above domain name construction is complete, B1txor20 generates and sends DNS requests using the RES series API.",
                    "html": "<p>When the above domain name construction is complete, B1txor20 generates and sends DNS requests using the RES series API.</p>"
                },
                {
                    "id": "<sentence_0x2f8641c6>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xc096ba1>": "https://blog.netlab.360.com/content/images/2022/03/b1t_senddns.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_senddns.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0xae6d6c64>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "There are 3 ways to send DNS requests, depending on the previous test of DNS connectivity.",
                    "html": "<p>There are 3 ways to send DNS requests, depending on the previous test of DNS connectivity.</p>"
                },
                {
                    "id": "<sentence_0x652ad308>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "1.Send to public dns (8.8.8.8, 8.8.4.4)<crlf>2.Send directly to C2 (194.165.16.24)<crlf>3.Send to local dns (nameserver in /etc/resolv.conf)",
                    "html": "<p>1.Send to public dns (8.8.8.8, 8.8.4.4)\n2.Send directly to C2 (194.165.16.24)\n3.Send to local dns (nameserver in /etc/resolv.conf)</p>"
                },
                {
                    "id": "<sentence_0xba61dcac>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In this way, it is faster, but less concealed and easy to be detected and traced; in this way, 1 and 3 are more concealed, but a little slower.",
                    "html": "<p>In this way, it is faster, but less concealed and easy to be detected and traced; in this way, 1 and 3 are more concealed, but a little slower.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xd4c3ac5e>",
            "title": "0x4:Process C2 payload",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xf6d68af>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x7d521516>": "Status(1 byte):Body"
                    },
                    "text": "After the Bot sends the DNS request in the above way, it waits for the execution of the C2 instruction, which is stored in the response message of the DNS request in the format of Status(1 byte):Body, where the Body part also uses \"ZLIB compression, RC4 encryption, BASE64 encoding \" protection method.",
                    "html": "<p>After the Bot sends the DNS request in the above way, it waits for the execution of the C2 instruction, which is stored in the response message of the DNS request in the format of <code>Status(1 byte):Body</code>, where the Body part also uses \"ZLIB compression, RC4 encryption, BASE64 encoding \" protection method.</p>"
                },
                {
                    "id": "<sentence_0xcafb5c9c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x2905a690>": "https://blog.netlab.360.com/content/images/2022/03/b1t_recv.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_recv.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x5cd81e36>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For example, the actual command \"1VSE6NZwczNMm2zgaXeLkZro=\" is received in the following figure.",
                    "html": "<p>For example, the actual command \"1VSE6NZwczNMm2zgaXeLkZro=\" is received in the following figure.</p>"
                },
                {
                    "id": "<sentence_0xc9a04db9>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xc9712c73>": "https://blog.netlab.360.com/content/images/2022/03/b1t_cmd.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_cmd.png\" width=\"860px\"/>"
                },
                {
                    "id": "<sentence_0x76f84538>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x785b6055>": "red part",
                        "<code_0xf69b7e6d>": "FF 02 FF 0A FF"
                    },
                    "text": "Body part for \"VSE6NZwczNMm2zgaXeLkZro=\", After decoded by Base64, RC4 decryption, you can get the following format of data, and then decompression of thered part, you get the final instruction FF 02 FF 0A FF, you can see that its format and the format generated by the above query is consistent, at this point it can be known that Bot will go to perform 0x02 function, so that Bot's round of interaction with C2 is complete.",
                    "html": "<p>Body part for \"VSE6NZwczNMm2zgaXeLkZro=\", After decoded by Base64, RC4 decryption, you can get the following format of data, and then decompression of the<code>red part</code>, you get the final instruction <code>FF 02 FF 0A FF</code>, you can see that its format and the format generated by the above query is consistent, at this point it can be known that Bot will go to perform 0x02 function, so that Bot's round of interaction with C2 is complete.</p>"
                },
                {
                    "id": "<sentence_0xa3aaa187>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x5c8f44aa>": "https://blog.netlab.360.com/content/images/2022/03/b1t_after.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_after.png\" width=\"860px\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0x64a18d6b>",
            "title": "C&C instructions",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xe43110ef>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "B1txor20 supports a total of 14 instructions, and the correspondence between instruction number and function is shown in the following table.",
                    "html": "<p>B1txor20 supports a total of 14 instructions, and the correspondence between instruction number and function is shown in the following table.</p>"
                },
                {
                    "id": "<sentence_0x49890162>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x534d47a8>": {
                            "Cmd ID": {
                                "0": "0x1",
                                "1": "0x2",
                                "2": "0x3",
                                "3": "0x4",
                                "4": "0x5",
                                "5": "0x6",
                                "6": "0x7",
                                "7": "0x8",
                                "8": "0x9",
                                "9": "0x10",
                                "10": "0x11",
                                "11": "0x1a",
                                "12": "0x21",
                                "13": "0x50",
                                "14": "0x51"
                            },
                            "Function": {
                                "0": "Beacon/Heartbeat",
                                "1": "Upload system info",
                                "2": "Create \"/dev/pamd\" (unix domain socket) which can get a shell",
                                "3": "Exec arbitrary system cmd via popen",
                                "4": "Traffic forwarding",
                                "5": "Write File",
                                "6": "Read File",
                                "7": "Deliver info via \"/var/tmp/.unetns\"(unix domain socket)\uff0cNot used",
                                "8": "Upload specific info\uff0cNot used",
                                "9": "Stop proxy service",
                                "10": "Start proxy service",
                                "11": "Create proxy service",
                                "12": "Reverse shell",
                                "13": "Upload \"/boot/conf- XXX\" info\uff0cNot used",
                                "14": "install M3T4M0RPH1N3.ko rootkit"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>\n<thead>\n<tr>\n<th>Cmd ID</th>\n<th>Function</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0x1</td>\n<td>Beacon/Heartbeat</td>\n</tr>\n<tr>\n<td>0x2</td>\n<td>Upload system info</td>\n</tr>\n<tr>\n<td>0x3</td>\n<td>Create \"/dev/pamd\" (unix domain socket) which can get a shell</td>\n</tr>\n<tr>\n<td>0x4</td>\n<td>Exec arbitrary system cmd via popen</td>\n</tr>\n<tr>\n<td>0x5</td>\n<td>Traffic forwarding</td>\n</tr>\n<tr>\n<td>0x6</td>\n<td>Write File</td>\n</tr>\n<tr>\n<td>0x7</td>\n<td>Read File</td>\n</tr>\n<tr>\n<td>0x8</td>\n<td>Deliver info via \"/var/tmp/.unetns\"(unix domain socket)\uff0cNot used</td>\n</tr>\n<tr>\n<td>0x9</td>\n<td>Upload specific info\uff0cNot used</td>\n</tr>\n<tr>\n<td>0x10</td>\n<td>Stop proxy service</td>\n</tr>\n<tr>\n<td>0x11</td>\n<td>Start proxy service</td>\n</tr>\n<tr>\n<td>0x1a</td>\n<td>Create proxy service</td>\n</tr>\n<tr>\n<td>0x21</td>\n<td>Reverse shell</td>\n</tr>\n<tr>\n<td>0x50</td>\n<td>Upload \"/boot/conf- XXX\" info\uff0cNot used</td>\n</tr>\n<tr>\n<td>0x51</td>\n<td>install M3T4M0RPH1N3.ko rootkit</td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0x43e8ee76>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In the table, \"Not used\" means that this function has the corresponding processing code in the sample, but it is not called. We are not sure if these codes are used for debugging or in other scenarios.",
                    "html": "<p>In the table, \"Not used\" means that this function has the corresponding processing code in the sample, but it is not called. We are not sure if these codes are used for debugging or in other scenarios.</p>"
                },
                {
                    "id": "<sentence_0x73fc72a4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We found that some functions are buggy in their implementation, such as 0x3, which uses the remove function to delete the socket file after bind the domain socket, which makes the socket unconnectable and thus the whole function is useless.",
                    "html": "<p>We found that some functions are buggy in their implementation, such as 0x3, which uses the remove function to delete the socket file after bind the domain socket, which makes the socket unconnectable and thus the whole function is useless.</p>"
                },
                {
                    "id": "<sentence_0x8eedc9bd>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x2babb942>": "https://blog.netlab.360.com/content/images/2022/03/b1t_bug.png"
                    },
                    "text": "",
                    "html": "<img src=\"https://blog.netlab.360.com/content/images/2022/03/b1t_bug.png\" width=\"860px\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0xf1cd4dbf>",
            "title": "Small note",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x17117588>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We noticed the domain name has been registered for 6 years, which is kind unusual?",
                    "html": "<p>We noticed the domain name has been registered for 6 years, which is kind unusual?</p>"
                },
                {
                    "id": "<sentence_0x5bfd858>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xf7d43358>": "webserv.systems\tcreateddate 2021-02-08 15:13:22\nwebserv.systems\tupdateddate 2021-02-24 22:27:23\nwebserv.systems\texpiresdate 2027-02-08 15:13:22\n"
                    },
                    "text": "",
                    "html": "<code>webserv.systems\tcreateddate 2021-02-08 15:13:22\nwebserv.systems\tupdateddate 2021-02-24 22:27:23\nwebserv.systems\texpiresdate 2027-02-08 15:13:22\n</code>"
                }
            ]
        },
        {
            "id": "<chapter_0x4169c480>",
            "title": "Contact us",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x57357ac9>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe7313d57>": "https://twitter.com/360Netlab"
                    },
                    "text": "Readers are always welcomed to reach us on Twitter or email us to netlab at 360 dot cn.",
                    "html": "<p>Readers are always welcomed to reach us on <a href=\"https://twitter.com/360Netlab\">Twitter</a> or email us to netlab at 360 dot cn.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x597c715a>",
            "title": "IOC",
            "title_level": 2,
            "sentences": []
        },
        {
            "id": "<chapter_0x7acbc169>",
            "title": "C2",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xe1d0a7f8>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x4c81e985>": "webserv.systems\n194.165.16.24:53\n194.165.16.24:443\n"
                    },
                    "text": "",
                    "html": "<code>webserv.systems\n194.165.16.24:53\n194.165.16.24:443\n</code>"
                }
            ]
        },
        {
            "id": "<chapter_0xcbda5c00>",
            "title": "Scanner",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x2965225e>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xec72522a>": "104.244.73.126\tLuxembourg|Luxembourg|Unknown\t53667|FranTech_Solutions\n109.201.133.100\tNetherlands|North_Holland|Amsterdam\t43350|NForce_Entertainment_B.V.\n162.247.74.27\tUnited_States|New_York|New_York_City\t4224|The_Calyx_Institute\n166.78.48.7\tUnited_States|Texas|Dallas\t33070|Rackspace_Hosting\n171.25.193.78\tSweden|Stockholm_County|Stockholm\t198093|Foreningen_for_digitala_fri-_och_rattigheter\n185.100.87.202\tRomania|Bucharest|Unknown\t200651|Flokinet_Ltd\n185.129.62.62\tDenmark|Region_Hovedstaden|Copenhagen\t57860|Zencurity_ApS\n185.220.100.240\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.241\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.242\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.243\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.246\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.249\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.250\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.252\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.254\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.255\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.101.134\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.136\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.140\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.143\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.144\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.151\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.155\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.161\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.162\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.164\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.166\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.168\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.172\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.174\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.176\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.181\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.191\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.34\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.37\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.39\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.40\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.42\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.43\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.46\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.5\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.50\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.51\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.53\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.54\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.56\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.57\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.61\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.56.80.65\tNetherlands|South_Holland|Capelle_aan_den_IJssel\t43350|NForce_Entertainment_B.V.\n193.218.118.158\tUkraine|Kiev|Unknown\tNone;\n194.32.107.159\tRomania|Romania|Unknown\tNone;\n194.32.107.187\tRomania|Romania|Unknown\tNone;\n194.88.143.66\tItaly|Lombardy|Metropolitan_City_of_Milan\t49367|Seflow_S.N.C._Di_Marco_Brame'_&_C.\n199.195.250.77\tUnited_States|New_York|New_York_City\t53667|FranTech_Solutions\n23.129.64.216\tUnited_States|Washington|Seattle\t396507|Emerald_Onion\n23.154.177.4\tNorth_America_Regions|North_America_Regions|Unknown\tNone;\n45.13.104.179\tFrance|Ile-de-France|Paris\t57199|MilkyWan\n45.154.255.147\tSweden|Stockholm_County|Stockholm\t41281|KeFF_Networks_Ltd\n45.61.185.90\tUnited_States|United_States|Unknown\t8100|QuadraNet_Enterprises_LLC\n46.166.139.111\tNetherlands|South_Holland|Capelle_aan_den_IJssel\t43350|NForce_Entertainment_B.V.\n5.2.69.50\tNetherlands|Flevoland|Dronten\t60404|Liteserver_Holding_B.V.\n51.15.43.205\tNetherlands|North_Holland|Haarlem\t12876|Online_S.a.s.\n62.102.148.68\tSweden|Stockholm_County|Akersberga\t51815|IP-Only_Networks_AB\n62.102.148.69\tSweden|Stockholm_County|Akersberga\t51815|IP-Only_Networks_AB\n81.17.18.62\tSwitzerland|Canton_of_Ticino|Unknown\t51852|Private_Layer_INC\n"
                    },
                    "text": "",
                    "html": "<code>104.244.73.126\tLuxembourg|Luxembourg|Unknown\t53667|FranTech_Solutions\n109.201.133.100\tNetherlands|North_Holland|Amsterdam\t43350|NForce_Entertainment_B.V.\n162.247.74.27\tUnited_States|New_York|New_York_City\t4224|The_Calyx_Institute\n166.78.48.7\tUnited_States|Texas|Dallas\t33070|Rackspace_Hosting\n171.25.193.78\tSweden|Stockholm_County|Stockholm\t198093|Foreningen_for_digitala_fri-_och_rattigheter\n185.100.87.202\tRomania|Bucharest|Unknown\t200651|Flokinet_Ltd\n185.129.62.62\tDenmark|Region_Hovedstaden|Copenhagen\t57860|Zencurity_ApS\n185.220.100.240\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.241\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.242\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.243\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.246\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.249\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.250\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.252\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.254\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.100.255\tGermany|Bavaria|Nuremberg\t205100|F3_Netze_e.V.\n185.220.101.134\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.136\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.140\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.143\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.144\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.151\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.155\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.161\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.162\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.164\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.166\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.168\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.172\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.174\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.176\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.181\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.191\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.34\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.37\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.39\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.40\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.42\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.43\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.46\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.5\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.50\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.51\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.53\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.54\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.56\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.57\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.220.101.61\tNetherlands|North_Holland|Amsterdam\t200052|Feral.io_Ltd\n185.56.80.65\tNetherlands|South_Holland|Capelle_aan_den_IJssel\t43350|NForce_Entertainment_B.V.\n193.218.118.158\tUkraine|Kiev|Unknown\tNone;\n194.32.107.159\tRomania|Romania|Unknown\tNone;\n194.32.107.187\tRomania|Romania|Unknown\tNone;\n194.88.143.66\tItaly|Lombardy|Metropolitan_City_of_Milan\t49367|Seflow_S.N.C._Di_Marco_Brame'_&amp;_C.\n199.195.250.77\tUnited_States|New_York|New_York_City\t53667|FranTech_Solutions\n23.129.64.216\tUnited_States|Washington|Seattle\t396507|Emerald_Onion\n23.154.177.4\tNorth_America_Regions|North_America_Regions|Unknown\tNone;\n45.13.104.179\tFrance|Ile-de-France|Paris\t57199|MilkyWan\n45.154.255.147\tSweden|Stockholm_County|Stockholm\t41281|KeFF_Networks_Ltd\n45.61.185.90\tUnited_States|United_States|Unknown\t8100|QuadraNet_Enterprises_LLC\n46.166.139.111\tNetherlands|South_Holland|Capelle_aan_den_IJssel\t43350|NForce_Entertainment_B.V.\n5.2.69.50\tNetherlands|Flevoland|Dronten\t60404|Liteserver_Holding_B.V.\n51.15.43.205\tNetherlands|North_Holland|Haarlem\t12876|Online_S.a.s.\n62.102.148.68\tSweden|Stockholm_County|Akersberga\t51815|IP-Only_Networks_AB\n62.102.148.69\tSweden|Stockholm_County|Akersberga\t51815|IP-Only_Networks_AB\n81.17.18.62\tSwitzerland|Canton_of_Ticino|Unknown\t51852|Private_Layer_INC\n</code>"
                }
            ]
        },
        {
            "id": "<chapter_0x9eb87fbd>",
            "title": "Downloader",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x27f956e8>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x5228e928>": "hxxp://179.60.150.23:8000/xExportObject.class\nldap://179.60.150.23:1389/o=tomcat\nhxxp://194.165.16.24:8229/b1t_1t.sh\nhxxp://194.165.16.24:8228/b1t\nhxxp://194.165.16.24:8228/b1t\nhxxp://194.165.16.24:8228/_run.sh\nhxxp://194.165.16.24:8228/run.sh\nhxxp://194.165.16.24:8228/share.sh\nhxxp://194.165.16.24:8228/b1t\nhxxp://194.165.16.24:8228/run.sh\nhxxp://194.165.16.24:8228/run.sh\nhxxp://194.165.16.24:8229/b4d4b1t.elf\n"
                    },
                    "text": "",
                    "html": "<code>hxxp://179.60.150.23:8000/xExportObject.class\nldap://179.60.150.23:1389/o=tomcat\nhxxp://194.165.16.24:8229/b1t_1t.sh\nhxxp://194.165.16.24:8228/b1t\nhxxp://194.165.16.24:8228/b1t\nhxxp://194.165.16.24:8228/_run.sh\nhxxp://194.165.16.24:8228/run.sh\nhxxp://194.165.16.24:8228/share.sh\nhxxp://194.165.16.24:8228/b1t\nhxxp://194.165.16.24:8228/run.sh\nhxxp://194.165.16.24:8228/run.sh\nhxxp://194.165.16.24:8229/b4d4b1t.elf\n</code>"
                }
            ]
        },
        {
            "id": "<chapter_0x227d5a96>",
            "title": "Sample MD5",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x78efc6e4>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x72782672>": "027d74534a32ba27f225fff6ee7a755f\n0a0c43726fd256ad827f4108bdf5e772\n24c49e4c75c6662365e10bbaeaeecb04\n2e5724e968f91faaf156c48ec879bb40\n3192e913ed0138b2de32c5e95146a24a\n40024288c0d230c0b8ad86075bd7c678\n43fcb5f22a53a88e726ebef46095cd6b\n59690bd935184f2ce4b7de0a60e23f57\n5f77c32c37ae7d25e927d91eb3b61c87\n6b42a9f10db8b11a15006abced212fa4\n6c05637c29b347c28d05b937e670c81e\n7ef9d37e18b48de4b26e5d188a383ec8\n7f4e74e15fafaf3f8b79254558019d7f\n989dd7aa17244da78309d441d265613a\ndd4b6e2750f86f2630e3aea418d294c0\ne82135951c3d485b7133b9673194a79e\nfd84b2f06f90940cb920e20ad4a30a63\n"
                    },
                    "text": "",
                    "html": "<code>027d74534a32ba27f225fff6ee7a755f\n0a0c43726fd256ad827f4108bdf5e772\n24c49e4c75c6662365e10bbaeaeecb04\n2e5724e968f91faaf156c48ec879bb40\n3192e913ed0138b2de32c5e95146a24a\n40024288c0d230c0b8ad86075bd7c678\n43fcb5f22a53a88e726ebef46095cd6b\n59690bd935184f2ce4b7de0a60e23f57\n5f77c32c37ae7d25e927d91eb3b61c87\n6b42a9f10db8b11a15006abced212fa4\n6c05637c29b347c28d05b937e670c81e\n7ef9d37e18b48de4b26e5d188a383ec8\n7f4e74e15fafaf3f8b79254558019d7f\n989dd7aa17244da78309d441d265613a\ndd4b6e2750f86f2630e3aea418d294c0\ne82135951c3d485b7133b9673194a79e\nfd84b2f06f90940cb920e20ad4a30a63\n</code>"
                },
                {
                    "id": "<sentence_0xa68c3833>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This post was a collaboration between",
                    "html": "<p>This post was a collaboration between</p>"
                },
                {
                    "id": "<sentence_0x81cf4cd1>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf8919eb4>": "https://blog.netlab.360.com/author/alex/",
                        "<a_0x9b66292d>": "https://blog.netlab.360.com/author/huiwang/"
                    },
                    "text": "Alex.Turing, Hui Wang",
                    "html": "<p><a href=\"/author/alex/\">Alex.Turing</a>, <a href=\"/author/huiwang/\">Hui Wang</a></p>"
                },
                {
                    "id": "<sentence_0x77225a3f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf8919eb4>": "https://blog.netlab.360.com/author/alex/",
                        "<a_0x9b66292d>": "https://blog.netlab.360.com/author/huiwang/",
                        "<img_0xa24efd49>": "https://blog.netlab.360.com/content/images/size/w100/2019/06/turing.PNG",
                        "<img_0x757f66c2>": "https://blog.netlab.360.com/content/images/size/w100/2017/05/WechatIMG1.jpeg"
                    },
                    "text": "Alex.Turing Read more posts by this author.<crlf>Hui Wang Read more posts by this author.",
                    "html": "<ul class=\"author-list\">\n<li class=\"author-list-item\">\n<img alt=\"Alex.Turing\" class=\"author-profile-image\" src=\"https://blog.netlab.360.com/content/images/size/w100/2019/06/turing.PNG\"/>\n<h2>Alex.Turing</h2>\n<p>Read <a href=\"/author/alex/\">more posts</a> by this author.</p>\n<a class=\"moving-avatar\" href=\"/author/alex/\">\n<img alt=\"Alex.Turing\" class=\"author-profile-image\" src=\"https://blog.netlab.360.com/content/images/size/w100/2019/06/turing.PNG\"/>\n</a>\n</li>\n<li class=\"author-list-item\">\n<img alt=\"Hui Wang\" class=\"author-profile-image\" src=\"https://blog.netlab.360.com/content/images/size/w100/2017/05/WechatIMG1.jpeg\"/>\n<h2>Hui Wang</h2>\n<p>Read <a href=\"/author/huiwang/\">more posts</a> by this author.</p>\n<a class=\"moving-avatar\" href=\"/author/huiwang/\">\n<img alt=\"Hui Wang\" class=\"author-profile-image\" src=\"https://blog.netlab.360.com/content/images/size/w100/2017/05/WechatIMG1.jpeg\"/>\n</a>\n</li>\n</ul>"
                }
            ]
        }
    ]
}