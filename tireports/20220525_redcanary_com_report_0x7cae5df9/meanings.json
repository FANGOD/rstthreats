{
    "title": "ChromeLoader: a pushy malvertiser",
    "url": "https://redcanary.com/blog/chromeloader",
    "threats": {
        "Threat": [
            {
                "token": {
                    "id": "<THREAT_0x50f5610d>",
                    "type": "Threat",
                    "value": "gootloader"
                },
                "references": {
                    "sentences": [
                        "The Goot cause: Detecting Gootloader and its follow-on activity"
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser"
                    ]
                }
            },
            {
                "token": {
                    "id": "<THREAT_0x3706ddb0>",
                    "type": "Threat",
                    "value": "kerberoasting_technique"
                },
                "references": {
                    "sentences": [
                        "Marshmallows & Kerberoasting"
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser",
                        "Marshmallows & Kerberoasting"
                    ]
                }
            },
            {
                "token": {
                    "id": "<THREAT_0x6dfed84e>",
                    "type": "Threat",
                    "value": "raspberry_robin"
                },
                "references": {
                    "sentences": [
                        "Raspberry Robin gets the worm early"
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser",
                        "Raspberry Robin gets the worm early"
                    ]
                }
            },
            {
                "token": {
                    "id": "<THREAT_0x835d5cfa>",
                    "type": "Threat",
                    "value": "harvester_group"
                },
                "references": {
                    "sentences": [
                        "Like most suspicious browser extensions, ChromeLoader is a relatively benign threat that hijacks user search queries and redirects traffic to an advertising site. However, ChromeLoader uses PowerShell to inject itself into the browser and add a malicious extension to it, a technique we dont see very often (and one that often goes undetected by other security tools). If applied to a higher-impact threatsuch as a credential harvester or spywarethis PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a users browser sessions."
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser"
                    ]
                }
            },
            {
                "token": {
                    "id": "<THREAT_0xbf5de90>",
                    "type": "Threat",
                    "value": "cobra"
                },
                "references": {
                    "sentences": [
                        "Figure 3: Carbon Black console crossprocs and modloads of"
                    ],
                    "titles": [
                        "Execution and persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xbf5de90>",
                            "type": "Threat",
                            "value": "cobra"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    }
                ]
            }
        ]
    },
    "ttps": {
        "TTP": [
            {
                "token": {
                    "id": "<TTP_0x4ac053a1>",
                    "type": "TTP",
                    "value": "ta0001"
                },
                "references": {
                    "sentences": [
                        "Initial access"
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser",
                        "Initial access"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<TTP_0x4ac053a1>",
                            "type": "TTP",
                            "value": "ta0001"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<TTP_0x82bb17ed>",
                    "type": "TTP",
                    "value": "ta0002"
                },
                "references": {
                    "sentences": [
                        "Execution and persistence"
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser",
                        "Execution and persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x44126220>",
                            "type": "File",
                            "value": "cs_installer.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xf4c4d742>",
                            "type": "File",
                            "value": "explorer.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xdab49c2b>",
                            "type": "Path",
                            "value": "c:\\drive and that initiate a cross-process handle into a process that is on the c:\\drive"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xbf5de90>",
                            "type": "Threat",
                            "value": "cobra"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xccdc0023>",
                            "type": "File",
                            "value": "schtasks.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    }
                ]
            }
        ]
    },
    "meanings": {
        "Category": [
            {
                "token": {
                    "id": "<CATEGORY_0xb68aa214>",
                    "type": "Category",
                    "value": "rat"
                },
                "references": {
                    "sentences": [
                        "Note: As is the case with PowerShell, there are many legitimate uses for encoding shell commands. Some tuning may be required, depending on your environment.",
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found.",
                        "Detection opportunity 4: Redirected Base64 encoded commands into a shell process",
                        "Detection opportunity 3: Shell process spawning process loading a Chrome extension within the command line"
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser",
                        "Detection opportunity 4: Redirected Base64 encoded commands into a shell process",
                        "macOS Variation",
                        "Detection opportunity 3: Shell process spawning process loading a Chrome extension within the command line"
                    ]
                }
            },
            {
                "token": {
                    "id": "<CATEGORY_0xf1a480bb>",
                    "type": "Category",
                    "value": "malware"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found.",
                        "Figure 2: VirusTotal analysis on files dropped by malicious ISO",
                        "ChromeLoader is a pervasive and persistent browser hijacker that modifies its victims browser settings and redirects user traffic to advertisement websites. This malware is introduced via an ISO file that baits users into executing it by posing as a cracked video game or pirated movie or TV show. It eventually manifests as a browser extension.",
                        "The macOS variation has the same initial access technique as the Windows variant, namely that it uses baited social media posts with QR codes or links that direct users to malicious pay-per-install download sites. Instead of originating as an ISO, the macOS variation originates in an Apple Disk Image (DMG) file format. And unlike the Windows variation, the DMG file contains an installer script that drops payloads for either Chrome or Safari, not a portable executable file. When executed by the end user, the installer script then initiates cURL to retrieve a ZIP file containing the malicious browser extension and unzips it within the private/var/tmp directory, finally executing Chrome with command-line options to load the malicious extension.",
                        "Like most suspicious browser extensions, ChromeLoader is a relatively benign threat that hijacks user search queries and redirects traffic to an advertising site. However, ChromeLoader uses PowerShell to inject itself into the browser and add a malicious extension to it, a technique we dont see very often (and one that often goes undetected by other security tools). If applied to a higher-impact threatsuch as a credential harvester or spywarethis PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a users browser sessions.",
                        "This pseudo detection logic looks for the execution of encoded PowerShell commands. Not all encoded PowerShell is malicious, but encoded commands are worth keeping an eye on.",
                        "Once loaded in Chrome, the malicious extension can execute its true objective: redirecting victim search results through malvertising domains and redirecting away from the Chrome extensions page if the user attempts to remove the extension.",
                        "Figure 7: Decoded Bash command loading malicious extension into Chrome"
                    ],
                    "titles": [
                        "macOS Variation",
                        "ChromeLoader: a pushy malvertiser",
                        "Initial access",
                        "Execution and persistence",
                        "Detection opportunity 1: PowerShell containing a shortened version of the encodedCommand flag in its command line"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<TTP_0x4ac053a1>",
                            "type": "TTP",
                            "value": "ta0001"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    }
                ]
            }
        ],
        "Industry": [
            {
                "token": {
                    "id": "<INDUSTRY_0xf60084af>",
                    "type": "Industry",
                    "value": "media"
                },
                "references": {
                    "sentences": [
                        "ChromeLoader is a pervasive and persistent browser hijacker that modifies its victims browser settings and redirects user traffic to advertisement websites. This malware is introduced via an ISO file that baits users into executing it by posing as a cracked video game or pirated movie or TV show. It eventually manifests as a browser extension."
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser"
                    ]
                }
            }
        ]
    },
    "iocs": {
        "File": [
            {
                "token": {
                    "id": "<FILE_0x69bcce9a>",
                    "type": "File",
                    "value": "chrome.exe"
                },
                "references": {
                    "sentences": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line",
                        "parent_process_name == powershell.exe<crlf>&&<crlf>process_name == chrome.exe<crlf>&&<crlf>command_line_includes (AppData\\Local,load-extension)"
                    ],
                    "titles": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line",
                        "ChromeLoader: a pushy malvertiser"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x69bcce9a>",
                            "type": "File",
                            "value": "chrome.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x661dcf35>",
                            "type": "UnknownWord",
                            "value": "load-extension"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x69bcce9a>",
                            "type": "File",
                            "value": "chrome.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x456f9acb>",
                            "type": "UnknownWord",
                            "value": "process_name"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x69bcce9a>",
                            "type": "File",
                            "value": "chrome.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x75f9c343>",
                            "type": "UnknownWord",
                            "value": "spawning"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x44126220>",
                    "type": "File",
                    "value": "cs_installer.exe"
                },
                "references": {
                    "sentences": [
                        "Executing CS_Installer.exe creates persistence through a scheduled task using the Service Host Process (svchost.exe). Notably, ChromeLoader does not call the Windows Task Scheduler (schtasks.exe) to add this scheduled task, as one might expect. Instead, we saw the installer executable load the Task Scheduler COM API, along with a cross-process injection into svchost.exe (which is used to launch ChromeLoaders scheduled task)."
                    ],
                    "titles": [
                        "Execution and persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x44126220>",
                            "type": "File",
                            "value": "cs_installer.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x418c22ac>",
                    "type": "File",
                    "value": "svchost.exe"
                },
                "references": {
                    "sentences": [
                        "Figure 3 depicts the cross-process injection into svchost.exe. Cross-process injection is frequently used by legitimate applications but may be suspicious if the originating process is located on a virtual drive (like those that youd expect an ISO file to mount on). Its a good idea to keep an eye out for processes executing from file paths that dont reference the default C:\\drive and that initiate a cross-process handle into a process that is on the C:\\drive. This will not only offer visibility into ChromeLoader activity, but also into the many worms that originate from removable drives and inject into C:\\drive processes, like explorer.exe, to propagate on a victims machine.",
                        "Executing CS_Installer.exe creates persistence through a scheduled task using the Service Host Process (svchost.exe). Notably, ChromeLoader does not call the Windows Task Scheduler (schtasks.exe) to add this scheduled task, as one might expect. Instead, we saw the installer executable load the Task Scheduler COM API, along with a cross-process injection into svchost.exe (which is used to launch ChromeLoaders scheduled task)."
                    ],
                    "titles": [
                        "Execution and persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x2ca70cc6>",
                            "type": "UnknownWord",
                            "value": "depicts"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x6baa4186>",
                            "type": "UnknownWord",
                            "value": "cross-process"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xee00c9d8>",
                            "type": "UnknownWord",
                            "value": "chromeloaders"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xccdc0023>",
                    "type": "File",
                    "value": "schtasks.exe"
                },
                "references": {
                    "sentences": [
                        "Executing CS_Installer.exe creates persistence through a scheduled task using the Service Host Process (svchost.exe). Notably, ChromeLoader does not call the Windows Task Scheduler (schtasks.exe) to add this scheduled task, as one might expect. Instead, we saw the installer executable load the Task Scheduler COM API, along with a cross-process injection into svchost.exe (which is used to launch ChromeLoaders scheduled task)."
                    ],
                    "titles": [
                        "Execution and persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xccdc0023>",
                            "type": "File",
                            "value": "schtasks.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa8145cfc>",
                            "type": "UnknownWord",
                            "value": "notably"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xccdc0023>",
                            "type": "File",
                            "value": "schtasks.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcef289dd>",
                            "type": "UnknownWord",
                            "value": "chromeloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xccdc0023>",
                            "type": "File",
                            "value": "schtasks.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xf4c4d742>",
                    "type": "File",
                    "value": "explorer.exe"
                },
                "references": {
                    "sentences": [
                        "Figure 3 depicts the cross-process injection into svchost.exe. Cross-process injection is frequently used by legitimate applications but may be suspicious if the originating process is located on a virtual drive (like those that youd expect an ISO file to mount on). Its a good idea to keep an eye out for processes executing from file paths that dont reference the default C:\\drive and that initiate a cross-process handle into a process that is on the C:\\drive. This will not only offer visibility into ChromeLoader activity, but also into the many worms that originate from removable drives and inject into C:\\drive processes, like explorer.exe, to propagate on a victims machine."
                    ],
                    "titles": [
                        "Execution and persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xf4c4d742>",
                            "type": "File",
                            "value": "explorer.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcef289dd>",
                            "type": "UnknownWord",
                            "value": "chromeloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xf4c4d742>",
                            "type": "File",
                            "value": "explorer.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x4178cab0>",
                    "type": "File",
                    "value": "cmd.exe"
                },
                "references": {
                    "sentences": [
                        "After the cross-process injection is complete, ChromeLoaders scheduled task will execute through svchost, calling the Command Interpreter (cmd.exe), which executes a Base64-encoded PowerShell command containing multiple declared variables. ChromeLoader uses the shortened -encodedcommand flag to encode its PowerShell command:"
                    ],
                    "titles": [
                        "Execution and persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xfb9dfeb5>",
                            "type": "UnknownWord",
                            "value": "svchost"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x6baa4186>",
                            "type": "UnknownWord",
                            "value": "cross-process"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xee00c9d8>",
                            "type": "UnknownWord",
                            "value": "chromeloaders"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xc01d0f1>",
                    "type": "File",
                    "value": "powershell.exe"
                },
                "references": {
                    "sentences": [
                        "parent_process_name == powershell.exe<crlf>&&<crlf>process_name == chrome.exe<crlf>&&<crlf>command_line_includes (AppData\\Local,load-extension)",
                        "process_name == powershell.exe<crlf>&&<crlf>command_line_includes (-e, -en, -enc, [going on sequentially until the full flag, -encodedcommand])"
                    ],
                    "titles": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line",
                        "Detection opportunity 1: PowerShell containing a shortened version of the encodedCommand flag in its command line"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc01d0f1>",
                            "type": "File",
                            "value": "powershell.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x3bc09bec>",
                            "type": "UnknownWord",
                            "value": "parent_process_name"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc01d0f1>",
                            "type": "File",
                            "value": "powershell.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x456f9acb>",
                            "type": "UnknownWord",
                            "value": "process_name"
                        }
                    }
                ]
            }
        ],
        "Path": [
            {
                "token": {
                    "id": "<PATH_0xdab49c2b>",
                    "type": "Path",
                    "value": "c:\\drive and that initiate a cross-process handle into a process that is on the c:\\drive"
                },
                "references": {
                    "sentences": [
                        "Figure 3 depicts the cross-process injection into svchost.exe. Cross-process injection is frequently used by legitimate applications but may be suspicious if the originating process is located on a virtual drive (like those that youd expect an ISO file to mount on). Its a good idea to keep an eye out for processes executing from file paths that dont reference the default C:\\drive and that initiate a cross-process handle into a process that is on the C:\\drive. This will not only offer visibility into ChromeLoader activity, but also into the many worms that originate from removable drives and inject into C:\\drive processes, like explorer.exe, to propagate on a victims machine."
                    ],
                    "titles": [
                        "Execution and persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xdab49c2b>",
                            "type": "Path",
                            "value": "c:\\drive and that initiate a cross-process handle into a process that is on the c:\\drive"
                        },
                        "relation": "use_ttp",
                        "dst": {
                            "id": "<TTP_0x82bb17ed>",
                            "type": "TTP",
                            "value": "ta0002"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xdab49c2b>",
                            "type": "Path",
                            "value": "c:\\drive and that initiate a cross-process handle into a process that is on the c:\\drive"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x137b5c42>",
                            "type": "UnknownWord",
                            "value": "eye"
                        }
                    }
                ]
            }
        ]
    },
    "unknownwords": {
        "UnknownWord": [
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcef289dd>",
                    "type": "UnknownWord",
                    "value": "chromeloader"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found.",
                        "Once downloaded and executed, the .ISO file is extracted and mounted as a drive on the victims machine. Within this ISO is an executable used to install ChromeLoader, along with what appears to be a .NET wrapper for the Windows Task Scheduler. This is how ChromeLoader maintains its persistence on the victims machine later in the intrusion chain.",
                        "After the cross-process injection is complete, ChromeLoaders scheduled task will execute through svchost, calling the Command Interpreter (cmd.exe), which executes a Base64-encoded PowerShell command containing multiple declared variables. ChromeLoader uses the shortened -encodedcommand flag to encode its PowerShell command:",
                        "Editors note: Weve been researching this threat since early February. In recent days, weve observed what appears to be a resurgence in ChromeLoader activity. As a result, this research is based on analysis of threats spanning almost five months. That said, the detection guidance in this report provides defense-in-depth against ChromeLoader and a wide array of other threats.",
                        "Choziosi Loader: The folks at G-Data wrote a great article on a threat they call Choziosi Loader that validates a lot of our own ChromeLoader findings.",
                        "In this article, we share important elements of the ChromeLoader infection chain and security guidance that you can apply to detect and hunt for ChromeLoader activity in your environment. While some of the information in this blog overlaps with existing research published by G-Data and Colin Cowie, were sharing new insights and guidance that security teams can use to develop behavioral analytics to detect ChromeLoader.",
                        "ChromeLoader might seem like a run-of-the-mill browser hijacker, but its peculiar use of PowerShell could spell deeper trouble.",
                        "To maintain persistence, the macOS variation of ChromeLoader will append a preference (plist) file to the /Library/LaunchAgents directory. This ensures that every time a user logs into a graphical session, ChromeLoaders Bash script can continually run. Once installed, ChromeLoader performs the same activity as it does on Windows machines: redirecting web traffic through advertising sites.",
                        "ChromeLoader then loads its extension into Chrome by using PowerShell to spawn Chrome with the --load-extension flag and references the file path of the downloaded extension.",
                        "Figure 8: Bash script downloading and decompressing the ChromeLoader browser extension. Image courtesy of Colin Cowie.",
                        "Like most suspicious browser extensions, ChromeLoader is a relatively benign threat that hijacks user search queries and redirects traffic to an advertising site. However, ChromeLoader uses PowerShell to inject itself into the browser and add a malicious extension to it, a technique we dont see very often (and one that often goes undetected by other security tools). If applied to a higher-impact threatsuch as a credential harvester or spywarethis PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a users browser sessions.",
                        "ChromeLoader is delivered by an ISO file, typically masquerading as a torrent or cracked video game. It appears to spread through pay-per-install sites and social media platforms such as Twitter.",
                        "Figure 3 depicts the cross-process injection into svchost.exe. Cross-process injection is frequently used by legitimate applications but may be suspicious if the originating process is located on a virtual drive (like those that youd expect an ISO file to mount on). Its a good idea to keep an eye out for processes executing from file paths that dont reference the default C:\\drive and that initiate a cross-process handle into a process that is on the C:\\drive. This will not only offer visibility into ChromeLoader activity, but also into the many worms that originate from removable drives and inject into C:\\drive processes, like explorer.exe, to propagate on a victims machine.",
                        "In this command, PowerShell checks if the ChromeLoader extension is installed. If the specific file path is not found, it will pull down an archive file from a remote location using wget and load the contents as a Chrome extension. Once the extension is found, this PowerShell command will silently remove the ChromeLoader scheduled task using the Unregister-ScheduledTask function.",
                        "Executing CS_Installer.exe creates persistence through a scheduled task using the Service Host Process (svchost.exe). Notably, ChromeLoader does not call the Windows Task Scheduler (schtasks.exe) to add this scheduled task, as one might expect. Instead, we saw the installer executable load the Task Scheduler COM API, along with a cross-process injection into svchost.exe (which is used to launch ChromeLoaders scheduled task).",
                        "We first encountered this threat after detecting encoded PowerShell commands referencing a scheduled task called ChromeLoaderand only later learned that we were catching ChromeLoader in the middle stage of its deployment.",
                        "ChromeLoader is a pervasive and persistent browser hijacker that modifies its victims browser settings and redirects user traffic to advertisement websites. This malware is introduced via an ISO file that baits users into executing it by posing as a cracked video game or pirated movie or TV show. It eventually manifests as a browser extension.",
                        "This analytic looks for sh or bash scripts running in macOS environments with command lines associated with the macOS variant of ChromeLoader.",
                        "We hope this blog helps you improve your defense-in-depth against ChromeLoader specificallybut also for any variety of other threats that leverage suspicious ISO/DMG files and PowerShell/Bash execution. As always, each environment is different and certain administrative or user workflows may trigger your new detection analytics. Please be sure to tune accordingly. Happy hunting!",
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xf4c4d742>",
                            "type": "File",
                            "value": "explorer.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcef289dd>",
                            "type": "UnknownWord",
                            "value": "chromeloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xccdc0023>",
                            "type": "File",
                            "value": "schtasks.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcef289dd>",
                            "type": "UnknownWord",
                            "value": "chromeloader"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc30b009>",
                    "type": "UnknownWord",
                    "value": "pushy"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5c73d869>",
                    "type": "UnknownWord",
                    "value": "malvertiser"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "ChromeLoader: a pushy malvertiser"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd6b06b74>",
                    "type": "UnknownWord",
                    "value": "run-of-the-mill"
                },
                "references": {
                    "sentences": [
                        "ChromeLoader might seem like a run-of-the-mill browser hijacker, but its peculiar use of PowerShell could spell deeper trouble."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x50634342>",
                    "type": "UnknownWord",
                    "value": "hijacker"
                },
                "references": {
                    "sentences": [
                        "ChromeLoader might seem like a run-of-the-mill browser hijacker, but its peculiar use of PowerShell could spell deeper trouble.",
                        "ChromeLoader is a pervasive and persistent browser hijacker that modifies its victims browser settings and redirects user traffic to advertisement websites. This malware is introduced via an ISO file that baits users into executing it by posing as a cracked video game or pirated movie or TV show. It eventually manifests as a browser extension."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x198b2048>",
                    "type": "UnknownWord",
                    "value": "peculiar"
                },
                "references": {
                    "sentences": [
                        "ChromeLoader might seem like a run-of-the-mill browser hijacker, but its peculiar use of PowerShell could spell deeper trouble."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x818aa6b9>",
                    "type": "UnknownWord",
                    "value": "spell"
                },
                "references": {
                    "sentences": [
                        "ChromeLoader might seem like a run-of-the-mill browser hijacker, but its peculiar use of PowerShell could spell deeper trouble."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5798489b>",
                    "type": "UnknownWord",
                    "value": "macos"
                },
                "references": {
                    "sentences": [
                        "macOS Variation"
                    ],
                    "titles": [
                        "macOS Variation"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x71f964d3>",
                    "type": "UnknownWord",
                    "value": "encodedcommand"
                },
                "references": {
                    "sentences": [
                        "Detection opportunity 1: PowerShell containing a shortened version of the encodedCommand flag in its command line",
                        "Note: Many applications will legitimately encode PowerShell and make use of these shortened flags. Some tuning may be required, depending on your environment. To refine this detection analytic, consider looking for multiple variables in the decoded PowerShell block paired with the use of a shortened encodedCommand flag stated above. Variables are declared in PowerShell using $."
                    ],
                    "titles": [
                        "Detection opportunity 1: PowerShell containing a shortened version of the encodedCommand flag in its command line"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x75f9c343>",
                    "type": "UnknownWord",
                    "value": "spawning"
                },
                "references": {
                    "sentences": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line",
                        "Figure 6: PowerShell spawning Chrome",
                        "The detection analytic looks for instances of the Chrome browser executable spawning from PowerShell with a corresponding command line that includes appdata\\local as a parameter.",
                        "Detection opportunity 3: Shell process spawning process loading a Chrome extension within the command line"
                    ],
                    "titles": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line",
                        "Detection opportunity 3: Shell process spawning process loading a Chrome extension within the command line"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x69bcce9a>",
                            "type": "File",
                            "value": "chrome.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x75f9c343>",
                            "type": "UnknownWord",
                            "value": "spawning"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x661dcf35>",
                    "type": "UnknownWord",
                    "value": "load-extension"
                },
                "references": {
                    "sentences": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line",
                        "parent_process_equals_any (sh || bash)<crlf>&&<crlf>process_name_is_osx?<crlf>&&<crlf>command_line_includes (/tmp/ || load-extension|| chrome)",
                        "parent_process_name == powershell.exe<crlf>&&<crlf>process_name == chrome.exe<crlf>&&<crlf>command_line_includes (AppData\\Local,load-extension)"
                    ],
                    "titles": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x69bcce9a>",
                            "type": "File",
                            "value": "chrome.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x661dcf35>",
                            "type": "UnknownWord",
                            "value": "load-extension"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x76319698>",
                    "type": "UnknownWord",
                    "value": "goot"
                },
                "references": {
                    "sentences": [
                        "The Goot cause: Detecting Gootloader and its follow-on activity"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x20ca7fbe>",
                    "type": "UnknownWord",
                    "value": "marshmallows"
                },
                "references": {
                    "sentences": [
                        "Marshmallows & Kerberoasting"
                    ],
                    "titles": [
                        "Marshmallows & Kerberoasting"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xada99ded>",
                    "type": "UnknownWord",
                    "value": "prefer"
                },
                "references": {
                    "sentences": [
                        "All 2021 Threat Detection Report content is fully available through this website. If you prefer to download a PDF, just fill out this form and let us know what email to send it to."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbf3891e1>",
                    "type": "UnknownWord",
                    "value": "inbox"
                },
                "references": {
                    "sentences": [
                        "Check your inbox, the 2021 Threat Detection Report is headed your way."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc4f35222>",
                    "type": "UnknownWord",
                    "value": "headed"
                },
                "references": {
                    "sentences": [
                        "Check your inbox, the 2021 Threat Detection Report is headed your way."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3b60b999>",
                    "type": "UnknownWord",
                    "value": "navigate"
                },
                "references": {
                    "sentences": [
                        "This website uses cookies to improve your experience while you navigate through the website. Out of these cookies, the cookies that are categorized as necessary are stored on your browser as they are essential for the working of basic functionalities..."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2f2d15a8>",
                    "type": "UnknownWord",
                    "value": "absolutely"
                },
                "references": {
                    "sentences": [
                        "Necessary Always Enabled Necessary cookies are absolutely essential for the website to function properly. This category only includes cookies that ensures basic functionalities and security features of the website. These cookies do not store any personal information."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfcd6af19>",
                    "type": "UnknownWord",
                    "value": "non-necessary"
                },
                "references": {
                    "sentences": [
                        "Non-necessary Any cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xde0deaf9>",
                    "type": "UnknownWord",
                    "value": "termed"
                },
                "references": {
                    "sentences": [
                        "Non-necessary Any cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x684695>",
                    "type": "UnknownWord",
                    "value": "procure"
                },
                "references": {
                    "sentences": [
                        "Non-necessary Any cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x251a47d1>",
                    "type": "UnknownWord",
                    "value": "consent"
                },
                "references": {
                    "sentences": [
                        "Non-necessary Any cookies that may not be particularly necessary for the website to function and is used specifically to collect user personal data via analytics, ads, other embedded contents are termed as non-necessary cookies. It is mandatory to procure user consent prior to running these cookies on your website."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc579c877>",
                    "type": "UnknownWord",
                    "value": "pervasive"
                },
                "references": {
                    "sentences": [
                        "ChromeLoader is a pervasive and persistent browser hijacker that modifies its victims browser settings and redirects user traffic to advertisement websites. This malware is introduced via an ISO file that baits users into executing it by posing as a cracked video game or pirated movie or TV show. It eventually manifests as a browser extension."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x57de8b81>",
                    "type": "UnknownWord",
                    "value": "higher-impact"
                },
                "references": {
                    "sentences": [
                        "Like most suspicious browser extensions, ChromeLoader is a relatively benign threat that hijacks user search queries and redirects traffic to an advertising site. However, ChromeLoader uses PowerShell to inject itself into the browser and add a malicious extension to it, a technique we dont see very often (and one that often goes undetected by other security tools). If applied to a higher-impact threatsuch as a credential harvester or spywarethis PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a users browser sessions."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdb236c9>",
                    "type": "UnknownWord",
                    "value": "threatsuch"
                },
                "references": {
                    "sentences": [
                        "Like most suspicious browser extensions, ChromeLoader is a relatively benign threat that hijacks user search queries and redirects traffic to an advertising site. However, ChromeLoader uses PowerShell to inject itself into the browser and add a malicious extension to it, a technique we dont see very often (and one that often goes undetected by other security tools). If applied to a higher-impact threatsuch as a credential harvester or spywarethis PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a users browser sessions."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1fd269d>",
                    "type": "UnknownWord",
                    "value": "spywarethis"
                },
                "references": {
                    "sentences": [
                        "Like most suspicious browser extensions, ChromeLoader is a relatively benign threat that hijacks user search queries and redirects traffic to an advertising site. However, ChromeLoader uses PowerShell to inject itself into the browser and add a malicious extension to it, a technique we dont see very often (and one that often goes undetected by other security tools). If applied to a higher-impact threatsuch as a credential harvester or spywarethis PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a users browser sessions."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb265bea9>",
                    "type": "UnknownWord",
                    "value": "foothold"
                },
                "references": {
                    "sentences": [
                        "Like most suspicious browser extensions, ChromeLoader is a relatively benign threat that hijacks user search queries and redirects traffic to an advertising site. However, ChromeLoader uses PowerShell to inject itself into the browser and add a malicious extension to it, a technique we dont see very often (and one that often goes undetected by other security tools). If applied to a higher-impact threatsuch as a credential harvester or spywarethis PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a users browser sessions."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdd1cf434>",
                    "type": "UnknownWord",
                    "value": "overtly"
                },
                "references": {
                    "sentences": [
                        "Like most suspicious browser extensions, ChromeLoader is a relatively benign threat that hijacks user search queries and redirects traffic to an advertising site. However, ChromeLoader uses PowerShell to inject itself into the browser and add a malicious extension to it, a technique we dont see very often (and one that often goes undetected by other security tools). If applied to a higher-impact threatsuch as a credential harvester or spywarethis PowerShell behavior could help malware gain an initial foothold and go undetected before performing more overtly malicious activity, like exfiltrating data from a users browser sessions."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x24b3ac00>",
                    "type": "UnknownWord",
                    "value": "chromeloaderand"
                },
                "references": {
                    "sentences": [
                        "We first encountered this threat after detecting encoded PowerShell commands referencing a scheduled task called ChromeLoaderand only later learned that we were catching ChromeLoader in the middle stage of its deployment."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb239f8f6>",
                    "type": "UnknownWord",
                    "value": "warrant"
                },
                "references": {
                    "sentences": [
                        "In the process of writing this blog, we found two related articles that warrant a mentionand that are definitely worth reading:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x806a83b3>",
                    "type": "UnknownWord",
                    "value": "mentionand"
                },
                "references": {
                    "sentences": [
                        "In the process of writing this blog, we found two related articles that warrant a mentionand that are definitely worth reading:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x623375ab>",
                    "type": "UnknownWord",
                    "value": "definitely"
                },
                "references": {
                    "sentences": [
                        "In the process of writing this blog, we found two related articles that warrant a mentionand that are definitely worth reading:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf14db318>",
                    "type": "UnknownWord",
                    "value": "choziosi"
                },
                "references": {
                    "sentences": [
                        "Choziosi Loader: The folks at G-Data wrote a great article on a threat they call Choziosi Loader that validates a lot of our own ChromeLoader findings.",
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8ffa0d66>",
                    "type": "UnknownWord",
                    "value": "folks"
                },
                "references": {
                    "sentences": [
                        "Choziosi Loader: The folks at G-Data wrote a great article on a threat they call Choziosi Loader that validates a lot of our own ChromeLoader findings."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf0af593c>",
                    "type": "UnknownWord",
                    "value": "g-data"
                },
                "references": {
                    "sentences": [
                        "In this article, we share important elements of the ChromeLoader infection chain and security guidance that you can apply to detect and hunt for ChromeLoader activity in your environment. While some of the information in this blog overlaps with existing research published by G-Data and Colin Cowie, were sharing new insights and guidance that security teams can use to develop behavioral analytics to detect ChromeLoader.",
                        "Choziosi Loader: The folks at G-Data wrote a great article on a threat they call Choziosi Loader that validates a lot of our own ChromeLoader findings."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x857a0595>",
                    "type": "UnknownWord",
                    "value": "wrote"
                },
                "references": {
                    "sentences": [
                        "Choziosi Loader: The folks at G-Data wrote a great article on a threat they call Choziosi Loader that validates a lot of our own ChromeLoader findings."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2bed6bdb>",
                    "type": "UnknownWord",
                    "value": "g-datas"
                },
                "references": {
                    "sentences": [
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9dc385f5>",
                    "type": "UnknownWord",
                    "value": "convention"
                },
                "references": {
                    "sentences": [
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb0d4eb9b>",
                    "type": "UnknownWord",
                    "value": "excellent"
                },
                "references": {
                    "sentences": [
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa90cf736>",
                    "type": "UnknownWord",
                    "value": "write-up"
                },
                "references": {
                    "sentences": [
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6cea1c3b>",
                    "type": "UnknownWord",
                    "value": "colin"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found.",
                        "In this article, we share important elements of the ChromeLoader infection chain and security guidance that you can apply to detect and hunt for ChromeLoader activity in your environment. While some of the information in this blog overlaps with existing research published by G-Data and Colin Cowie, were sharing new insights and guidance that security teams can use to develop behavioral analytics to detect ChromeLoader.",
                        "Figure 8: Bash script downloading and decompressing the ChromeLoader browser extension. Image courtesy of Colin Cowie.",
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x71c08c5d>",
                    "type": "UnknownWord",
                    "value": "cowie"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found.",
                        "In this article, we share important elements of the ChromeLoader infection chain and security guidance that you can apply to detect and hunt for ChromeLoader activity in your environment. While some of the information in this blog overlaps with existing research published by G-Data and Colin Cowie, were sharing new insights and guidance that security teams can use to develop behavioral analytics to detect ChromeLoader.",
                        "Figure 8: Bash script downloading and decompressing the ChromeLoader browser extension. Image courtesy of Colin Cowie.",
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xac3a0347>",
                    "type": "UnknownWord",
                    "value": "pay-per-install"
                },
                "references": {
                    "sentences": [
                        "ChromeLoader is delivered by an ISO file, typically masquerading as a torrent or cracked video game. It appears to spread through pay-per-install sites and social media platforms such as Twitter.",
                        "The macOS variation has the same initial access technique as the Windows variant, namely that it uses baited social media posts with QR codes or links that direct users to malicious pay-per-install download sites. Instead of originating as an ISO, the macOS variation originates in an Apple Disk Image (DMG) file format. And unlike the Windows variation, the DMG file contains an installer script that drops payloads for either Chrome or Safari, not a portable executable file. When executed by the end user, the installer script then initiates cURL to retrieve a ZIP file containing the malicious browser extension and unzips it within the private/var/tmp directory, finally executing Chrome with command-line options to load the malicious extension."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4acd5885>",
                    "type": "UnknownWord",
                    "value": "redacted"
                },
                "references": {
                    "sentences": [
                        "Figure 1: Redacted screenshot of a Twitter post with scannable QR code leading to ChromeLoaders initial download site"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8a66d728>",
                    "type": "UnknownWord",
                    "value": "scannable"
                },
                "references": {
                    "sentences": [
                        "Figure 1: Redacted screenshot of a Twitter post with scannable QR code leading to ChromeLoaders initial download site"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xee00c9d8>",
                    "type": "UnknownWord",
                    "value": "chromeloaders"
                },
                "references": {
                    "sentences": [
                        "To maintain persistence, the macOS variation of ChromeLoader will append a preference (plist) file to the /Library/LaunchAgents directory. This ensures that every time a user logs into a graphical session, ChromeLoaders Bash script can continually run. Once installed, ChromeLoader performs the same activity as it does on Windows machines: redirecting web traffic through advertising sites.",
                        "Figure 1: Redacted screenshot of a Twitter post with scannable QR code leading to ChromeLoaders initial download site",
                        "After the cross-process injection is complete, ChromeLoaders scheduled task will execute through svchost, calling the Command Interpreter (cmd.exe), which executes a Base64-encoded PowerShell command containing multiple declared variables. ChromeLoader uses the shortened -encodedcommand flag to encode its PowerShell command:",
                        "Figure 4: Encoded PowerShell content spawned by ChromeLoaders scheduled task",
                        "Executing CS_Installer.exe creates persistence through a scheduled task using the Service Host Process (svchost.exe). Notably, ChromeLoader does not call the Windows Task Scheduler (schtasks.exe) to add this scheduled task, as one might expect. Instead, we saw the installer executable load the Task Scheduler COM API, along with a cross-process injection into svchost.exe (which is used to launch ChromeLoaders scheduled task)."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xee00c9d8>",
                            "type": "UnknownWord",
                            "value": "chromeloaders"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xee00c9d8>",
                            "type": "UnknownWord",
                            "value": "chromeloaders"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa8145cfc>",
                    "type": "UnknownWord",
                    "value": "notably"
                },
                "references": {
                    "sentences": [
                        "Executing CS_Installer.exe creates persistence through a scheduled task using the Service Host Process (svchost.exe). Notably, ChromeLoader does not call the Windows Task Scheduler (schtasks.exe) to add this scheduled task, as one might expect. Instead, we saw the installer executable load the Task Scheduler COM API, along with a cross-process injection into svchost.exe (which is used to launch ChromeLoaders scheduled task)."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xccdc0023>",
                            "type": "File",
                            "value": "schtasks.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa8145cfc>",
                            "type": "UnknownWord",
                            "value": "notably"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6baa4186>",
                    "type": "UnknownWord",
                    "value": "cross-process"
                },
                "references": {
                    "sentences": [
                        "Figure 3 depicts the cross-process injection into svchost.exe. Cross-process injection is frequently used by legitimate applications but may be suspicious if the originating process is located on a virtual drive (like those that youd expect an ISO file to mount on). Its a good idea to keep an eye out for processes executing from file paths that dont reference the default C:\\drive and that initiate a cross-process handle into a process that is on the C:\\drive. This will not only offer visibility into ChromeLoader activity, but also into the many worms that originate from removable drives and inject into C:\\drive processes, like explorer.exe, to propagate on a victims machine.",
                        "After the cross-process injection is complete, ChromeLoaders scheduled task will execute through svchost, calling the Command Interpreter (cmd.exe), which executes a Base64-encoded PowerShell command containing multiple declared variables. ChromeLoader uses the shortened -encodedcommand flag to encode its PowerShell command:",
                        "Executing CS_Installer.exe creates persistence through a scheduled task using the Service Host Process (svchost.exe). Notably, ChromeLoader does not call the Windows Task Scheduler (schtasks.exe) to add this scheduled task, as one might expect. Instead, we saw the installer executable load the Task Scheduler COM API, along with a cross-process injection into svchost.exe (which is used to launch ChromeLoaders scheduled task)."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x6baa4186>",
                            "type": "UnknownWord",
                            "value": "cross-process"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x6baa4186>",
                            "type": "UnknownWord",
                            "value": "cross-process"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4098da2e>",
                    "type": "UnknownWord",
                    "value": "black"
                },
                "references": {
                    "sentences": [
                        "Figure 3: Carbon Black console crossprocs and modloads of"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6eb98b39>",
                    "type": "UnknownWord",
                    "value": "crossprocs"
                },
                "references": {
                    "sentences": [
                        "Figure 3: Carbon Black console crossprocs and modloads of"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x88dc8284>",
                    "type": "UnknownWord",
                    "value": "modloads"
                },
                "references": {
                    "sentences": [
                        "Figure 3: Carbon Black console crossprocs and modloads of"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2ca70cc6>",
                    "type": "UnknownWord",
                    "value": "depicts"
                },
                "references": {
                    "sentences": [
                        "Figure 3 depicts the cross-process injection into svchost.exe. Cross-process injection is frequently used by legitimate applications but may be suspicious if the originating process is located on a virtual drive (like those that youd expect an ISO file to mount on). Its a good idea to keep an eye out for processes executing from file paths that dont reference the default C:\\drive and that initiate a cross-process handle into a process that is on the C:\\drive. This will not only offer visibility into ChromeLoader activity, but also into the many worms that originate from removable drives and inject into C:\\drive processes, like explorer.exe, to propagate on a victims machine."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x2ca70cc6>",
                            "type": "UnknownWord",
                            "value": "depicts"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7ef8320e>",
                    "type": "UnknownWord",
                    "value": "youd"
                },
                "references": {
                    "sentences": [
                        "Figure 3 depicts the cross-process injection into svchost.exe. Cross-process injection is frequently used by legitimate applications but may be suspicious if the originating process is located on a virtual drive (like those that youd expect an ISO file to mount on). Its a good idea to keep an eye out for processes executing from file paths that dont reference the default C:\\drive and that initiate a cross-process handle into a process that is on the C:\\drive. This will not only offer visibility into ChromeLoader activity, but also into the many worms that originate from removable drives and inject into C:\\drive processes, like explorer.exe, to propagate on a victims machine."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x137b5c42>",
                    "type": "UnknownWord",
                    "value": "eye"
                },
                "references": {
                    "sentences": [
                        "This pseudo detection logic looks for the execution of encoded PowerShell commands. Not all encoded PowerShell is malicious, but encoded commands are worth keeping an eye on.",
                        "Figure 3 depicts the cross-process injection into svchost.exe. Cross-process injection is frequently used by legitimate applications but may be suspicious if the originating process is located on a virtual drive (like those that youd expect an ISO file to mount on). Its a good idea to keep an eye out for processes executing from file paths that dont reference the default C:\\drive and that initiate a cross-process handle into a process that is on the C:\\drive. This will not only offer visibility into ChromeLoader activity, but also into the many worms that originate from removable drives and inject into C:\\drive processes, like explorer.exe, to propagate on a victims machine."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xdab49c2b>",
                            "type": "Path",
                            "value": "c:\\drive and that initiate a cross-process handle into a process that is on the c:\\drive"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x137b5c42>",
                            "type": "UnknownWord",
                            "value": "eye"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfb9dfeb5>",
                    "type": "UnknownWord",
                    "value": "svchost"
                },
                "references": {
                    "sentences": [
                        "After the cross-process injection is complete, ChromeLoaders scheduled task will execute through svchost, calling the Command Interpreter (cmd.exe), which executes a Base64-encoded PowerShell command containing multiple declared variables. ChromeLoader uses the shortened -encodedcommand flag to encode its PowerShell command:"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xfb9dfeb5>",
                            "type": "UnknownWord",
                            "value": "svchost"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4a600f9d>",
                    "type": "UnknownWord",
                    "value": "-encodedcommand"
                },
                "references": {
                    "sentences": [
                        "process_name == powershell.exe<crlf>&&<crlf>command_line_includes (-e, -en, -enc, [going on sequentially until the full flag, -encodedcommand])",
                        "After the cross-process injection is complete, ChromeLoaders scheduled task will execute through svchost, calling the Command Interpreter (cmd.exe), which executes a Base64-encoded PowerShell command containing multiple declared variables. ChromeLoader uses the shortened -encodedcommand flag to encode its PowerShell command:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5d5f3c45>",
                    "type": "UnknownWord",
                    "value": "encode"
                },
                "references": {
                    "sentences": [
                        "After the cross-process injection is complete, ChromeLoaders scheduled task will execute through svchost, calling the Command Interpreter (cmd.exe), which executes a Base64-encoded PowerShell command containing multiple declared variables. ChromeLoader uses the shortened -encodedcommand flag to encode its PowerShell command:",
                        "Note: Many applications will legitimately encode PowerShell and make use of these shortened flags. Some tuning may be required, depending on your environment. To refine this detection analytic, consider looking for multiple variables in the decoded PowerShell block paired with the use of a shortened encodedCommand flag stated above. Variables are declared in PowerShell using $."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x759c635a>",
                    "type": "UnknownWord",
                    "value": "spawned"
                },
                "references": {
                    "sentences": [
                        "Figure 4: Encoded PowerShell content spawned by ChromeLoaders scheduled task"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xee6a034f>",
                    "type": "UnknownWord",
                    "value": "beautified"
                },
                "references": {
                    "sentences": [
                        "Once decoded and beautified, the command looks like this:",
                        "Figure 5: PowerShell CLI decoded and beautified by reddit user Russianh4ck3r"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x330d52f4>",
                    "type": "UnknownWord",
                    "value": "cli"
                },
                "references": {
                    "sentences": [
                        "Figure 5: PowerShell CLI decoded and beautified by reddit user Russianh4ck3r"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xebb1a327>",
                    "type": "UnknownWord",
                    "value": "russianh4ck3r"
                },
                "references": {
                    "sentences": [
                        "Figure 5: PowerShell CLI decoded and beautified by reddit user Russianh4ck3r"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x11e26b9d>",
                    "type": "UnknownWord",
                    "value": "silently"
                },
                "references": {
                    "sentences": [
                        "In this command, PowerShell checks if the ChromeLoader extension is installed. If the specific file path is not found, it will pull down an archive file from a remote location using wget and load the contents as a Chrome extension. Once the extension is found, this PowerShell command will silently remove the ChromeLoader scheduled task using the Unregister-ScheduledTask function."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xedafa70a>",
                    "type": "UnknownWord",
                    "value": "unregister-scheduledtask"
                },
                "references": {
                    "sentences": [
                        "In this command, PowerShell checks if the ChromeLoader extension is installed. If the specific file path is not found, it will pull down an archive file from a remote location using wget and load the contents as a Chrome extension. Once the extension is found, this PowerShell command will silently remove the ChromeLoader scheduled task using the Unregister-ScheduledTask function."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4b02d7c5>",
                    "type": "UnknownWord",
                    "value": "--load-extension"
                },
                "references": {
                    "sentences": [
                        "ChromeLoader then loads its extension into Chrome by using PowerShell to spawn Chrome with the --load-extension flag and references the file path of the downloaded extension."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1d843671>",
                    "type": "UnknownWord",
                    "value": "redirecting"
                },
                "references": {
                    "sentences": [
                        "To maintain persistence, the macOS variation of ChromeLoader will append a preference (plist) file to the /Library/LaunchAgents directory. This ensures that every time a user logs into a graphical session, ChromeLoaders Bash script can continually run. Once installed, ChromeLoader performs the same activity as it does on Windows machines: redirecting web traffic through advertising sites.",
                        "Once loaded in Chrome, the malicious extension can execute its true objective: redirecting victim search results through malvertising domains and redirecting away from the Chrome extensions page if the user attempts to remove the extension."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x31e2a5aa>",
                    "type": "UnknownWord",
                    "value": "safari web"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5a590993>",
                    "type": "UnknownWord",
                    "value": "colins"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3dc35675>",
                    "type": "UnknownWord",
                    "value": "retroactively"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5a350df3>",
                    "type": "UnknownWord",
                    "value": "constitute"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x987207f0>",
                    "type": "UnknownWord",
                    "value": "partial"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf172c998>",
                    "type": "UnknownWord",
                    "value": "bourne"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb4b3def4>",
                    "type": "UnknownWord",
                    "value": "bourne-again"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6646d5d>",
                    "type": "UnknownWord",
                    "value": "grep"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc9740a34>",
                    "type": "UnknownWord",
                    "value": "var"
                },
                "references": {
                    "sentences": [
                        "The macOS variation has the same initial access technique as the Windows variant, namely that it uses baited social media posts with QR codes or links that direct users to malicious pay-per-install download sites. Instead of originating as an ISO, the macOS variation originates in an Apple Disk Image (DMG) file format. And unlike the Windows variation, the DMG file contains an installer script that drops payloads for either Chrome or Safari, not a portable executable file. When executed by the end user, the installer script then initiates cURL to retrieve a ZIP file containing the malicious browser extension and unzips it within the private/var/tmp directory, finally executing Chrome with command-line options to load the malicious extension.",
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x24e61e30>",
                    "type": "UnknownWord",
                    "value": "baited"
                },
                "references": {
                    "sentences": [
                        "The macOS variation has the same initial access technique as the Windows variant, namely that it uses baited social media posts with QR codes or links that direct users to malicious pay-per-install download sites. Instead of originating as an ISO, the macOS variation originates in an Apple Disk Image (DMG) file format. And unlike the Windows variation, the DMG file contains an installer script that drops payloads for either Chrome or Safari, not a portable executable file. When executed by the end user, the installer script then initiates cURL to retrieve a ZIP file containing the malicious browser extension and unzips it within the private/var/tmp directory, finally executing Chrome with command-line options to load the malicious extension."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5e61c944>",
                    "type": "UnknownWord",
                    "value": "courtesy"
                },
                "references": {
                    "sentences": [
                        "Figure 8: Bash script downloading and decompressing the ChromeLoader browser extension. Image courtesy of Colin Cowie."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd26dbd0e>",
                    "type": "UnknownWord",
                    "value": "preference"
                },
                "references": {
                    "sentences": [
                        "To maintain persistence, the macOS variation of ChromeLoader will append a preference (plist) file to the /Library/LaunchAgents directory. This ensures that every time a user logs into a graphical session, ChromeLoaders Bash script can continually run. Once installed, ChromeLoader performs the same activity as it does on Windows machines: redirecting web traffic through advertising sites."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x118fce18>",
                    "type": "UnknownWord",
                    "value": "pseudo"
                },
                "references": {
                    "sentences": [
                        "This pseudo detection logic looks for the execution of encoded PowerShell commands. Not all encoded PowerShell is malicious, but encoded commands are worth keeping an eye on."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x456f9acb>",
                    "type": "UnknownWord",
                    "value": "process_name"
                },
                "references": {
                    "sentences": [
                        "parent_process_name == powershell.exe<crlf>&&<crlf>process_name == chrome.exe<crlf>&&<crlf>command_line_includes (AppData\\Local,load-extension)",
                        "process_name == powershell.exe<crlf>&&<crlf>command_line_includes (-e, -en, -enc, [going on sequentially until the full flag, -encodedcommand])"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x69bcce9a>",
                            "type": "File",
                            "value": "chrome.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x456f9acb>",
                            "type": "UnknownWord",
                            "value": "process_name"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc01d0f1>",
                            "type": "File",
                            "value": "powershell.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x456f9acb>",
                            "type": "UnknownWord",
                            "value": "process_name"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6abee104>",
                    "type": "UnknownWord",
                    "value": "command_line_includes"
                },
                "references": {
                    "sentences": [
                        "process_name == powershell.exe<crlf>&&<crlf>command_line_includes (-e, -en, -enc, [going on sequentially until the full flag, -encodedcommand])",
                        "parent_process_equals_any (sh || bash)<crlf>&&<crlf>process_name_is_osx?<crlf>&&<crlf>command_line_includes (/tmp/ || load-extension|| chrome)",
                        "parent_process_name == powershell.exe<crlf>&&<crlf>process_name == chrome.exe<crlf>&&<crlf>command_line_includes (AppData\\Local,load-extension)",
                        "command_line_includes (echo,base64)<crlf>&&<crlf>childproc_equals_any (sh,bash,zsh)"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xacc7c351>",
                    "type": "UnknownWord",
                    "value": "-e"
                },
                "references": {
                    "sentences": [
                        "process_name == powershell.exe<crlf>&&<crlf>command_line_includes (-e, -en, -enc, [going on sequentially until the full flag, -encodedcommand])"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf86da101>",
                    "type": "UnknownWord",
                    "value": "-en"
                },
                "references": {
                    "sentences": [
                        "process_name == powershell.exe<crlf>&&<crlf>command_line_includes (-e, -en, -enc, [going on sequentially until the full flag, -encodedcommand])"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3d70fd74>",
                    "type": "UnknownWord",
                    "value": "-enc"
                },
                "references": {
                    "sentences": [
                        "process_name == powershell.exe<crlf>&&<crlf>command_line_includes (-e, -en, -enc, [going on sequentially until the full flag, -encodedcommand])"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x263f1987>",
                    "type": "UnknownWord",
                    "value": "sequentially"
                },
                "references": {
                    "sentences": [
                        "process_name == powershell.exe<crlf>&&<crlf>command_line_includes (-e, -en, -enc, [going on sequentially until the full flag, -encodedcommand])"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbff23503>",
                    "type": "UnknownWord",
                    "value": "legitimately"
                },
                "references": {
                    "sentences": [
                        "Note: Many applications will legitimately encode PowerShell and make use of these shortened flags. Some tuning may be required, depending on your environment. To refine this detection analytic, consider looking for multiple variables in the decoded PowerShell block paired with the use of a shortened encodedCommand flag stated above. Variables are declared in PowerShell using $."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb90c163e>",
                    "type": "UnknownWord",
                    "value": "tuning"
                },
                "references": {
                    "sentences": [
                        "Note: As is the case with PowerShell, there are many legitimate uses for encoding shell commands. Some tuning may be required, depending on your environment.",
                        "Note: Many applications will legitimately encode PowerShell and make use of these shortened flags. Some tuning may be required, depending on your environment. To refine this detection analytic, consider looking for multiple variables in the decoded PowerShell block paired with the use of a shortened encodedCommand flag stated above. Variables are declared in PowerShell using $."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x798af7b6>",
                    "type": "UnknownWord",
                    "value": "refine"
                },
                "references": {
                    "sentences": [
                        "Note: Many applications will legitimately encode PowerShell and make use of these shortened flags. Some tuning may be required, depending on your environment. To refine this detection analytic, consider looking for multiple variables in the decoded PowerShell block paired with the use of a shortened encodedCommand flag stated above. Variables are declared in PowerShell using $."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa2a2a547>",
                    "type": "UnknownWord",
                    "value": "paired"
                },
                "references": {
                    "sentences": [
                        "Note: Many applications will legitimately encode PowerShell and make use of these shortened flags. Some tuning may be required, depending on your environment. To refine this detection analytic, consider looking for multiple variables in the decoded PowerShell block paired with the use of a shortened encodedCommand flag stated above. Variables are declared in PowerShell using $."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x976c8c51>",
                    "type": "UnknownWord",
                    "value": "decoded_command_line_includes"
                },
                "references": {
                    "sentences": [
                        "decoded_command_line_includes == $"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3bc09bec>",
                    "type": "UnknownWord",
                    "value": "parent_process_name"
                },
                "references": {
                    "sentences": [
                        "parent_process_name == powershell.exe<crlf>&&<crlf>process_name == chrome.exe<crlf>&&<crlf>command_line_includes (AppData\\Local,load-extension)"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc01d0f1>",
                            "type": "File",
                            "value": "powershell.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x3bc09bec>",
                            "type": "UnknownWord",
                            "value": "parent_process_name"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1113faa6>",
                    "type": "UnknownWord",
                    "value": "parent_process_equals_any"
                },
                "references": {
                    "sentences": [
                        "parent_process_equals_any (sh || bash)<crlf>&&<crlf>process_name_is_osx?<crlf>&&<crlf>command_line_includes (/tmp/ || load-extension|| chrome)"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc9f81943>",
                    "type": "UnknownWord",
                    "value": "process_name_is_osx"
                },
                "references": {
                    "sentences": [
                        "parent_process_equals_any (sh || bash)<crlf>&&<crlf>process_name_is_osx?<crlf>&&<crlf>command_line_includes (/tmp/ || load-extension|| chrome)"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xac3bfdb7>",
                    "type": "UnknownWord",
                    "value": "macos endpoints"
                },
                "references": {
                    "sentences": [
                        "Like the encoded PowerShell detection analytics idea above, this detector looks for the execution of encoded sh, bash, or zsh commands on macOS endpoints."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb19e2826>",
                    "type": "UnknownWord",
                    "value": "zsh"
                },
                "references": {
                    "sentences": [
                        "command_line_includes (echo,base64)<crlf>&&<crlf>childproc_equals_any (sh,bash,zsh)",
                        "Like the encoded PowerShell detection analytics idea above, this detector looks for the execution of encoded sh, bash, or zsh commands on macOS endpoints."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x556509e0>",
                    "type": "UnknownWord",
                    "value": "echo"
                },
                "references": {
                    "sentences": [
                        "command_line_includes (echo,base64)<crlf>&&<crlf>childproc_equals_any (sh,bash,zsh)"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb81ff1f8>",
                    "type": "UnknownWord",
                    "value": "childproc_equals_any"
                },
                "references": {
                    "sentences": [
                        "command_line_includes (echo,base64)<crlf>&&<crlf>childproc_equals_any (sh,bash,zsh)"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xde458833>",
                    "type": "UnknownWord",
                    "value": "specificallybut"
                },
                "references": {
                    "sentences": [
                        "We hope this blog helps you improve your defense-in-depth against ChromeLoader specificallybut also for any variety of other threats that leverage suspicious ISO/DMG files and PowerShell/Bash execution. As always, each environment is different and certain administrative or user workflows may trigger your new detection analytics. Please be sure to tune accordingly. Happy hunting!"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8fb2612e>",
                    "type": "UnknownWord",
                    "value": "tune"
                },
                "references": {
                    "sentences": [
                        "We hope this blog helps you improve your defense-in-depth against ChromeLoader specificallybut also for any variety of other threats that leverage suspicious ISO/DMG files and PowerShell/Bash execution. As always, each environment is different and certain administrative or user workflows may trigger your new detection analytics. Please be sure to tune accordingly. Happy hunting!"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7e560d97>",
                    "type": "UnknownWord",
                    "value": "accordingly"
                },
                "references": {
                    "sentences": [
                        "We hope this blog helps you improve your defense-in-depth against ChromeLoader specificallybut also for any variety of other threats that leverage suspicious ISO/DMG files and PowerShell/Bash execution. As always, each environment is different and certain administrative or user workflows may trigger your new detection analytics. Please be sure to tune accordingly. Happy hunting!"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x74348609>",
                    "type": "UnknownWord",
                    "value": "happy"
                },
                "references": {
                    "sentences": [
                        "We hope this blog helps you improve your defense-in-depth against ChromeLoader specificallybut also for any variety of other threats that leverage suspicious ISO/DMG files and PowerShell/Bash execution. As always, each environment is different and certain administrative or user workflows may trigger your new detection analytics. Please be sure to tune accordingly. Happy hunting!"
                    ],
                    "titles": []
                }
            }
        ]
    },
    "other_links": [],
    "info": {
        "potential_threats": {
            "<UNKNOWNWORD_0x71f964d3>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x71f964d3>",
                    "type": "UnknownWord",
                    "value": "encodedcommand"
                },
                "references": {
                    "sentences": [
                        "Detection opportunity 1: PowerShell containing a shortened version of the encodedCommand flag in its command line",
                        "Note: Many applications will legitimately encode PowerShell and make use of these shortened flags. Some tuning may be required, depending on your environment. To refine this detection analytic, consider looking for multiple variables in the decoded PowerShell block paired with the use of a shortened encodedCommand flag stated above. Variables are declared in PowerShell using $."
                    ],
                    "titles": [
                        "Detection opportunity 1: PowerShell containing a shortened version of the encodedCommand flag in its command line"
                    ]
                }
            },
            "<UNKNOWNWORD_0x661dcf35>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x661dcf35>",
                    "type": "UnknownWord",
                    "value": "load-extension"
                },
                "references": {
                    "sentences": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line",
                        "parent_process_equals_any (sh || bash)<crlf>&&<crlf>process_name_is_osx?<crlf>&&<crlf>command_line_includes (/tmp/ || load-extension|| chrome)",
                        "parent_process_name == powershell.exe<crlf>&&<crlf>process_name == chrome.exe<crlf>&&<crlf>command_line_includes (AppData\\Local,load-extension)"
                    ],
                    "titles": [
                        "Detection opportunity 2: PowerShell spawning chrome.exe containing load-extension and AppData\\Local within the command line"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x69bcce9a>",
                            "type": "File",
                            "value": "chrome.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x661dcf35>",
                            "type": "UnknownWord",
                            "value": "load-extension"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0x24b3ac00>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x24b3ac00>",
                    "type": "UnknownWord",
                    "value": "chromeloaderand"
                },
                "references": {
                    "sentences": [
                        "We first encountered this threat after detecting encoded PowerShell commands referencing a scheduled task called ChromeLoaderand only later learned that we were catching ChromeLoader in the middle stage of its deployment."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xf14db318>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xf14db318>",
                    "type": "UnknownWord",
                    "value": "choziosi"
                },
                "references": {
                    "sentences": [
                        "Choziosi Loader: The folks at G-Data wrote a great article on a threat they call Choziosi Loader that validates a lot of our own ChromeLoader findings.",
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xf0af593c>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xf0af593c>",
                    "type": "UnknownWord",
                    "value": "g-data"
                },
                "references": {
                    "sentences": [
                        "In this article, we share important elements of the ChromeLoader infection chain and security guidance that you can apply to detect and hunt for ChromeLoader activity in your environment. While some of the information in this blog overlaps with existing research published by G-Data and Colin Cowie, were sharing new insights and guidance that security teams can use to develop behavioral analytics to detect ChromeLoader.",
                        "Choziosi Loader: The folks at G-Data wrote a great article on a threat they call Choziosi Loader that validates a lot of our own ChromeLoader findings."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x2bed6bdb>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x2bed6bdb>",
                    "type": "UnknownWord",
                    "value": "g-datas"
                },
                "references": {
                    "sentences": [
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x6cea1c3b>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x6cea1c3b>",
                    "type": "UnknownWord",
                    "value": "colin"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found.",
                        "In this article, we share important elements of the ChromeLoader infection chain and security guidance that you can apply to detect and hunt for ChromeLoader activity in your environment. While some of the information in this blog overlaps with existing research published by G-Data and Colin Cowie, were sharing new insights and guidance that security teams can use to develop behavioral analytics to detect ChromeLoader.",
                        "Figure 8: Bash script downloading and decompressing the ChromeLoader browser extension. Image courtesy of Colin Cowie.",
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x71c08c5d>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x71c08c5d>",
                    "type": "UnknownWord",
                    "value": "cowie"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found.",
                        "In this article, we share important elements of the ChromeLoader infection chain and security guidance that you can apply to detect and hunt for ChromeLoader activity in your environment. While some of the information in this blog overlaps with existing research published by G-Data and Colin Cowie, were sharing new insights and guidance that security teams can use to develop behavioral analytics to detect ChromeLoader.",
                        "Figure 8: Bash script downloading and decompressing the ChromeLoader browser extension. Image courtesy of Colin Cowie.",
                        "The macOS variant: Once we knew about G-Datas Choziosi naming convention, we discovered another excellent write-up by Colin Cowie analyzing a macOS variant of ChromeLoader."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x4acd5885>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x4acd5885>",
                    "type": "UnknownWord",
                    "value": "redacted"
                },
                "references": {
                    "sentences": [
                        "Figure 1: Redacted screenshot of a Twitter post with scannable QR code leading to ChromeLoaders initial download site"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xee00c9d8>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xee00c9d8>",
                    "type": "UnknownWord",
                    "value": "chromeloaders"
                },
                "references": {
                    "sentences": [
                        "To maintain persistence, the macOS variation of ChromeLoader will append a preference (plist) file to the /Library/LaunchAgents directory. This ensures that every time a user logs into a graphical session, ChromeLoaders Bash script can continually run. Once installed, ChromeLoader performs the same activity as it does on Windows machines: redirecting web traffic through advertising sites.",
                        "Figure 1: Redacted screenshot of a Twitter post with scannable QR code leading to ChromeLoaders initial download site",
                        "After the cross-process injection is complete, ChromeLoaders scheduled task will execute through svchost, calling the Command Interpreter (cmd.exe), which executes a Base64-encoded PowerShell command containing multiple declared variables. ChromeLoader uses the shortened -encodedcommand flag to encode its PowerShell command:",
                        "Figure 4: Encoded PowerShell content spawned by ChromeLoaders scheduled task",
                        "Executing CS_Installer.exe creates persistence through a scheduled task using the Service Host Process (svchost.exe). Notably, ChromeLoader does not call the Windows Task Scheduler (schtasks.exe) to add this scheduled task, as one might expect. Instead, we saw the installer executable load the Task Scheduler COM API, along with a cross-process injection into svchost.exe (which is used to launch ChromeLoaders scheduled task)."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xee00c9d8>",
                            "type": "UnknownWord",
                            "value": "chromeloaders"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x4178cab0>",
                            "type": "File",
                            "value": "cmd.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xee00c9d8>",
                            "type": "UnknownWord",
                            "value": "chromeloaders"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0x4098da2e>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x4098da2e>",
                    "type": "UnknownWord",
                    "value": "black"
                },
                "references": {
                    "sentences": [
                        "Figure 3: Carbon Black console crossprocs and modloads of"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xebb1a327>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xebb1a327>",
                    "type": "UnknownWord",
                    "value": "russianh4ck3r"
                },
                "references": {
                    "sentences": [
                        "Figure 5: PowerShell CLI decoded and beautified by reddit user Russianh4ck3r"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xedafa70a>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xedafa70a>",
                    "type": "UnknownWord",
                    "value": "unregister-scheduledtask"
                },
                "references": {
                    "sentences": [
                        "In this command, PowerShell checks if the ChromeLoader extension is installed. If the specific file path is not found, it will pull down an archive file from a remote location using wget and load the contents as a Chrome extension. Once the extension is found, this PowerShell command will silently remove the ChromeLoader scheduled task using the Unregister-ScheduledTask function."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x5a590993>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x5a590993>",
                    "type": "UnknownWord",
                    "value": "colins"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xf172c998>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xf172c998>",
                    "type": "UnknownWord",
                    "value": "bourne"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xb4b3def4>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xb4b3def4>",
                    "type": "UnknownWord",
                    "value": "bourne-again"
                },
                "references": {
                    "sentences": [
                        "In late April, Colin Cowie published an analysis of the macOS version of ChromeLoader, which is capable of loading malicious extensions into both the Chrome and Safari web browsers. After reading Colins blog, we retroactively analyzed some Red Canary threat detections that seemed to constitute partial execution of this variation from a published detection in late February. As illustrated below, ChromeLoader redirects an encoded command from a Bourne shell (sh) into a Bourne-again SHell (bash). The command itself searches for Google Chrome process using grep, then loads the malicious extension from /private/var/tmp/ if the process is found."
                    ],
                    "titles": []
                }
            }
        },
        "sigma": false,
        "yara": false
    },
    "keywords": {
        "classified": [],
        "dubbed": [],
        "associated": [
            "This analytic looks for sh or bash scripts running in macOS environments with command lines associated with the macOS variant of ChromeLoader."
        ],
        "targets": [
            "That said, the detection guidance in this report provides defense-in-depth against ChromeLoader and a wide array of other threats",
            "We hope this blog helps you improve your defense-in-depth against ChromeLoader specificallybut also for any variety of other threats that leverage suspicious ISO/DMG files and PowerShell/Bash execution"
        ],
        "attributed": []
    },
    "resources": {
        "links": {
            "github": [],
            "pastebin": [],
            "text_files": [],
            "other": [
                "https://redcanary.com/demo",
                "https://redcanary.com/privacy-policy",
                "https://redcanary.com/threat-detection-report/techniques/powershell/",
                "https://www.gdatasoftware.com/blog/2022/01/37236-qr-codes-on-twitter-deliver-malicious-chrome-extension",
                "https://www.th3protocol.com/2022/Choziosi-Loader",
                "https://twitter.com/th3_protoCOL",
                "https://www.virustotal.com/gui/file/fa52844b5b7fcc0192d0822d0099ea52ed1497134a45a2f06670751ef5b33cd3/content",
                "https://redcanary.com/threat-detection-report/techniques/command-scripting-interpreter/",
                "https://www.reddit.com/r/antivirus/comments/rvvc0d/comment/hrfpekt/?utm_source=share&utm_medium=web2x&context=3",
                "https://www.th3protocol.com/2022/Choziosi-Loader",
                "https://redcanary.com/blog/intelligence-insights-may-2022/",
                "https://redcanary.com/blog/gootloader/",
                "https://redcanary.com/blog/raspberry-robin/"
            ]
        },
        "images": [
            "",
            "https://redcanary.com/wp-content/uploads/2022/05/image8-1-830x1024.png",
            "",
            "https://redcanary.com/wp-content/uploads/2022/05/image7-1.png",
            "",
            "https://redcanary.com/wp-content/uploads/2022/05/image4-1.png",
            "",
            "https://redcanary.com/wp-content/uploads/2022/05/image5-1.png",
            "",
            "https://redcanary.com/wp-content/uploads/2022/05/image1-1.png",
            "",
            "https://redcanary.com/wp-content/uploads/2022/05/image6-1-1024x258.png",
            "",
            "https://redcanary.com/wp-content/uploads/2022/05/image2-1-1024x584.png",
            "",
            "https://redcanary.com/wp-content/uploads/2022/05/image3-1.png"
        ]
    }
}