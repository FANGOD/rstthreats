[
    {
        "report": {
            "id": "report_0x6a233adc",
            "date": "20220401",
            "title": "Dissecting Blackguard Info Stealer. Sophisticated Variant Spotted in the wild",
            "url": "https://blog.cyble.com/2022/04/01/dissecting-blackguard-info-stealer"
        },
        "chapter": {
            "id": "chapter_0xe4d15f4b",
            "title": "Dissecting Blackguard Info Stealer",
            "text": ""
        }
    },
    {
        "report": {
            "id": "report_0x6a233adc",
            "date": "20220401",
            "title": "Dissecting Blackguard Info Stealer. Sophisticated Variant Spotted in the wild",
            "url": "https://blog.cyble.com/2022/04/01/dissecting-blackguard-info-stealer"
        },
        "chapter": {
            "id": "chapter_0xc3481fe5",
            "title": "Technical Analysis",
            "text": "The sample (SHA 256: 67843d45ba538eca29c63c3259d697f7e2ba84a3da941295b9207cdb01c85b71) upon execution initially checks for the presence of a debugger and terminates its execution if a debugger is identified. The figure below shows the anti-debug function in the malware.\nFigure 5: Anti-debug check\nThe malware uses the Sleep() function several times as an anti-sandbox technique during its execution. Thread.Sleep() method causes the current thread to stop the execution for the specified time in milliseconds. The figure below shows the Sleep() function used during the initial execution.\nFigure 6: Sleep() function\nAfter performing the Anti-debug checks, it calls the Start() method, which will call other methods, as seen in Figure 7. These methods will initiate the data stealing activity from the victims system. The malware creates a directory in c:\\users\\[username]\\Documents for storing the stolen data from the victims machines.\nThe directory name is generated using the format: Random String + Computer Name + . + Username\nFigure 7: Start Method\nThe TA has encoded a few strings using base64 and gzip compression, so every time, an encoded string is passed as a parameter, the decrypt.Get() function is called to get the decoded strings. Figure 8 shows the Decrypt.get() function.\nFigure 8: Decrypt.Get() Function\nThis stealer primarily targets browsers such as Chrome, Edge, and Firefox. The malware reads the files key3.db, key4.db, logins.json, and cert9.db to steal browser data such as passwords, credit cards, history, and auto-filled data. The malware creates a folder named Browsers, where it will save the data in separate .txt files.\nFigure 9: Stealing browser data\nUsing the GetDomainDetect() method, the malware enumerates all the .txt files in the Browser folder created in the previous step, reads them, and then checks if the following domains are present which include popular crypto exchanges and major bank websites. If the malware finds these targeted domains, it stores any credentials related to them.\nFigure 10: Domain Detection\nThe malware copies the victims data from the USERPROFILE directory and saves it in a folder named Files. The USERPROFILE directory contains data specific to multiple users in a system.\nFigure 11: Stealing files\nThis stealer has the capability to steal data from cold crypto wallets. A cold wallet stores the data offline and is thus more secure. The wallets targeted by the stealer can be seen in Figure 12.\nFigure 12: Targeted cold crypto wallets\nAfter this, the malware identifies the users geolocation by sending a request to hxxps[:]//freegeoip[.]app/xml/. The malware receives the response and then saves it to a file named Information.txt.\nAdditionally, it saves the system information, as shown in Figure 13.\nFigure 13: Information.txt\nIt then takes the screenshot of the victims system and saves it as Screen.png in the directory initially created by the malware.\nFigure 14: Screenshot of the system\nThe malware steals credentials from VPNs such as ProtonVPN, OpenVPN, and NordVPN. The malware first checks whether a VPN is installed or not by checking the directory C:\\Users\\[username]\\AppData\\Local\\[VPN name].\nIf it finds a targeted VPN service, it steals the credentials from the configuration files, such as user.config, etc., and copies the configuration file to the folder used for saving stolen data.\nFigure 15: Stealing VPNs credentials for Nord VPN\nThe malware steals data from Steam, a video game digital distribution service. The stealer identifies the Steam installation path by checking the registry key value at HKEY_LOCAL_MACHINE\\Software\\Valve\\Steam.\nIf Steam is installed on the machine, the malware steals Steams data from loginusers.vdf config file present in the victims machine. The malware creates a folder named Steam and copies the .vdf file into it for its exfiltration purposes.\nFigure 16: Stealing Steam data from victims device\nAfter this, the malware checks for Discord tokens. It first searches for the following directories:\nDiscord\\\\Local Storage\\\\leveldb\ndiscordptb\\\\Local Storage\\\\leveldb\nDiscord Canary\\\\leveldb\nIf it can locate these directories, it checks for files ending with .ldb or .log and extracts Discord tokens from them using regular expression. Then it creates a folder named Discord and will write the stolen tokens to Tokens.txt.\nFigure 17: Stealing Discord tokens\nBlackguard stealer can also steal data from FileZilla. It checks if FileZilla\\recentservers.xml file is present in the ApplicationData folder and then extracts Host, Port, User, and Password from the recentserver.xml. This data is then written to FileZilla\\FileZilla.log.\nFigure 18: Stealing FileZilla data\nAfter this, the malware checks for the Telegram Desktop\\tdata file in the ApplicationData folder. If this is present on the victims system, it creates a folder named Telegram which will be used to save files stolen from the Telegram Desktop\\tdata location.\nFigure 19: Stealing Telegram session\nThe TA in this sample is using Telegram for exfiltrating the data. We found the following Telegram API used by the malware during our analysis for exfiltrating data.\nURL: hxxps[:]//api.telegram.org/bot/sendDocument?chat_id=\nThe malware compresses the stolen data before exfiltration. Figure 20 shows the folders created by the malware.\nFigure 20: Directories Created"
        }
    },
    {
        "report": {
            "id": "report_0x6a233adc",
            "date": "20220401",
            "title": "Dissecting Blackguard Info Stealer. Sophisticated Variant Spotted in the wild",
            "url": "https://blog.cyble.com/2022/04/01/dissecting-blackguard-info-stealer"
        },
        "chapter": {
            "id": "chapter_0xd97ab550",
            "title": "Conclusion",
            "text": "We have observed and analyzed multiple samples of this Info stealer in the wild. It appears that this particular TA is trying to make the stealer even more evasive with every update, as the anti-analysis and obfuscation levels are quite different between the oldest and most recent samples. Info Stealers are emerging as a major concern as they are assisting TAs to gain initial access to corporate networks. It is thus, increasingly necessary to follow basic cyber-hygiene and security practices as listed below."
        }
    },
    {
        "report": {
            "id": "report_0x6a233adc",
            "date": "20220401",
            "title": "Dissecting Blackguard Info Stealer. Sophisticated Variant Spotted in the wild",
            "url": "https://blog.cyble.com/2022/04/01/dissecting-blackguard-info-stealer"
        },
        "chapter": {
            "id": "chapter_0xa67ac467",
            "title": "Our Recommendations:",
            "text": "Avoid downloading pirated software from warez/torrent websites. The Hack Tool present on sites such as YouTube, torrent sites, etc., mainly contains such malware.\nUse strong passwords and enforce multi-factor authentication wherever possible.\nTurn on the automatic software update feature on your computer, mobile, and other connected devices.\nUse a reputed anti-virus and internet security software package on your connected devices, including PC, laptop, and mobile.\nRefrain from opening untrusted links and email attachments without first verifying their authenticity.\nEducate employees in terms of protecting themselves from threats like phishings/untrusted URLs.\nBlock URLs that could be used to spread the malware, e.g., Torrent/Warez.\nMonitor the beacon on the network level to block data exfiltration by malware or TAs.\nEnable Data Loss Prevention (DLP) Solution on the employees systems."
        }
    },
    {
        "report": {
            "id": "report_0x6a233adc",
            "date": "20220401",
            "title": "Dissecting Blackguard Info Stealer. Sophisticated Variant Spotted in the wild",
            "url": "https://blog.cyble.com/2022/04/01/dissecting-blackguard-info-stealer"
        },
        "chapter": {
            "id": "chapter_0x8ef16b88",
            "title": "MITRE ATT&CK Techniques",
            "text": "",
            "table": "0;1;2\nTactic;Technique ID;Technique Name\nExecution;T1204;User Execution\nDefense Evasion;T1497.001  T1027;Virtualization/Sandbox Evasion: System Checks Obfuscated Files or Information\nCredential Access;T1555  T1539  T1552  T1528;Credentials from Password Stores Steal Web Session Cookie Unsecured Credentials Steal Application Access Token\nCollection;T1113;Screen Capture\nDiscovery;T1087  T1518  T1057  T1124  T1007  T1614;Account Discovery Software Discovery Process Discovery System Time Discovery System Service Discovery System Location Discovery\nCommand and Control;T1095;Non-Application Layer Protocol\nExfiltration;T1041;Exfiltration Over C2 Channel\n"
        }
    },
    {
        "report": {
            "id": "report_0x6a233adc",
            "date": "20220401",
            "title": "Dissecting Blackguard Info Stealer. Sophisticated Variant Spotted in the wild",
            "url": "https://blog.cyble.com/2022/04/01/dissecting-blackguard-info-stealer"
        },
        "chapter": {
            "id": "chapter_0x61adafc0",
            "title": "Indicators of Compromise (IoCs):",
            "text": "",
            "table": "0;1;2\nIndicators;Indicator type;Description\nef8385f6ccc6dc6aa6fa9833e13c1cf3 2fe6c0b8cef78d409d29fbd0d1260f39874b068e 5b8d0e358948f885ad1e6fa854f637c1e30036bc217f2c7f2579a8782d472cda;Md5 SHA-1 SHA-256;Stealer Payload\nd4e02002916f18576204a3f1722a958b 33ec434ad2c31de93e758b9d53fcf211c5b13702 9fff9895c476bee0cba9d3e209e841873f1756d18c40afa1b364bd2d8446997c;Md5 SHA-1 SHA-256;Stealer Payload\neb6c563af372d1af92ac2b60438d076d 9895725811ae5fda88629781daaa439c95a4976e 67843d45ba538eca29c63c3259d697f7e2ba84a3da941295b9207cdb01c85b71;Md5 SHA-1 SHA-256;Stealer Payload\na6651dc499e0b9141a6fa0f411f885ea a421e5753596d4c07ee8df06c2080c03507f7a37 5ce632f1f10c96a7524bf384015c25681ef4771f09a6b86883a4da309d85452a;Md5 SHA-1 SHA-256;Stealer Payload\n"
        }
    }
]