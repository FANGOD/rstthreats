{
    "title": "A new secret stash for fileless malware",
    "url": "https://securelist.com/a-new-secret-stash-for-fileless-malware/106393",
    "threats": {
        "Threat": [
            {
                "token": {
                    "id": "<THREAT_0xff6ba3c2>",
                    "type": "Threat",
                    "value": "cobalt_strike"
                },
                "references": {
                    "sentences": [
                        "Regarding last stage Trojans: the actor decided not to stick to just one there are HTTP and named pipe based ones. Obviously besides the event logs the actor is obsessed with memory injection lots of RAT commands are related to it and are used heavily. Along with the aforementioned custom modules and techniques, several commercial pentesting tools like Cobalt Strike and NetSPI (ex-SilentBreak) are used.",
                        "This layer of infection chain decrypts, maps into memory and launches the code. Not all of them are worth describing in detail, but we will cover the Go decryptor launcher for Cobalt Strike. All corresponding hashes are listed in the appendix.",
                        "After this introduction into the set of malware, we will now describe the infection chain: dropper injection with Cobalt Strike pentesting suite.",
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name.",
                        "The earliest phase of attack we observed took place in September 2021. The spreading of the Cobalt Strike module was achieved by persuading the target to download the link to the .rar on the legitimate site file.io, and run it themselves. The digital certificate for the Cobalt Strike module inside is below (during the campaign with the same one, 15 different stagers from wrappers to last stagers were signed):"
                    ],
                    "titles": [
                        "Commercial tool sets",
                        "Anti-detection wrappers",
                        "The infection chain",
                        "Initial infection",
                        "A new secret stash for fileless malware",
                        "Last stager types"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xff6ba3c2>",
                            "type": "Threat",
                            "value": "cobalt_strike"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xff6ba3c2>",
                            "type": "Threat",
                            "value": "cobalt_strike"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0xc1f9f31>",
                    "type": "Threat",
                    "value": "netspi"
                },
                "references": {
                    "sentences": [
                        "Regarding last stage Trojans: the actor decided not to stick to just one there are HTTP and named pipe based ones. Obviously besides the event logs the actor is obsessed with memory injection lots of RAT commands are related to it and are used heavily. Along with the aforementioned custom modules and techniques, several commercial pentesting tools like Cobalt Strike and NetSPI (ex-SilentBreak) are used.",
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters.",
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name.",
                        "The code, which we consider custom (Trojans, wrappers), has no similarities with previously known campaigns or previously registered SilentBreak toolset modules. Right now we prefer not to name the activity and instead stick to just SilentBreak given it is the most used among the tools here. If new modules appear and allow us to connect the activity to some actor we will update the name accordingly.",
                        "Here we want to mention that several .pdb paths inside binaries contain the projects directory C:\\Users\\admin\\source\\repos\\drx\\ and other modules not named after SilentBreak, such as drxDLL.dll. However, encryption functions are the same as in the publicly available Throwback code."
                    ],
                    "titles": [
                        "Commercial tool sets",
                        "The infection chain",
                        "A new secret stash for fileless malware",
                        "Attribution",
                        "HTTP Trojan"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0x8e3cbbca>",
                            "type": "Path",
                            "value": "c:\\users\\admin\\source\\repos\\drx"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xff6ba3c2>",
                            "type": "Threat",
                            "value": "cobalt_strike"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0x7406a146>",
                    "type": "Threat",
                    "value": "blackbone"
                },
                "references": {
                    "sentences": [
                        "Actually, as we dont have commercial versions of the latter its hard to say which enumerated techniques came from the product and which are home-brewed. For sure, third-party code from GitHub is also in use: we registered at least BlackBone for legitimate processes in memory patching.",
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop.",
                        "To prevent WerFault continuing its error handling process, the DLL patches the launchers entry point with typical Blackbone trampolines"
                    ],
                    "titles": [
                        "A new secret stash for fileless malware",
                        "Named pipes-based Trojan",
                        "Launcher in wer.dll"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0x7406a146>",
                            "type": "Threat",
                            "value": "blackbone"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x7406a146>",
                            "type": "Threat",
                            "value": "blackbone"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0xb978191c>",
                    "type": "Threat",
                    "value": "slingshot"
                },
                "references": {
                    "sentences": [
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name."
                    ],
                    "titles": [
                        "Commercial tool sets",
                        "The infection chain"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0xfe4a4d24>",
                    "type": "Threat",
                    "value": "beacon"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Last stager types"
                    ]
                }
            },
            {
                "token": {
                    "id": "<THREAT_0x140c7f91>",
                    "type": "Threat",
                    "value": "mimikatz"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Work cycle"
                    ]
                }
            }
        ]
    },
    "ttps": {},
    "meanings": {
        "Category": [
            {
                "token": {
                    "id": "<CATEGORY_0xf1a480bb>",
                    "type": "Category",
                    "value": "malware"
                },
                "references": {
                    "sentences": [
                        "In February 2022 we observed the technique of putting the shellcode into Windows event logs for the first time in the wild during the malicious campaign. It allows the fileless last stage Trojan to be hidden from plain sight in the file system. Such attention to the event logs in the campaign isnt limited to storing shellcodes. Dropper modules also patch Windows native API functions, related to event tracing (ETW) and anti-malware scan interface (AMSI), to make the infection process stealthier.",
                        "After this introduction into the set of malware, we will now describe the infection chain: dropper injection with Cobalt Strike pentesting suite.",
                        "The Trojan location is C:\\Windows\\apds.dll. The original legitimate Microsoft Help Data Services Module library with the same name is in C:\\Windows\\System32. The main Trojan working cycle is in a separate thread. The malware also exports a Load() function, whose only purpose is to wait for a working thread, which is typical for this campaigns modules.",
                        "In Main.start the malware checks if the host is in the domain and only works if its true. Then it dynamically resolves the addresses of the aforementioned functions. The next stager is encrypted with AES256 (CBC mode), the key and IV are encoded with base64.",
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
                        "Besides event logs there are numerous other techniques in the actors toolset. Among them let us distinguish how the actor takes initial recon into consideration while developing the next malicious stages: the C2 web domain name mimicking the legitimate one and the name in use belonging to the existing and software used by the victim. For hosting the attacker uses virtual private servers on Linode, Namecheap, DreamVPS.",
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423.",
                        "The fingerprinter also appends 1.1 to the string (which could be the malware version) and the sleep time from the current config.",
                        "We consider the event logs technique, which we havent seen before, the most innovative part of this campaign. With at least two commercial products in use, plus several types of last-stage RAT and anti-detection wrappers, the actor behind this campaign is quite capable. There is the possibility that some of the modules we described here as custom ones are part of a commercial toolset as well. The code is quite unique, with no similarities to known malware. We will continue to monitor similar activity.",
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD",
                        "One more visible common approach is the use of a lot of anti-detection decryptors. Actor uses different compilers, from Microsofts cl.exe or GCC under MinGW to a recent version of Go. Also, to avoid detection, some modules are signed with a digital certificate. We believe it is issued by the actor, because our telemetry doesnt show any legitimate software signed with it, only malicious code used in this campaign.",
                        "Malware descriptions",
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:",
                        "The malware generates a fingerprinting string by gathering the following information, also separated by |:",
                        "Digital Certificates<crlf>Fileless malware<crlf>Malware Descriptions<crlf>Malware Technologies<crlf>RAT Trojan<crlf>Targeted attacks"
                    ],
                    "titles": [
                        "Work cycle",
                        "Named pipes-based Trojan",
                        "Anti-detection wrappers",
                        "Conclusions",
                        "A new secret stash for fileless malware",
                        "Target fingerprinting",
                        "File Hashes (malicious documents, trojans, emails, decoys)",
                        "Host-based IoCs",
                        "Last stager types",
                        "PDB paths"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xce896d94>",
                            "type": "File",
                            "value": "submit.php"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x7f5430cd>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ace22457c868df82028db95e5a3b7984"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1c97a3e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "16eb7b5060e543237eca689bdc772148"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x75dcc8d>",
                            "type": "File",
                            "value": "cl.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x7406a146>",
                            "type": "Threat",
                            "value": "blackbone"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbedc8d5b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "d408ff4fde7870e30804a1d1147efe7c"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x21c4e088>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "209a4d190dc1f6ec0968578905920641"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x74ce5b25>",
                            "type": "Url",
                            "value": "https://opswat.info:443"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x9fa63156>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e13d963784c544b94d3db5616e50b8ae"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2545f62>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ef825fecd4e67d5ec5b9666a21fbba2a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0x45153ed5>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks\\werfault.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x577345e8>",
                            "type": "File",
                            "value": "main.start"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x73521e33>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "86737f0ae8cf01b395997cd5512b8fc8"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xb4d3105e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "822680649cdeabc781903870b34fb7a7"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xa9afba27>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "9619e13b034f64835f0476d68220a86b"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2c13cace>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0c0acc057644b21f6e76dd676d4f2389"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2f7ad6b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "24866291d5deee783624ab51516a078f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xda8a5fa8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0b40033fb7c799536c921b1a1a02129f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x372e56e7>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "964cb389ebf39f240e8c474e200caac3"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x209dd80>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "f3da1e157e3e344788886b3ca29e02bd"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xe41e0878>",
                            "type": "File",
                            "value": "wer.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x8d079925>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "13b5e1654869985f2207d846e4c0dbfd"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x603a9c20>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "77e06b01787b24343f62cf5d5a8f9995"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xed46ad08>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "345a8745e1e3ae576fbcc69d3c8a310b"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xff6ba3c2>",
                            "type": "Threat",
                            "value": "cobalt_strike"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbceb25a5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "54271c17684ca60c6ce37ee47b5493fb"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xe2eb7520>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "fa5943c673398d834fb328ce9b62aaad"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x85597e45>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e9766c71159fc2051bbfc48a4639243f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xc6623000>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "42a4913773bbda4bc9d01d48b4a7642f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xff3c5e34>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "1cedf339a13b1f7987d485cd80d141b6"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1a10b84c>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "603413fc026e4713e7d3eedab0df5d8d"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x22159119>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "dff3c0d4f6e2c26936b9bd82db5a1735"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x18e8a9ec>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "a5c236982b0f1d26fb741df9e9925018"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x6bc5acc6>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "2080a099bdc7aa86db55badffbc71566"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xab3013f5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0d415973f958ac30cb25bd845319d960"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x303bb605>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e81187e1f2e6a2d4d3ad291120a42ce7"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0x49c0dad0>",
                    "type": "Category",
                    "value": "dropper"
                },
                "references": {
                    "sentences": [
                        "In February 2022 we observed the technique of putting the shellcode into Windows event logs for the first time in the wild during the malicious campaign. It allows the fileless last stage Trojan to be hidden from plain sight in the file system. Such attention to the event logs in the campaign isnt limited to storing shellcodes. Dropper modules also patch Windows native API functions, related to event tracing (ETW) and anti-malware scan interface (AMSI), to make the infection process stealthier.",
                        "After this introduction into the set of malware, we will now describe the infection chain: dropper injection with Cobalt Strike pentesting suite.",
                        "The dropper not only puts the launcher on disk for side-loading, but also writes information messages with shellcode into existing Windows KMS event log",
                        "Dropper<crlf>822680649CDEABC781903870B34FB7A7<crlf>345A8745E1E3AE576FBCC69D3C8A310B<crlf>EF825FECD4E67D5EC5B9666A21FBBA2A<crlf>FA5943C673398D834FB328CE9B62AAAD",
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423.",
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name.",
                        "We start custom module analysis from the wrapper-dropper dynamic library. This code is injected into Windows processes such as explorer.exe. At its single entry point after being loaded into the virtual address space of the launcher process, the dropper removes files created by previous stages or executions.",
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": [
                        "Dropper in DLL, search order hijacking",
                        "Commercial tool sets",
                        "Anti-detection wrappers",
                        "A new secret stash for fileless malware",
                        "File Hashes (malicious documents, trojans, emails, decoys)",
                        "Last stager types"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xe2eb7520>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "fa5943c673398d834fb328ce9b62aaad"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xf4c4d742>",
                            "type": "File",
                            "value": "explorer.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xa94304a2>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xb4d3105e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "822680649cdeabc781903870b34fb7a7"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2545f62>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ef825fecd4e67d5ec5b9666a21fbba2a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xe41e0878>",
                            "type": "File",
                            "value": "wer.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xed46ad08>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "345a8745e1e3ae576fbcc69d3c8a310b"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xb68aa214>",
                    "type": "Category",
                    "value": "rat"
                },
                "references": {
                    "sentences": [
                        "Regarding last stage Trojans: the actor decided not to stick to just one there are HTTP and named pipe based ones. Obviously besides the event logs the actor is obsessed with memory injection lots of RAT commands are related to it and are used heavily. Along with the aforementioned custom modules and techniques, several commercial pentesting tools like Cobalt Strike and NetSPI (ex-SilentBreak) are used.",
                        "In February 2022 we observed the technique of putting the shellcode into Windows event logs for the first time in the wild during the malicious campaign. It allows the fileless last stage Trojan to be hidden from plain sight in the file system. Such attention to the event logs in the campaign isnt limited to storing shellcodes. Dropper modules also patch Windows native API functions, related to event tracing (ETW) and anti-malware scan interface (AMSI), to make the infection process stealthier.",
                        "Besides searching for the entry point and calling it, the shellcode also searches for a Trojan export by hardcoded hash and runs the found function with arguments dave and 4",
                        "The dropper not only puts the launcher on disk for side-loading, but also writes information messages with shellcode into existing Windows KMS event log",
                        "The parsing of the next Windows portable executable to locate its entry point is quite typical. To make the next stage Trojan less visible, the actor wiped the MZ magic in its header. After calling the code at the Trojans entry point, the shellcode also searches for the requested export and invokes it.",
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423.",
                        "We consider the event logs technique, which we havent seen before, the most innovative part of this campaign. With at least two commercial products in use, plus several types of last-stage RAT and anti-detection wrappers, the actor behind this campaign is quite capable. There is the possibility that some of the modules we described here as custom ones are part of a commercial toolset as well. The code is quite unique, with no similarities to known malware. We will continue to monitor similar activity.",
                        "This launcher, dropped into the Tasks directory by the first stager, proxies all calls to wer.dll and its exports to the original legitimate library. At the entry point, a separate thread combines all the aforementioned 8KB pieces into a complete shellcode and runs it. The same virtual address space, created by a copy of the legitimate WerFault.exe, is used for all this code.",
                        "The launcher transmits control to the very first byte of the gathered shellcode. Here, three arguments for the next function are prepared:",
                        "Digital Certificates<crlf>Fileless malware<crlf>Malware Descriptions<crlf>Malware Technologies<crlf>RAT Trojan<crlf>Targeted attacks"
                    ],
                    "titles": [
                        "Dropper in DLL, search order hijacking",
                        "Launcher in wer.dll",
                        "Shellcode into Windows event logs",
                        "Work cycle",
                        "Anti-detection wrappers",
                        "The infection chain",
                        "Conclusions",
                        "A new secret stash for fileless malware",
                        "PDB paths",
                        "Trojan commands"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe41e0878>",
                            "type": "File",
                            "value": "wer.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xc8ecca29>",
                    "type": "Category",
                    "value": "c2"
                },
                "references": {
                    "sentences": [
                        "We have now covered the three layers of the campaign. Interestingly, we observed a Trojan with a complete command set as in the table above, but still using RC4-encrypted HTTP communications with the C2 instead of named pipes. The last stage samples look like a modular platform, whose capabilities the actor is able to combine according to their current needs.",
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
                        "Besides event logs there are numerous other techniques in the actors toolset. Among them let us distinguish how the actor takes initial recon into consideration while developing the next malicious stages: the C2 web domain name mimicking the legitimate one and the name in use belonging to the existing and software used by the victim. For hosting the attacker uses virtual private servers on Linode, Namecheap, DreamVPS.",
                        "The module decrypts C2 domains with a one- byte XOR key. In the case of this sample there is only one domain, eleed[.]online. The Trojan is able to handle many of them, separated by the | character and encrypted. For further communications over plain HTTP, the Trojan chooses a random C2 from this set with user agent Mozilla 5.0.",
                        "If the ping of a control server with port 80 available is successful, the aforementioned fingerprint data is sent to it. In reply, the C2 shares the encrypted command for the Trojans main loop.",
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": [
                        "Encrypted HTTP communication with C2",
                        "Work cycle",
                        "Anti-detection wrappers",
                        "A new secret stash for fileless malware",
                        "Target fingerprinting",
                        "Last stager types",
                        "Trojan commands"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0x74ce5b25>",
                            "type": "Url",
                            "value": "https://opswat.info:443"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xc8ecca29>",
                            "type": "Category",
                            "value": "c2"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0x151cee5c>",
                    "type": "Category",
                    "value": "trojan"
                },
                "references": {
                    "sentences": [
                        "After the aforementioned manipulations with exported functions, the module lightly fingerprints the host with architecture and Windows version information. The Trojan also initializes a random 11-byte ASCII string using the rare constant mentioned, e.g., here in the init_keys function. The result serves as a unique session id.",
                        "In February 2022 we observed the technique of putting the shellcode into Windows event logs for the first time in the wild during the malicious campaign. It allows the fileless last stage Trojan to be hidden from plain sight in the file system. Such attention to the event logs in the campaign isnt limited to storing shellcodes. Dropper modules also patch Windows native API functions, related to event tracing (ETW) and anti-malware scan interface (AMSI), to make the infection process stealthier.",
                        "Besides searching for the entry point and calling it, the shellcode also searches for a Trojan export by hardcoded hash and runs the found function with arguments dave and 4",
                        "The Trojan location is C:\\Windows\\apds.dll. The original legitimate Microsoft Help Data Services Module library with the same name is in C:\\Windows\\System32. The main Trojan working cycle is in a separate thread. The malware also exports a Load() function, whose only purpose is to wait for a working thread, which is typical for this campaigns modules.",
                        "We have now covered the three layers of the campaign. Interestingly, we observed a Trojan with a complete command set as in the table above, but still using RC4-encrypted HTTP communications with the C2 instead of named pipes. The last stage samples look like a modular platform, whose capabilities the actor is able to combine according to their current needs.",
                        "Another Trojan in use during this campaign is named pipe-based and has a more profound command system, including privilege escalation, screenshotting, inactivity time measurement, etc. Here, we come to the infection chain end. We continue with another last stage Trojan type, which we observed injected into processes like edge.exe.",
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters.",
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
                        "HTTP Trojan<crlf>ACE22457C868DF82028DB95E5A3B7984<crlf>1CEDF339A13B1F7987D485CD80D141B6<crlf>24866291D5DEEE783624AB51516A078F<crlf>13B5E1654869985F2207D846E4C0DBFD",
                        "The parsing of the next Windows portable executable to locate its entry point is quite typical. To make the next stage Trojan less visible, the actor wiped the MZ magic in its header. After calling the code at the Trojans entry point, the shellcode also searches for the requested export and invokes it.",
                        "Named pipes trojan and similar<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>0B40033FB7C799536C921B1A1A02129F<crlf>603413FC026E4713E7D3EEDAB0DF5D8D",
                        "First, the main trojan thread gets the original apds.dll and exports and saves it into an allocated new heap buffer right after the Trojans image in memory. Then the Trojan edits the self-exported functions data in a way that allows it to call the original apds.dll exports through the crafted stubs like the following, where the address is the one parsed from the real apds.dll:",
                        "The module decrypts C2 domains with a one- byte XOR key. In the case of this sample there is only one domain, eleed[.]online. The Trojan is able to handle many of them, separated by the | character and encrypted. For further communications over plain HTTP, the Trojan chooses a random C2 from this set with user agent Mozilla 5.0.",
                        "Address of next stage Trojan. It is also contained within the data extracted from the event logs<crlf>The standard ROR13 hash of exported function name Load inside this Trojan (0xE124D840)<crlf>Addresses of the string dave and constant 4, which become the arguments of the exported function, found by hash",
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:",
                        "Digital Certificates<crlf>Fileless malware<crlf>Malware Descriptions<crlf>Malware Technologies<crlf>RAT Trojan<crlf>Targeted attacks"
                    ],
                    "titles": [
                        "Shellcode into Windows event logs",
                        "Work cycle",
                        "The infection chain",
                        "A new secret stash for fileless malware",
                        "Target fingerprinting",
                        "File Hashes (malicious documents, trojans, emails, decoys)",
                        "Named pipes-based Trojan",
                        "PDB paths",
                        "HTTP Trojan",
                        "Trojan commands"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x8d079925>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "13b5e1654869985f2207d846e4c0dbfd"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xe3f03fa5>",
                            "type": "Path",
                            "value": "c:\\windows\\apds.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x86377aa6>",
                            "type": "File",
                            "value": "apds.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0x4c69bd57>",
                            "type": "Path",
                            "value": "c:\\windows\\system32"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xb12ace72>",
                            "type": "File",
                            "value": "edge.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2f7ad6b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "24866291d5deee783624ab51516a078f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xda8a5fa8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0b40033fb7c799536c921b1a1a02129f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xff3c5e34>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "1cedf339a13b1f7987d485cd80d141b6"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1a10b84c>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "603413fc026e4713e7d3eedab0df5d8d"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x7406a146>",
                            "type": "Threat",
                            "value": "blackbone"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x7f5430cd>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ace22457c868df82028db95e5a3b7984"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xfda51682>",
                    "type": "Category",
                    "value": "scan"
                },
                "references": {
                    "sentences": [
                        "In February 2022 we observed the technique of putting the shellcode into Windows event logs for the first time in the wild during the malicious campaign. It allows the fileless last stage Trojan to be hidden from plain sight in the file system. Such attention to the event logs in the campaign isnt limited to storing shellcodes. Dropper modules also patch Windows native API functions, related to event tracing (ETW) and anti-malware scan interface (AMSI), to make the infection process stealthier."
                    ],
                    "titles": [
                        "A new secret stash for fileless malware"
                    ]
                }
            },
            {
                "token": {
                    "id": "<CATEGORY_0x6a35444b>",
                    "type": "Category",
                    "value": "proxy"
                },
                "references": {
                    "sentences": [
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": [
                        "Named pipes-based Trojan"
                    ]
                }
            }
        ]
    },
    "iocs": {
        "File": [
            {
                "token": {
                    "id": "<FILE_0xe41e0878>",
                    "type": "File",
                    "value": "wer.dll"
                },
                "references": {
                    "sentences": [
                        "The way to stop the legitimate launchers execution isnt traditional. In the main thread, wer.dll finds its entry point and patches it with a simple function. WaitAndExit() on the screenshot above would just call WaitForSingleObject() with the log gathering thread id and then exit, meaning no real WerFault.exe error handling code could ever be executed: the spoofed DLL mapped into its address space would block it.",
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423.",
                        "Firstly, the module copies the original legitimate OS error handler WerFault.exe to C:\\Windows\\Tasks. Then it drops one of the encrypted binary resources to the wer.dll file in the same directory for typical DLL search order hijacking. For the sake of persistence, the module sets the newly created WerFault.exe to autorun, creating a Windows Problem Reporting value in the Software\\Microsoft\\Windows\\CurrentVersion\\Run Windows system registry branch.",
                        "This launcher, dropped into the Tasks directory by the first stager, proxies all calls to wer.dll and its exports to the original legitimate library. At the entry point, a separate thread combines all the aforementioned 8KB pieces into a complete shellcode and runs it. The same virtual address space, created by a copy of the legitimate WerFault.exe, is used for all this code."
                    ],
                    "titles": [
                        "Dropper in DLL, search order hijacking",
                        "A new secret stash for fileless malware",
                        "Launcher in wer.dll"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe41e0878>",
                            "type": "File",
                            "value": "wer.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xe41e0878>",
                            "type": "File",
                            "value": "wer.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xe41e0878>",
                            "type": "File",
                            "value": "wer.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa5feaade>",
                            "type": "UnknownWord",
                            "value": "wouldnt"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xe41e0878>",
                            "type": "File",
                            "value": "wer.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x75dcc8d>",
                    "type": "File",
                    "value": "cl.exe"
                },
                "references": {
                    "sentences": [
                        "One more visible common approach is the use of a lot of anti-detection decryptors. Actor uses different compilers, from Microsofts cl.exe or GCC under MinGW to a recent version of Go. Also, to avoid detection, some modules are signed with a digital certificate. We believe it is issued by the actor, because our telemetry doesnt show any legitimate software signed with it, only malicious code used in this campaign."
                    ],
                    "titles": [
                        "A new secret stash for fileless malware"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x75dcc8d>",
                            "type": "File",
                            "value": "cl.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xaca99cc6>",
                            "type": "UnknownWord",
                            "value": "gcc"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x75dcc8d>",
                            "type": "File",
                            "value": "cl.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x6297dcba>",
                    "type": "File",
                    "value": "throwbackdll.dll"
                },
                "references": {
                    "sentences": [
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters.",
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name."
                    ],
                    "titles": [
                        "Commercial tool sets",
                        "The infection chain",
                        "HTTP Trojan"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x3a6ede7a>",
                            "type": "UnknownWord",
                            "value": "xor-based"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x122c8465>",
                            "type": "UnknownWord",
                            "value": "http-based"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x341aa38a>",
                            "type": "UnknownWord",
                            "value": "abbreviation"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe4b53251>",
                            "type": "UnknownWord",
                            "value": "remind"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x8234ba24>",
                            "type": "UnknownWord",
                            "value": "obviously"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x9685345a>",
                    "type": "File",
                    "value": "drxdll.dll"
                },
                "references": {
                    "sentences": [
                        "Here we want to mention that several .pdb paths inside binaries contain the projects directory C:\\Users\\admin\\source\\repos\\drx\\ and other modules not named after SilentBreak, such as drxDLL.dll. However, encryption functions are the same as in the publicly available Throwback code."
                    ],
                    "titles": [
                        "Commercial tool sets",
                        "The infection chain"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x122c8465>",
                            "type": "UnknownWord",
                            "value": "http-based"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xb07b7b0e>",
                            "type": "UnknownWord",
                            "value": "<PATH_0x8e3cbbca>"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xdcdf2ef0>",
                            "type": "UnknownWord",
                            "value": "pdb"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x94e585d1>",
                    "type": "File",
                    "value": "monolithdll.dll"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "The infection chain"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcd708f91>",
                            "type": "UnknownWord",
                            "value": "pipes-based"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xb5300056>",
                            "type": "UnknownWord",
                            "value": "slingshotdll"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xc8caf1e2>",
                    "type": "File",
                    "value": "slingshotdll.dll"
                },
                "references": {
                    "sentences": [
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name."
                    ],
                    "titles": [
                        "Commercial tool sets"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe4b53251>",
                            "type": "UnknownWord",
                            "value": "remind"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x341aa38a>",
                            "type": "UnknownWord",
                            "value": "abbreviation"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x3eb0f19>",
                    "type": "File",
                    "value": "sb.dll"
                },
                "references": {
                    "sentences": [
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name."
                    ],
                    "titles": [
                        "Commercial tool sets"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe4b53251>",
                            "type": "UnknownWord",
                            "value": "remind"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x341aa38a>",
                            "type": "UnknownWord",
                            "value": "abbreviation"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xb978191c>",
                            "type": "Threat",
                            "value": "slingshot"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x82f2452b>",
                    "type": "File",
                    "value": "werfault.exe"
                },
                "references": {
                    "sentences": [
                        "The way to stop the legitimate launchers execution isnt traditional. In the main thread, wer.dll finds its entry point and patches it with a simple function. WaitAndExit() on the screenshot above would just call WaitForSingleObject() with the log gathering thread id and then exit, meaning no real WerFault.exe error handling code could ever be executed: the spoofed DLL mapped into its address space would block it.",
                        "Firstly, the module copies the original legitimate OS error handler WerFault.exe to C:\\Windows\\Tasks. Then it drops one of the encrypted binary resources to the wer.dll file in the same directory for typical DLL search order hijacking. For the sake of persistence, the module sets the newly created WerFault.exe to autorun, creating a Windows Problem Reporting value in the Software\\Microsoft\\Windows\\CurrentVersion\\Run Windows system registry branch.",
                        "This launcher, dropped into the Tasks directory by the first stager, proxies all calls to wer.dll and its exports to the original legitimate library. At the entry point, a separate thread combines all the aforementioned 8KB pieces into a complete shellcode and runs it. The same virtual address space, created by a copy of the legitimate WerFault.exe, is used for all this code."
                    ],
                    "titles": [
                        "Dropper in DLL, search order hijacking",
                        "Anti-detection wrappers",
                        "Launcher in wer.dll"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd225ae3f>",
                            "type": "UnknownWord",
                            "value": "currentversion"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xb6bca386>",
                            "type": "UnknownWord",
                            "value": "sake"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa2b6732e>",
                            "type": "UnknownWord",
                            "value": "firstly"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x9fded84b>",
                            "type": "UnknownWord",
                            "value": "waitandexit"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xf4f52e06>",
                            "type": "UnknownWord",
                            "value": "autorunned"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe94653f9>",
                            "type": "UnknownWord",
                            "value": "whitelisted"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd6e4e2d5>",
                            "type": "UnknownWord",
                            "value": "handler"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x67b9de62>",
                            "type": "UnknownWord",
                            "value": "waitforsingleobject"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x37412177>",
                    "type": "File",
                    "value": "ntdll.dll"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": [
                        "Anti-detection wrappers"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x9cab34fe>",
                            "type": "UnknownWord",
                            "value": "etweventwritefull"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4742dce6>",
                            "type": "UnknownWord",
                            "value": "logging-related"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa900696>",
                            "type": "UnknownWord",
                            "value": "self-address"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x3340d8c1>",
                    "type": "File",
                    "value": "main.init"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": [
                        "Anti-detection wrappers"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x3340d8c1>",
                            "type": "File",
                            "value": "main.init"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x5ed983fd>",
                    "type": "File",
                    "value": "kernel32.dll"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": [
                        "Anti-detection wrappers"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x5ed983fd>",
                            "type": "File",
                            "value": "kernel32.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x577345e8>",
                    "type": "File",
                    "value": "main.start"
                },
                "references": {
                    "sentences": [
                        "In Main.start the malware checks if the host is in the domain and only works if its true. Then it dynamically resolves the addresses of the aforementioned functions. The next stager is encrypted with AES256 (CBC mode), the key and IV are encoded with base64."
                    ],
                    "titles": [
                        "Anti-detection wrappers"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x577345e8>",
                            "type": "File",
                            "value": "main.start"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xf4c4d742>",
                    "type": "File",
                    "value": "explorer.exe"
                },
                "references": {
                    "sentences": [
                        "We start custom module analysis from the wrapper-dropper dynamic library. This code is injected into Windows processes such as explorer.exe. At its single entry point after being loaded into the virtual address space of the launcher process, the dropper removes files created by previous stages or executions."
                    ],
                    "titles": [
                        "Dropper in DLL, search order hijacking"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xf4c4d742>",
                            "type": "File",
                            "value": "explorer.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xb12ace72>",
                    "type": "File",
                    "value": "edge.exe"
                },
                "references": {
                    "sentences": [
                        "Another Trojan in use during this campaign is named pipe-based and has a more profound command system, including privilege escalation, screenshotting, inactivity time measurement, etc. Here, we come to the infection chain end. We continue with another last stage Trojan type, which we observed injected into processes like edge.exe."
                    ],
                    "titles": [
                        "Trojan commands"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xb12ace72>",
                            "type": "File",
                            "value": "edge.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x86377aa6>",
                    "type": "File",
                    "value": "apds.dll"
                },
                "references": {
                    "sentences": [
                        "First, the main trojan thread gets the original apds.dll and exports and saves it into an allocated new heap buffer right after the Trojans image in memory. Then the Trojan edits the self-exported functions data in a way that allows it to call the original apds.dll exports through the crafted stubs like the following, where the address is the one parsed from the real apds.dll:"
                    ],
                    "titles": [
                        "Named pipes-based Trojan"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x86377aa6>",
                            "type": "File",
                            "value": "apds.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x89eb08ee>",
                            "type": "UnknownWord",
                            "value": "self-exported"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x86377aa6>",
                            "type": "File",
                            "value": "apds.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x86377aa6>",
                            "type": "File",
                            "value": "apds.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd4fc6788>",
                            "type": "UnknownWord",
                            "value": "stubs"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xce896d94>",
                    "type": "File",
                    "value": "submit.php"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": [
                        "Work cycle"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xce896d94>",
                            "type": "File",
                            "value": "submit.php"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x4178cab0>",
                    "type": "File",
                    "value": "cmd.exe"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Work cycle"
                    ]
                }
            }
        ],
        "Path": [
            {
                "token": {
                    "id": "<PATH_0x8e3cbbca>",
                    "type": "Path",
                    "value": "c:\\users\\admin\\source\\repos\\drx"
                },
                "references": {
                    "sentences": [
                        "Here we want to mention that several .pdb paths inside binaries contain the projects directory C:\\Users\\admin\\source\\repos\\drx\\ and other modules not named after SilentBreak, such as drxDLL.dll. However, encryption functions are the same as in the publicly available Throwback code."
                    ],
                    "titles": [
                        "Commercial tool sets"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0x8e3cbbca>",
                            "type": "Path",
                            "value": "c:\\users\\admin\\source\\repos\\drx"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xdcdf2ef0>",
                            "type": "UnknownWord",
                            "value": "pdb"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0x8e3cbbca>",
                            "type": "Path",
                            "value": "c:\\users\\admin\\source\\repos\\drx"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xb07b7b0e>",
                            "type": "UnknownWord",
                            "value": "<PATH_0x8e3cbbca>"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0x8e3cbbca>",
                            "type": "Path",
                            "value": "c:\\users\\admin\\source\\repos\\drx"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xc1f9f31>",
                            "type": "Threat",
                            "value": "netspi"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<PATH_0xa94304a2>",
                    "type": "Path",
                    "value": "c:\\windows\\tasks"
                },
                "references": {
                    "sentences": [
                        "Firstly, the module copies the original legitimate OS error handler WerFault.exe to C:\\Windows\\Tasks. Then it drops one of the encrypted binary resources to the wer.dll file in the same directory for typical DLL search order hijacking. For the sake of persistence, the module sets the newly created WerFault.exe to autorun, creating a Windows Problem Reporting value in the Software\\Microsoft\\Windows\\CurrentVersion\\Run Windows system registry branch."
                    ],
                    "titles": [
                        "Dropper in DLL, search order hijacking"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xa94304a2>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa2b6732e>",
                            "type": "UnknownWord",
                            "value": "firstly"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xa94304a2>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xa94304a2>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd6e4e2d5>",
                            "type": "UnknownWord",
                            "value": "handler"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<PATH_0xe3f03fa5>",
                    "type": "Path",
                    "value": "c:\\windows\\apds.dll"
                },
                "references": {
                    "sentences": [
                        "The Trojan location is C:\\Windows\\apds.dll. The original legitimate Microsoft Help Data Services Module library with the same name is in C:\\Windows\\System32. The main Trojan working cycle is in a separate thread. The malware also exports a Load() function, whose only purpose is to wait for a working thread, which is typical for this campaigns modules."
                    ],
                    "titles": [
                        "Named pipes-based Trojan"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xe3f03fa5>",
                            "type": "Path",
                            "value": "c:\\windows\\apds.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<PATH_0x4c69bd57>",
                    "type": "Path",
                    "value": "c:\\windows\\system32"
                },
                "references": {
                    "sentences": [
                        "The Trojan location is C:\\Windows\\apds.dll. The original legitimate Microsoft Help Data Services Module library with the same name is in C:\\Windows\\System32. The main Trojan working cycle is in a separate thread. The malware also exports a Load() function, whose only purpose is to wait for a working thread, which is typical for this campaigns modules."
                    ],
                    "titles": [
                        "Named pipes-based Trojan"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0x4c69bd57>",
                            "type": "Path",
                            "value": "c:\\windows\\system32"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<PATH_0xacfc9692>",
                    "type": "Path",
                    "value": "c:\\windows\\tasks\\wer.dll"
                },
                "references": {
                    "sentences": [
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423."
                    ],
                    "titles": [
                        "Host-based IoCs"
                    ]
                }
            },
            {
                "token": {
                    "id": "<PATH_0x45153ed5>",
                    "type": "Path",
                    "value": "c:\\windows\\tasks\\werfault.exe"
                },
                "references": {
                    "sentences": [
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423."
                    ],
                    "titles": [
                        "Host-based IoCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0x45153ed5>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks\\werfault.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0x45153ed5>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks\\werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x464058a2>",
                            "type": "UnknownWord",
                            "value": "sideload"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0x45153ed5>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks\\werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xc7caa1db>",
                            "type": "UnknownWord",
                            "value": "legit"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<PATH_0xc2046640>",
                    "type": "Path",
                    "value": "c:\\users\\admin\\source\\repos\\drx\\x64\\release\\sb.pdb"
                },
                "references": {
                    "sentences": [
                        "C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\sb.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\zOS.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\ThrowbackDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\drxDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\monolithDLL.pdb"
                    ],
                    "titles": [
                        "PDB paths"
                    ]
                }
            },
            {
                "token": {
                    "id": "<PATH_0xc81b1592>",
                    "type": "Path",
                    "value": "c:\\users\\admin\\source\\repos\\drx\\x64\\release\\zos.pdb"
                },
                "references": {
                    "sentences": [
                        "C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\sb.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\zOS.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\ThrowbackDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\drxDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\monolithDLL.pdb"
                    ],
                    "titles": [
                        "PDB paths"
                    ]
                }
            },
            {
                "token": {
                    "id": "<PATH_0x7bd58861>",
                    "type": "Path",
                    "value": "c:\\users\\admin\\source\\repos\\drx\\x64\\release\\throwbackdll.pdb"
                },
                "references": {
                    "sentences": [
                        "C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\sb.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\zOS.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\ThrowbackDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\drxDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\monolithDLL.pdb"
                    ],
                    "titles": [
                        "PDB paths"
                    ]
                }
            },
            {
                "token": {
                    "id": "<PATH_0xcaedab00>",
                    "type": "Path",
                    "value": "c:\\users\\admin\\source\\repos\\drx\\x64\\release\\drxdll.pdb"
                },
                "references": {
                    "sentences": [
                        "C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\sb.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\zOS.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\ThrowbackDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\drxDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\monolithDLL.pdb"
                    ],
                    "titles": [
                        "PDB paths"
                    ]
                }
            },
            {
                "token": {
                    "id": "<PATH_0xa9ea6b04>",
                    "type": "Path",
                    "value": "c:\\users\\admin\\source\\repos\\drx\\x64\\release\\monolithdll.pdb"
                },
                "references": {
                    "sentences": [
                        "C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\sb.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\zOS.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\ThrowbackDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\drxDLL.pdb<crlf>C:\\Users\\admin\\source\\repos\\drx\\x64\\Release\\monolithDLL.pdb"
                    ],
                    "titles": [
                        "PDB paths"
                    ]
                }
            }
        ],
        "Domain": [
            {
                "token": {
                    "id": "<DOMAIN_0xe079716>",
                    "type": "Domain",
                    "value": "eleed.online"
                },
                "references": {
                    "sentences": [
                        "The module decrypts C2 domains with a one- byte XOR key. In the case of this sample there is only one domain, eleed[.]online. The Trojan is able to handle many of them, separated by the | character and encrypted. For further communications over plain HTTP, the Trojan chooses a random C2 from this set with user agent Mozilla 5.0."
                    ],
                    "titles": [
                        "Target fingerprinting",
                        "Infrastructure"
                    ]
                }
            },
            {
                "token": {
                    "id": "<DOMAIN_0xafa71a81>",
                    "type": "Domain",
                    "value": "eleed.cloud"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Infrastructure"
                    ]
                }
            },
            {
                "token": {
                    "id": "<DOMAIN_0xff82513>",
                    "type": "Domain",
                    "value": "timestechnologies.org"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Infrastructure"
                    ]
                }
            },
            {
                "token": {
                    "id": "<DOMAIN_0xfaff3bf8>",
                    "type": "Domain",
                    "value": "avstats.net"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Infrastructure"
                    ]
                }
            },
            {
                "token": {
                    "id": "<DOMAIN_0x9633faec>",
                    "type": "Domain",
                    "value": "mannlib.com"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Infrastructure"
                    ]
                }
            },
            {
                "token": {
                    "id": "<DOMAIN_0x148f4526>",
                    "type": "Domain",
                    "value": "nagios.dreamvps.com"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Infrastructure"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<DOMAIN_0x148f4526>",
                            "type": "Domain",
                            "value": "nagios.dreamvps.com"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd4229592>",
                            "type": "UnknownWord",
                            "value": "dreamvps"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<DOMAIN_0x1eb22930>",
                    "type": "Domain",
                    "value": "opswat.info"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Infrastructure"
                    ]
                }
            }
        ],
        "Url": [
            {
                "token": {
                    "id": "<URL_0x74ce5b25>",
                    "type": "Url",
                    "value": "https://opswat.info:443"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": [
                        "Work cycle"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0x74ce5b25>",
                            "type": "Url",
                            "value": "https://opswat.info:443"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x74ce5b25>",
                            "type": "Url",
                            "value": "https://opswat.info:443"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xc8ecca29>",
                            "type": "Category",
                            "value": "c2"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x74ce5b25>",
                            "type": "Url",
                            "value": "https://opswat.info:443"
                        },
                        "relation": "c2_from_net",
                        "dst": {
                            "id": "<URL_0x74ce5b25>",
                            "type": "Url",
                            "value": "https://opswat.info:443"
                        }
                    }
                ]
            }
        ],
        "IP": [
            {
                "token": {
                    "id": "<IP_0x45b04fe5>",
                    "type": "IP",
                    "value": "178.79.176.1"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Infrastructure"
                    ]
                }
            },
            {
                "token": {
                    "id": "<IP_0xf61e9b8b>",
                    "type": "IP",
                    "value": "185.145.253.62"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<IP_0xf61e9b8b>",
                            "type": "IP",
                            "value": "185.145.253.62"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd4229592>",
                            "type": "UnknownWord",
                            "value": "dreamvps"
                        }
                    }
                ]
            }
        ],
        "Hash": [
            {
                "token": {
                    "id": "<MD5_0xb4d3105e>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "822680649cdeabc781903870b34fb7a7"
                },
                "references": {
                    "sentences": [
                        "Dropper<crlf>822680649CDEABC781903870B34FB7A7<crlf>345A8745E1E3AE576FBCC69D3C8A310B<crlf>EF825FECD4E67D5EC5B9666A21FBBA2A<crlf>FA5943C673398D834FB328CE9B62AAAD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xb4d3105e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "822680649cdeabc781903870b34fb7a7"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xb4d3105e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "822680649cdeabc781903870b34fb7a7"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xed46ad08>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "345a8745e1e3ae576fbcc69d3c8a310b"
                },
                "references": {
                    "sentences": [
                        "Dropper<crlf>822680649CDEABC781903870B34FB7A7<crlf>345A8745E1E3AE576FBCC69D3C8A310B<crlf>EF825FECD4E67D5EC5B9666A21FBBA2A<crlf>FA5943C673398D834FB328CE9B62AAAD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xed46ad08>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "345a8745e1e3ae576fbcc69d3c8a310b"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xed46ad08>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "345a8745e1e3ae576fbcc69d3c8a310b"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x2545f62>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "ef825fecd4e67d5ec5b9666a21fbba2a"
                },
                "references": {
                    "sentences": [
                        "Dropper<crlf>822680649CDEABC781903870B34FB7A7<crlf>345A8745E1E3AE576FBCC69D3C8A310B<crlf>EF825FECD4E67D5EC5B9666A21FBBA2A<crlf>FA5943C673398D834FB328CE9B62AAAD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x2545f62>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ef825fecd4e67d5ec5b9666a21fbba2a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2545f62>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ef825fecd4e67d5ec5b9666a21fbba2a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xe2eb7520>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "fa5943c673398d834fb328ce9b62aaad"
                },
                "references": {
                    "sentences": [
                        "Dropper<crlf>822680649CDEABC781903870B34FB7A7<crlf>345A8745E1E3AE576FBCC69D3C8A310B<crlf>EF825FECD4E67D5EC5B9666A21FBBA2A<crlf>FA5943C673398D834FB328CE9B62AAAD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xe2eb7520>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "fa5943c673398d834fb328ce9b62aaad"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x49c0dad0>",
                            "type": "Category",
                            "value": "dropper"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xe2eb7520>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "fa5943c673398d834fb328ce9b62aaad"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x6bc5acc6>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "2080a099bdc7aa86db55badffbc71566"
                },
                "references": {
                    "sentences": [
                        "Logs code launcher<crlf>2080A099BDC7AA86DB55BADFFBC71566<crlf>0D415973F958AC30CB25BD845319D960<crlf>209A4D190DC1F6EC0968578905920641<crlf>E81187E1F2E6A2D4D3AD291120A42CE7"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x6bc5acc6>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "2080a099bdc7aa86db55badffbc71566"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xab3013f5>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "0d415973f958ac30cb25bd845319d960"
                },
                "references": {
                    "sentences": [
                        "Logs code launcher<crlf>2080A099BDC7AA86DB55BADFFBC71566<crlf>0D415973F958AC30CB25BD845319D960<crlf>209A4D190DC1F6EC0968578905920641<crlf>E81187E1F2E6A2D4D3AD291120A42CE7"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xab3013f5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0d415973f958ac30cb25bd845319d960"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x21c4e088>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "209a4d190dc1f6ec0968578905920641"
                },
                "references": {
                    "sentences": [
                        "Logs code launcher<crlf>2080A099BDC7AA86DB55BADFFBC71566<crlf>0D415973F958AC30CB25BD845319D960<crlf>209A4D190DC1F6EC0968578905920641<crlf>E81187E1F2E6A2D4D3AD291120A42CE7"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x21c4e088>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "209a4d190dc1f6ec0968578905920641"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x303bb605>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "e81187e1f2e6a2d4d3ad291120a42ce7"
                },
                "references": {
                    "sentences": [
                        "Logs code launcher<crlf>2080A099BDC7AA86DB55BADFFBC71566<crlf>0D415973F958AC30CB25BD845319D960<crlf>209A4D190DC1F6EC0968578905920641<crlf>E81187E1F2E6A2D4D3AD291120A42CE7"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x303bb605>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e81187e1f2e6a2d4d3ad291120a42ce7"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x7f5430cd>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "ace22457c868df82028db95e5a3b7984"
                },
                "references": {
                    "sentences": [
                        "HTTP Trojan<crlf>ACE22457C868DF82028DB95E5A3B7984<crlf>1CEDF339A13B1F7987D485CD80D141B6<crlf>24866291D5DEEE783624AB51516A078F<crlf>13B5E1654869985F2207D846E4C0DBFD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x7f5430cd>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ace22457c868df82028db95e5a3b7984"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x7f5430cd>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ace22457c868df82028db95e5a3b7984"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xff3c5e34>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "1cedf339a13b1f7987d485cd80d141b6"
                },
                "references": {
                    "sentences": [
                        "HTTP Trojan<crlf>ACE22457C868DF82028DB95E5A3B7984<crlf>1CEDF339A13B1F7987D485CD80D141B6<crlf>24866291D5DEEE783624AB51516A078F<crlf>13B5E1654869985F2207D846E4C0DBFD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xff3c5e34>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "1cedf339a13b1f7987d485cd80d141b6"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xff3c5e34>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "1cedf339a13b1f7987d485cd80d141b6"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x2f7ad6b>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "24866291d5deee783624ab51516a078f"
                },
                "references": {
                    "sentences": [
                        "HTTP Trojan<crlf>ACE22457C868DF82028DB95E5A3B7984<crlf>1CEDF339A13B1F7987D485CD80D141B6<crlf>24866291D5DEEE783624AB51516A078F<crlf>13B5E1654869985F2207D846E4C0DBFD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x2f7ad6b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "24866291d5deee783624ab51516a078f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2f7ad6b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "24866291d5deee783624ab51516a078f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x8d079925>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "13b5e1654869985f2207d846e4c0dbfd"
                },
                "references": {
                    "sentences": [
                        "HTTP Trojan<crlf>ACE22457C868DF82028DB95E5A3B7984<crlf>1CEDF339A13B1F7987D485CD80D141B6<crlf>24866291D5DEEE783624AB51516A078F<crlf>13B5E1654869985F2207D846E4C0DBFD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x8d079925>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "13b5e1654869985f2207d846e4c0dbfd"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x8d079925>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "13b5e1654869985f2207d846e4c0dbfd"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x3c9a63a8>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "59a46db173ea074ec345d4d8734cb89a"
                },
                "references": {
                    "sentences": [
                        "Named pipes trojan and similar<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>0B40033FB7C799536C921B1A1A02129F<crlf>603413FC026E4713E7D3EEDAB0DF5D8D",
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xda8a5fa8>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "0b40033fb7c799536c921b1a1a02129f"
                },
                "references": {
                    "sentences": [
                        "Named pipes trojan and similar<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>0B40033FB7C799536C921B1A1A02129F<crlf>603413FC026E4713E7D3EEDAB0DF5D8D"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xda8a5fa8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0b40033fb7c799536c921b1a1a02129f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xda8a5fa8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0b40033fb7c799536c921b1a1a02129f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x1a10b84c>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "603413fc026e4713e7d3eedab0df5d8d"
                },
                "references": {
                    "sentences": [
                        "Named pipes trojan and similar<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>0B40033FB7C799536C921B1A1A02129F<crlf>603413FC026E4713E7D3EEDAB0DF5D8D"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x1a10b84c>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "603413fc026e4713e7d3eedab0df5d8d"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0x151cee5c>",
                            "type": "Category",
                            "value": "trojan"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1a10b84c>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "603413fc026e4713e7d3eedab0df5d8d"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xc6623000>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "42a4913773bbda4bc9d01d48b4a7642f"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xc6623000>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "42a4913773bbda4bc9d01d48b4a7642f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xc6623000>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "42a4913773bbda4bc9d01d48b4a7642f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xc6623000>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "42a4913773bbda4bc9d01d48b4a7642f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xa9afba27>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "9619e13b034f64835f0476d68220a86b"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xa9afba27>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "9619e13b034f64835f0476d68220a86b"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xa9afba27>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "9619e13b034f64835f0476d68220a86b"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xa9afba27>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "9619e13b034f64835f0476d68220a86b"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x2c13cace>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "0c0acc057644b21f6e76dd676d4f2389"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x2c13cace>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0c0acc057644b21f6e76dd676d4f2389"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2c13cace>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0c0acc057644b21f6e76dd676d4f2389"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2c13cace>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0c0acc057644b21f6e76dd676d4f2389"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x1c97a3e>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "16eb7b5060e543237eca689bdc772148"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x1c97a3e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "16eb7b5060e543237eca689bdc772148"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1c97a3e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "16eb7b5060e543237eca689bdc772148"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1c97a3e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "16eb7b5060e543237eca689bdc772148"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xbceb25a5>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "54271c17684ca60c6ce37ee47b5493fb"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xbceb25a5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "54271c17684ca60c6ce37ee47b5493fb"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbceb25a5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "54271c17684ca60c6ce37ee47b5493fb"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbceb25a5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "54271c17684ca60c6ce37ee47b5493fb"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x603a9c20>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "77e06b01787b24343f62cf5d5a8f9995"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x603a9c20>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "77e06b01787b24343f62cf5d5a8f9995"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x603a9c20>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "77e06b01787b24343f62cf5d5a8f9995"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x603a9c20>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "77e06b01787b24343f62cf5d5a8f9995"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x73521e33>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "86737f0ae8cf01b395997cd5512b8fc8"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x73521e33>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "86737f0ae8cf01b395997cd5512b8fc8"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x73521e33>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "86737f0ae8cf01b395997cd5512b8fc8"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x73521e33>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "86737f0ae8cf01b395997cd5512b8fc8"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x372e56e7>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "964cb389ebf39f240e8c474e200caac3"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x372e56e7>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "964cb389ebf39f240e8c474e200caac3"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x372e56e7>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "964cb389ebf39f240e8c474e200caac3"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x372e56e7>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "964cb389ebf39f240e8c474e200caac3"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x18e8a9ec>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "a5c236982b0f1d26fb741df9e9925018"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x18e8a9ec>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "a5c236982b0f1d26fb741df9e9925018"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x18e8a9ec>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "a5c236982b0f1d26fb741df9e9925018"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x18e8a9ec>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "a5c236982b0f1d26fb741df9e9925018"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0xbedc8d5b>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "d408ff4fde7870e30804a1d1147efe7c"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0xbedc8d5b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "d408ff4fde7870e30804a1d1147efe7c"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbedc8d5b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "d408ff4fde7870e30804a1d1147efe7c"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbedc8d5b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "d408ff4fde7870e30804a1d1147efe7c"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x22159119>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "dff3c0d4f6e2c26936b9bd82db5a1735"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x22159119>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "dff3c0d4f6e2c26936b9bd82db5a1735"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x22159119>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "dff3c0d4f6e2c26936b9bd82db5a1735"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x22159119>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "dff3c0d4f6e2c26936b9bd82db5a1735"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x9fa63156>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "e13d963784c544b94d3db5616e50b8ae"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x9fa63156>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e13d963784c544b94d3db5616e50b8ae"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x9fa63156>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e13d963784c544b94d3db5616e50b8ae"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x9fa63156>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e13d963784c544b94d3db5616e50b8ae"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x85597e45>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "e9766c71159fc2051bbfc48a4639243f"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x85597e45>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e9766c71159fc2051bbfc48a4639243f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x85597e45>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e9766c71159fc2051bbfc48a4639243f"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x85597e45>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e9766c71159fc2051bbfc48a4639243f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x209dd80>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "f3da1e157e3e344788886b3ca29e02bd"
                },
                "references": {
                    "sentences": [
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD"
                    ],
                    "titles": [
                        "File Hashes (malicious documents, trojans, emails, decoys)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x209dd80>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "f3da1e157e3e344788886b3ca29e02bd"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x209dd80>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "f3da1e157e3e344788886b3ca29e02bd"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x209dd80>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "f3da1e157e3e344788886b3ca29e02bd"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    }
                ]
            }
        ]
    },
    "unknownwords": {
        "UnknownWord": [
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc605d7d3>",
                    "type": "UnknownWord",
                    "value": "stash"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "A new secret stash for fileless malware"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4180fd73>",
                    "type": "UnknownWord",
                    "value": "anti-detection"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
                        "For the anti-detection wrappers, different compilers are in use. Besides MSVC, Go compiler 1.17.2 and GCC under MinGW have been used. Decryptors differ a lot; the features they contain are listed in the table below:",
                        "We consider the event logs technique, which we havent seen before, the most innovative part of this campaign. With at least two commercial products in use, plus several types of last-stage RAT and anti-detection wrappers, the actor behind this campaign is quite capable. There is the possibility that some of the modules we described here as custom ones are part of a commercial toolset as well. The code is quite unique, with no similarities to known malware. We will continue to monitor similar activity.",
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD",
                        "One more visible common approach is the use of a lot of anti-detection decryptors. Actor uses different compilers, from Microsofts cl.exe or GCC under MinGW to a recent version of Go. Also, to avoid detection, some modules are signed with a digital certificate. We believe it is issued by the actor, because our telemetry doesnt show any legitimate software signed with it, only malicious code used in this campaign.",
                        "The variety of the campaigns techniques and modules looks impressive. Let us divide it into classes to technically describe this campaign. Actually, we need to cover the following sets of modules: commercial pentesting suites, custom anti-detection wrappers around them and last stage Trojans."
                    ],
                    "titles": [
                        "Anti-detection wrappers"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x372e56e7>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "964cb389ebf39f240e8c474e200caac3"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x18e8a9ec>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "a5c236982b0f1d26fb741df9e9925018"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1c97a3e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "16eb7b5060e543237eca689bdc772148"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x22159119>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "dff3c0d4f6e2c26936b9bd82db5a1735"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2c13cace>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0c0acc057644b21f6e76dd676d4f2389"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x85597e45>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e9766c71159fc2051bbfc48a4639243f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xa9afba27>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "9619e13b034f64835f0476d68220a86b"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x9fa63156>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e13d963784c544b94d3db5616e50b8ae"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xc6623000>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "42a4913773bbda4bc9d01d48b4a7642f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x73521e33>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "86737f0ae8cf01b395997cd5512b8fc8"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbedc8d5b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "d408ff4fde7870e30804a1d1147efe7c"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbceb25a5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "54271c17684ca60c6ce37ee47b5493fb"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x603a9c20>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "77e06b01787b24343f62cf5d5a8f9995"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x209dd80>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "f3da1e157e3e344788886b3ca29e02bd"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd930f538>",
                    "type": "UnknownWord",
                    "value": "trojantarget"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x289392a0>",
                    "type": "UnknownWord",
                    "value": "fingerprintingencrypted"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcd708f91>",
                    "type": "UnknownWord",
                    "value": "pipes-based"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": [
                        "Named pipes-based Trojan"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcd708f91>",
                            "type": "UnknownWord",
                            "value": "pipes-based"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9472a67>",
                    "type": "UnknownWord",
                    "value": "trojanwork"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x35b7b581>",
                    "type": "UnknownWord",
                    "value": "cycle"
                },
                "references": {
                    "sentences": [
                        "The Trojan location is C:\\Windows\\apds.dll. The original legitimate Microsoft Help Data Services Module library with the same name is in C:\\Windows\\System32. The main Trojan working cycle is in a separate thread. The malware also exports a Load() function, whose only purpose is to wait for a working thread, which is typical for this campaigns modules.",
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": [
                        "Work cycle"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x56e1a88d>",
                    "type": "UnknownWord",
                    "value": "compromisefile"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9bd3b20c>",
                    "type": "UnknownWord",
                    "value": "host-based"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": [
                        "Host-based IoCs"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x24862bb7>",
                    "type": "UnknownWord",
                    "value": "iocspdb"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdcdf2ef0>",
                    "type": "UnknownWord",
                    "value": "pdb"
                },
                "references": {
                    "sentences": [
                        "Here we want to mention that several .pdb paths inside binaries contain the projects directory C:\\Users\\admin\\source\\repos\\drx\\ and other modules not named after SilentBreak, such as drxDLL.dll. However, encryption functions are the same as in the publicly available Throwback code.",
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": [
                        "PDB paths"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0x8e3cbbca>",
                            "type": "Path",
                            "value": "c:\\users\\admin\\source\\repos\\drx"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xdcdf2ef0>",
                            "type": "UnknownWord",
                            "value": "pdb"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xdcdf2ef0>",
                            "type": "UnknownWord",
                            "value": "pdb"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x91bde76>",
                    "type": "UnknownWord",
                    "value": "denis"
                },
                "references": {
                    "sentences": [
                        "Denis Legezo"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x43b8e7d7>",
                    "type": "UnknownWord",
                    "value": "legezo"
                },
                "references": {
                    "sentences": [
                        "Denis Legezo"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb2869348>",
                    "type": "UnknownWord",
                    "value": "etw"
                },
                "references": {
                    "sentences": [
                        "In February 2022 we observed the technique of putting the shellcode into Windows event logs for the first time in the wild during the malicious campaign. It allows the fileless last stage Trojan to be hidden from plain sight in the file system. Such attention to the event logs in the campaign isnt limited to storing shellcodes. Dropper modules also patch Windows native API functions, related to event tracing (ETW) and anti-malware scan interface (AMSI), to make the infection process stealthier."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf2b02acc>",
                    "type": "UnknownWord",
                    "value": "amsi"
                },
                "references": {
                    "sentences": [
                        "In February 2022 we observed the technique of putting the shellcode into Windows event logs for the first time in the wild during the malicious campaign. It allows the fileless last stage Trojan to be hidden from plain sight in the file system. Such attention to the event logs in the campaign isnt limited to storing shellcodes. Dropper modules also patch Windows native API functions, related to event tracing (ETW) and anti-malware scan interface (AMSI), to make the infection process stealthier."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb62dc418>",
                    "type": "UnknownWord",
                    "value": "stealthier"
                },
                "references": {
                    "sentences": [
                        "In February 2022 we observed the technique of putting the shellcode into Windows event logs for the first time in the wild during the malicious campaign. It allows the fileless last stage Trojan to be hidden from plain sight in the file system. Such attention to the event logs in the campaign isnt limited to storing shellcodes. Dropper modules also patch Windows native API functions, related to event tracing (ETW) and anti-malware scan interface (AMSI), to make the infection process stealthier."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd0d6061>",
                    "type": "UnknownWord",
                    "value": "consideration"
                },
                "references": {
                    "sentences": [
                        "Besides event logs there are numerous other techniques in the actors toolset. Among them let us distinguish how the actor takes initial recon into consideration while developing the next malicious stages: the C2 web domain name mimicking the legitimate one and the name in use belonging to the existing and software used by the victim. For hosting the attacker uses virtual private servers on Linode, Namecheap, DreamVPS."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x53e3a885>",
                    "type": "UnknownWord",
                    "value": "mimicking"
                },
                "references": {
                    "sentences": [
                        "Keeping in mind truncated process injections, and even mimicking web domain registration, we could describe the attack process as quite iterative: initial recon with some modules and then preparation of additional attacks.",
                        "Besides event logs there are numerous other techniques in the actors toolset. Among them let us distinguish how the actor takes initial recon into consideration while developing the next malicious stages: the C2 web domain name mimicking the legitimate one and the name in use belonging to the existing and software used by the victim. For hosting the attacker uses virtual private servers on Linode, Namecheap, DreamVPS."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd4229592>",
                    "type": "UnknownWord",
                    "value": "dreamvps"
                },
                "references": {
                    "sentences": [
                        "Besides event logs there are numerous other techniques in the actors toolset. Among them let us distinguish how the actor takes initial recon into consideration while developing the next malicious stages: the C2 web domain name mimicking the legitimate one and the name in use belonging to the existing and software used by the victim. For hosting the attacker uses virtual private servers on Linode, Namecheap, DreamVPS."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<DOMAIN_0x148f4526>",
                            "type": "Domain",
                            "value": "nagios.dreamvps.com"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd4229592>",
                            "type": "UnknownWord",
                            "value": "dreamvps"
                        }
                    },
                    {
                        "src": {
                            "id": "<IP_0xf61e9b8b>",
                            "type": "IP",
                            "value": "185.145.253.62"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd4229592>",
                            "type": "UnknownWord",
                            "value": "dreamvps"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcbb186da>",
                    "type": "UnknownWord",
                    "value": "decryptors"
                },
                "references": {
                    "sentences": [
                        "For the anti-detection wrappers, different compilers are in use. Besides MSVC, Go compiler 1.17.2 and GCC under MinGW have been used. Decryptors differ a lot; the features they contain are listed in the table below:",
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD",
                        "One more visible common approach is the use of a lot of anti-detection decryptors. Actor uses different compilers, from Microsofts cl.exe or GCC under MinGW to a recent version of Go. Also, to avoid detection, some modules are signed with a digital certificate. We believe it is issued by the actor, because our telemetry doesnt show any legitimate software signed with it, only malicious code used in this campaign."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x85597e45>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e9766c71159fc2051bbfc48a4639243f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2c13cace>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0c0acc057644b21f6e76dd676d4f2389"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1c97a3e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "16eb7b5060e543237eca689bdc772148"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x22159119>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "dff3c0d4f6e2c26936b9bd82db5a1735"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x18e8a9ec>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "a5c236982b0f1d26fb741df9e9925018"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x372e56e7>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "964cb389ebf39f240e8c474e200caac3"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x209dd80>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "f3da1e157e3e344788886b3ca29e02bd"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xc6623000>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "42a4913773bbda4bc9d01d48b4a7642f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x603a9c20>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "77e06b01787b24343f62cf5d5a8f9995"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbceb25a5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "54271c17684ca60c6ce37ee47b5493fb"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbedc8d5b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "d408ff4fde7870e30804a1d1147efe7c"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x73521e33>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "86737f0ae8cf01b395997cd5512b8fc8"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x9fa63156>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e13d963784c544b94d3db5616e50b8ae"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xa9afba27>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "9619e13b034f64835f0476d68220a86b"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xcbb186da>",
                            "type": "UnknownWord",
                            "value": "decryptors"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xaca99cc6>",
                    "type": "UnknownWord",
                    "value": "gcc"
                },
                "references": {
                    "sentences": [
                        "For the anti-detection wrappers, different compilers are in use. Besides MSVC, Go compiler 1.17.2 and GCC under MinGW have been used. Decryptors differ a lot; the features they contain are listed in the table below:",
                        "One more visible common approach is the use of a lot of anti-detection decryptors. Actor uses different compilers, from Microsofts cl.exe or GCC under MinGW to a recent version of Go. Also, to avoid detection, some modules are signed with a digital certificate. We believe it is issued by the actor, because our telemetry doesnt show any legitimate software signed with it, only malicious code used in this campaign."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x75dcc8d>",
                            "type": "File",
                            "value": "cl.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xaca99cc6>",
                            "type": "UnknownWord",
                            "value": "gcc"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd062a912>",
                    "type": "UnknownWord",
                    "value": "stick"
                },
                "references": {
                    "sentences": [
                        "Regarding last stage Trojans: the actor decided not to stick to just one there are HTTP and named pipe based ones. Obviously besides the event logs the actor is obsessed with memory injection lots of RAT commands are related to it and are used heavily. Along with the aforementioned custom modules and techniques, several commercial pentesting tools like Cobalt Strike and NetSPI (ex-SilentBreak) are used.",
                        "The code, which we consider custom (Trojans, wrappers), has no similarities with previously known campaigns or previously registered SilentBreak toolset modules. Right now we prefer not to name the activity and instead stick to just SilentBreak given it is the most used among the tools here. If new modules appear and allow us to connect the activity to some actor we will update the name accordingly."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8234ba24>",
                    "type": "UnknownWord",
                    "value": "obviously"
                },
                "references": {
                    "sentences": [
                        "Regarding last stage Trojans: the actor decided not to stick to just one there are HTTP and named pipe based ones. Obviously besides the event logs the actor is obsessed with memory injection lots of RAT commands are related to it and are used heavily. Along with the aforementioned custom modules and techniques, several commercial pentesting tools like Cobalt Strike and NetSPI (ex-SilentBreak) are used.",
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x8234ba24>",
                            "type": "UnknownWord",
                            "value": "obviously"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x99b3f20c>",
                    "type": "UnknownWord",
                    "value": "obsessed"
                },
                "references": {
                    "sentences": [
                        "Regarding last stage Trojans: the actor decided not to stick to just one there are HTTP and named pipe based ones. Obviously besides the event logs the actor is obsessed with memory injection lots of RAT commands are related to it and are used heavily. Along with the aforementioned custom modules and techniques, several commercial pentesting tools like Cobalt Strike and NetSPI (ex-SilentBreak) are used."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd4e2fe19>",
                    "type": "UnknownWord",
                    "value": "pentesting"
                },
                "references": {
                    "sentences": [
                        "Regarding last stage Trojans: the actor decided not to stick to just one there are HTTP and named pipe based ones. Obviously besides the event logs the actor is obsessed with memory injection lots of RAT commands are related to it and are used heavily. Along with the aforementioned custom modules and techniques, several commercial pentesting tools like Cobalt Strike and NetSPI (ex-SilentBreak) are used.",
                        "After this introduction into the set of malware, we will now describe the infection chain: dropper injection with Cobalt Strike pentesting suite.",
                        "The variety of the campaigns techniques and modules looks impressive. Let us divide it into classes to technically describe this campaign. Actually, we need to cover the following sets of modules: commercial pentesting suites, custom anti-detection wrappers around them and last stage Trojans."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd3cffce1>",
                    "type": "UnknownWord",
                    "value": "hard"
                },
                "references": {
                    "sentences": [
                        "Actually, as we dont have commercial versions of the latter its hard to say which enumerated techniques came from the product and which are home-brewed. For sure, third-party code from GitHub is also in use: we registered at least BlackBone for legitimate processes in memory patching."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x796d569b>",
                    "type": "UnknownWord",
                    "value": "home-brewed"
                },
                "references": {
                    "sentences": [
                        "Actually, as we dont have commercial versions of the latter its hard to say which enumerated techniques came from the product and which are home-brewed. For sure, third-party code from GitHub is also in use: we registered at least BlackBone for legitimate processes in memory patching."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8118c724>",
                    "type": "UnknownWord",
                    "value": "in-memory"
                },
                "references": {
                    "sentences": [
                        "We started the research from the in-memory last stager and then, using our telemetry, were able to reconstruct several infection chains. What piqued our attention was the very targeted nature of the campaign and the vast set of tools in use, including commercial ones."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8b87ea2b>",
                    "type": "UnknownWord",
                    "value": "piqued"
                },
                "references": {
                    "sentences": [
                        "We started the research from the in-memory last stager and then, using our telemetry, were able to reconstruct several infection chains. What piqued our attention was the very targeted nature of the campaign and the vast set of tools in use, including commercial ones."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd7bdc8a7>",
                    "type": "UnknownWord",
                    "value": "vast"
                },
                "references": {
                    "sentences": [
                        "We started the research from the in-memory last stager and then, using our telemetry, were able to reconstruct several infection chains. What piqued our attention was the very targeted nature of the campaign and the vast set of tools in use, including commercial ones."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x78122bdf>",
                    "type": "UnknownWord",
                    "value": "suites"
                },
                "references": {
                    "sentences": [
                        "The variety of the campaigns techniques and modules looks impressive. Let us divide it into classes to technically describe this campaign. Actually, we need to cover the following sets of modules: commercial pentesting suites, custom anti-detection wrappers around them and last stage Trojans."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf45a5bf6>",
                    "type": "UnknownWord",
                    "value": "aes256"
                },
                "references": {
                    "sentences": [
                        "In Main.start the malware checks if the host is in the domain and only works if its true. Then it dynamically resolves the addresses of the aforementioned functions. The next stager is encrypted with AES256 (CBC mode), the key and IV are encoded with base64."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3336d5d8>",
                    "type": "UnknownWord",
                    "value": "decryptor"
                },
                "references": {
                    "sentences": [
                        "This layer of infection chain decrypts, maps into memory and launches the code. Not all of them are worth describing in detail, but we will cover the Go decryptor launcher for Cobalt Strike. All corresponding hashes are listed in the appendix."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x17def8a3>",
                    "type": "UnknownWord",
                    "value": "heavy"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1a48505b>",
                    "type": "UnknownWord",
                    "value": "cbc"
                },
                "references": {
                    "sentences": [
                        "In Main.start the malware checks if the host is in the domain and only works if its true. Then it dynamically resolves the addresses of the aforementioned functions. The next stager is encrypted with AES256 (CBC mode), the key and IV are encoded with base64."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x16cec52e>",
                    "type": "UnknownWord",
                    "value": "haven"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x122c8465>",
                    "type": "UnknownWord",
                    "value": "http-based"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x122c8465>",
                            "type": "UnknownWord",
                            "value": "http-based"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x122c8465>",
                            "type": "UnknownWord",
                            "value": "http-based"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe635f965>",
                    "type": "UnknownWord",
                    "value": "throwback"
                },
                "references": {
                    "sentences": [
                        "Before HTTP communications, the module sends empty (but still encrypted) data in an ICMP packet to check connection, using a hardcoded 32-byte long RC4 key. Like any other strings, this key is encrypted with the Throwback XOR-based algorithm.",
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters.",
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name.",
                        "Here we want to mention that several .pdb paths inside binaries contain the projects directory C:\\Users\\admin\\source\\repos\\drx\\ and other modules not named after SilentBreak, such as drxDLL.dll. However, encryption functions are the same as in the publicly available Throwback code."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb5300056>",
                    "type": "UnknownWord",
                    "value": "slingshotdll"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x94e585d1>",
                            "type": "File",
                            "value": "monolithdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xb5300056>",
                            "type": "UnknownWord",
                            "value": "slingshotdll"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x86da866c>",
                    "type": "UnknownWord",
                    "value": "classification"
                },
                "references": {
                    "sentences": [
                        "Once again, some modules which we consider custom, such as wrappers and last stagers, could possibly be parts of commercial products. So now after some classification we are ready to analyze modules one by one."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x661f7341>",
                    "type": "UnknownWord",
                    "value": "persuading"
                },
                "references": {
                    "sentences": [
                        "The earliest phase of attack we observed took place in September 2021. The spreading of the Cobalt Strike module was achieved by persuading the target to download the link to the .rar on the legitimate site file.io, and run it themselves. The digital certificate for the Cobalt Strike module inside is below (during the campaign with the same one, 15 different stagers from wrappers to last stagers were signed):"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xec1d7467>",
                    "type": "UnknownWord",
                    "value": "aps"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7ca9fde1>",
                    "type": "UnknownWord",
                    "value": "truncated"
                },
                "references": {
                    "sentences": [
                        "Keeping in mind truncated process injections, and even mimicking web domain registration, we could describe the attack process as quite iterative: initial recon with some modules and then preparation of additional attacks."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x67e65fd8>",
                    "type": "UnknownWord",
                    "value": "iterative"
                },
                "references": {
                    "sentences": [
                        "Keeping in mind truncated process injections, and even mimicking web domain registration, we could describe the attack process as quite iterative: initial recon with some modules and then preparation of additional attacks."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe4b53251>",
                    "type": "UnknownWord",
                    "value": "remind"
                },
                "references": {
                    "sentences": [
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe4b53251>",
                            "type": "UnknownWord",
                            "value": "remind"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe4b53251>",
                            "type": "UnknownWord",
                            "value": "remind"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe4b53251>",
                            "type": "UnknownWord",
                            "value": "remind"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x341aa38a>",
                    "type": "UnknownWord",
                    "value": "abbreviation"
                },
                "references": {
                    "sentences": [
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x341aa38a>",
                            "type": "UnknownWord",
                            "value": "abbreviation"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x341aa38a>",
                            "type": "UnknownWord",
                            "value": "abbreviation"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x341aa38a>",
                            "type": "UnknownWord",
                            "value": "abbreviation"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb07b7b0e>",
                    "type": "UnknownWord",
                    "value": "<PATH_0x8e3cbbca>"
                },
                "references": {
                    "sentences": [
                        "Here we want to mention that several .pdb paths inside binaries contain the projects directory C:\\Users\\admin\\source\\repos\\drx\\ and other modules not named after SilentBreak, such as drxDLL.dll. However, encryption functions are the same as in the publicly available Throwback code."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0x8e3cbbca>",
                            "type": "Path",
                            "value": "c:\\users\\admin\\source\\repos\\drx"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xb07b7b0e>",
                            "type": "UnknownWord",
                            "value": "<PATH_0x8e3cbbca>"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xb07b7b0e>",
                            "type": "UnknownWord",
                            "value": "<PATH_0x8e3cbbca>"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x154fea21>",
                    "type": "UnknownWord",
                    "value": "msvc"
                },
                "references": {
                    "sentences": [
                        "For the anti-detection wrappers, different compilers are in use. Besides MSVC, Go compiler 1.17.2 and GCC under MinGW have been used. Decryptors differ a lot; the features they contain are listed in the table below:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe94653f9>",
                    "type": "UnknownWord",
                    "value": "whitelisted"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe94653f9>",
                            "type": "UnknownWord",
                            "value": "whitelisted"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf4f52e06>",
                    "type": "UnknownWord",
                    "value": "autorunned"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xf4f52e06>",
                            "type": "UnknownWord",
                            "value": "autorunned"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4742dce6>",
                    "type": "UnknownWord",
                    "value": "logging-related"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4742dce6>",
                            "type": "UnknownWord",
                            "value": "logging-related"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9cab34fe>",
                    "type": "UnknownWord",
                    "value": "etweventwritefull"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x9cab34fe>",
                            "type": "UnknownWord",
                            "value": "etweventwritefull"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa900696>",
                    "type": "UnknownWord",
                    "value": "self-address"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa900696>",
                            "type": "UnknownWord",
                            "value": "self-address"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8d2fd742>",
                    "type": "UnknownWord",
                    "value": "divided"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xca76a1ed>",
                    "type": "UnknownWord",
                    "value": "erp"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xef522c72>",
                    "type": "UnknownWord",
                    "value": "writeprocessmemory"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x5ed983fd>",
                            "type": "File",
                            "value": "kernel32.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3340d8c1>",
                            "type": "File",
                            "value": "main.init"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xeb1b9c86>",
                    "type": "UnknownWord",
                    "value": "row"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdb608ec4>",
                    "type": "UnknownWord",
                    "value": "rax"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6ced59b3>",
                    "type": "UnknownWord",
                    "value": "ret"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x102c2595>",
                    "type": "UnknownWord",
                    "value": "etwnotificationregister"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe24100b>",
                    "type": "UnknownWord",
                    "value": "etweventregister"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2ff142be>",
                    "type": "UnknownWord",
                    "value": "etweventwrite"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa5d784b4>",
                    "type": "UnknownWord",
                    "value": "converted"
                },
                "references": {
                    "sentences": [
                        "With such an approach, it requires the researcher to code some script to gather the encrypted parts of the next module. After decryption, to get the final portable executable, data has to be converted further."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb00e09f6>",
                    "type": "UnknownWord",
                    "value": "rc4"
                },
                "references": {
                    "sentences": [
                        "Last stagers have two communication mechanisms over HTTP with RC4 encryption and unencrypted with named pipes. The latter way is technically able to communicate with any network visible external host, but under Windows named pipes are built upon the SMB protocol, which would barely open for external networks. So these modules most probably serve for lateral movement.",
                        "Before HTTP communications, the module sends empty (but still encrypted) data in an ICMP packet to check connection, using a hardcoded 32-byte long RC4 key. Like any other strings, this key is encrypted with the Throwback XOR-based algorithm.",
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd3d087d5>",
                    "type": "UnknownWord",
                    "value": "unencrypted"
                },
                "references": {
                    "sentences": [
                        "Last stagers have two communication mechanisms over HTTP with RC4 encryption and unencrypted with named pipes. The latter way is technically able to communicate with any network visible external host, but under Windows named pipes are built upon the SMB protocol, which would barely open for external networks. So these modules most probably serve for lateral movement."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x51ce4b6b>",
                    "type": "UnknownWord",
                    "value": "barely"
                },
                "references": {
                    "sentences": [
                        "Last stagers have two communication mechanisms over HTTP with RC4 encryption and unencrypted with named pipes. The latter way is technically able to communicate with any network visible external host, but under Windows named pipes are built upon the SMB protocol, which would barely open for external networks. So these modules most probably serve for lateral movement."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb7bb054f>",
                    "type": "UnknownWord",
                    "value": "passive"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3a6ede7a>",
                    "type": "UnknownWord",
                    "value": "xor-based"
                },
                "references": {
                    "sentences": [
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters.",
                        "Before HTTP communications, the module sends empty (but still encrypted) data in an ICMP packet to check connection, using a hardcoded 32-byte long RC4 key. Like any other strings, this key is encrypted with the Throwback XOR-based algorithm."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x3a6ede7a>",
                            "type": "UnknownWord",
                            "value": "xor-based"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x653dddfa>",
                    "type": "UnknownWord",
                    "value": "self"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfeabe56>",
                    "type": "UnknownWord",
                    "value": "dave"
                },
                "references": {
                    "sentences": [
                        "Address of next stage Trojan. It is also contained within the data extracted from the event logs<crlf>The standard ROR13 hash of exported function name Load inside this Trojan (0xE124D840)<crlf>Addresses of the string dave and constant 4, which become the arguments of the exported function, found by hash",
                        "Besides searching for the entry point and calling it, the shellcode also searches for a Trojan export by hardcoded hash and runs the found function with arguments dave and 4",
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x863451eb>",
                    "type": "UnknownWord",
                    "value": "profound"
                },
                "references": {
                    "sentences": [
                        "Another Trojan in use during this campaign is named pipe-based and has a more profound command system, including privilege escalation, screenshotting, inactivity time measurement, etc. Here, we come to the infection chain end. We continue with another last stage Trojan type, which we observed injected into processes like edge.exe."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7d3ebf0d>",
                    "type": "UnknownWord",
                    "value": "suite"
                },
                "references": {
                    "sentences": [
                        "After this introduction into the set of malware, we will now describe the infection chain: dropper injection with Cobalt Strike pentesting suite."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe314e8d7>",
                    "type": "UnknownWord",
                    "value": "wrapper-dropper"
                },
                "references": {
                    "sentences": [
                        "We start custom module analysis from the wrapper-dropper dynamic library. This code is injected into Windows processes such as explorer.exe. At its single entry point after being loaded into the virtual address space of the launcher process, the dropper removes files created by previous stages or executions."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa2b6732e>",
                    "type": "UnknownWord",
                    "value": "firstly"
                },
                "references": {
                    "sentences": [
                        "Firstly, the module copies the original legitimate OS error handler WerFault.exe to C:\\Windows\\Tasks. Then it drops one of the encrypted binary resources to the wer.dll file in the same directory for typical DLL search order hijacking. For the sake of persistence, the module sets the newly created WerFault.exe to autorun, creating a Windows Problem Reporting value in the Software\\Microsoft\\Windows\\CurrentVersion\\Run Windows system registry branch."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xa94304a2>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa2b6732e>",
                            "type": "UnknownWord",
                            "value": "firstly"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa2b6732e>",
                            "type": "UnknownWord",
                            "value": "firstly"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd6e4e2d5>",
                    "type": "UnknownWord",
                    "value": "handler"
                },
                "references": {
                    "sentences": [
                        "Firstly, the module copies the original legitimate OS error handler WerFault.exe to C:\\Windows\\Tasks. Then it drops one of the encrypted binary resources to the wer.dll file in the same directory for typical DLL search order hijacking. For the sake of persistence, the module sets the newly created WerFault.exe to autorun, creating a Windows Problem Reporting value in the Software\\Microsoft\\Windows\\CurrentVersion\\Run Windows system registry branch."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd6e4e2d5>",
                            "type": "UnknownWord",
                            "value": "handler"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xa94304a2>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd6e4e2d5>",
                            "type": "UnknownWord",
                            "value": "handler"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb6bca386>",
                    "type": "UnknownWord",
                    "value": "sake"
                },
                "references": {
                    "sentences": [
                        "Firstly, the module copies the original legitimate OS error handler WerFault.exe to C:\\Windows\\Tasks. Then it drops one of the encrypted binary resources to the wer.dll file in the same directory for typical DLL search order hijacking. For the sake of persistence, the module sets the newly created WerFault.exe to autorun, creating a Windows Problem Reporting value in the Software\\Microsoft\\Windows\\CurrentVersion\\Run Windows system registry branch."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xb6bca386>",
                            "type": "UnknownWord",
                            "value": "sake"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd225ae3f>",
                    "type": "UnknownWord",
                    "value": "currentversion"
                },
                "references": {
                    "sentences": [
                        "Firstly, the module copies the original legitimate OS error handler WerFault.exe to C:\\Windows\\Tasks. Then it drops one of the encrypted binary resources to the wer.dll file in the same directory for typical DLL search order hijacking. For the sake of persistence, the module sets the newly created WerFault.exe to autorun, creating a Windows Problem Reporting value in the Software\\Microsoft\\Windows\\CurrentVersion\\Run Windows system registry branch."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd225ae3f>",
                            "type": "UnknownWord",
                            "value": "currentversion"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd807a85b>",
                    "type": "UnknownWord",
                    "value": "kms"
                },
                "references": {
                    "sentences": [
                        "The dropper not only puts the launcher on disk for side-loading, but also writes information messages with shellcode into existing Windows KMS event log"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa5feaade>",
                    "type": "UnknownWord",
                    "value": "wouldnt"
                },
                "references": {
                    "sentences": [
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe41e0878>",
                            "type": "File",
                            "value": "wer.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xa5feaade>",
                            "type": "UnknownWord",
                            "value": "wouldnt"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf604d760>",
                    "type": "UnknownWord",
                    "value": "8kb"
                },
                "references": {
                    "sentences": [
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423.",
                        "This launcher, dropped into the Tasks directory by the first stager, proxies all calls to wer.dll and its exports to the original legitimate library. At the entry point, a separate thread combines all the aforementioned 8KB pieces into a complete shellcode and runs it. The same virtual address space, created by a copy of the legitimate WerFault.exe, is used for all this code."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x72b3a031>",
                    "type": "UnknownWord",
                    "value": "chunks"
                },
                "references": {
                    "sentences": [
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xccef45f5>",
                    "type": "UnknownWord",
                    "value": "reportevent"
                },
                "references": {
                    "sentences": [
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8c5411c0>",
                    "type": "UnknownWord",
                    "value": "lprawdata"
                },
                "references": {
                    "sentences": [
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc6c0fbf4>",
                    "type": "UnknownWord",
                    "value": "incremented"
                },
                "references": {
                    "sentences": [
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x313dace3>",
                    "type": "UnknownWord",
                    "value": "werfault"
                },
                "references": {
                    "sentences": [
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters.",
                        "To prevent WerFault continuing its error handling process, the DLL patches the launchers entry point with typical Blackbone trampolines"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x38948e78>",
                    "type": "UnknownWord",
                    "value": "trampolines"
                },
                "references": {
                    "sentences": [
                        "To prevent WerFault continuing its error handling process, the DLL patches the launchers entry point with typical Blackbone trampolines"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9fded84b>",
                    "type": "UnknownWord",
                    "value": "waitandexit"
                },
                "references": {
                    "sentences": [
                        "The way to stop the legitimate launchers execution isnt traditional. In the main thread, wer.dll finds its entry point and patches it with a simple function. WaitAndExit() on the screenshot above would just call WaitForSingleObject() with the log gathering thread id and then exit, meaning no real WerFault.exe error handling code could ever be executed: the spoofed DLL mapped into its address space would block it."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x9fded84b>",
                            "type": "UnknownWord",
                            "value": "waitandexit"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x67b9de62>",
                    "type": "UnknownWord",
                    "value": "waitforsingleobject"
                },
                "references": {
                    "sentences": [
                        "The way to stop the legitimate launchers execution isnt traditional. In the main thread, wer.dll finds its entry point and patches it with a simple function. WaitAndExit() on the screenshot above would just call WaitForSingleObject() with the log gathering thread id and then exit, meaning no real WerFault.exe error handling code could ever be executed: the spoofed DLL mapped into its address space would block it."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x67b9de62>",
                            "type": "UnknownWord",
                            "value": "waitforsingleobject"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xaaa9ce1>",
                    "type": "UnknownWord",
                    "value": "prepared"
                },
                "references": {
                    "sentences": [
                        "The launcher transmits control to the very first byte of the gathered shellcode. Here, three arguments for the next function are prepared:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x99c29cfc>",
                    "type": "UnknownWord",
                    "value": "ror13"
                },
                "references": {
                    "sentences": [
                        "Address of next stage Trojan. It is also contained within the data extracted from the event logs<crlf>The standard ROR13 hash of exported function name Load inside this Trojan (0xE124D840)<crlf>Addresses of the string dave and constant 4, which become the arguments of the exported function, found by hash"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfa746c74>",
                    "type": "UnknownWord",
                    "value": "wiped"
                },
                "references": {
                    "sentences": [
                        "The parsing of the next Windows portable executable to locate its entry point is quite typical. To make the next stage Trojan less visible, the actor wiped the MZ magic in its header. After calling the code at the Trojans entry point, the shellcode also searches for the requested export and invokes it."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe5eb1c7e>",
                    "type": "UnknownWord",
                    "value": "one-"
                },
                "references": {
                    "sentences": [
                        "The module decrypts C2 domains with a one- byte XOR key. In the case of this sample there is only one domain, eleed[.]online. The Trojan is able to handle many of them, separated by the | character and encrypted. For further communications over plain HTTP, the Trojan chooses a random C2 from this set with user agent Mozilla 5.0."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x533ce732>",
                    "type": "UnknownWord",
                    "value": "handle"
                },
                "references": {
                    "sentences": [
                        "The module decrypts C2 domains with a one- byte XOR key. In the case of this sample there is only one domain, eleed[.]online. The Trojan is able to handle many of them, separated by the | character and encrypted. For further communications over plain HTTP, the Trojan chooses a random C2 from this set with user agent Mozilla 5.0."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe5344010>",
                    "type": "UnknownWord",
                    "value": "machineguid"
                },
                "references": {
                    "sentences": [
                        "Values of MachineGUID from the SOFTWARE\\Microsoft\\Cryptography<crlf>Computer name<crlf>Local IP addresses obtained with GetAdaptersInfo<crlf>Architecture (x86 or x64)<crlf>OS version<crlf>Whether the current process has SeDebugPrivilege"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1148df6e>",
                    "type": "UnknownWord",
                    "value": "getadaptersinfo"
                },
                "references": {
                    "sentences": [
                        "Values of MachineGUID from the SOFTWARE\\Microsoft\\Cryptography<crlf>Computer name<crlf>Local IP addresses obtained with GetAdaptersInfo<crlf>Architecture (x86 or x64)<crlf>OS version<crlf>Whether the current process has SeDebugPrivilege"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdfce87c4>",
                    "type": "UnknownWord",
                    "value": "sedebugprivilege"
                },
                "references": {
                    "sentences": [
                        "Values of MachineGUID from the SOFTWARE\\Microsoft\\Cryptography<crlf>Computer name<crlf>Local IP addresses obtained with GetAdaptersInfo<crlf>Architecture (x86 or x64)<crlf>OS version<crlf>Whether the current process has SeDebugPrivilege"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x61465086>",
                    "type": "UnknownWord",
                    "value": "fingerprinter"
                },
                "references": {
                    "sentences": [
                        "The fingerprinter also appends 1.1 to the string (which could be the malware version) and the sleep time from the current config."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1892850f>",
                    "type": "UnknownWord",
                    "value": "icmp"
                },
                "references": {
                    "sentences": [
                        "Before HTTP communications, the module sends empty (but still encrypted) data in an ICMP packet to check connection, using a hardcoded 32-byte long RC4 key. Like any other strings, this key is encrypted with the Throwback XOR-based algorithm."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2eb3cb15>",
                    "type": "UnknownWord",
                    "value": "hasn"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe539604a>",
                    "type": "UnknownWord",
                    "value": "pid"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x326e7920>",
                    "type": "UnknownWord",
                    "value": "pipe-based"
                },
                "references": {
                    "sentences": [
                        "Another Trojan in use during this campaign is named pipe-based and has a more profound command system, including privilege escalation, screenshotting, inactivity time measurement, etc. Here, we come to the infection chain end. We continue with another last stage Trojan type, which we observed injected into processes like edge.exe."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd1db99a6>",
                    "type": "UnknownWord",
                    "value": "inactivity"
                },
                "references": {
                    "sentences": [
                        "Another Trojan in use during this campaign is named pipe-based and has a more profound command system, including privilege escalation, screenshotting, inactivity time measurement, etc. Here, we come to the infection chain end. We continue with another last stage Trojan type, which we observed injected into processes like edge.exe."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x54539c70>",
                    "type": "UnknownWord",
                    "value": "measurement"
                },
                "references": {
                    "sentences": [
                        "Another Trojan in use during this campaign is named pipe-based and has a more profound command system, including privilege escalation, screenshotting, inactivity time measurement, etc. Here, we come to the infection chain end. We continue with another last stage Trojan type, which we observed injected into processes like edge.exe."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x89eb08ee>",
                    "type": "UnknownWord",
                    "value": "self-exported"
                },
                "references": {
                    "sentences": [
                        "First, the main trojan thread gets the original apds.dll and exports and saves it into an allocated new heap buffer right after the Trojans image in memory. Then the Trojan edits the self-exported functions data in a way that allows it to call the original apds.dll exports through the crafted stubs like the following, where the address is the one parsed from the real apds.dll:"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x86377aa6>",
                            "type": "File",
                            "value": "apds.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x89eb08ee>",
                            "type": "UnknownWord",
                            "value": "self-exported"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd4fc6788>",
                    "type": "UnknownWord",
                    "value": "stubs"
                },
                "references": {
                    "sentences": [
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop.",
                        "First, the main trojan thread gets the original apds.dll and exports and saves it into an allocated new heap buffer right after the Trojans image in memory. Then the Trojan edits the self-exported functions data in a way that allows it to call the original apds.dll exports through the crafted stubs like the following, where the address is the one parsed from the real apds.dll:"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x86377aa6>",
                            "type": "File",
                            "value": "apds.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd4fc6788>",
                            "type": "UnknownWord",
                            "value": "stubs"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd24f890b>",
                    "type": "UnknownWord",
                    "value": "trampoline"
                },
                "references": {
                    "sentences": [
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3511b696>",
                    "type": "UnknownWord",
                    "value": "remotememory"
                },
                "references": {
                    "sentences": [
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xead285ab>",
                    "type": "UnknownWord",
                    "value": "buildtrampoline"
                },
                "references": {
                    "sentences": [
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7cfa701e>",
                    "type": "UnknownWord",
                    "value": "recreating"
                },
                "references": {
                    "sentences": [
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc47ef981>",
                    "type": "UnknownWord",
                    "value": "self-exports"
                },
                "references": {
                    "sentences": [
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x528af91f>",
                    "type": "UnknownWord",
                    "value": "duplex-named"
                },
                "references": {
                    "sentences": [
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3d8ccf44>",
                    "type": "UnknownWord",
                    "value": "monolithpipe"
                },
                "references": {
                    "sentences": [
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423.",
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x51ab7028>",
                    "type": "UnknownWord",
                    "value": "lightly"
                },
                "references": {
                    "sentences": [
                        "After the aforementioned manipulations with exported functions, the module lightly fingerprints the host with architecture and Windows version information. The Trojan also initializes a random 11-byte ASCII string using the rare constant mentioned, e.g., here in the init_keys function. The result serves as a unique session id."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x89147a11>",
                    "type": "UnknownWord",
                    "value": "initializes"
                },
                "references": {
                    "sentences": [
                        "After the aforementioned manipulations with exported functions, the module lightly fingerprints the host with architecture and Windows version information. The Trojan also initializes a random 11-byte ASCII string using the rare constant mentioned, e.g., here in the init_keys function. The result serves as a unique session id."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xeeab1ee3>",
                    "type": "UnknownWord",
                    "value": "11-byte"
                },
                "references": {
                    "sentences": [
                        "After the aforementioned manipulations with exported functions, the module lightly fingerprints the host with architecture and Windows version information. The Trojan also initializes a random 11-byte ASCII string using the rare constant mentioned, e.g., here in the init_keys function. The result serves as a unique session id."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf1068bb1>",
                    "type": "UnknownWord",
                    "value": "init_keys"
                },
                "references": {
                    "sentences": [
                        "After the aforementioned manipulations with exported functions, the module lightly fingerprints the host with architecture and Windows version information. The Trojan also initializes a random 11-byte ASCII string using the rare constant mentioned, e.g., here in the init_keys function. The result serves as a unique session id."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6e73dd4d>",
                    "type": "UnknownWord",
                    "value": "https"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe7a8aaa3>",
                    "type": "UnknownWord",
                    "value": "self-signed"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7efb6f25>",
                    "type": "UnknownWord",
                    "value": "dhga"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfe9a78dd>",
                    "type": "UnknownWord",
                    "value": "81k1"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x78499417>",
                    "type": "UnknownWord",
                    "value": "392-"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x47cb1eaa>",
                    "type": "UnknownWord",
                    "value": "43<kakjaipa8"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4f388d31>",
                    "type": "UnknownWord",
                    "value": "pipes-"
                },
                "references": {
                    "sentences": [
                        "The malware connects to the hardcoded domain on port 443 (in this case https://opswat[.]info:443) and sends POST requests to submit.php on the C2 side. HTTPS connection options are set to accept self-signed certificates on the server side. The C2 communication in this case is encrypted with an RC4 algorithm with the Dhga(81K1!392-!(43<KakjaiPA8$#ja key. In the case of the named pipes- based Trojan, the common commands are:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7af28d61>",
                    "type": "UnknownWord",
                    "value": "invoke-reflectivepeinjection"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc43fb8ea>",
                    "type": "UnknownWord",
                    "value": "reflectively"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb92c2b8f>",
                    "type": "UnknownWord",
                    "value": "rc4-encrypted"
                },
                "references": {
                    "sentences": [
                        "We have now covered the three layers of the campaign. Interestingly, we observed a Trojan with a complete command set as in the table above, but still using RC4-encrypted HTTP communications with the C2 instead of named pipes. The last stage samples look like a modular platform, whose capabilities the actor is able to combine according to their current needs."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x89d5591f>",
                    "type": "UnknownWord",
                    "value": "combine"
                },
                "references": {
                    "sentences": [
                        "We have now covered the three layers of the campaign. Interestingly, we observed a Trojan with a complete command set as in the table above, but still using RC4-encrypted HTTP communications with the C2 instead of named pipes. The last stage samples look like a modular platform, whose capabilities the actor is able to combine according to their current needs."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xada99ded>",
                    "type": "UnknownWord",
                    "value": "prefer"
                },
                "references": {
                    "sentences": [
                        "The code, which we consider custom (Trojans, wrappers), has no similarities with previously known campaigns or previously registered SilentBreak toolset modules. Right now we prefer not to name the activity and instead stick to just SilentBreak given it is the most used among the tools here. If new modules appear and allow us to connect the activity to some actor we will update the name accordingly."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7e560d97>",
                    "type": "UnknownWord",
                    "value": "accordingly"
                },
                "references": {
                    "sentences": [
                        "The code, which we consider custom (Trojans, wrappers), has no similarities with previously known campaigns or previously registered SilentBreak toolset modules. Right now we prefer not to name the activity and instead stick to just SilentBreak given it is the most used among the tools here. If new modules appear and allow us to connect the activity to some actor we will update the name accordingly."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xffbb8093>",
                    "type": "UnknownWord",
                    "value": "havent"
                },
                "references": {
                    "sentences": [
                        "We consider the event logs technique, which we havent seen before, the most innovative part of this campaign. With at least two commercial products in use, plus several types of last-stage RAT and anti-detection wrappers, the actor behind this campaign is quite capable. There is the possibility that some of the modules we described here as custom ones are part of a commercial toolset as well. The code is quite unique, with no similarities to known malware. We will continue to monitor similar activity."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x982e6a6a>",
                    "type": "UnknownWord",
                    "value": "innovative"
                },
                "references": {
                    "sentences": [
                        "We consider the event logs technique, which we havent seen before, the most innovative part of this campaign. With at least two commercial products in use, plus several types of last-stage RAT and anti-detection wrappers, the actor behind this campaign is quite capable. There is the possibility that some of the modules we described here as custom ones are part of a commercial toolset as well. The code is quite unique, with no similarities to known malware. We will continue to monitor similar activity."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x765a93e3>",
                    "type": "UnknownWord",
                    "value": "last-stage"
                },
                "references": {
                    "sentences": [
                        "We consider the event logs technique, which we havent seen before, the most innovative part of this campaign. With at least two commercial products in use, plus several types of last-stage RAT and anti-detection wrappers, the actor behind this campaign is quite capable. There is the possibility that some of the modules we described here as custom ones are part of a commercial toolset as well. The code is quite unique, with no similarities to known malware. We will continue to monitor similar activity."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc7caa1db>",
                    "type": "UnknownWord",
                    "value": "legit"
                },
                "references": {
                    "sentences": [
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0x45153ed5>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks\\werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xc7caa1db>",
                            "type": "UnknownWord",
                            "value": "legit"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x464058a2>",
                    "type": "UnknownWord",
                    "value": "sideload"
                },
                "references": {
                    "sentences": [
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0x45153ed5>",
                            "type": "Path",
                            "value": "c:\\windows\\tasks\\werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x464058a2>",
                            "type": "UnknownWord",
                            "value": "sideload"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa7401435>",
                    "type": "UnknownWord",
                    "value": "auto"
                },
                "references": {
                    "sentences": [
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x26fd929>",
                    "type": "UnknownWord",
                    "value": "increments"
                },
                "references": {
                    "sentences": [
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423."
                    ],
                    "titles": []
                }
            }
        ]
    },
    "other_links": [],
    "info": {
        "potential_threats": {
            "<UNKNOWNWORD_0x4180fd73>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x4180fd73>",
                    "type": "UnknownWord",
                    "value": "anti-detection"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
                        "For the anti-detection wrappers, different compilers are in use. Besides MSVC, Go compiler 1.17.2 and GCC under MinGW have been used. Decryptors differ a lot; the features they contain are listed in the table below:",
                        "We consider the event logs technique, which we havent seen before, the most innovative part of this campaign. With at least two commercial products in use, plus several types of last-stage RAT and anti-detection wrappers, the actor behind this campaign is quite capable. There is the possibility that some of the modules we described here as custom ones are part of a commercial toolset as well. The code is quite unique, with no similarities to known malware. We will continue to monitor similar activity.",
                        "Anti-detection wrappers/decryptors/launchers, not malicious by themselves<crlf>42A4913773BBDA4BC9D01D48B4A7642F<crlf>9619E13B034F64835F0476D68220A86B<crlf>0C0ACC057644B21F6E76DD676D4F2389<crlf>16EB7B5060E543237ECA689BDC772148<crlf>54271C17684CA60C6CE37EE47B5493FB<crlf>77E06B01787B24343F62CF5D5A8F9995<crlf>86737F0AE8CF01B395997CD5512B8FC8<crlf>964CB389EBF39F240E8C474E200CAAC3<crlf>59A46DB173EA074EC345D4D8734CB89A<crlf>A5C236982B0F1D26FB741DF9E9925018<crlf>D408FF4FDE7870E30804A1D1147EFE7C<crlf>DFF3C0D4F6E2C26936B9BD82DB5A1735<crlf>E13D963784C544B94D3DB5616E50B8AE<crlf>E9766C71159FC2051BBFC48A4639243F<crlf>F3DA1E157E3E344788886B3CA29E02BD",
                        "One more visible common approach is the use of a lot of anti-detection decryptors. Actor uses different compilers, from Microsofts cl.exe or GCC under MinGW to a recent version of Go. Also, to avoid detection, some modules are signed with a digital certificate. We believe it is issued by the actor, because our telemetry doesnt show any legitimate software signed with it, only malicious code used in this campaign.",
                        "The variety of the campaigns techniques and modules looks impressive. Let us divide it into classes to technically describe this campaign. Actually, we need to cover the following sets of modules: commercial pentesting suites, custom anti-detection wrappers around them and last stage Trojans."
                    ],
                    "titles": [
                        "Anti-detection wrappers"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x372e56e7>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "964cb389ebf39f240e8c474e200caac3"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x18e8a9ec>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "a5c236982b0f1d26fb741df9e9925018"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x1c97a3e>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "16eb7b5060e543237eca689bdc772148"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x22159119>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "dff3c0d4f6e2c26936b9bd82db5a1735"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x3c9a63a8>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "59a46db173ea074ec345d4d8734cb89a"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x2c13cace>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "0c0acc057644b21f6e76dd676d4f2389"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x85597e45>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e9766c71159fc2051bbfc48a4639243f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xa9afba27>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "9619e13b034f64835f0476d68220a86b"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x9fa63156>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "e13d963784c544b94d3db5616e50b8ae"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xc6623000>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "42a4913773bbda4bc9d01d48b4a7642f"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x73521e33>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "86737f0ae8cf01b395997cd5512b8fc8"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbedc8d5b>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "d408ff4fde7870e30804a1d1147efe7c"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0xbceb25a5>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "54271c17684ca60c6ce37ee47b5493fb"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x603a9c20>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "77e06b01787b24343f62cf5d5a8f9995"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x209dd80>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "f3da1e157e3e344788886b3ca29e02bd"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x4180fd73>",
                            "type": "UnknownWord",
                            "value": "anti-detection"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0xd930f538>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xd930f538>",
                    "type": "UnknownWord",
                    "value": "trojantarget"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x289392a0>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x289392a0>",
                    "type": "UnknownWord",
                    "value": "fingerprintingencrypted"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x9472a67>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x9472a67>",
                    "type": "UnknownWord",
                    "value": "trojanwork"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x56e1a88d>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x56e1a88d>",
                    "type": "UnknownWord",
                    "value": "compromisefile"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x9bd3b20c>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x9bd3b20c>",
                    "type": "UnknownWord",
                    "value": "host-based"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": [
                        "Host-based IoCs"
                    ]
                }
            },
            "<UNKNOWNWORD_0x24862bb7>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x24862bb7>",
                    "type": "UnknownWord",
                    "value": "iocspdb"
                },
                "references": {
                    "sentences": [
                        "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x43b8e7d7>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x43b8e7d7>",
                    "type": "UnknownWord",
                    "value": "legezo"
                },
                "references": {
                    "sentences": [
                        "Denis Legezo"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xd4229592>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xd4229592>",
                    "type": "UnknownWord",
                    "value": "dreamvps"
                },
                "references": {
                    "sentences": [
                        "Besides event logs there are numerous other techniques in the actors toolset. Among them let us distinguish how the actor takes initial recon into consideration while developing the next malicious stages: the C2 web domain name mimicking the legitimate one and the name in use belonging to the existing and software used by the victim. For hosting the attacker uses virtual private servers on Linode, Namecheap, DreamVPS."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<DOMAIN_0x148f4526>",
                            "type": "Domain",
                            "value": "nagios.dreamvps.com"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd4229592>",
                            "type": "UnknownWord",
                            "value": "dreamvps"
                        }
                    },
                    {
                        "src": {
                            "id": "<IP_0xf61e9b8b>",
                            "type": "IP",
                            "value": "185.145.253.62"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xd4229592>",
                            "type": "UnknownWord",
                            "value": "dreamvps"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0xe635f965>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xe635f965>",
                    "type": "UnknownWord",
                    "value": "throwback"
                },
                "references": {
                    "sentences": [
                        "Before HTTP communications, the module sends empty (but still encrypted) data in an ICMP packet to check connection, using a hardcoded 32-byte long RC4 key. Like any other strings, this key is encrypted with the Throwback XOR-based algorithm.",
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters.",
                        "Regarding the commercial tools, traces of SilentBreak and Cobalt Strike toolset usage in this campaign are quite visible. Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name.",
                        "Here we want to mention that several .pdb paths inside binaries contain the projects directory C:\\Users\\admin\\source\\repos\\drx\\ and other modules not named after SilentBreak, such as drxDLL.dll. However, encryption functions are the same as in the publicly available Throwback code."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc8caf1e2>",
                            "type": "File",
                            "value": "slingshotdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3eb0f19>",
                            "type": "File",
                            "value": "sb.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x6297dcba>",
                            "type": "File",
                            "value": "throwbackdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x9685345a>",
                            "type": "File",
                            "value": "drxdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xe635f965>",
                            "type": "UnknownWord",
                            "value": "throwback"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0x9cab34fe>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x9cab34fe>",
                    "type": "UnknownWord",
                    "value": "etweventwritefull"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x9cab34fe>",
                            "type": "UnknownWord",
                            "value": "etweventwritefull"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0xef522c72>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xef522c72>",
                    "type": "UnknownWord",
                    "value": "writeprocessmemory"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x5ed983fd>",
                            "type": "File",
                            "value": "kernel32.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x37412177>",
                            "type": "File",
                            "value": "ntdll.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x3340d8c1>",
                            "type": "File",
                            "value": "main.init"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xef522c72>",
                            "type": "UnknownWord",
                            "value": "writeprocessmemory"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0x102c2595>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x102c2595>",
                    "type": "UnknownWord",
                    "value": "etwnotificationregister"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xe24100b>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xe24100b>",
                    "type": "UnknownWord",
                    "value": "etweventregister"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x2ff142be>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x2ff142be>",
                    "type": "UnknownWord",
                    "value": "etweventwrite"
                },
                "references": {
                    "sentences": [
                        "Function names in the main package are obfuscated. Main.init decodes Windows API function names from kernel32.dll and ntdll.dll libraries (WriteProcessMemory and other functions) related to event log creation. Each of these names in the binary are base64-encoded four times in a row. Using WriteProcessMemory, the dropper patches with xor rax, rax; ret code the following functions in memory: EtwNotificationRegister, EtwEventRegister, EtwEventWriteFull, EtwEventWriteFull, EtwEventWrite."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xccef45f5>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xccef45f5>",
                    "type": "UnknownWord",
                    "value": "reportevent"
                },
                "references": {
                    "sentences": [
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x8c5411c0>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x8c5411c0>",
                    "type": "UnknownWord",
                    "value": "lprawdata"
                },
                "references": {
                    "sentences": [
                        "The dropped wer.dll is a loader and wouldnt do any harm without the shellcode hidden in Windows event logs. The dropper searches the event logs for records with category 0x4142 (AB in ASCII) and having the Key Management Service as a source. If none is found, the 8KB chunks of shellcode are written into the information logging messages via the ReportEvent() Windows API function (lpRawData parameter). Created event IDs are automatically incremented, starting from 1423."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x313dace3>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x313dace3>",
                    "type": "UnknownWord",
                    "value": "werfault"
                },
                "references": {
                    "sentences": [
                        "For last stagers we will be a bit more detailed than for auxiliary modules before. The C++ module obviously used the code from SilentBreaks (now NetSPIs) Throwback public repository: XOR-based encryption function, original file name for some samples, e.g., ThrowbackDLL.dll, etc. Let us start here with the aforementioned Load() exported function. Its just like the patching of WerFault above (the function waits on the main Trojan thread) but it ignores any parameters, so dave and 4 are unused. It is possible this launcher supports more modules than just this one, which would require parameters.",
                        "To prevent WerFault continuing its error handling process, the DLL patches the launchers entry point with typical Blackbone trampolines"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x67b9de62>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x67b9de62>",
                    "type": "UnknownWord",
                    "value": "waitforsingleobject"
                },
                "references": {
                    "sentences": [
                        "The way to stop the legitimate launchers execution isnt traditional. In the main thread, wer.dll finds its entry point and patches it with a simple function. WaitAndExit() on the screenshot above would just call WaitForSingleObject() with the log gathering thread id and then exit, meaning no real WerFault.exe error handling code could ever be executed: the spoofed DLL mapped into its address space would block it."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x82f2452b>",
                            "type": "File",
                            "value": "werfault.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x67b9de62>",
                            "type": "UnknownWord",
                            "value": "waitforsingleobject"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0x99c29cfc>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x99c29cfc>",
                    "type": "UnknownWord",
                    "value": "ror13"
                },
                "references": {
                    "sentences": [
                        "Address of next stage Trojan. It is also contained within the data extracted from the event logs<crlf>The standard ROR13 hash of exported function name Load inside this Trojan (0xE124D840)<crlf>Addresses of the string dave and constant 4, which become the arguments of the exported function, found by hash"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xe5344010>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xe5344010>",
                    "type": "UnknownWord",
                    "value": "machineguid"
                },
                "references": {
                    "sentences": [
                        "Values of MachineGUID from the SOFTWARE\\Microsoft\\Cryptography<crlf>Computer name<crlf>Local IP addresses obtained with GetAdaptersInfo<crlf>Architecture (x86 or x64)<crlf>OS version<crlf>Whether the current process has SeDebugPrivilege"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x1148df6e>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x1148df6e>",
                    "type": "UnknownWord",
                    "value": "getadaptersinfo"
                },
                "references": {
                    "sentences": [
                        "Values of MachineGUID from the SOFTWARE\\Microsoft\\Cryptography<crlf>Computer name<crlf>Local IP addresses obtained with GetAdaptersInfo<crlf>Architecture (x86 or x64)<crlf>OS version<crlf>Whether the current process has SeDebugPrivilege"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xdfce87c4>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xdfce87c4>",
                    "type": "UnknownWord",
                    "value": "sedebugprivilege"
                },
                "references": {
                    "sentences": [
                        "Values of MachineGUID from the SOFTWARE\\Microsoft\\Cryptography<crlf>Computer name<crlf>Local IP addresses obtained with GetAdaptersInfo<crlf>Architecture (x86 or x64)<crlf>OS version<crlf>Whether the current process has SeDebugPrivilege"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x3d8ccf44>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x3d8ccf44>",
                    "type": "UnknownWord",
                    "value": "monolithpipe"
                },
                "references": {
                    "sentences": [
                        "C:\\Windows\\Tasks\\wer.dll<crlf>C:\\Windows\\Tasks\\WerFault.exe copy of the legit one to sideload the malicious .dll<crlf>Named pipe MonolithPipe<crlf>Event logs with category 0x4142 in Key Management Service source. Events ID auto increments starting from 1423.",
                        "This trampoline code is taken from the Blackbone Windows memory hacking library (RemoteMemory::BuildTrampoline function). DLL hijacking isnt something new, we have seen such a technique used to proxy legitimate functions many times, but recreating self-exports with just short stubs to call the original legitimate functions is unusual. The module then creates a duplex-named pipe, MonolithPipe, and enters its main loop."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x7af28d61>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x7af28d61>",
                    "type": "UnknownWord",
                    "value": "invoke-reflectivepeinjection"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xb92c2b8f>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xb92c2b8f>",
                    "type": "UnknownWord",
                    "value": "rc4-encrypted"
                },
                "references": {
                    "sentences": [
                        "We have now covered the three layers of the campaign. Interestingly, we observed a Trojan with a complete command set as in the table above, but still using RC4-encrypted HTTP communications with the C2 instead of named pipes. The last stage samples look like a modular platform, whose capabilities the actor is able to combine according to their current needs."
                    ],
                    "titles": []
                }
            }
        },
        "sigma": false,
        "yara": false
    },
    "keywords": {
        "classified": [],
        "dubbed": [],
        "associated": [
            "Trojans named ThrowbackDLL.dll and SlingshotDLL.dll remind us of Throwback and Slingshot, which are both tools in SilentBreaks framework, while the sb associated with the dropper (sb.dll) could be an abbreviation of the vendors name"
        ],
        "targets": [],
        "attributed": [
            "The infection chain<crlf>Initial infection<crlf>Commercial tool sets<crlf>Anti-detection wrappers<crlf>Last stager types<crlf>Dropper in DLL, search order hijacking<crlf>Launcher in wer.dll<crlf>Shellcode into Windows event logs<crlf>HTTP TrojanTarget fingerprintingEncrypted HTTP communication with C2Trojan commands<crlf>Target fingerprinting<crlf>Encrypted HTTP communication with C2<crlf>Trojan commands<crlf>Named pipes-based TrojanWork cycle<crlf>Work cycle<crlf>Infrastructure<crlf>Attribution<crlf>Conclusions<crlf>Indicators of CompromiseFile Hashes (malicious documents, trojans, emails, decoys)Host-based IoCsPDB paths<crlf>File Hashes (malicious documents, trojans, emails, decoys)<crlf>Host-based IoCs<crlf>PDB paths",
            "attribution"
        ]
    },
    "resources": {
        "links": {
            "github": [
                "https://github.com/silentbreaksec/Throwback"
            ],
            "pastebin": [],
            "text_files": [],
            "other": [
                "https://securelist.com/category/malware-descriptions/",
                "https://securelist.com/author/denislegezo/",
                "https://securelist.com/category/malware-descriptions/",
                "https://opentip.kaspersky.com/822680649CDEABC781903870B34FB7A7/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/345A8745E1E3AE576FBCC69D3C8A310B/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/EF825FECD4E67D5EC5B9666A21FBBA2A/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/FA5943C673398D834FB328CE9B62AAAD/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/2080A099BDC7AA86DB55BADFFBC71566/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/0D415973F958AC30CB25BD845319D960/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/209A4D190DC1F6EC0968578905920641/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/E81187E1F2E6A2D4D3AD291120A42CE7/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/ACE22457C868DF82028DB95E5A3B7984/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/1CEDF339A13B1F7987D485CD80D141B6/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/24866291D5DEEE783624AB51516A078F/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/13B5E1654869985F2207D846E4C0DBFD/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/59A46DB173EA074EC345D4D8734CB89A/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/0B40033FB7C799536C921B1A1A02129F/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/603413FC026E4713E7D3EEDAB0DF5D8D/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/42A4913773BBDA4BC9D01D48B4A7642F/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/9619E13B034F64835F0476D68220A86B/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/0C0ACC057644B21F6E76DD676D4F2389/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/16EB7B5060E543237ECA689BDC772148/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/54271C17684CA60C6CE37EE47B5493FB/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/77E06B01787B24343F62CF5D5A8F9995/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/86737F0AE8CF01B395997CD5512B8FC8/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/964CB389EBF39F240E8C474E200CAAC3/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/59A46DB173EA074EC345D4D8734CB89A/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/A5C236982B0F1D26FB741DF9E9925018/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/D408FF4FDE7870E30804A1D1147EFE7C/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/DFF3C0D4F6E2C26936B9BD82DB5A1735/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/E13D963784C544B94D3DB5616E50B8AE/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/E9766C71159FC2051BBFC48A4639243F/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://opentip.kaspersky.com/F3DA1E157E3E344788886B3CA29E02BD/?utm_source=SL&utm_medium=SL&utm_campaign=SL",
                "https://securelist.com/tag/digital-certificates/",
                "https://securelist.com/tag/fileless-malware/",
                "https://securelist.com/tag/malware-descriptions/",
                "https://securelist.com/tag/malware-technologies/",
                "https://securelist.com/tag/rat-trojan/",
                "https://securelist.com/tag/targeted-attacks/",
                "https://securelist.com/author/denislegezo/"
            ]
        },
        "images": [
            "https://securelist.com/wp-content/themes/securelist2020/assets/images/icon/icon-categories.svg",
            "https://securelist.com/wp-content/themes/securelist2020/assets/images/icon/icon-categories--invert.svg",
            "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2021/11/26093821/abstract_digits_cell-1200x600.jpg",
            "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2021/04/19094141/Denis_Legezo_Securelist.jpg",
            "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2021/11/26093821/abstract_digits_cell-800x450.jpg",
            "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2022/04/28153130/SilentBreak_APT_toolset_01.png",
            "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2022/04/28153202/SilentBreak_APT_toolset_02-1024x93.png",
            "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2022/04/28153243/SilentBreak_APT_toolset_03-1024x699.png",
            "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2021/04/19094141/Denis_Legezo_Securelist.jpg"
        ]
    }
}