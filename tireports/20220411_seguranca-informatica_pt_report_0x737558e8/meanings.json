{
    "title": "Analysis of the SunnyDay ransomware. Introduction",
    "url": "https://seguranca-informatica.pt/analysis-of-the-sunnyday-ransomware/?utm_source=rss&utm_medium=rss&utm_campaign=analysis-of-the-sunnyday-ransomware",
    "threats": {
        "Threat": [
            {
                "token": {
                    "id": "<THREAT_0x1719f609>",
                    "type": "Threat",
                    "value": "sunnyday"
                },
                "references": {
                    "sentences": [
                        "Figure 1: SunnyDay release date, signature, and tooling details.",
                        "SunnyDay takes advantage of Windows APIs (CryptoAPI) to carry out the encryption process. The ransomware carried a unique RSA public blob (CSP) 2048-bit key and uses some API calls to extract the blob key to encrypt the Salsa20 key to encode the entire victims files.",
                        "We believe that SunnyDay can be a new variant or development of the next ransomware samples based on its code analysis and ransomware note structure:",
                        "SunnyDay sample is distributed in a form of a 64-bit binary and with the release date of Mar 07 05:47:03 2022 (UTC). According to the sample signatures, it was compiled and linked with Microsoft Visual C++ via Visual Studio 2019 16.2.0 preview 4.",
                        "Figure 15: SunnyDay ransomware note.",
                        "Deletes shadow copies (VSS) Terminates and stops target processes and services Generates a key to encrypt files by using SALSA20 stream cipher The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files It also contains a self-removing feature<crlf>Deletes shadow copies (VSS)<crlf>Terminates and stops target processes and services<crlf>Generates a key to encrypt files by using SALSA20 stream cipher<crlf>The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files<crlf>The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files<crlf>It also contains a self-removing feature",
                        "At the first glance, SunnyDay appears to use typical libraries found on popular ransomware samples. As observed in Figure 2, calls related to Windows CryptoAPI were found; a Windows library commonly found in several ransomware families these days. From this view, the ransomware seems using calls from wininet.dll to perform some communication to its C2; something that will be scrutinized towards the end of the analysis.",
                        "The public key is CALG_RSA_KEYX and is hardcoded inside the SunnyDay ransomware sample. This is an important detail about this malware as this blob is imported via the CrypImportKey API call and it will be used to encrypt the key used by SALSA20 to encode the victims files. The original RSA public key is present below as well.",
                        "SunnyDay is a simple piece of ransomware based on the SALSA20 stream cipher. It comes with an RSA public key blob embedded to encrypt a generated key used by the symmetric SALSA20 that will damage all the available files on the machine. One of the reasons criminals are using SALSA20 is because it offers speeds of around 414 cycles per byte in software on modern x86 processors and reasonable hardware performance (Wikipedia).",
                        "Analysis of the SunnyDay ransomware.",
                        "Figure 3: Sunnyday binary entropy confirming that it is not packed.",
                        "Below, some of the SALSA20 values found on the SunnyDay samples can be found in the CryptoPP library.",
                        "Figure 9: Details about the RSA public key blob hardcoded inside the SunnyDay ransomware sample.",
                        "SunnyDay ransomware has hardcoded a list of target services that it tries to stop during its execution. The following image shows it is trying to stop the vmickvexchange service via ControlService() call with the param SERVICE_STOP.",
                        "Figure 7: Full list of target processes found inside the SunnyDay sample.",
                        "Figure 21: Self-removing feature identified on the SunnyDay ransomware.",
                        "The main actions executed by SunnyDay during its execution are:",
                        "SunnyDay is a new development from other ransomware families and it is able of encrypting a target machine in a few minutes. This piece of malware takes advantage of the CryptoPP library to use the SALSA20 stream cipher during the encryption process and, thus, speed up the entire operation.",
                        "Figure 5: Hardcoded services observed in SunnyDay ransomware.",
                        "As observed on a Twitter presented below, SunnyDay seems to follow the same pattern seen in other samples of this nature. It looks like a new variant of the Ever101 malware, active since 2021 and also reported by Security Joes last year.",
                        "We recently came across a sample of the SunnyDay ransomware. As no significant information is available on this ransomware, we decided to write about its inner workings and technical details. As expected, we found some similarities between other ransomware samples such as Ever101, Medusa Locker, Curator, and Payment45. Although it has very similar features to the mentioned ransomware samples, we are not able to make any attribution to its threat group.",
                        "Figure 2: Windows libraries used by SunnyDay ransomware."
                    ],
                    "titles": [
                        "Digging into the Public Key Blob Format",
                        "Technical details of Sunnyday ransomware",
                        "Similarities between samples",
                        "Self-removing feature",
                        "Final Thoughts",
                        "The ransomware note",
                        "Analysis of the SunnyDay ransomware",
                        "Stoped services",
                        "Data encryption process",
                        "Terminated processes",
                        "Introduction",
                        "Analysis of the SunnyDay ransomware. Introduction"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xde0c197c>",
                            "type": "File",
                            "value": "wininet.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x5327cbf2>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ea504e669073d9e506fb403e633a68c8"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x8d264e34>",
                            "type": "File",
                            "value": "vssadmin.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA1_0x40b364a5>",
                            "type": "Hash",
                            "hash_type": "SHA1",
                            "value": "de6717493246599d8702e7d1fd6914aab5bd015d"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<COIN_0x7490d8ff>",
                            "type": "Coin",
                            "value": "1hsfsp9i6zcngyx7p84uhzdufc8k5axurx"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xfeb289fa>",
                            "type": "Path",
                            "value": "c:\\windows\\system32\\vssadmin.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x1a155c22>",
                            "type": "Threat",
                            "value": "medusalocker"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0x5be0b3cc>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0x1a155c22>",
                    "type": "Threat",
                    "value": "medusalocker"
                },
                "references": {
                    "sentences": [
                        "Ever101 MedusaLocker Curator Payment45; and Keversen<crlf>Ever101<crlf>MedusaLocker<crlf>Curator<crlf>Payment45; and<crlf>Keversen",
                        "We recently came across a sample of the SunnyDay ransomware. As no significant information is available on this ransomware, we decided to write about its inner workings and technical details. As expected, we found some similarities between other ransomware samples such as Ever101, Medusa Locker, Curator, and Payment45. Although it has very similar features to the mentioned ransomware samples, we are not able to make any attribution to its threat group."
                    ],
                    "titles": [
                        "Introduction",
                        "Similarities between samples"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0x1a155c22>",
                            "type": "Threat",
                            "value": "medusalocker"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x1a155c22>",
                            "type": "Threat",
                            "value": "medusalocker"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0xe1a456c4>",
                    "type": "Threat",
                    "value": "matrix_ransom"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Mitre Att&ck Matrix"
                    ]
                }
            }
        ]
    },
    "ttps": {},
    "meanings": {
        "Category": [
            {
                "token": {
                    "id": "<CATEGORY_0xa179f90c>",
                    "type": "Category",
                    "value": "ransomware"
                },
                "references": {
                    "sentences": [
                        "As can be seen, the compromised machines are identified with a randomly generated ID present at the end of the ransomware note file, along with two email addresses.",
                        "The ransomware note called !-Recovery_Instructions-!.txt file is dropped in each folder with the instructions to recover the damaged files.",
                        "We believe that SunnyDay can be a new variant or development of the next ransomware samples based on its code analysis and ransomware note structure:",
                        "The version of Tor Browser 8.5.3 is dated from June 2019 and so we believe that it could be a lot of junk and unused resources that come from another variant of this ransomware. This can be a clear sign of cooperation between threat groups.",
                        "Figure 15: SunnyDay ransomware note.",
                        "Figure 18: Information collected during the ransomware execution.",
                        "With this technique in place, it ensures that victims will not recover the damaged File System by using shadow copies a common process also used by other ransomware families.",
                        "At the first glance, SunnyDay appears to use typical libraries found on popular ransomware samples. As observed in Figure 2, calls related to Windows CryptoAPI were found; a Windows library commonly found in several ransomware families these days. From this view, the ransomware seems using calls from wininet.dll to perform some communication to its C2; something that will be scrutinized towards the end of the analysis.",
                        "Some file extensions and folders are bypassed during the ransomware encryption process. Some important directories are not damaged during the data encryption process, which may allow victims to recover some files in those directories. Also, some popular file extensions are untouchable, which can be an advantage for the victims side.",
                        "This ransomware uses a single SALSA20 key to encrypt all the files on a specific machine. The key is generated via CryptoGenRandom() call and next it is encrypted with the RSA 2048-bit key present on the ransomware samples. Finally, the SALSA20 key with 512 bytes is appended at the end of the encrypted files.",
                        "#Ransomware<crlf>EA504E669073D9E506FB403E633A68C8",
                        "The public key is CALG_RSA_KEYX and is hardcoded inside the SunnyDay ransomware sample. This is an important detail about this malware as this blob is imported via the CrypImportKey API call and it will be used to encrypt the key used by SALSA20 to encode the victims files. The original RSA public key is present below as well.",
                        "SunnyDay is a simple piece of ransomware based on the SALSA20 stream cipher. It comes with an RSA public key blob embedded to encrypt a generated key used by the symmetric SALSA20 that will damage all the available files on the machine. One of the reasons criminals are using SALSA20 is because it offers speeds of around 414 cycles per byte in software on modern x86 processors and reasonable hardware performance (Wikipedia).",
                        "Analysis of the SunnyDay ransomware.",
                        "A link to download a specific TOR browser version was found during the ransomware analysis. Also, a stream of data with some details about the infected machine was observed, potentially to notify criminals about new infections.",
                        "Taking a look at the entropy of the binary, there is no obfuscation in place. Some ransomware families are not using significant features related to code obfuscation and bypassing virtual machines and sandbox environments. In fact, this point moves straightforwardly to its genesis: the principle of causing total destruction in all types of systems and infrastructures not wasting time with useless things.",
                        "Figure 9: Details about the RSA public key blob hardcoded inside the SunnyDay ransomware sample.",
                        "SunnyDay ransomware has hardcoded a list of target services that it tries to stop during its execution. The following image shows it is trying to stop the vmickvexchange service via ControlService() call with the param SERVICE_STOP.",
                        "As observed, a lot of information is collected during the ransomware execution, namely:",
                        "Figure 21: Self-removing feature identified on the SunnyDay ransomware.",
                        "SunnyDay is a new development from other ransomware families and it is able of encrypting a target machine in a few minutes. This piece of malware takes advantage of the CryptoPP library to use the SALSA20 stream cipher during the encryption process and, thus, speed up the entire operation.",
                        "Once running, the ransomware deletes all the shadow files on the machine by using the vssadmin.exe Windows utility.",
                        "A list of target processes can also be found on the ransomware binary file. As can be seen, the ransomware obtains the double-linked list of processes via CreateToolhel32Snapshot() and compares each process with the hardcoded ones. If it matches, the process is terminated via TerminateProcess() call. In addition, the tree of processes is iterated by using the Process32NextW() Windows call.",
                        "Figure 5: Hardcoded services observed in SunnyDay ransomware.",
                        "SunnyDay takes advantage of Windows APIs (CryptoAPI) to carry out the encryption process. The ransomware carried a unique RSA public blob (CSP) 2048-bit key and uses some API calls to extract the blob key to encrypt the Salsa20 key to encode the entire victims files.",
                        "We recently came across a sample of the SunnyDay ransomware. As no significant information is available on this ransomware, we decided to write about its inner workings and technical details. As expected, we found some similarities between other ransomware samples such as Ever101, Medusa Locker, Curator, and Payment45. Although it has very similar features to the mentioned ransomware samples, we are not able to make any attribution to its threat group.",
                        "Figure 2: Windows libraries used by SunnyDay ransomware."
                    ],
                    "titles": [
                        "TOR / C2 communication",
                        "Digging into the Public Key Blob Format",
                        "Technical details of Sunnyday ransomware",
                        "Similarities between samples",
                        "Self-removing feature",
                        "Analysis of the SunnyDay ransomware",
                        "The ransomware note",
                        "Final Thoughts",
                        "Skipped file extensions and folders",
                        "Stoped services",
                        "Data encryption process",
                        "Terminated processes",
                        "Introduction",
                        "Analysis of the SunnyDay ransomware. Introduction",
                        "Deleted shadow files"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<COIN_0x7490d8ff>",
                            "type": "Coin",
                            "value": "1hsfsp9i6zcngyx7p84uhzdufc8k5axurx"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x5327cbf2>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ea504e669073d9e506fb403e633a68c8"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA1_0x40b364a5>",
                            "type": "Hash",
                            "hash_type": "SHA1",
                            "value": "de6717493246599d8702e7d1fd6914aab5bd015d"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xde0c197c>",
                            "type": "File",
                            "value": "wininet.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0x5be0b3cc>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x8d264e34>",
                            "type": "File",
                            "value": "vssadmin.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xc8ecca29>",
                    "type": "Category",
                    "value": "c2"
                },
                "references": {
                    "sentences": [
                        "At the first glance, SunnyDay appears to use typical libraries found on popular ransomware samples. As observed in Figure 2, calls related to Windows CryptoAPI were found; a Windows library commonly found in several ransomware families these days. From this view, the ransomware seems using calls from wininet.dll to perform some communication to its C2; something that will be scrutinized towards the end of the analysis.",
                        "We believe the C2 server potentially could be available over the TOR network because the process of downloading and opening the TOR was identified. More details can be observed below."
                    ],
                    "titles": [
                        "TOR / C2 communication",
                        "Technical details of Sunnyday ransomware"
                    ]
                }
            },
            {
                "token": {
                    "id": "<CATEGORY_0xf1a480bb>",
                    "type": "Category",
                    "value": "malware"
                },
                "references": {
                    "sentences": [
                        "As observed on a Twitter presented below, SunnyDay seems to follow the same pattern seen in other samples of this nature. It looks like a new variant of the Ever101 malware, active since 2021 and also reported by Security Joes last year.",
                        "The public key is CALG_RSA_KEYX and is hardcoded inside the SunnyDay ransomware sample. This is an important detail about this malware as this blob is imported via the CrypImportKey API call and it will be used to encrypt the key used by SALSA20 to encode the victims files. The original RSA public key is present below as well.",
                        "SunnyDay is a new development from other ransomware families and it is able of encrypting a target machine in a few minutes. This piece of malware takes advantage of the CryptoPP library to use the SALSA20 stream cipher during the encryption process and, thus, speed up the entire operation.",
                        "When the data encryption process terminates, the malware removes itself from the disk."
                    ],
                    "titles": [
                        "Data encryption process",
                        "Final Thoughts",
                        "Self-removing feature",
                        "Similarities between samples"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    }
                ]
            }
        ],
        "Industry": [
            {
                "token": {
                    "id": "<INDUSTRY_0xf74966f7>",
                    "type": "Industry",
                    "value": "financial"
                },
                "references": {
                    "sentences": [
                        "We recently came across a sample of the SunnyDay ransomware. As no significant information is available on this ransomware, we decided to write about its inner workings and technical details. As expected, we found some similarities between other ransomware samples such as Ever101, Medusa Locker, Curator, and Payment45. Although it has very similar features to the mentioned ransomware samples, we are not able to make any attribution to its threat group.",
                        "Figure 16: Additional details including the total to pay in Bitcoin ($160.000) and wallet address (1HSFsP9i6zcNgyx7p84UHzDUfC8k5axUrx).",
                        "After the first contact with threat actors, a quick response from an Outlook address is received with additional steps, including the total amount to pay in Bitcoin and the wallet address.",
                        "Figure 17: Bitcoin wallet addressed by criminals.",
                        "Ever101 MedusaLocker Curator Payment45; and Keversen<crlf>Ever101<crlf>MedusaLocker<crlf>Curator<crlf>Payment45; and<crlf>Keversen"
                    ],
                    "titles": [
                        "Introduction",
                        "The ransomware note",
                        "Similarities between samples"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x1a155c22>",
                            "type": "Threat",
                            "value": "medusalocker"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xf74966f7>",
                            "type": "Industry",
                            "value": "financial"
                        }
                    }
                ]
            }
        ]
    },
    "iocs": {
        "File": [
            {
                "token": {
                    "id": "<FILE_0xc04ae2d1>",
                    "type": "File",
                    "value": "name.extension.sunnyday"
                },
                "references": {
                    "sentences": [
                        "Deletes shadow copies (VSS) Terminates and stops target processes and services Generates a key to encrypt files by using SALSA20 stream cipher The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files It also contains a self-removing feature<crlf>Deletes shadow copies (VSS)<crlf>Terminates and stops target processes and services<crlf>Generates a key to encrypt files by using SALSA20 stream cipher<crlf>The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files<crlf>The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files<crlf>It also contains a self-removing feature"
                    ],
                    "titles": [
                        "Introduction"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xaf83929f>",
                            "type": "UnknownWord",
                            "value": "stream"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x1a124091>",
                            "type": "UnknownWord",
                            "value": "cipher"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x19568d39>",
                            "type": "UnknownWord",
                            "value": "self-removing"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x1314e8e0>",
                            "type": "UnknownWord",
                            "value": "salsa20"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xf237f470>",
                            "type": "UnknownWord",
                            "value": "shadow"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xde0c197c>",
                    "type": "File",
                    "value": "wininet.dll"
                },
                "references": {
                    "sentences": [
                        "At the first glance, SunnyDay appears to use typical libraries found on popular ransomware samples. As observed in Figure 2, calls related to Windows CryptoAPI were found; a Windows library commonly found in several ransomware families these days. From this view, the ransomware seems using calls from wininet.dll to perform some communication to its C2; something that will be scrutinized towards the end of the analysis."
                    ],
                    "titles": [
                        "Technical details of Sunnyday ransomware"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xde0c197c>",
                            "type": "File",
                            "value": "wininet.dll"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xde0c197c>",
                            "type": "File",
                            "value": "wininet.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x352b00e9>",
                            "type": "UnknownWord",
                            "value": "scrutinized"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xde0c197c>",
                            "type": "File",
                            "value": "wininet.dll"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x8d264e34>",
                    "type": "File",
                    "value": "vssadmin.exe"
                },
                "references": {
                    "sentences": [
                        "Once running, the ransomware deletes all the shadow files on the machine by using the vssadmin.exe Windows utility."
                    ],
                    "titles": [
                        "Deleted shadow files"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x8d264e34>",
                            "type": "File",
                            "value": "vssadmin.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xf237f470>",
                            "type": "UnknownWord",
                            "value": "shadow"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x8d264e34>",
                            "type": "File",
                            "value": "vssadmin.exe"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x8d264e34>",
                            "type": "File",
                            "value": "vssadmin.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x418c22ac>",
                    "type": "File",
                    "value": "svchost.exe"
                },
                "references": {
                    "sentences": [
                        "Figure 6: Block of code responsible of terminate target processes. The process svchost.exe (right side) is one of the processes present in the snapshot and tested against the hardcoded strings."
                    ],
                    "titles": [
                        "Terminated processes"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x2df4ebf3>",
                            "type": "UnknownWord",
                            "value": "tested"
                        }
                    }
                ]
            }
        ],
        "Hash": [
            {
                "token": {
                    "id": "<SHA256_0x5be0b3cc>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a"
                },
                "references": {
                    "sentences": [
                        "Name: 7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a.exe<crlf>MD5: de6717493246599d8702e7d1fd6914aab5bd015d<crlf>Sample: Bazaar.abuse.ch",
                        "Name: 7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a.exe<crlf>MD5: de6717493246599d8702e7d1fd6914aab5bd015d"
                    ],
                    "titles": [
                        "Indicators of Compromise (IoC)",
                        "Technical details of Sunnyday ransomware"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<SHA256_0x5be0b3cc>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0x5be0b3cc>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<SHA1_0x40b364a5>",
                    "type": "Hash",
                    "hash_type": "SHA1",
                    "value": "de6717493246599d8702e7d1fd6914aab5bd015d"
                },
                "references": {
                    "sentences": [
                        "Name: 7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a.exe<crlf>MD5: de6717493246599d8702e7d1fd6914aab5bd015d<crlf>Sample: Bazaar.abuse.ch",
                        "Name: 7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a.exe<crlf>MD5: de6717493246599d8702e7d1fd6914aab5bd015d"
                    ],
                    "titles": [
                        "Indicators of Compromise (IoC)",
                        "Technical details of Sunnyday ransomware"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<SHA1_0x40b364a5>",
                            "type": "Hash",
                            "hash_type": "SHA1",
                            "value": "de6717493246599d8702e7d1fd6914aab5bd015d"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA1_0x40b364a5>",
                            "type": "Hash",
                            "hash_type": "SHA1",
                            "value": "de6717493246599d8702e7d1fd6914aab5bd015d"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<MD5_0x5327cbf2>",
                    "type": "Hash",
                    "hash_type": "MD5",
                    "value": "ea504e669073d9e506fb403e633a68c8"
                },
                "references": {
                    "sentences": [
                        "#Ransomware<crlf>EA504E669073D9E506FB403E633A68C8"
                    ],
                    "titles": [
                        "Similarities between samples"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<MD5_0x5327cbf2>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ea504e669073d9e506fb403e633a68c8"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<MD5_0x5327cbf2>",
                            "type": "Hash",
                            "hash_type": "MD5",
                            "value": "ea504e669073d9e506fb403e633a68c8"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    }
                ]
            }
        ],
        "Path": [
            {
                "token": {
                    "id": "<PATH_0xfeb289fa>",
                    "type": "Path",
                    "value": "c:\\windows\\system32\\vssadmin.exe"
                },
                "references": {
                    "sentences": [
                        "Process created: C:\\Windows\\System32\\vssadmin.exe vssadmin delete shadows /all /quiet"
                    ],
                    "titles": [
                        "Deleted shadow files"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xfeb289fa>",
                            "type": "Path",
                            "value": "c:\\windows\\system32\\vssadmin.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x58dbf2f0>",
                            "type": "UnknownWord",
                            "value": "vssadmin delete"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xfeb289fa>",
                            "type": "Path",
                            "value": "c:\\windows\\system32\\vssadmin.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x862a1a1>",
                            "type": "UnknownWord",
                            "value": "shadows"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xfeb289fa>",
                            "type": "Path",
                            "value": "c:\\windows\\system32\\vssadmin.exe"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    }
                ]
            }
        ],
        "Coin": [
            {
                "token": {
                    "id": "<COIN_0x7490d8ff>",
                    "type": "Coin",
                    "value": "1hsfsp9i6zcngyx7p84uhzdufc8k5axurx"
                },
                "references": {
                    "sentences": [
                        "Figure 16: Additional details including the total to pay in Bitcoin ($160.000) and wallet address (1HSFsP9i6zcNgyx7p84UHzDUfC8k5axUrx)."
                    ],
                    "titles": [
                        "The ransomware note"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<COIN_0x7490d8ff>",
                            "type": "Coin",
                            "value": "1hsfsp9i6zcngyx7p84uhzdufc8k5axurx"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xa179f90c>",
                            "type": "Category",
                            "value": "ransomware"
                        }
                    },
                    {
                        "src": {
                            "id": "<COIN_0x7490d8ff>",
                            "type": "Coin",
                            "value": "1hsfsp9i6zcngyx7p84uhzdufc8k5axurx"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x1719f609>",
                            "type": "Threat",
                            "value": "sunnyday"
                        }
                    }
                ]
            }
        ]
    },
    "unknownwords": {
        "UnknownWord": [
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcbe4f233>",
                    "type": "UnknownWord",
                    "value": "decided"
                },
                "references": {
                    "sentences": [
                        "We recently came across a sample of the SunnyDay ransomware. As no significant information is available on this ransomware, we decided to write about its inner workings and technical details. As expected, we found some similarities between other ransomware samples such as Ever101, Medusa Locker, Curator, and Payment45. Although it has very similar features to the mentioned ransomware samples, we are not able to make any attribution to its threat group."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x10785e41>",
                    "type": "UnknownWord",
                    "value": "ever101"
                },
                "references": {
                    "sentences": [
                        "As observed on a Twitter presented below, SunnyDay seems to follow the same pattern seen in other samples of this nature. It looks like a new variant of the Ever101 malware, active since 2021 and also reported by Security Joes last year.",
                        "We recently came across a sample of the SunnyDay ransomware. As no significant information is available on this ransomware, we decided to write about its inner workings and technical details. As expected, we found some similarities between other ransomware samples such as Ever101, Medusa Locker, Curator, and Payment45. Although it has very similar features to the mentioned ransomware samples, we are not able to make any attribution to its threat group.",
                        "Ever101 MedusaLocker Curator Payment45; and Keversen<crlf>Ever101<crlf>MedusaLocker<crlf>Curator<crlf>Payment45; and<crlf>Keversen",
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xaf221125>",
                    "type": "UnknownWord",
                    "value": "curator"
                },
                "references": {
                    "sentences": [
                        "We recently came across a sample of the SunnyDay ransomware. As no significant information is available on this ransomware, we decided to write about its inner workings and technical details. As expected, we found some similarities between other ransomware samples such as Ever101, Medusa Locker, Curator, and Payment45. Although it has very similar features to the mentioned ransomware samples, we are not able to make any attribution to its threat group.",
                        "Ever101 MedusaLocker Curator Payment45; and Keversen<crlf>Ever101<crlf>MedusaLocker<crlf>Curator<crlf>Payment45; and<crlf>Keversen"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1314e8e0>",
                    "type": "UnknownWord",
                    "value": "salsa20"
                },
                "references": {
                    "sentences": [
                        "Figure 13: SALSA20 stream cipher details.",
                        "Figure 12: Symmetric SALSA20 stream cipher detection.",
                        "On the other hand, the SALSA20 stream cipher can be easily identified based on string constant and fixed rotation values. Within this context, criminals used the CryptoPP library in order to implement the SALSA20 algorithm in C++; a copy of it was performed by its author as expected.",
                        "SunnyDay is a new development from other ransomware families and it is able of encrypting a target machine in a few minutes. This piece of malware takes advantage of the CryptoPP library to use the SALSA20 stream cipher during the encryption process and, thus, speed up the entire operation.",
                        "This ransomware uses a single SALSA20 key to encrypt all the files on a specific machine. The key is generated via CryptoGenRandom() call and next it is encrypted with the RSA 2048-bit key present on the ransomware samples. Finally, the SALSA20 key with 512 bytes is appended at the end of the encrypted files.",
                        "By using a hardcoded public RSA blob that comes with the initial binary, it encrypts a random SALSA20 key and appends it at the end of each encrypted file. This blob of 512 bytes is accessed during the decryption process by the decryption tool that will use a private key to decrypt the SALSA20 key and then recover the original files.",
                        "The public key is CALG_RSA_KEYX and is hardcoded inside the SunnyDay ransomware sample. This is an important detail about this malware as this blob is imported via the CrypImportKey API call and it will be used to encrypt the key used by SALSA20 to encode the victims files. The original RSA public key is present below as well.",
                        "Figure 11: Details about CryptoPP library and SALSA20 symmetric cipher.",
                        "Below, some of the SALSA20 values found on the SunnyDay samples can be found in the CryptoPP library.",
                        "As mentioned above, SALSA20 is easy to recognize, as it uses well-known values for its internal cryptographic operations.",
                        "SunnyDay is a simple piece of ransomware based on the SALSA20 stream cipher. It comes with an RSA public key blob embedded to encrypt a generated key used by the symmetric SALSA20 that will damage all the available files on the machine. One of the reasons criminals are using SALSA20 is because it offers speeds of around 414 cycles per byte in software on modern x86 processors and reasonable hardware performance (Wikipedia).",
                        "In sum, these calls are utilized to extract the public key blob from a qword on the data section and encrypt a newly generated key used by the SALSA20 stream cipher to encode all the target files.",
                        "SunnyDay takes advantage of Windows APIs (CryptoAPI) to carry out the encryption process. The ransomware carried a unique RSA public blob (CSP) 2048-bit key and uses some API calls to extract the blob key to encrypt the Salsa20 key to encode the entire victims files.",
                        "Figure 14: Encrypted files with the added nonce and SALSA20 key (512 bytes) encrypted with the RSA 2048-bit key.",
                        "Deletes shadow copies (VSS) Terminates and stops target processes and services Generates a key to encrypt files by using SALSA20 stream cipher The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files It also contains a self-removing feature<crlf>Deletes shadow copies (VSS)<crlf>Terminates and stops target processes and services<crlf>Generates a key to encrypt files by using SALSA20 stream cipher<crlf>The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files<crlf>The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files<crlf>It also contains a self-removing feature"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x1314e8e0>",
                            "type": "UnknownWord",
                            "value": "salsa20"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xaf83929f>",
                    "type": "UnknownWord",
                    "value": "stream"
                },
                "references": {
                    "sentences": [
                        "Figure 13: SALSA20 stream cipher details.",
                        "A link to download a specific TOR browser version was found during the ransomware analysis. Also, a stream of data with some details about the infected machine was observed, potentially to notify criminals about new infections.",
                        "On the other hand, the SALSA20 stream cipher can be easily identified based on string constant and fixed rotation values. Within this context, criminals used the CryptoPP library in order to implement the SALSA20 algorithm in C++; a copy of it was performed by its author as expected.",
                        "SunnyDay is a new development from other ransomware families and it is able of encrypting a target machine in a few minutes. This piece of malware takes advantage of the CryptoPP library to use the SALSA20 stream cipher during the encryption process and, thus, speed up the entire operation.",
                        "In sum, these calls are utilized to extract the public key blob from a qword on the data section and encrypt a newly generated key used by the SALSA20 stream cipher to encode all the target files.",
                        "SunnyDay is a simple piece of ransomware based on the SALSA20 stream cipher. It comes with an RSA public key blob embedded to encrypt a generated key used by the symmetric SALSA20 that will damage all the available files on the machine. One of the reasons criminals are using SALSA20 is because it offers speeds of around 414 cycles per byte in software on modern x86 processors and reasonable hardware performance (Wikipedia).",
                        "Figure 12: Symmetric SALSA20 stream cipher detection.",
                        "Deletes shadow copies (VSS) Terminates and stops target processes and services Generates a key to encrypt files by using SALSA20 stream cipher The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files It also contains a self-removing feature<crlf>Deletes shadow copies (VSS)<crlf>Terminates and stops target processes and services<crlf>Generates a key to encrypt files by using SALSA20 stream cipher<crlf>The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files<crlf>The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files<crlf>It also contains a self-removing feature"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xaf83929f>",
                            "type": "UnknownWord",
                            "value": "stream"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1a124091>",
                    "type": "UnknownWord",
                    "value": "cipher"
                },
                "references": {
                    "sentences": [
                        "Figure 13: SALSA20 stream cipher details.",
                        "On the other hand, the SALSA20 stream cipher can be easily identified based on string constant and fixed rotation values. Within this context, criminals used the CryptoPP library in order to implement the SALSA20 algorithm in C++; a copy of it was performed by its author as expected.",
                        "SunnyDay is a new development from other ransomware families and it is able of encrypting a target machine in a few minutes. This piece of malware takes advantage of the CryptoPP library to use the SALSA20 stream cipher during the encryption process and, thus, speed up the entire operation.",
                        "Figure 11: Details about CryptoPP library and SALSA20 symmetric cipher.",
                        "SunnyDay is a simple piece of ransomware based on the SALSA20 stream cipher. It comes with an RSA public key blob embedded to encrypt a generated key used by the symmetric SALSA20 that will damage all the available files on the machine. One of the reasons criminals are using SALSA20 is because it offers speeds of around 414 cycles per byte in software on modern x86 processors and reasonable hardware performance (Wikipedia).",
                        "In sum, these calls are utilized to extract the public key blob from a qword on the data section and encrypt a newly generated key used by the SALSA20 stream cipher to encode all the target files.",
                        "Figure 12: Symmetric SALSA20 stream cipher detection.",
                        "Deletes shadow copies (VSS) Terminates and stops target processes and services Generates a key to encrypt files by using SALSA20 stream cipher The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files It also contains a self-removing feature<crlf>Deletes shadow copies (VSS)<crlf>Terminates and stops target processes and services<crlf>Generates a key to encrypt files by using SALSA20 stream cipher<crlf>The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files<crlf>The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files<crlf>It also contains a self-removing feature"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x1a124091>",
                            "type": "UnknownWord",
                            "value": "cipher"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4392f68f>",
                    "type": "UnknownWord",
                    "value": "cycles"
                },
                "references": {
                    "sentences": [
                        "SunnyDay is a simple piece of ransomware based on the SALSA20 stream cipher. It comes with an RSA public key blob embedded to encrypt a generated key used by the symmetric SALSA20 that will damage all the available files on the machine. One of the reasons criminals are using SALSA20 is because it offers speeds of around 414 cycles per byte in software on modern x86 processors and reasonable hardware performance (Wikipedia)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe862f058>",
                    "type": "UnknownWord",
                    "value": "reasonable"
                },
                "references": {
                    "sentences": [
                        "SunnyDay is a simple piece of ransomware based on the SALSA20 stream cipher. It comes with an RSA public key blob embedded to encrypt a generated key used by the symmetric SALSA20 that will damage all the available files on the machine. One of the reasons criminals are using SALSA20 is because it offers speeds of around 414 cycles per byte in software on modern x86 processors and reasonable hardware performance (Wikipedia)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4ca769d9>",
                    "type": "UnknownWord",
                    "value": "wikipedia"
                },
                "references": {
                    "sentences": [
                        "SunnyDay is a simple piece of ransomware based on the SALSA20 stream cipher. It comes with an RSA public key blob embedded to encrypt a generated key used by the symmetric SALSA20 that will damage all the available files on the machine. One of the reasons criminals are using SALSA20 is because it offers speeds of around 414 cycles per byte in software on modern x86 processors and reasonable hardware performance (Wikipedia)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf237f470>",
                    "type": "UnknownWord",
                    "value": "shadow"
                },
                "references": {
                    "sentences": [
                        "With this technique in place, it ensures that victims will not recover the damaged File System by using shadow copies a common process also used by other ransomware families.",
                        "Once running, the ransomware deletes all the shadow files on the machine by using the vssadmin.exe Windows utility.",
                        "Deletes shadow copies (VSS) Terminates and stops target processes and services Generates a key to encrypt files by using SALSA20 stream cipher The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files It also contains a self-removing feature<crlf>Deletes shadow copies (VSS)<crlf>Terminates and stops target processes and services<crlf>Generates a key to encrypt files by using SALSA20 stream cipher<crlf>The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files<crlf>The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files<crlf>It also contains a self-removing feature"
                    ],
                    "titles": [
                        "Deleted shadow files"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xf237f470>",
                            "type": "UnknownWord",
                            "value": "shadow"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x8d264e34>",
                            "type": "File",
                            "value": "vssadmin.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xf237f470>",
                            "type": "UnknownWord",
                            "value": "shadow"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x19568d39>",
                    "type": "UnknownWord",
                    "value": "self-removing"
                },
                "references": {
                    "sentences": [
                        "Deletes shadow copies (VSS) Terminates and stops target processes and services Generates a key to encrypt files by using SALSA20 stream cipher The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files It also contains a self-removing feature<crlf>Deletes shadow copies (VSS)<crlf>Terminates and stops target processes and services<crlf>Generates a key to encrypt files by using SALSA20 stream cipher<crlf>The key is also encrypted with the RSA public key blob and appended at the end of the encrypted files<crlf>The extension .sunnyday is appended (name.extension.sunnyday) to the damaged files<crlf>It also contains a self-removing feature",
                        "Figure 21: Self-removing feature identified on the SunnyDay ransomware."
                    ],
                    "titles": [
                        "Self-removing feature"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xc04ae2d1>",
                            "type": "File",
                            "value": "name.extension.sunnyday"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x19568d39>",
                            "type": "UnknownWord",
                            "value": "self-removing"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd0d24dc2>",
                    "type": "UnknownWord",
                    "value": "visual"
                },
                "references": {
                    "sentences": [
                        "SunnyDay sample is distributed in a form of a 64-bit binary and with the release date of Mar 07 05:47:03 2022 (UTC). According to the sample signatures, it was compiled and linked with Microsoft Visual C++ via Visual Studio 2019 16.2.0 preview 4."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3a56b2d2>",
                    "type": "UnknownWord",
                    "value": "studio"
                },
                "references": {
                    "sentences": [
                        "SunnyDay sample is distributed in a form of a 64-bit binary and with the release date of Mar 07 05:47:03 2022 (UTC). According to the sample signatures, it was compiled and linked with Microsoft Visual C++ via Visual Studio 2019 16.2.0 preview 4."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6aecbc48>",
                    "type": "UnknownWord",
                    "value": "preview"
                },
                "references": {
                    "sentences": [
                        "SunnyDay sample is distributed in a form of a 64-bit binary and with the release date of Mar 07 05:47:03 2022 (UTC). According to the sample signatures, it was compiled and linked with Microsoft Visual C++ via Visual Studio 2019 16.2.0 preview 4."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x320edbef>",
                    "type": "UnknownWord",
                    "value": "glance"
                },
                "references": {
                    "sentences": [
                        "At the first glance, SunnyDay appears to use typical libraries found on popular ransomware samples. As observed in Figure 2, calls related to Windows CryptoAPI were found; a Windows library commonly found in several ransomware families these days. From this view, the ransomware seems using calls from wininet.dll to perform some communication to its C2; something that will be scrutinized towards the end of the analysis."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcc6f9e5>",
                    "type": "UnknownWord",
                    "value": "cryptoapi"
                },
                "references": {
                    "sentences": [
                        "SunnyDay takes advantage of Windows APIs (CryptoAPI) to carry out the encryption process. The ransomware carried a unique RSA public blob (CSP) 2048-bit key and uses some API calls to extract the blob key to encrypt the Salsa20 key to encode the entire victims files.",
                        "Some functions from CryptoAPI are used during this process, namely:",
                        "At the first glance, SunnyDay appears to use typical libraries found on popular ransomware samples. As observed in Figure 2, calls related to Windows CryptoAPI were found; a Windows library commonly found in several ransomware families these days. From this view, the ransomware seems using calls from wininet.dll to perform some communication to its C2; something that will be scrutinized towards the end of the analysis."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x352b00e9>",
                    "type": "UnknownWord",
                    "value": "scrutinized"
                },
                "references": {
                    "sentences": [
                        "At the first glance, SunnyDay appears to use typical libraries found on popular ransomware samples. As observed in Figure 2, calls related to Windows CryptoAPI were found; a Windows library commonly found in several ransomware families these days. From this view, the ransomware seems using calls from wininet.dll to perform some communication to its C2; something that will be scrutinized towards the end of the analysis."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xde0c197c>",
                            "type": "File",
                            "value": "wininet.dll"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x352b00e9>",
                            "type": "UnknownWord",
                            "value": "scrutinized"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9f1ab300>",
                    "type": "UnknownWord",
                    "value": "entropy"
                },
                "references": {
                    "sentences": [
                        "Taking a look at the entropy of the binary, there is no obfuscation in place. Some ransomware families are not using significant features related to code obfuscation and bypassing virtual machines and sandbox environments. In fact, this point moves straightforwardly to its genesis: the principle of causing total destruction in all types of systems and infrastructures not wasting time with useless things.",
                        "Figure 3: Sunnyday binary entropy confirming that it is not packed."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2f0c24dd>",
                    "type": "UnknownWord",
                    "value": "straightforwardly"
                },
                "references": {
                    "sentences": [
                        "Taking a look at the entropy of the binary, there is no obfuscation in place. Some ransomware families are not using significant features related to code obfuscation and bypassing virtual machines and sandbox environments. In fact, this point moves straightforwardly to its genesis: the principle of causing total destruction in all types of systems and infrastructures not wasting time with useless things."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x331a1cab>",
                    "type": "UnknownWord",
                    "value": "genesis"
                },
                "references": {
                    "sentences": [
                        "Taking a look at the entropy of the binary, there is no obfuscation in place. Some ransomware families are not using significant features related to code obfuscation and bypassing virtual machines and sandbox environments. In fact, this point moves straightforwardly to its genesis: the principle of causing total destruction in all types of systems and infrastructures not wasting time with useless things."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa6e4fcb5>",
                    "type": "UnknownWord",
                    "value": "principle"
                },
                "references": {
                    "sentences": [
                        "Taking a look at the entropy of the binary, there is no obfuscation in place. Some ransomware families are not using significant features related to code obfuscation and bypassing virtual machines and sandbox environments. In fact, this point moves straightforwardly to its genesis: the principle of causing total destruction in all types of systems and infrastructures not wasting time with useless things."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x29ea7e36>",
                    "type": "UnknownWord",
                    "value": "causing"
                },
                "references": {
                    "sentences": [
                        "Taking a look at the entropy of the binary, there is no obfuscation in place. Some ransomware families are not using significant features related to code obfuscation and bypassing virtual machines and sandbox environments. In fact, this point moves straightforwardly to its genesis: the principle of causing total destruction in all types of systems and infrastructures not wasting time with useless things."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc61c7b6>",
                    "type": "UnknownWord",
                    "value": "wasting"
                },
                "references": {
                    "sentences": [
                        "Taking a look at the entropy of the binary, there is no obfuscation in place. Some ransomware families are not using significant features related to code obfuscation and bypassing virtual machines and sandbox environments. In fact, this point moves straightforwardly to its genesis: the principle of causing total destruction in all types of systems and infrastructures not wasting time with useless things."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xea1f5834>",
                    "type": "UnknownWord",
                    "value": "packed"
                },
                "references": {
                    "sentences": [
                        "Figure 3: Sunnyday binary entropy confirming that it is not packed."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5bc852a3>",
                    "type": "UnknownWord",
                    "value": "cryptopp"
                },
                "references": {
                    "sentences": [
                        "Below, some of the SALSA20 values found on the SunnyDay samples can be found in the CryptoPP library.",
                        "SunnyDay is a new development from other ransomware families and it is able of encrypting a target machine in a few minutes. This piece of malware takes advantage of the CryptoPP library to use the SALSA20 stream cipher during the encryption process and, thus, speed up the entire operation.",
                        "On the other hand, the SALSA20 stream cipher can be easily identified based on string constant and fixed rotation values. Within this context, criminals used the CryptoPP library in order to implement the SALSA20 algorithm in C++; a copy of it was performed by its author as expected.",
                        "Figure 11: Details about CryptoPP library and SALSA20 symmetric cipher."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xedd6f487>",
                    "type": "UnknownWord",
                    "value": "accessed"
                },
                "references": {
                    "sentences": [
                        "By using a hardcoded public RSA blob that comes with the initial binary, it encrypts a random SALSA20 key and appends it at the end of each encrypted file. This blob of 512 bytes is accessed during the decryption process by the decryption tool that will use a private key to decrypt the SALSA20 key and then recover the original files."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x58dbf2f0>",
                    "type": "UnknownWord",
                    "value": "vssadmin delete"
                },
                "references": {
                    "sentences": [
                        "Process created: C:\\Windows\\System32\\vssadmin.exe vssadmin delete shadows /all /quiet"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xfeb289fa>",
                            "type": "Path",
                            "value": "c:\\windows\\system32\\vssadmin.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x58dbf2f0>",
                            "type": "UnknownWord",
                            "value": "vssadmin delete"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x862a1a1>",
                    "type": "UnknownWord",
                    "value": "shadows"
                },
                "references": {
                    "sentences": [
                        "Process created: C:\\Windows\\System32\\vssadmin.exe vssadmin delete shadows /all /quiet"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xfeb289fa>",
                            "type": "Path",
                            "value": "c:\\windows\\system32\\vssadmin.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x862a1a1>",
                            "type": "UnknownWord",
                            "value": "shadows"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb90fd7ea>",
                    "type": "UnknownWord",
                    "value": "stoped"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Stoped services"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3e4d737e>",
                    "type": "UnknownWord",
                    "value": "vmickvexchange"
                },
                "references": {
                    "sentences": [
                        "SunnyDay ransomware has hardcoded a list of target services that it tries to stop during its execution. The following image shows it is trying to stop the vmickvexchange service via ControlService() call with the param SERVICE_STOP."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe38ae89a>",
                    "type": "UnknownWord",
                    "value": "controlservice"
                },
                "references": {
                    "sentences": [
                        "SunnyDay ransomware has hardcoded a list of target services that it tries to stop during its execution. The following image shows it is trying to stop the vmickvexchange service via ControlService() call with the param SERVICE_STOP."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa8b35e35>",
                    "type": "UnknownWord",
                    "value": "param"
                },
                "references": {
                    "sentences": [
                        "SunnyDay ransomware has hardcoded a list of target services that it tries to stop during its execution. The following image shows it is trying to stop the vmickvexchange service via ControlService() call with the param SERVICE_STOP."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbe4c811e>",
                    "type": "UnknownWord",
                    "value": "service_stop"
                },
                "references": {
                    "sentences": [
                        "SunnyDay ransomware has hardcoded a list of target services that it tries to stop during its execution. The following image shows it is trying to stop the vmickvexchange service via ControlService() call with the param SERVICE_STOP."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x65d71ac8>",
                    "type": "UnknownWord",
                    "value": "stoping"
                },
                "references": {
                    "sentences": [
                        "Figure 4: Block of code responsible of stoping a list of target processes."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9d41edfb>",
                    "type": "UnknownWord",
                    "value": "double-linked"
                },
                "references": {
                    "sentences": [
                        "A list of target processes can also be found on the ransomware binary file. As can be seen, the ransomware obtains the double-linked list of processes via CreateToolhel32Snapshot() and compares each process with the hardcoded ones. If it matches, the process is terminated via TerminateProcess() call. In addition, the tree of processes is iterated by using the Process32NextW() Windows call."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4d4bfe0d>",
                    "type": "UnknownWord",
                    "value": "createtoolhel32snapshot"
                },
                "references": {
                    "sentences": [
                        "A list of target processes can also be found on the ransomware binary file. As can be seen, the ransomware obtains the double-linked list of processes via CreateToolhel32Snapshot() and compares each process with the hardcoded ones. If it matches, the process is terminated via TerminateProcess() call. In addition, the tree of processes is iterated by using the Process32NextW() Windows call."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xef3a94f0>",
                    "type": "UnknownWord",
                    "value": "terminateprocess"
                },
                "references": {
                    "sentences": [
                        "A list of target processes can also be found on the ransomware binary file. As can be seen, the ransomware obtains the double-linked list of processes via CreateToolhel32Snapshot() and compares each process with the hardcoded ones. If it matches, the process is terminated via TerminateProcess() call. In addition, the tree of processes is iterated by using the Process32NextW() Windows call."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd0752dd8>",
                    "type": "UnknownWord",
                    "value": "tree"
                },
                "references": {
                    "sentences": [
                        "A list of target processes can also be found on the ransomware binary file. As can be seen, the ransomware obtains the double-linked list of processes via CreateToolhel32Snapshot() and compares each process with the hardcoded ones. If it matches, the process is terminated via TerminateProcess() call. In addition, the tree of processes is iterated by using the Process32NextW() Windows call."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfa9a5d08>",
                    "type": "UnknownWord",
                    "value": "iterated"
                },
                "references": {
                    "sentences": [
                        "A list of target processes can also be found on the ransomware binary file. As can be seen, the ransomware obtains the double-linked list of processes via CreateToolhel32Snapshot() and compares each process with the hardcoded ones. If it matches, the process is terminated via TerminateProcess() call. In addition, the tree of processes is iterated by using the Process32NextW() Windows call."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6d236ed>",
                    "type": "UnknownWord",
                    "value": "process32nextw"
                },
                "references": {
                    "sentences": [
                        "A list of target processes can also be found on the ransomware binary file. As can be seen, the ransomware obtains the double-linked list of processes via CreateToolhel32Snapshot() and compares each process with the hardcoded ones. If it matches, the process is terminated via TerminateProcess() call. In addition, the tree of processes is iterated by using the Process32NextW() Windows call."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2df4ebf3>",
                    "type": "UnknownWord",
                    "value": "tested"
                },
                "references": {
                    "sentences": [
                        "Figure 6: Block of code responsible of terminate target processes. The process svchost.exe (right side) is one of the processes present in the snapshot and tested against the hardcoded strings."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x418c22ac>",
                            "type": "File",
                            "value": "svchost.exe"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x2df4ebf3>",
                            "type": "UnknownWord",
                            "value": "tested"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x89feb17b>",
                    "type": "UnknownWord",
                    "value": "skipped"
                },
                "references": {
                    "sentences": [
                        "Figure 8: Folders and file extensions skipped during the data encryption process."
                    ],
                    "titles": [
                        "Skipped file extensions and folders"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc3c8d662>",
                    "type": "UnknownWord",
                    "value": "untouchable"
                },
                "references": {
                    "sentences": [
                        "Some file extensions and folders are bypassed during the ransomware encryption process. Some important directories are not damaged during the data encryption process, which may allow victims to recover some files in those directories. Also, some popular file extensions are untouchable, which can be an advantage for the victims side."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2f585e02>",
                    "type": "UnknownWord",
                    "value": "csp"
                },
                "references": {
                    "sentences": [
                        "SunnyDay takes advantage of Windows APIs (CryptoAPI) to carry out the encryption process. The ransomware carried a unique RSA public blob (CSP) 2048-bit key and uses some API calls to extract the blob key to encrypt the Salsa20 key to encode the entire victims files.",
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1e642892>",
                    "type": "UnknownWord",
                    "value": "2048-bit"
                },
                "references": {
                    "sentences": [
                        "SunnyDay takes advantage of Windows APIs (CryptoAPI) to carry out the encryption process. The ransomware carried a unique RSA public blob (CSP) 2048-bit key and uses some API calls to extract the blob key to encrypt the Salsa20 key to encode the entire victims files.",
                        "The details associated with the RSA blob can be observed below. The AlgID CALG_RSA_KEYX was used, and it is a 2048-bit key with the Public Exponent: 65537 in decimal.",
                        "Figure 14: Encrypted files with the added nonce and SALSA20 key (512 bytes) encrypted with the RSA 2048-bit key.",
                        "This ransomware uses a single SALSA20 key to encrypt all the files on a specific machine. The key is generated via CryptoGenRandom() call and next it is encrypted with the RSA 2048-bit key present on the ransomware samples. Finally, the SALSA20 key with 512 bytes is appended at the end of the encrypted files."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5d5f3c45>",
                    "type": "UnknownWord",
                    "value": "encode"
                },
                "references": {
                    "sentences": [
                        "SunnyDay takes advantage of Windows APIs (CryptoAPI) to carry out the encryption process. The ransomware carried a unique RSA public blob (CSP) 2048-bit key and uses some API calls to extract the blob key to encrypt the Salsa20 key to encode the entire victims files.",
                        "The public key is CALG_RSA_KEYX and is hardcoded inside the SunnyDay ransomware sample. This is an important detail about this malware as this blob is imported via the CrypImportKey API call and it will be used to encrypt the key used by SALSA20 to encode the victims files. The original RSA public key is present below as well.",
                        "In sum, these calls are utilized to extract the public key blob from a qword on the data section and encrypt a newly generated key used by the SALSA20 stream cipher to encode all the target files."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5761f904>",
                    "type": "UnknownWord",
                    "value": "cryptacquirecontextw"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd883d2f2>",
                    "type": "UnknownWord",
                    "value": "cryptacquirecontext"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x533ce732>",
                    "type": "UnknownWord",
                    "value": "handle"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x69f89f19>",
                    "type": "UnknownWord",
                    "value": "cryptographic"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.",
                        "As mentioned above, SALSA20 is easy to recognize, as it uses well-known values for its internal cryptographic operations."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe47a0d5>",
                    "type": "UnknownWord",
                    "value": "cryptimportkey"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x601ae5cd>",
                    "type": "UnknownWord",
                    "value": "cryptencrypt"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xec358e49>",
                    "type": "UnknownWord",
                    "value": "cryptdestroykey"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe8d93a92>",
                    "type": "UnknownWord",
                    "value": "hkey"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd4750>",
                    "type": "UnknownWord",
                    "value": "cryptreleasecontext"
                },
                "references": {
                    "sentences": [
                        "CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP). CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP). CryptEncrypt(): The CryptEncrypt function encrypts data. CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter. CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container.<crlf>CryptAcquireContextW(): The CryptAcquireContext function is used to acquire a handle to a particular key container within a particular cryptographic service provider (CSP).<crlf>CryptImportKey(): The CryptImportKey function transfers a cryptographic key from a key BLOB into a cryptographic service provider (CSP).<crlf>CryptEncrypt(): The CryptEncrypt function encrypts data.<crlf>CryptDestroyKey(): The CryptDestroyKey function releases the handle referenced by the hKey parameter.<crlf>CryptReleaseContext(): The CryptReleaseContext function releases the handle of a cryptographic service provider (CSP) and a key container."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa2084025>",
                    "type": "UnknownWord",
                    "value": "sum"
                },
                "references": {
                    "sentences": [
                        "In sum, these calls are utilized to extract the public key blob from a qword on the data section and encrypt a newly generated key used by the SALSA20 stream cipher to encode all the target files."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe0193217>",
                    "type": "UnknownWord",
                    "value": "qword"
                },
                "references": {
                    "sentences": [
                        "In sum, these calls are utilized to extract the public key blob from a qword on the data section and encrypt a newly generated key used by the SALSA20 stream cipher to encode all the target files."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x74f7641f>",
                    "type": "UnknownWord",
                    "value": "algid"
                },
                "references": {
                    "sentences": [
                        "The details associated with the RSA blob can be observed below. The AlgID CALG_RSA_KEYX was used, and it is a 2048-bit key with the Public Exponent: 65537 in decimal."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x14fe802c>",
                    "type": "UnknownWord",
                    "value": "calg_rsa_keyx"
                },
                "references": {
                    "sentences": [
                        "The details associated with the RSA blob can be observed below. The AlgID CALG_RSA_KEYX was used, and it is a 2048-bit key with the Public Exponent: 65537 in decimal.",
                        "The public key is CALG_RSA_KEYX and is hardcoded inside the SunnyDay ransomware sample. This is an important detail about this malware as this blob is imported via the CrypImportKey API call and it will be used to encrypt the key used by SALSA20 to encode the victims files. The original RSA public key is present below as well."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9d07e985>",
                    "type": "UnknownWord",
                    "value": "exponent"
                },
                "references": {
                    "sentences": [
                        "The details associated with the RSA blob can be observed below. The AlgID CALG_RSA_KEYX was used, and it is a 2048-bit key with the Public Exponent: 65537 in decimal."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x585488f4>",
                    "type": "UnknownWord",
                    "value": "decimal"
                },
                "references": {
                    "sentences": [
                        "The details associated with the RSA blob can be observed below. The AlgID CALG_RSA_KEYX was used, and it is a 2048-bit key with the Public Exponent: 65537 in decimal."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x41cfb030>",
                    "type": "UnknownWord",
                    "value": "imported"
                },
                "references": {
                    "sentences": [
                        "The public key is CALG_RSA_KEYX and is hardcoded inside the SunnyDay ransomware sample. This is an important detail about this malware as this blob is imported via the CrypImportKey API call and it will be used to encrypt the key used by SALSA20 to encode the victims files. The original RSA public key is present below as well."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb8c78a6f>",
                    "type": "UnknownWord",
                    "value": "crypimportkey"
                },
                "references": {
                    "sentences": [
                        "The public key is CALG_RSA_KEYX and is hardcoded inside the SunnyDay ransomware sample. This is an important detail about this malware as this blob is imported via the CrypImportKey API call and it will be used to encrypt the key used by SALSA20 to encode the victims files. The original RSA public key is present below as well."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x957e9830>",
                    "type": "UnknownWord",
                    "value": "pem"
                },
                "references": {
                    "sentences": [
                        "Figure 10: RSA blob exported to PEM format."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc948990d>",
                    "type": "UnknownWord",
                    "value": "publickeyblob"
                },
                "references": {
                    "sentences": [
                        "Public key blobs (type PUBLICKEYBLOB) are used to store RSA public keys. They have the following format:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x623c6679>",
                    "type": "UnknownWord",
                    "value": "blobheader"
                },
                "references": {
                    "sentences": [
                        "BLOBHEADER blobheader;<crlf>RSAPUBKEY rsapubkey;<crlf>BYTE modulus[rsapubkey.bitlen/8];"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7289258b>",
                    "type": "UnknownWord",
                    "value": "rsapubkey"
                },
                "references": {
                    "sentences": [
                        "The following table describes each of the fields in the RSAPUBKEY structure.",
                        "The RSAPUBKEY structure contains information specific to the particular public key contained in the key blob. It is defined as follows:",
                        "typedef struct _RSAPUBKEY {<crlf>DWORD magic;<crlf>DWORD bitlen;<crlf>DWORD pubexp;<crlf>} RSAPUBKEY;",
                        "BLOBHEADER blobheader;<crlf>RSAPUBKEY rsapubkey;<crlf>BYTE modulus[rsapubkey.bitlen/8];",
                        "The public key modulus data is located directly after the RSAPUBKEY structure. The size of this data will vary depending on the size of the public key. The number of bytes can be determined by dividing the value of RSAPUBKEYs bitlen field by 8."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8a8d3c36>",
                    "type": "UnknownWord",
                    "value": "modulus"
                },
                "references": {
                    "sentences": [
                        "BLOBHEADER blobheader;<crlf>RSAPUBKEY rsapubkey;<crlf>BYTE modulus[rsapubkey.bitlen/8];",
                        "The public key modulus data is located directly after the RSAPUBKEY structure. The size of this data will vary depending on the size of the public key. The number of bytes can be determined by dividing the value of RSAPUBKEYs bitlen field by 8."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x400f958d>",
                    "type": "UnknownWord",
                    "value": "bitlen"
                },
                "references": {
                    "sentences": [
                        "BLOBHEADER blobheader;<crlf>RSAPUBKEY rsapubkey;<crlf>BYTE modulus[rsapubkey.bitlen/8];",
                        "The public key modulus data is located directly after the RSAPUBKEY structure. The size of this data will vary depending on the size of the public key. The number of bytes can be determined by dividing the value of RSAPUBKEYs bitlen field by 8."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5adc9056>",
                    "type": "UnknownWord",
                    "value": "publickeyblobs"
                },
                "references": {
                    "sentences": [
                        "Notice that PUBLICKEYBLOBs are not encrypted, but contain public keys in plaintext form."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x205cf6e9>",
                    "type": "UnknownWord",
                    "value": "typedef"
                },
                "references": {
                    "sentences": [
                        "typedef struct _RSAPUBKEY {<crlf>DWORD magic;<crlf>DWORD bitlen;<crlf>DWORD pubexp;<crlf>} RSAPUBKEY;"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x160b77de>",
                    "type": "UnknownWord",
                    "value": "struct"
                },
                "references": {
                    "sentences": [
                        "typedef struct _RSAPUBKEY {<crlf>DWORD magic;<crlf>DWORD bitlen;<crlf>DWORD pubexp;<crlf>} RSAPUBKEY;"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6f915957>",
                    "type": "UnknownWord",
                    "value": "_rsapubkey"
                },
                "references": {
                    "sentences": [
                        "typedef struct _RSAPUBKEY {<crlf>DWORD magic;<crlf>DWORD bitlen;<crlf>DWORD pubexp;<crlf>} RSAPUBKEY;"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdc675a35>",
                    "type": "UnknownWord",
                    "value": "dword bitlen"
                },
                "references": {
                    "sentences": [
                        "typedef struct _RSAPUBKEY {<crlf>DWORD magic;<crlf>DWORD bitlen;<crlf>DWORD pubexp;<crlf>} RSAPUBKEY;"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe376ce0a>",
                    "type": "UnknownWord",
                    "value": "dword pubexp"
                },
                "references": {
                    "sentences": [
                        "typedef struct _RSAPUBKEY {<crlf>DWORD magic;<crlf>DWORD bitlen;<crlf>DWORD pubexp;<crlf>} RSAPUBKEY;"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd2630aa6>",
                    "type": "UnknownWord",
                    "value": "dividing"
                },
                "references": {
                    "sentences": [
                        "The public key modulus data is located directly after the RSAPUBKEY structure. The size of this data will vary depending on the size of the public key. The number of bytes can be determined by dividing the value of RSAPUBKEYs bitlen field by 8."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc7c12836>",
                    "type": "UnknownWord",
                    "value": "rsapubkeys"
                },
                "references": {
                    "sentences": [
                        "The public key modulus data is located directly after the RSAPUBKEY structure. The size of this data will vary depending on the size of the public key. The number of bytes can be determined by dividing the value of RSAPUBKEYs bitlen field by 8."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5002e8d3>",
                    "type": "UnknownWord",
                    "value": "rsa1"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8e93e540>",
                    "type": "UnknownWord",
                    "value": "pubexp"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb2057028>",
                    "type": "UnknownWord",
                    "value": "rotation"
                },
                "references": {
                    "sentences": [
                        "On the other hand, the SALSA20 stream cipher can be easily identified based on string constant and fixed rotation values. Within this context, criminals used the CryptoPP library in order to implement the SALSA20 algorithm in C++; a copy of it was performed by its author as expected."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x90172cba>",
                    "type": "UnknownWord",
                    "value": "cryptogenrandom"
                },
                "references": {
                    "sentences": [
                        "This ransomware uses a single SALSA20 key to encrypt all the files on a specific machine. The key is generated via CryptoGenRandom() call and next it is encrypted with the RSA 2048-bit key present on the ransomware samples. Finally, the SALSA20 key with 512 bytes is appended at the end of the encrypted files."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8fb29b54>",
                    "type": "UnknownWord",
                    "value": "-recovery_instructions-"
                },
                "references": {
                    "sentences": [
                        "The ransomware note called !-Recovery_Instructions-!.txt file is dropped in each folder with the instructions to recover the damaged files."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa6563771>",
                    "type": "UnknownWord",
                    "value": "ncpu"
                },
                "references": {
                    "sentences": [
                        "- %s|DELIMITER|Name(domain): %s(%s)\\r\\nCPU: %S\\r\\nRAM: %d\\r\\nDisks count: %d\\r\\nFiles count: %d|DELIMITER|<crlf>Tor: https://dist.torproject.org/torbrowser/8.5.3/torwin32-0.3.5.8.zip"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf6e10f65>",
                    "type": "UnknownWord",
                    "value": "nram"
                },
                "references": {
                    "sentences": [
                        "- %s|DELIMITER|Name(domain): %s(%s)\\r\\nCPU: %S\\r\\nRAM: %d\\r\\nDisks count: %d\\r\\nFiles count: %d|DELIMITER|<crlf>Tor: https://dist.torproject.org/torbrowser/8.5.3/torwin32-0.3.5.8.zip"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7e49a383>",
                    "type": "UnknownWord",
                    "value": "ndisks"
                },
                "references": {
                    "sentences": [
                        "- %s|DELIMITER|Name(domain): %s(%s)\\r\\nCPU: %S\\r\\nRAM: %d\\r\\nDisks count: %d\\r\\nFiles count: %d|DELIMITER|<crlf>Tor: https://dist.torproject.org/torbrowser/8.5.3/torwin32-0.3.5.8.zip"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb81b69f2>",
                    "type": "UnknownWord",
                    "value": "nfiles"
                },
                "references": {
                    "sentences": [
                        "- %s|DELIMITER|Name(domain): %s(%s)\\r\\nCPU: %S\\r\\nRAM: %d\\r\\nDisks count: %d\\r\\nFiles count: %d|DELIMITER|<crlf>Tor: https://dist.torproject.org/torbrowser/8.5.3/torwin32-0.3.5.8.zip"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x65a1175f>",
                    "type": "UnknownWord",
                    "value": "grouped"
                },
                "references": {
                    "sentences": [
                        "This data is then grouped into a large string that would be sent to a removed server presumably hosted over the TOR network. Nonetheless, no hardcoded URLs and .onion addresses were observed."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x705b6935>",
                    "type": "UnknownWord",
                    "value": "nonetheless"
                },
                "references": {
                    "sentences": [
                        "This data is then grouped into a large string that would be sent to a removed server presumably hosted over the TOR network. Nonetheless, no hardcoded URLs and .onion addresses were observed."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x97e2c300>",
                    "type": "UnknownWord",
                    "value": "dated"
                },
                "references": {
                    "sentences": [
                        "The version of Tor Browser 8.5.3 is dated from June 2019 and so we believe that it could be a lot of junk and unused resources that come from another variant of this ransomware. This can be a clear sign of cooperation between threat groups."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8eb441d5>",
                    "type": "UnknownWord",
                    "value": "unused"
                },
                "references": {
                    "sentences": [
                        "The version of Tor Browser 8.5.3 is dated from June 2019 and so we believe that it could be a lot of junk and unused resources that come from another variant of this ransomware. This can be a clear sign of cooperation between threat groups."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd07f819c>",
                    "type": "UnknownWord",
                    "value": "cooperation"
                },
                "references": {
                    "sentences": [
                        "The version of Tor Browser 8.5.3 is dated from June 2019 and so we believe that it could be a lot of junk and unused resources that come from another variant of this ransomware. This can be a clear sign of cooperation between threat groups."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdd062677>",
                    "type": "UnknownWord",
                    "value": "sandboxes"
                },
                "references": {
                    "sentences": [
                        "With this mechanism in place, no artifacts on disk are left, preventing, thus, the binaries can be shared on online sandboxes and automatically submitted by AV/EDRs."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd41b635>",
                    "type": "UnknownWord",
                    "value": "joes"
                },
                "references": {
                    "sentences": [
                        "As observed on a Twitter presented below, SunnyDay seems to follow the same pattern seen in other samples of this nature. It looks like a new variant of the Ever101 malware, active since 2021 and also reported by Security Joes last year."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x712657f>",
                    "type": "UnknownWord",
                    "value": "ext"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x55378f04>",
                    "type": "UnknownWord",
                    "value": "readmy"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3687d45d>",
                    "type": "UnknownWord",
                    "value": "bleepincomputer"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4028a85f>",
                    "type": "UnknownWord",
                    "value": "demonslay335"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd4ed746>",
                    "type": "UnknownWord",
                    "value": "amigo_a_"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbee75ed3>",
                    "type": "UnknownWord",
                    "value": "siri_urz"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x106e6204>",
                    "type": "UnknownWord",
                    "value": "malwrhunterteam"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb30817f>",
                    "type": "UnknownWord",
                    "value": "jameswt_mht"
                },
                "references": {
                    "sentences": [
                        "@AndreyGvozd<crlf>@JAMESWT_MHT",
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6f7dcf2e>",
                    "type": "UnknownWord",
                    "value": "pic"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x73b72627>",
                    "type": "UnknownWord",
                    "value": "oxqmywq5bs"
                },
                "references": {
                    "sentences": [
                        "Ext: .ever101<crlf>Note: !=READMY=!.txt@BleepinComputer @demonslay335 @Amigo_A_ @siri_urz @malwrhunterteam @JAMESWT_MHT pic.twitter.com/OxQMYWQ5Bs"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa1efe4f4>",
                    "type": "UnknownWord",
                    "value": "dnwls0719"
                },
                "references": {
                    "sentences": [
                        "dnwls0719 (@fbgwls245) May 21, 2021"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x200df64b>",
                    "type": "UnknownWord",
                    "value": "fbgwls245"
                },
                "references": {
                    "sentences": [
                        "dnwls0719 (@fbgwls245) May 21, 2021"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb3ca5d42>",
                    "type": "UnknownWord",
                    "value": "keversen"
                },
                "references": {
                    "sentences": [
                        "Ever101 MedusaLocker Curator Payment45; and Keversen<crlf>Ever101<crlf>MedusaLocker<crlf>Curator<crlf>Payment45; and<crlf>Keversen"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x335fc84b>",
                    "type": "UnknownWord",
                    "value": "contributed"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Thank you to all who have contributed"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd858c31>",
                    "type": "UnknownWord",
                    "value": "andreygvozd"
                },
                "references": {
                    "sentences": [
                        "@AndreyGvozd<crlf>@JAMESWT_MHT"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4a786c58>",
                    "type": "UnknownWord",
                    "value": "mitre att"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Mitre Att&ck Matrix"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf5308ba4>",
                    "type": "UnknownWord",
                    "value": "bazaar"
                },
                "references": {
                    "sentences": [
                        "Bazaar sample VirusTotal sample JoeSandbox analysis Hybrid analysis<crlf>Bazaar sample<crlf>VirusTotal sample<crlf>JoeSandbox analysis<crlf>Hybrid analysis"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd740c0cc>",
                    "type": "UnknownWord",
                    "value": "joesandbox"
                },
                "references": {
                    "sentences": [
                        "Bazaar sample VirusTotal sample JoeSandbox analysis Hybrid analysis<crlf>Bazaar sample<crlf>VirusTotal sample<crlf>JoeSandbox analysis<crlf>Hybrid analysis"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2cdbc13e>",
                    "type": "UnknownWord",
                    "value": "hybrid"
                },
                "references": {
                    "sentences": [
                        "Bazaar sample VirusTotal sample JoeSandbox analysis Hybrid analysis<crlf>Bazaar sample<crlf>VirusTotal sample<crlf>JoeSandbox analysis<crlf>Hybrid analysis"
                    ],
                    "titles": []
                }
            }
        ]
    },
    "other_links": [],
    "info": {
        "potential_threats": {},
        "sigma": false,
        "yara": true
    },
    "keywords": {
        "classified": [],
        "dubbed": [],
        "associated": [
            "The details associated with the RSA blob can be observed below"
        ],
        "targets": [
            "The process svchost.exe (right side) is one of the processes present in the snapshot and tested against the hardcoded strings"
        ],
        "attributed": [
            "Although it has very similar features to the mentioned ransomware samples, we are not able to make any attribution to its threat group"
        ]
    },
    "resources": {
        "links": {
            "github": [],
            "pastebin": [],
            "text_files": [],
            "other": [
                "https://en.wikipedia.org/wiki/Salsa20",
                "https://bazaar.abuse.ch/sample/7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a/",
                "https://docs.microsoft.com/en-us/windows/win32/api/winsvc/nf-winsvc-controlservice",
                "https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot",
                "https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-terminateprocess",
                "https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-process32nextw",
                "https://docs.microsoft.com/en-us/windows/win32/seccrypto/cryptoapi-system-architecture",
                "https://docs.microsoft.com/en-us/windows/win32/seccrypto/rsa-schannel-key-blobs",
                "https://pt.wikipedia.org/wiki/Salsa20",
                "https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptacquirecontexta",
                "https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptimportkey",
                "https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptencrypt",
                "https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptdestroykey",
                "https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptreleasecontext",
                "https://docs.microsoft.com/en-us/windows/win32/seccrypto/alg-id",
                "https://www.cryptopp.com/",
                "https://cr.yp.to/qhasm/sparc/20061217-salsa20.q",
                "https://docs.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptgenrandom",
                "https://seguranca-informatica.pt/cdn-cgi/l/email-protection",
                "https://seguranca-informatica.pt/cdn-cgi/l/email-protection",
                "https://shared-public-reports.s3.eu-west-1.amazonaws.com/Secrets_behind_the_mysterious_ever101_ransomware.pdf",
                "https://twitter.com/hashtag/Ransomware?src=hash&ref_src=twsrc%5Etfw",
                "https://twitter.com/BleepinComputer?ref_src=twsrc%5Etfw",
                "https://twitter.com/demonslay335?ref_src=twsrc%5Etfw",
                "https://twitter.com/Amigo_A_?ref_src=twsrc%5Etfw",
                "https://twitter.com/siri_urz?ref_src=twsrc%5Etfw",
                "https://twitter.com/malwrhunterteam?ref_src=twsrc%5Etfw",
                "https://twitter.com/JAMESWT_MHT?ref_src=twsrc%5Etfw",
                "https://t.co/OxQMYWQ5Bs",
                "https://twitter.com/fbgwls245/status/1395653548818325510?ref_src=twsrc%5Etfw",
                "https://shared-public-reports.s3.eu-west-1.amazonaws.com/Secrets_behind_the_mysterious_ever101_ransomware.pdf",
                "https://www.pcrisk.com/removal-guides/21431-ever101-medusalocker-ransomware",
                "https://www.pcrisk.com/removal-guides/19305-curator-ransomware",
                "https://www.pcrisk.pt/guias-de-remocao/9864-paymen45-ransomware",
                "https://www.enigmasoftware.com/pt/keversenransomware-remocao/",
                "https://www.youtube.com/watch?v=l_m8sFSs4FA&ab_channel=AndreyGvozd",
                "https://twitter.com/JAMESWT_MHT",
                "https://bazaar.abuse.ch/sample/7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a/",
                "https://www.virustotal.com/gui/file/7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a/detection",
                "https://www.joesandbox.com/analysis/594117/0/html#714047D51216EF45075B5F7EAA117CC70E40",
                "https://www.hybrid-analysis.com/sample/7862d6e083c5792c40a6a570c1d3824ddab12cebc902ea965393fe057b717c0a/6254038f8e89426cc52e7f1d"
            ]
        },
        "images": [
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r1.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r2.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r3.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r4.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r6.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r5.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r8.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r9.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r10.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r12.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r11.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r13.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r14.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r15.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r16.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r17.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r18.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r19.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r20.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r21.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r22.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r23.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r24.jpg",
            "",
            "https://seguranca-informatica.pt/wp-content/uploads/2022/04/r25.jpg"
        ]
    }
}