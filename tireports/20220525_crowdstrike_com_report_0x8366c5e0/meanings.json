{
    "title": "Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun",
    "url": "https://www.crowdstrike.com/blog/how-to-hunt-for-decisivearchitect-and-justforfun-implant",
    "threats": {
        "Threat": [
            {
                "token": {
                    "id": "<THREAT_0x8ac1d020>",
                    "type": "Threat",
                    "value": "red_menshen"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods.",
                        "The way in which DecisiveArchitect achieves persistence across Linux systems involves the usage of SysVinit scripts (i.e., rc.d/init.d scripts). Instead of simply creating a new script that references the JustForFun implants, DecisiveArchitect uses a more operational security-conscious approach by modifying existing SysVinit scripts to reference a small script file, which then finally references the JustForFun implant. The following highlights an example, including the lines added to the legitimate SysVinit script /etc/rc.d/init.d/pcscd and the script /etc/sysconfig/pcscd referencing the JustForFun implant, /etc/sysconfig/pcscd.conf:",
                        "When DecisiveArchitect interacts with the implants to establish an interactive shell on a system, the bash process spawned by the implant process displays the following command line instead. This makes it appear as if the Postfix queue manager is executing as a way to hide itself from analysts and system administrators:",
                        "DecisiveArchitect exhibits a high degree of operational security as part of their tactics to make it more difficult for defenders to identify and investigate their activity through the use of various defense evasion techniques. While other publicly available research highlights how the implant operates, this blog focuses on methods to hunt for this implant, or implants that may operate in a similar manner, while also highlighting techniques of interest across Solaris systems.",
                        "The three commands above loop through every process, with the first command looking for a string indicative of a process running with a packet filter, and the other two searching for processes with the libpcap library loaded. As with the lsof command, this alone cannot solely determine whether the implant is present, so an analyst would need to further investigate the specific process to confirm the presence of the implant. DecisiveArchitects capability to spoof command lines across Solaris systems also needs to be taken into account when investigating these processes.",
                        "DecisiveArchitect targets Solaris systems via publicly available exploit code for CVE-2019-3010, a vulnerability in xscreensaver. Binaries used to exploit this vulnerability have usually been observed within a few minutes of the JustForFun implant deployment. CVE-2019-3010 is a logic bug that utilizes the LD_PRELOAD technique to facilitate local privilege escalation to the root user on Solaris 11 systems. Proof-of-concept (POC) code is publicly available and was not modified by DecisiveArchitect.1 Table 1 lists two files observed across Solaris systems related to this privilege escalation activity.",
                        "DecisiveArchitects operations present a clear and present threat to telecommunications companies, as well as other organizations such as logistics entities. This blog highlights important details about DecisiveArchitects implant, their abilities to operate on Solaris systems, and ways to hunt down the adversarys implants to help organizations identify whether they have fallen victim to this campaign.",
                        "CrowdStrike Intelligence is currently tracking these intrusions under the DecisiveArchitect activity cluster (also publicly known as Red Menshen; however, this activity is not currently attributed by CrowdStrike to a specific country-nexus. While CrowdStrike has primarily observed the adversary targeting telecommunications companies, other isolated incidents targeting organizations such as logistics entities have also been observed.",
                        "On Solaris systems, though the executable itself exhibits no mechanism for similar command-line spoofing, DecisiveArchitect achieves similar functionality through the use of LD_PRELOAD, such as the following example identified within a SysVinit script:",
                        "DecisiveArchitect utilizes a custom implant tracked by CrowdStrike as JustForFun, which is typically persisted using SysVinit scripts. When executed, the implant overwrites the process command line within the process environment by randomly selecting a new command line from one of ten hard-coded options, listed in Figure 1.",
                        "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts. Additionally, as part of DecisiveArchitects continued commitment to operational security, the adversary modifies different legitimate SysVinit scripts across systems, and uses different file names/paths for the implant and associated persistence-related scripts, making it difficult to search across other systems for indicators identified through analysis of a single system.",
                        "Even though this command alone cannot solely determine whether the implant is present as there are legitimate reasons for processes to have raw sockets open analysts can highlight processes of interest for further investigation. Of particular importance is that DecisiveArchitects use of spoofed command lines means that the lsof command will report the spoofed command line, as opposed to the actual malicious file, which may make it difficult to determine whether the process is malicious or not through this alone. However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary. An example of a true positive can be seen below, with the start of the line (i.e., the command line) displaying the start of one of the spoofed command lines listed in Figure 1. It should be noted that DecisiveArchitect can quite easily change these spoofed command lines, so analysts should be conscious of other processes beyond those listed:",
                        "While these hunting techniques provide a relatively simple method for identifying DecisiveArchitect activity based on activity observed across multiple intrusions, CrowdStrike expects that DecisiveArchitect will continue development of their implant across both Linux and Solaris platforms, while also improving their techniques regarding operational security of their intrusions to further hinder the ability of a defender to identify or investigate their activity, which might include identifying ways to combat these hunting techniques."
                    ],
                    "titles": [
                        "Persistence",
                        "Indicators of Compromise (IOCs)",
                        "Solaris Privilege Escalation Vulnerability Exploitation",
                        "Spoofed Command Lines",
                        "Hunting for Traffic Signaling Implants",
                        "Conclusion",
                        "Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0x181f6e52>",
                            "type": "CVE",
                            "value": "cve-2019-3010"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x452e6c14>",
                            "type": "Url",
                            "value": "https://github.com/0xdea/exploits/blob/master/solaris/raptor_xscreensaver"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xebee1594>",
                            "type": "Path",
                            "value": "c:\\users\\use.bat c:\\users\\one.ps1"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xcaafd32f>",
                            "type": "Threat",
                            "value": "psexec_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0x39572ba2>",
                            "type": "Industry",
                            "value": "logistic"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        }
                    },
                    {
                        "src": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0x181f6e52>",
                            "type": "CVE",
                            "value": "cve-2019-3010"
                        },
                        "relation": "use_cve",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x140c7f91>",
                            "type": "Threat",
                            "value": "mimikatz"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0x39572ba2>",
                            "type": "Industry",
                            "value": "logistic"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x4945e6bc>",
                            "type": "Threat",
                            "value": "lightbasin_group"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0xe0d73a8f>",
                    "type": "Threat",
                    "value": "bpfdoor"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods.",
                        "The way in which DecisiveArchitect achieves persistence across Linux systems involves the usage of SysVinit scripts (i.e., rc.d/init.d scripts). Instead of simply creating a new script that references the JustForFun implants, DecisiveArchitect uses a more operational security-conscious approach by modifying existing SysVinit scripts to reference a small script file, which then finally references the JustForFun implant. The following highlights an example, including the lines added to the legitimate SysVinit script /etc/rc.d/init.d/pcscd and the script /etc/sysconfig/pcscd referencing the JustForFun implant, /etc/sysconfig/pcscd.conf:",
                        "DecisiveArchitect utilizes a custom implant tracked by CrowdStrike as JustForFun, which is typically persisted using SysVinit scripts. When executed, the implant overwrites the process command line within the process environment by randomly selecting a new command line from one of ten hard-coded options, listed in Figure 1.",
                        "DecisiveArchitect targets Solaris systems via publicly available exploit code for CVE-2019-3010, a vulnerability in xscreensaver. Binaries used to exploit this vulnerability have usually been observed within a few minutes of the JustForFun implant deployment. CVE-2019-3010 is a logic bug that utilizes the LD_PRELOAD technique to facilitate local privilege escalation to the root user on Solaris 11 systems. Proof-of-concept (POC) code is publicly available and was not modified by DecisiveArchitect.1 Table 1 lists two files observed across Solaris systems related to this privilege escalation activity.",
                        "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor). While this adversary does interact with Windows systems, mostly during the early stages of an intrusion, CrowdStrike has not yet identified any custom implants geared toward Windows systems. Instead, the adversary relies on publicly available tools, such as ldapdomaindump, or the post-exploitation framework Impacket, to target Windows systems from previously compromised Linux systems.",
                        "Figure 1. Hard-coded options for command-line spoofing in JustForFun",
                        "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts. Additionally, as part of DecisiveArchitects continued commitment to operational security, the adversary modifies different legitimate SysVinit scripts across systems, and uses different file names/paths for the implant and associated persistence-related scripts, making it difficult to search across other systems for indicators identified through analysis of a single system.",
                        "When executed, the process only shows the command line /usr/lib/vtdaemon -c 16, where the actual JustForFun implant is the file /lib/librbtinfo.so.1.",
                        "Given the fact the JustForFun implant opens a raw socket in order to wait for the magic packet, the built-in Linux utility lsof can be used to identify running processes with a raw socket open:",
                        "Figure 3. JustForFun command-line tool detections (Click to enlarge)",
                        "Figure 2. JustForFun implant detection (Click to enlarge)",
                        "One of the best ways to detect or hunt for this activity is to utilize EDR technology across supported Linux systems, with machine learning capabilities to detect and prevent the malicious implants, and with hunting capabilities to identify anomalous usage of common Linux system administration utilities or processes running with spoofed command lines (such as the bash process running with the command line showing the Postfix queue manager command line instead). Figures 2 and 3 highlight the CrowdStrike Falcon platforms machine learning capabilities and Falcon OverWatch detections associated with the JustForFun implant and JustForFun command-line tool."
                    ],
                    "titles": [
                        "Persistence",
                        "Indicators of Compromise (IOCs)",
                        "Solaris Privilege Escalation Vulnerability Exploitation",
                        "Spoofed Command Lines",
                        "Hunting for Traffic Signaling Implants",
                        "Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun",
                        "Detection and Hunting"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0x181f6e52>",
                            "type": "CVE",
                            "value": "cve-2019-3010"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x452e6c14>",
                            "type": "Url",
                            "value": "https://github.com/0xdea/exploits/blob/master/solaris/raptor_xscreensaver"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x4945e6bc>",
                            "type": "Threat",
                            "value": "lightbasin_group"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0x39572ba2>",
                            "type": "Industry",
                            "value": "logistic"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x140c7f91>",
                            "type": "Threat",
                            "value": "mimikatz"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xebee1594>",
                            "type": "Path",
                            "value": "c:\\users\\use.bat c:\\users\\one.ps1"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xcaafd32f>",
                            "type": "Threat",
                            "value": "psexec_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0x4945e6bc>",
                    "type": "Threat",
                    "value": "lightbasin_group"
                },
                "references": {
                    "sentences": [
                        "Read about another threat that targets the telecommunications sector in this blog: LightBasin: A Roaming Threat to Telecommunications Companies.<crlf>Download the CrowdStrike 2022 Global Threat Report for insights into adversaries tracked by CrowdStrike Intelligence in 2020.<crlf>Get a full-featured free trial of CrowdStrike Falcon Prevent and learn how true next-gen AV performs against todays most sophisticated threats.",
                        "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor). While this adversary does interact with Windows systems, mostly during the early stages of an intrusion, CrowdStrike has not yet identified any custom implants geared toward Windows systems. Instead, the adversary relies on publicly available tools, such as ldapdomaindump, or the post-exploitation framework Impacket, to target Windows systems from previously compromised Linux systems."
                    ],
                    "titles": [
                        "Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun",
                        "Additional Resources"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0x4945e6bc>",
                            "type": "Threat",
                            "value": "lightbasin_group"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x4945e6bc>",
                            "type": "Threat",
                            "value": "lightbasin_group"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x4945e6bc>",
                            "type": "Threat",
                            "value": "lightbasin_group"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x4945e6bc>",
                            "type": "Threat",
                            "value": "lightbasin_group"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0x22c36c07>",
                    "type": "Threat",
                    "value": "sysvinit_tool"
                },
                "references": {
                    "sentences": [
                        "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts. Additionally, as part of DecisiveArchitects continued commitment to operational security, the adversary modifies different legitimate SysVinit scripts across systems, and uses different file names/paths for the implant and associated persistence-related scripts, making it difficult to search across other systems for indicators identified through analysis of a single system.",
                        "DecisiveArchitect utilizes a custom implant tracked by CrowdStrike as JustForFun, which is typically persisted using SysVinit scripts. When executed, the implant overwrites the process command line within the process environment by randomly selecting a new command line from one of ten hard-coded options, listed in Figure 1.",
                        "The way in which DecisiveArchitect achieves persistence across Linux systems involves the usage of SysVinit scripts (i.e., rc.d/init.d scripts). Instead of simply creating a new script that references the JustForFun implants, DecisiveArchitect uses a more operational security-conscious approach by modifying existing SysVinit scripts to reference a small script file, which then finally references the JustForFun implant. The following highlights an example, including the lines added to the legitimate SysVinit script /etc/rc.d/init.d/pcscd and the script /etc/sysconfig/pcscd referencing the JustForFun implant, /etc/sysconfig/pcscd.conf:",
                        "On Solaris systems, though the executable itself exhibits no mechanism for similar command-line spoofing, DecisiveArchitect achieves similar functionality through the use of LD_PRELOAD, such as the following example identified within a SysVinit script:"
                    ],
                    "titles": [
                        "Persistence",
                        "Spoofed Command Lines"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0x140c7f91>",
                    "type": "Threat",
                    "value": "mimikatz"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Indicators of Compromise (IOCs)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0x140c7f91>",
                            "type": "Threat",
                            "value": "mimikatz"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x140c7f91>",
                            "type": "Threat",
                            "value": "mimikatz"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0xcaafd32f>",
                    "type": "Threat",
                    "value": "psexec_tool"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Indicators of Compromise (IOCs)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xcaafd32f>",
                            "type": "Threat",
                            "value": "psexec_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xcaafd32f>",
                            "type": "Threat",
                            "value": "psexec_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    }
                ]
            }
        ]
    },
    "ttps": {
        "TTP": [
            {
                "token": {
                    "id": "<TTP_0x10d0e446>",
                    "type": "TTP",
                    "value": "ta0003"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Persistence"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x22c36c07>",
                            "type": "Threat",
                            "value": "sysvinit_tool"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        }
                    },
                    {
                        "src": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    }
                ]
            }
        ]
    },
    "meanings": {
        "Industry": [
            {
                "token": {
                    "id": "<INDUSTRY_0xbc688f09>",
                    "type": "Industry",
                    "value": "telco"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitects operations present a clear and present threat to telecommunications companies, as well as other organizations such as logistics entities. This blog highlights important details about DecisiveArchitects implant, their abilities to operate on Solaris systems, and ways to hunt down the adversarys implants to help organizations identify whether they have fallen victim to this campaign.",
                        "Read about another threat that targets the telecommunications sector in this blog: LightBasin: A Roaming Threat to Telecommunications Companies.<crlf>Download the CrowdStrike 2022 Global Threat Report for insights into adversaries tracked by CrowdStrike Intelligence in 2020.<crlf>Get a full-featured free trial of CrowdStrike Falcon Prevent and learn how true next-gen AV performs against todays most sophisticated threats.",
                        "On multiple occasions dating back to 2019, the CrowdStrike Services Incident Response team, CrowdStrike Intelligence team and Falcon OverWatch team have encountered an adversary targeting global entities, in particular telecommunications companies, to obtain targeted personal user information for example, call detail records (CDRs) or information relating to specific phone numbers.",
                        "CrowdStrike Intelligence is currently tracking these intrusions under the DecisiveArchitect activity cluster (also publicly known as Red Menshen; however, this activity is not currently attributed by CrowdStrike to a specific country-nexus. While CrowdStrike has primarily observed the adversary targeting telecommunications companies, other isolated incidents targeting organizations such as logistics entities have also been observed."
                    ],
                    "titles": [
                        "Conclusion",
                        "Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun",
                        "Additional Resources"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x4945e6bc>",
                            "type": "Threat",
                            "value": "lightbasin_group"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0x39572ba2>",
                            "type": "Industry",
                            "value": "logistic"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x4945e6bc>",
                            "type": "Threat",
                            "value": "lightbasin_group"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<INDUSTRY_0x39572ba2>",
                    "type": "Industry",
                    "value": "logistic"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitects operations present a clear and present threat to telecommunications companies, as well as other organizations such as logistics entities. This blog highlights important details about DecisiveArchitects implant, their abilities to operate on Solaris systems, and ways to hunt down the adversarys implants to help organizations identify whether they have fallen victim to this campaign.",
                        "CrowdStrike Intelligence is currently tracking these intrusions under the DecisiveArchitect activity cluster (also publicly known as Red Menshen; however, this activity is not currently attributed by CrowdStrike to a specific country-nexus. While CrowdStrike has primarily observed the adversary targeting telecommunications companies, other isolated incidents targeting organizations such as logistics entities have also been observed."
                    ],
                    "titles": [
                        "Conclusion",
                        "Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        },
                        "relation": "use_industry",
                        "dst": {
                            "id": "<INDUSTRY_0x39572ba2>",
                            "type": "Industry",
                            "value": "logistic"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0x39572ba2>",
                            "type": "Industry",
                            "value": "logistic"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0x39572ba2>",
                            "type": "Industry",
                            "value": "logistic"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<INDUSTRY_0xbc688f09>",
                            "type": "Industry",
                            "value": "telco"
                        }
                    },
                    {
                        "src": {
                            "id": "<INDUSTRY_0x39572ba2>",
                            "type": "Industry",
                            "value": "logistic"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    }
                ]
            }
        ],
        "Category": [
            {
                "token": {
                    "id": "<CATEGORY_0xb68aa214>",
                    "type": "Category",
                    "value": "rat"
                },
                "references": {
                    "sentences": [
                        "When DecisiveArchitect interacts with the implants to establish an interactive shell on a system, the bash process spawned by the implant process displays the following command line instead. This makes it appear as if the Postfix queue manager is executing as a way to hide itself from analysts and system administrators:"
                    ],
                    "titles": [
                        "Spoofed Command Lines"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xf1a480bb>",
                    "type": "Category",
                    "value": "malware"
                },
                "references": {
                    "sentences": [
                        "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts. Additionally, as part of DecisiveArchitects continued commitment to operational security, the adversary modifies different legitimate SysVinit scripts across systems, and uses different file names/paths for the implant and associated persistence-related scripts, making it difficult to search across other systems for indicators identified through analysis of a single system.",
                        "One of the best ways to detect or hunt for this activity is to utilize EDR technology across supported Linux systems, with machine learning capabilities to detect and prevent the malicious implants, and with hunting capabilities to identify anomalous usage of common Linux system administration utilities or processes running with spoofed command lines (such as the bash process running with the command line showing the Postfix queue manager command line instead). Figures 2 and 3 highlight the CrowdStrike Falcon platforms machine learning capabilities and Falcon OverWatch detections associated with the JustForFun implant and JustForFun command-line tool.",
                        "Even though this command alone cannot solely determine whether the implant is present as there are legitimate reasons for processes to have raw sockets open analysts can highlight processes of interest for further investigation. Of particular importance is that DecisiveArchitects use of spoofed command lines means that the lsof command will report the spoofed command line, as opposed to the actual malicious file, which may make it difficult to determine whether the process is malicious or not through this alone. However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary. An example of a true positive can be seen below, with the start of the line (i.e., the command line) displaying the start of one of the spoofed command lines listed in Figure 1. It should be noted that DecisiveArchitect can quite easily change these spoofed command lines, so analysts should be conscious of other processes beyond those listed:"
                    ],
                    "titles": [
                        "Detection and Hunting",
                        "Persistence",
                        "Hunting for Traffic Signaling Implants"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<TTP_0x10d0e446>",
                            "type": "TTP",
                            "value": "ta0003"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    }
                ]
            }
        ],
        "CVE": [
            {
                "token": {
                    "id": "<CVE_0x181f6e52>",
                    "type": "CVE",
                    "value": "cve-2019-3010"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitect targets Solaris systems via publicly available exploit code for CVE-2019-3010, a vulnerability in xscreensaver. Binaries used to exploit this vulnerability have usually been observed within a few minutes of the JustForFun implant deployment. CVE-2019-3010 is a logic bug that utilizes the LD_PRELOAD technique to facilitate local privilege escalation to the root user on Solaris 11 systems. Proof-of-concept (POC) code is publicly available and was not modified by DecisiveArchitect.1 Table 1 lists two files observed across Solaris systems related to this privilege escalation activity."
                    ],
                    "titles": [
                        "Solaris Privilege Escalation Vulnerability Exploitation",
                        "Indicators of Compromise (IOCs)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CVE_0x181f6e52>",
                            "type": "CVE",
                            "value": "cve-2019-3010"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0x181f6e52>",
                            "type": "CVE",
                            "value": "cve-2019-3010"
                        },
                        "relation": "use_cve",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0x181f6e52>",
                            "type": "CVE",
                            "value": "cve-2019-3010"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    }
                ],
                "info": {
                    "vulners_score": 5.2,
                    "cvss_score": 4.6,
                    "exploit": "Unknown",
                    "softs": {
                        "oracle solaris": [
                            "11"
                        ]
                    },
                    "patch": "official fix",
                    "risk_level": 8.8
                }
            }
        ]
    },
    "iocs": {
        "Url": [
            {
                "token": {
                    "id": "<URL_0x452e6c14>",
                    "type": "Url",
                    "value": "https://github.com/0xdea/exploits/blob/master/solaris/raptor_xscreensaver"
                },
                "references": {
                    "sentences": [
                        "https[:]//github[.]com/0xdea/exploits/blob/master/solaris/raptor_xscreensaver"
                    ],
                    "titles": [
                        "Endnotes"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0x452e6c14>",
                            "type": "Url",
                            "value": "https://github.com/0xdea/exploits/blob/master/solaris/raptor_xscreensaver"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x452e6c14>",
                            "type": "Url",
                            "value": "https://github.com/0xdea/exploits/blob/master/solaris/raptor_xscreensaver"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    }
                ]
            }
        ],
        "Path": [
            {
                "token": {
                    "id": "<PATH_0xebee1594>",
                    "type": "Path",
                    "value": "c:\\users\\use.bat c:\\users\\one.ps1"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Indicators of Compromise (IOCs)"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<PATH_0xebee1594>",
                            "type": "Path",
                            "value": "c:\\users\\use.bat c:\\users\\one.ps1"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0xe0d73a8f>",
                            "type": "Threat",
                            "value": "bpfdoor"
                        }
                    },
                    {
                        "src": {
                            "id": "<PATH_0xebee1594>",
                            "type": "Path",
                            "value": "c:\\users\\use.bat c:\\users\\one.ps1"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x8ac1d020>",
                            "type": "Threat",
                            "value": "red_menshen"
                        }
                    }
                ]
            }
        ]
    },
    "unknownwords": {
        "UnknownWord": [
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4fff1b16>",
                    "type": "UnknownWord",
                    "value": "jamie harries"
                },
                "references": {
                    "sentences": [
                        "Jamie Harries"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x945a44b6>",
                    "type": "UnknownWord",
                    "value": "adequately"
                },
                "references": {
                    "sentences": [
                        "The security landscape is constantly developing to provide easier ways to establish endpoint visibility across networks through the use of endpoint detection and response (EDR) utilities. However, certain challenges still remain, particularly as a result of many organizations need for systems running legacy or proprietary operating systems, such as Solaris. If such systems are not adequately protected using other security controls or unless they can only be accessed by systems with appropriate endpoint-based detection/prevention capabilities, this can cause a gap in visibility for an organization that an adversary could abuse."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xedd6f487>",
                    "type": "UnknownWord",
                    "value": "accessed"
                },
                "references": {
                    "sentences": [
                        "The security landscape is constantly developing to provide easier ways to establish endpoint visibility across networks through the use of endpoint detection and response (EDR) utilities. However, certain challenges still remain, particularly as a result of many organizations need for systems running legacy or proprietary operating systems, such as Solaris. If such systems are not adequately protected using other security controls or unless they can only be accessed by systems with appropriate endpoint-based detection/prevention capabilities, this can cause a gap in visibility for an organization that an adversary could abuse."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x433dc0c8>",
                    "type": "UnknownWord",
                    "value": "endpoint-based"
                },
                "references": {
                    "sentences": [
                        "The security landscape is constantly developing to provide easier ways to establish endpoint visibility across networks through the use of endpoint detection and response (EDR) utilities. However, certain challenges still remain, particularly as a result of many organizations need for systems running legacy or proprietary operating systems, such as Solaris. If such systems are not adequately protected using other security controls or unless they can only be accessed by systems with appropriate endpoint-based detection/prevention capabilities, this can cause a gap in visibility for an organization that an adversary could abuse."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7a32004a>",
                    "type": "UnknownWord",
                    "value": "gap"
                },
                "references": {
                    "sentences": [
                        "The security landscape is constantly developing to provide easier ways to establish endpoint visibility across networks through the use of endpoint detection and response (EDR) utilities. However, certain challenges still remain, particularly as a result of many organizations need for systems running legacy or proprietary operating systems, such as Solaris. If such systems are not adequately protected using other security controls or unless they can only be accessed by systems with appropriate endpoint-based detection/prevention capabilities, this can cause a gap in visibility for an organization that an adversary could abuse."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd1b0853a>",
                    "type": "UnknownWord",
                    "value": "custom-built"
                },
                "references": {
                    "sentences": [
                        "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor). While this adversary does interact with Windows systems, mostly during the early stages of an intrusion, CrowdStrike has not yet identified any custom implants geared toward Windows systems. Instead, the adversary relies on publicly available tools, such as ldapdomaindump, or the post-exploitation framework Impacket, to target Windows systems from previously compromised Linux systems."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb5298d1d>",
                    "type": "UnknownWord",
                    "value": "geared"
                },
                "references": {
                    "sentences": [
                        "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor). While this adversary does interact with Windows systems, mostly during the early stages of an intrusion, CrowdStrike has not yet identified any custom implants geared toward Windows systems. Instead, the adversary relies on publicly available tools, such as ldapdomaindump, or the post-exploitation framework Impacket, to target Windows systems from previously compromised Linux systems."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x57b23fa4>",
                    "type": "UnknownWord",
                    "value": "toward"
                },
                "references": {
                    "sentences": [
                        "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor). While this adversary does interact with Windows systems, mostly during the early stages of an intrusion, CrowdStrike has not yet identified any custom implants geared toward Windows systems. Instead, the adversary relies on publicly available tools, such as ldapdomaindump, or the post-exploitation framework Impacket, to target Windows systems from previously compromised Linux systems."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x88d3b2c8>",
                    "type": "UnknownWord",
                    "value": "ldapdomaindump"
                },
                "references": {
                    "sentences": [
                        "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor). While this adversary does interact with Windows systems, mostly during the early stages of an intrusion, CrowdStrike has not yet identified any custom implants geared toward Windows systems. Instead, the adversary relies on publicly available tools, such as ldapdomaindump, or the post-exploitation framework Impacket, to target Windows systems from previously compromised Linux systems."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x719d87d7>",
                    "type": "UnknownWord",
                    "value": "impacket"
                },
                "references": {
                    "sentences": [
                        "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor). While this adversary does interact with Windows systems, mostly during the early stages of an intrusion, CrowdStrike has not yet identified any custom implants geared toward Windows systems. Instead, the adversary relies on publicly available tools, such as ldapdomaindump, or the post-exploitation framework Impacket, to target Windows systems from previously compromised Linux systems."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x70c108cb>",
                    "type": "UnknownWord",
                    "value": "country-nexus"
                },
                "references": {
                    "sentences": [
                        "CrowdStrike Intelligence is currently tracking these intrusions under the DecisiveArchitect activity cluster (also publicly known as Red Menshen; however, this activity is not currently attributed by CrowdStrike to a specific country-nexus. While CrowdStrike has primarily observed the adversary targeting telecommunications companies, other isolated incidents targeting organizations such as logistics entities have also been observed."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8a45075c>",
                    "type": "UnknownWord",
                    "value": "investigate"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitect exhibits a high degree of operational security as part of their tactics to make it more difficult for defenders to identify and investigate their activity through the use of various defense evasion techniques. While other publicly available research highlights how the implant operates, this blog focuses on methods to hunt for this implant, or implants that may operate in a similar manner, while also highlighting techniques of interest across Solaris systems.",
                        "The three commands above loop through every process, with the first command looking for a string indicative of a process running with a packet filter, and the other two searching for processes with the libpcap library loaded. As with the lsof command, this alone cannot solely determine whether the implant is present, so an analyst would need to further investigate the specific process to confirm the presence of the implant. DecisiveArchitects capability to spoof command lines across Solaris systems also needs to be taken into account when investigating these processes.",
                        "The spoofed command line appears in commands such as ps that may be used to investigate suspicious activity on the host. The spoofed command line makes it less likely that the process will be treated as suspicious.",
                        "While these hunting techniques provide a relatively simple method for identifying DecisiveArchitect activity based on activity observed across multiple intrusions, CrowdStrike expects that DecisiveArchitect will continue development of their implant across both Linux and Solaris platforms, while also improving their techniques regarding operational security of their intrusions to further hinder the ability of a defender to identify or investigate their activity, which might include identifying ways to combat these hunting techniques."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5e5b866e>",
                    "type": "UnknownWord",
                    "value": "persisted"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitect utilizes a custom implant tracked by CrowdStrike as JustForFun, which is typically persisted using SysVinit scripts. When executed, the implant overwrites the process command line within the process environment by randomly selecting a new command line from one of ten hard-coded options, listed in Figure 1."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf5ad22ec>",
                    "type": "UnknownWord",
                    "value": "ten"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitect utilizes a custom implant tracked by CrowdStrike as JustForFun, which is typically persisted using SysVinit scripts. When executed, the implant overwrites the process command line within the process environment by randomly selecting a new command line from one of ten hard-coded options, listed in Figure 1."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x759c635a>",
                    "type": "UnknownWord",
                    "value": "spawned"
                },
                "references": {
                    "sentences": [
                        "When DecisiveArchitect interacts with the implants to establish an interactive shell on a system, the bash process spawned by the implant process displays the following command line instead. This makes it appear as if the Postfix queue manager is executing as a way to hide itself from analysts and system administrators:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xabba1bb9>",
                    "type": "UnknownWord",
                    "value": "queue"
                },
                "references": {
                    "sentences": [
                        "One of the best ways to detect or hunt for this activity is to utilize EDR technology across supported Linux systems, with machine learning capabilities to detect and prevent the malicious implants, and with hunting capabilities to identify anomalous usage of common Linux system administration utilities or processes running with spoofed command lines (such as the bash process running with the command line showing the Postfix queue manager command line instead). Figures 2 and 3 highlight the CrowdStrike Falcon platforms machine learning capabilities and Falcon OverWatch detections associated with the JustForFun implant and JustForFun command-line tool.",
                        "When DecisiveArchitect interacts with the implants to establish an interactive shell on a system, the bash process spawned by the implant process displays the following command line instead. This makes it appear as if the Postfix queue manager is executing as a way to hide itself from analysts and system administrators:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcb9d901e>",
                    "type": "UnknownWord",
                    "value": "ld_preload"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods.",
                        "On Solaris systems, though the executable itself exhibits no mechanism for similar command-line spoofing, DecisiveArchitect achieves similar functionality through the use of LD_PRELOAD, such as the following example identified within a SysVinit script:",
                        "DecisiveArchitect targets Solaris systems via publicly available exploit code for CVE-2019-3010, a vulnerability in xscreensaver. Binaries used to exploit this vulnerability have usually been observed within a few minutes of the JustForFun implant deployment. CVE-2019-3010 is a logic bug that utilizes the LD_PRELOAD technique to facilitate local privilege escalation to the root user on Solaris 11 systems. Proof-of-concept (POC) code is publicly available and was not modified by DecisiveArchitect.1 Table 1 lists two files observed across Solaris systems related to this privilege escalation activity."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x750459cd>",
                    "type": "UnknownWord",
                    "value": "lib librbtinfo"
                },
                "references": {
                    "sentences": [
                        "When executed, the process only shows the command line /usr/lib/vtdaemon -c 16, where the actual JustForFun implant is the file /lib/librbtinfo.so.1."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x42030cbf>",
                    "type": "UnknownWord",
                    "value": "usr"
                },
                "references": {
                    "sentences": [
                        "When executed, the process only shows the command line /usr/lib/vtdaemon -c 16, where the actual JustForFun implant is the file /lib/librbtinfo.so.1."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb13fd6fb>",
                    "type": "UnknownWord",
                    "value": "vtdaemon"
                },
                "references": {
                    "sentences": [
                        "When executed, the process only shows the command line /usr/lib/vtdaemon -c 16, where the actual JustForFun implant is the file /lib/librbtinfo.so.1."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc50abe33>",
                    "type": "UnknownWord",
                    "value": "-c"
                },
                "references": {
                    "sentences": [
                        "When executed, the process only shows the command line /usr/lib/vtdaemon -c 16, where the actual JustForFun implant is the file /lib/librbtinfo.so.1."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc5f12196>",
                    "type": "UnknownWord",
                    "value": "regard"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe70d06ac>",
                    "type": "UnknownWord",
                    "value": "libcaac"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x57e6ed8e>",
                    "type": "UnknownWord",
                    "value": "sbin"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x553aef44>",
                    "type": "UnknownWord",
                    "value": "agetty"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1e69c5c3>",
                    "type": "UnknownWord",
                    "value": "emphasizing"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc6a5f65c>",
                    "type": "UnknownWord",
                    "value": "behavioral-based"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4a9dee19>",
                    "type": "UnknownWord",
                    "value": "xscreensaver"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitect targets Solaris systems via publicly available exploit code for CVE-2019-3010, a vulnerability in xscreensaver. Binaries used to exploit this vulnerability have usually been observed within a few minutes of the JustForFun implant deployment. CVE-2019-3010 is a logic bug that utilizes the LD_PRELOAD technique to facilitate local privilege escalation to the root user on Solaris 11 systems. Proof-of-concept (POC) code is publicly available and was not modified by DecisiveArchitect.1 Table 1 lists two files observed across Solaris systems related to this privilege escalation activity."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb302e210>",
                    "type": "UnknownWord",
                    "value": "proof-of-concept"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitect targets Solaris systems via publicly available exploit code for CVE-2019-3010, a vulnerability in xscreensaver. Binaries used to exploit this vulnerability have usually been observed within a few minutes of the JustForFun implant deployment. CVE-2019-3010 is a logic bug that utilizes the LD_PRELOAD technique to facilitate local privilege escalation to the root user on Solaris 11 systems. Proof-of-concept (POC) code is publicly available and was not modified by DecisiveArchitect.1 Table 1 lists two files observed across Solaris systems related to this privilege escalation activity."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6105eebd>",
                    "type": "UnknownWord",
                    "value": "getuid"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe50c8e67>",
                    "type": "UnknownWord",
                    "value": "security-conscious"
                },
                "references": {
                    "sentences": [
                        "The way in which DecisiveArchitect achieves persistence across Linux systems involves the usage of SysVinit scripts (i.e., rc.d/init.d scripts). Instead of simply creating a new script that references the JustForFun implants, DecisiveArchitect uses a more operational security-conscious approach by modifying existing SysVinit scripts to reference a small script file, which then finally references the JustForFun implant. The following highlights an example, including the lines added to the legitimate SysVinit script /etc/rc.d/init.d/pcscd and the script /etc/sysconfig/pcscd referencing the JustForFun implant, /etc/sysconfig/pcscd.conf:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3fed67f5>",
                    "type": "UnknownWord",
                    "value": "pcscd"
                },
                "references": {
                    "sentences": [
                        "Line 41: if [ -f /etc/sysconfig/pcscd ] ; then<crlf>Line 42: /etc/sysconfig/pcscd",
                        "The way in which DecisiveArchitect achieves persistence across Linux systems involves the usage of SysVinit scripts (i.e., rc.d/init.d scripts). Instead of simply creating a new script that references the JustForFun implants, DecisiveArchitect uses a more operational security-conscious approach by modifying existing SysVinit scripts to reference a small script file, which then finally references the JustForFun implant. The following highlights an example, including the lines added to the legitimate SysVinit script /etc/rc.d/init.d/pcscd and the script /etc/sysconfig/pcscd referencing the JustForFun implant, /etc/sysconfig/pcscd.conf:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6bd272c3>",
                    "type": "UnknownWord",
                    "value": "sysconfig"
                },
                "references": {
                    "sentences": [
                        "Line 41: if [ -f /etc/sysconfig/pcscd ] ; then<crlf>Line 42: /etc/sysconfig/pcscd",
                        "The way in which DecisiveArchitect achieves persistence across Linux systems involves the usage of SysVinit scripts (i.e., rc.d/init.d scripts). Instead of simply creating a new script that references the JustForFun implants, DecisiveArchitect uses a more operational security-conscious approach by modifying existing SysVinit scripts to reference a small script file, which then finally references the JustForFun implant. The following highlights an example, including the lines added to the legitimate SysVinit script /etc/rc.d/init.d/pcscd and the script /etc/sysconfig/pcscd referencing the JustForFun implant, /etc/sysconfig/pcscd.conf:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2e4dd55e>",
                    "type": "UnknownWord",
                    "value": "conf"
                },
                "references": {
                    "sentences": [
                        "The way in which DecisiveArchitect achieves persistence across Linux systems involves the usage of SysVinit scripts (i.e., rc.d/init.d scripts). Instead of simply creating a new script that references the JustForFun implants, DecisiveArchitect uses a more operational security-conscious approach by modifying existing SysVinit scripts to reference a small script file, which then finally references the JustForFun implant. The following highlights an example, including the lines added to the legitimate SysVinit script /etc/rc.d/init.d/pcscd and the script /etc/sysconfig/pcscd referencing the JustForFun implant, /etc/sysconfig/pcscd.conf:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x384fb171>",
                    "type": "UnknownWord",
                    "value": "-f"
                },
                "references": {
                    "sentences": [
                        "Line 41: if [ -f /etc/sysconfig/pcscd ] ; then<crlf>Line 42: /etc/sysconfig/pcscd"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x13384480>",
                    "type": "UnknownWord",
                    "value": "nested"
                },
                "references": {
                    "sentences": [
                        "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts. Additionally, as part of DecisiveArchitects continued commitment to operational security, the adversary modifies different legitimate SysVinit scripts across systems, and uses different file names/paths for the implant and associated persistence-related scripts, making it difficult to search across other systems for indicators identified through analysis of a single system."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd016b19d>",
                    "type": "UnknownWord",
                    "value": "prove"
                },
                "references": {
                    "sentences": [
                        "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts. Additionally, as part of DecisiveArchitects continued commitment to operational security, the adversary modifies different legitimate SysVinit scripts across systems, and uses different file names/paths for the implant and associated persistence-related scripts, making it difficult to search across other systems for indicators identified through analysis of a single system."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x636f400e>",
                    "type": "UnknownWord",
                    "value": "commitment"
                },
                "references": {
                    "sentences": [
                        "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts. Additionally, as part of DecisiveArchitects continued commitment to operational security, the adversary modifies different legitimate SysVinit scripts across systems, and uses different file names/paths for the implant and associated persistence-related scripts, making it difficult to search across other systems for indicators identified through analysis of a single system."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x19733c0c>",
                    "type": "UnknownWord",
                    "value": "persistence-related"
                },
                "references": {
                    "sentences": [
                        "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts. Additionally, as part of DecisiveArchitects continued commitment to operational security, the adversary modifies different legitimate SysVinit scripts across systems, and uses different file names/paths for the implant and associated persistence-related scripts, making it difficult to search across other systems for indicators identified through analysis of a single system."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8861fcfb>",
                    "type": "UnknownWord",
                    "value": "falcon"
                },
                "references": {
                    "sentences": [
                        "Please note: The examples in the following scenario have CrowdStrike Falcon configured with DETECTIONS ONLY and PREVENTIONS off. A properly configured Falcon instance, as noted previously, would prevent the activity presented here."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4790150a>",
                    "type": "UnknownWord",
                    "value": "enlarge"
                },
                "references": {
                    "sentences": [
                        "Figure 3. JustForFun command-line tool detections (Click to enlarge)",
                        "Figure 2. JustForFun implant detection (Click to enlarge)"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbb099a8b>",
                    "type": "UnknownWord",
                    "value": "burrowed"
                },
                "references": {
                    "sentences": [
                        "But, even if an organization has a significant number of legacy or proprietary systems, already has the adversary burrowed into their network, or simply does not have EDR software deployed across Linux systems, all is not lost."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4f1e62>",
                    "type": "UnknownWord",
                    "value": "signaling"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Hunting for Traffic Signaling Implants"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe1dbff5>",
                    "type": "UnknownWord",
                    "value": "lsof"
                },
                "references": {
                    "sentences": [
                        "The three commands above loop through every process, with the first command looking for a string indicative of a process running with a packet filter, and the other two searching for processes with the libpcap library loaded. As with the lsof command, this alone cannot solely determine whether the implant is present, so an analyst would need to further investigate the specific process to confirm the presence of the implant. DecisiveArchitects capability to spoof command lines across Solaris systems also needs to be taken into account when investigating these processes.",
                        "Given the fact the JustForFun implant opens a raw socket in order to wait for the magic packet, the built-in Linux utility lsof can be used to identify running processes with a raw socket open:",
                        "While the lsof command is not part of a default Solaris installation, similar commands exist for obtaining additional details from processes:",
                        "Even though this command alone cannot solely determine whether the implant is present as there are legitimate reasons for processes to have raw sockets open analysts can highlight processes of interest for further investigation. Of particular importance is that DecisiveArchitects use of spoofed command lines means that the lsof command will report the spoofed command line, as opposed to the actual malicious file, which may make it difficult to determine whether the process is malicious or not through this alone. However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary. An example of a true positive can be seen below, with the start of the line (i.e., the command line) displaying the start of one of the spoofed command lines listed in Figure 1. It should be noted that DecisiveArchitect can quite easily change these spoofed command lines, so analysts should be conscious of other processes beyond those listed:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2323dda2>",
                    "type": "UnknownWord",
                    "value": "alone"
                },
                "references": {
                    "sentences": [
                        "The three commands above loop through every process, with the first command looking for a string indicative of a process running with a packet filter, and the other two searching for processes with the libpcap library loaded. As with the lsof command, this alone cannot solely determine whether the implant is present, so an analyst would need to further investigate the specific process to confirm the presence of the implant. DecisiveArchitects capability to spoof command lines across Solaris systems also needs to be taken into account when investigating these processes.",
                        "Even though this command alone cannot solely determine whether the implant is present as there are legitimate reasons for processes to have raw sockets open analysts can highlight processes of interest for further investigation. Of particular importance is that DecisiveArchitects use of spoofed command lines means that the lsof command will report the spoofed command line, as opposed to the actual malicious file, which may make it difficult to determine whether the process is malicious or not through this alone. However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary. An example of a true positive can be seen below, with the start of the line (i.e., the command line) displaying the start of one of the spoofed command lines listed in Figure 1. It should be noted that DecisiveArchitect can quite easily change these spoofed command lines, so analysts should be conscious of other processes beyond those listed:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x756bad8d>",
                    "type": "UnknownWord",
                    "value": "opposed"
                },
                "references": {
                    "sentences": [
                        "Even though this command alone cannot solely determine whether the implant is present as there are legitimate reasons for processes to have raw sockets open analysts can highlight processes of interest for further investigation. Of particular importance is that DecisiveArchitects use of spoofed command lines means that the lsof command will report the spoofed command line, as opposed to the actual malicious file, which may make it difficult to determine whether the process is malicious or not through this alone. However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary. An example of a true positive can be seen below, with the start of the line (i.e., the command line) displaying the start of one of the spoofed command lines listed in Figure 1. It should be noted that DecisiveArchitect can quite easily change these spoofed command lines, so analysts should be conscious of other processes beyond those listed:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6646d5d>",
                    "type": "UnknownWord",
                    "value": "grep"
                },
                "references": {
                    "sentences": [
                        "Even though this command alone cannot solely determine whether the implant is present as there are legitimate reasons for processes to have raw sockets open analysts can highlight processes of interest for further investigation. Of particular importance is that DecisiveArchitects use of spoofed command lines means that the lsof command will report the spoofed command line, as opposed to the actual malicious file, which may make it difficult to determine whether the process is malicious or not through this alone. However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary. An example of a true positive can be seen below, with the start of the line (i.e., the command line) displaying the start of one of the spoofed command lines listed in Figure 1. It should be noted that DecisiveArchitect can quite easily change these spoofed command lines, so analysts should be conscious of other processes beyond those listed:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa1646ff5>",
                    "type": "UnknownWord",
                    "value": "displaying"
                },
                "references": {
                    "sentences": [
                        "Even though this command alone cannot solely determine whether the implant is present as there are legitimate reasons for processes to have raw sockets open analysts can highlight processes of interest for further investigation. Of particular importance is that DecisiveArchitects use of spoofed command lines means that the lsof command will report the spoofed command line, as opposed to the actual malicious file, which may make it difficult to determine whether the process is malicious or not through this alone. However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary. An example of a true positive can be seen below, with the start of the line (i.e., the command line) displaying the start of one of the spoofed command lines listed in Figure 1. It should be noted that DecisiveArchitect can quite easily change these spoofed command lines, so analysts should be conscious of other processes beyond those listed:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x46de153e>",
                    "type": "UnknownWord",
                    "value": "conscious"
                },
                "references": {
                    "sentences": [
                        "Even though this command alone cannot solely determine whether the implant is present as there are legitimate reasons for processes to have raw sockets open analysts can highlight processes of interest for further investigation. Of particular importance is that DecisiveArchitects use of spoofed command lines means that the lsof command will report the spoofed command line, as opposed to the actual malicious file, which may make it difficult to determine whether the process is malicious or not through this alone. However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary. An example of a true positive can be seen below, with the start of the line (i.e., the command line) displaying the start of one of the spoofed command lines listed in Figure 1. It should be noted that DecisiveArchitect can quite easily change these spoofed command lines, so analysts should be conscious of other processes beyond those listed:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd40aa9fb>",
                    "type": "UnknownWord",
                    "value": "indicative"
                },
                "references": {
                    "sentences": [
                        "The three commands above loop through every process, with the first command looking for a string indicative of a process running with a packet filter, and the other two searching for processes with the libpcap library loaded. As with the lsof command, this alone cannot solely determine whether the implant is present, so an analyst would need to further investigate the specific process to confirm the presence of the implant. DecisiveArchitects capability to spoof command lines across Solaris systems also needs to be taken into account when investigating these processes."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x312079d1>",
                    "type": "UnknownWord",
                    "value": "libpcap"
                },
                "references": {
                    "sentences": [
                        "The three commands above loop through every process, with the first command looking for a string indicative of a process running with a packet filter, and the other two searching for processes with the libpcap library loaded. As with the lsof command, this alone cannot solely determine whether the implant is present, so an analyst would need to further investigate the specific process to confirm the presence of the implant. DecisiveArchitects capability to spoof command lines across Solaris systems also needs to be taken into account when investigating these processes.",
                        "When investigating any of these entries, one of the key questions to ask is whether the process in question has any reason to have a raw socket open, to be using a packet filter or to be utilizing the libpcap library. One of the most common false positives relates to systems running processes such as tcpdump or other packet capture utilities."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3c9b08a6>",
                    "type": "UnknownWord",
                    "value": "relates"
                },
                "references": {
                    "sentences": [
                        "When investigating any of these entries, one of the key questions to ask is whether the process in question has any reason to have a raw socket open, to be using a packet filter or to be utilizing the libpcap library. One of the most common false positives relates to systems running processes such as tcpdump or other packet capture utilities."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8ca93b16>",
                    "type": "UnknownWord",
                    "value": "hinder"
                },
                "references": {
                    "sentences": [
                        "While these hunting techniques provide a relatively simple method for identifying DecisiveArchitect activity based on activity observed across multiple intrusions, CrowdStrike expects that DecisiveArchitect will continue development of their implant across both Linux and Solaris platforms, while also improving their techniques regarding operational security of their intrusions to further hinder the ability of a defender to identify or investigate their activity, which might include identifying ways to combat these hunting techniques."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1f26ef43>",
                    "type": "UnknownWord",
                    "value": "fallen"
                },
                "references": {
                    "sentences": [
                        "DecisiveArchitects operations present a clear and present threat to telecommunications companies, as well as other organizations such as logistics entities. This blog highlights important details about DecisiveArchitects implant, their abilities to operate on Solaris systems, and ways to hunt down the adversarys implants to help organizations identify whether they have fallen victim to this campaign."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9f9d8a45>",
                    "type": "UnknownWord",
                    "value": "endnotes"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Endnotes"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2ff9cc5c>",
                    "type": "UnknownWord",
                    "value": "kdumpflush"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdba34d5>",
                    "type": "UnknownWord",
                    "value": "kdumpcab"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc9740a34>",
                    "type": "UnknownWord",
                    "value": "var"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc5bb1bc5>",
                    "type": "UnknownWord",
                    "value": "kdumpcache"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbe4a55>",
                    "type": "UnknownWord",
                    "value": "dev"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xde6573c8>",
                    "type": "UnknownWord",
                    "value": "shm"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x34f097ce>",
                    "type": "UnknownWord",
                    "value": "kdmtmpflush"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x17284037>",
                    "type": "UnknownWord",
                    "value": "kdevtmpfls"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdb21fbbc>",
                    "type": "UnknownWord",
                    "value": "jvm jvm conf"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbbe6b47>",
                    "type": "UnknownWord",
                    "value": "bin myisambug"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf5a8961d>",
                    "type": "UnknownWord",
                    "value": "avahi"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7e560fd3>",
                    "type": "UnknownWord",
                    "value": "cups"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x179b9167>",
                    "type": "UnknownWord",
                    "value": "gofer"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1026cf6>",
                    "type": "UnknownWord",
                    "value": "gofor"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd07192e2>",
                    "type": "UnknownWord",
                    "value": "gss"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfdf2fbc9>",
                    "type": "UnknownWord",
                    "value": "ntpd"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xabb39e6c>",
                    "type": "UnknownWord",
                    "value": "opt"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd081f13a>",
                    "type": "UnknownWord",
                    "value": "pulp"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x49bbe980>",
                    "type": "UnknownWord",
                    "value": "kdumplog"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc736ef8b>",
                    "type": "UnknownWord",
                    "value": "nfs"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd77fc3>",
                    "type": "UnknownWord",
                    "value": "xdg"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x14c476ee>",
                    "type": "UnknownWord",
                    "value": "jdk1"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9485121>",
                    "type": "UnknownWord",
                    "value": "0_181-amd64"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x991d3020>",
                    "type": "UnknownWord",
                    "value": "jexecd"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe9a68de2>",
                    "type": "UnknownWord",
                    "value": "autofs"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x28889baf>",
                    "type": "UnknownWord",
                    "value": "mountd"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x48f47778>",
                    "type": "UnknownWord",
                    "value": "vrtsvcs"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7ca0721d>",
                    "type": "UnknownWord",
                    "value": "online_agent"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf28ea094>",
                    "type": "UnknownWord",
                    "value": "lvv"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7d1733cb>",
                    "type": "UnknownWord",
                    "value": "lvm"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xeee91cd1>",
                    "type": "UnknownWord",
                    "value": "sem"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x330d52f4>",
                    "type": "UnknownWord",
                    "value": "cli"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf55b3423>",
                    "type": "UnknownWord",
                    "value": "exploitation-related"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6c5fadda>",
                    "type": "UnknownWord",
                    "value": "bin atexec py usr"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd481e13b>",
                    "type": "UnknownWord",
                    "value": "bin esentutl"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8f0a88bb>",
                    "type": "UnknownWord",
                    "value": "bin getpac"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xabf43137>",
                    "type": "UnknownWord",
                    "value": "bin getst py usr"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3444c083>",
                    "type": "UnknownWord",
                    "value": "bin goldenpac py"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x78d606a8>",
                    "type": "UnknownWord",
                    "value": "bin karmasmb"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x96e2ed54>",
                    "type": "UnknownWord",
                    "value": "bin py"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3adb816d>",
                    "type": "UnknownWord",
                    "value": "bin mqtt_check py"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x99db88f9>",
                    "type": "UnknownWord",
                    "value": "bin ntfs-read"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x95d6c9b2>",
                    "type": "UnknownWord",
                    "value": "bin ping py usr"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x27a2f7e7>",
                    "type": "UnknownWord",
                    "value": "bin py usr local bin"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x39b68bb0>",
                    "type": "UnknownWord",
                    "value": "bin rdp_check"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdd0a207d>",
                    "type": "UnknownWord",
                    "value": "bin reg"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7594791f>",
                    "type": "UnknownWord",
                    "value": "bin samrdump"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x129c97d2>",
                    "type": "UnknownWord",
                    "value": "bin smbexec"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6bead090>",
                    "type": "UnknownWord",
                    "value": "bin sniffer"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7c16d4ae>",
                    "type": "UnknownWord",
                    "value": "bin ticketer"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x620a3b0b>",
                    "type": "UnknownWord",
                    "value": "getadusers"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x540d4fd9>",
                    "type": "UnknownWord",
                    "value": "getnpusers"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd92a74ae>",
                    "type": "UnknownWord",
                    "value": "getuserspns"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x87f26e4f>",
                    "type": "UnknownWord",
                    "value": "dcomexec"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf42e38db>",
                    "type": "UnknownWord",
                    "value": "getarch"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6732d31b>",
                    "type": "UnknownWord",
                    "value": "gettgt"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5c22ddc>",
                    "type": "UnknownWord",
                    "value": "ifmap"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x980f6766>",
                    "type": "UnknownWord",
                    "value": "lookupsid"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1d048273>",
                    "type": "UnknownWord",
                    "value": "mssqlclient"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5f5e8c9>",
                    "type": "UnknownWord",
                    "value": "mssqlinstance"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xabb23de2>",
                    "type": "UnknownWord",
                    "value": "netview"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8c657fc5>",
                    "type": "UnknownWord",
                    "value": "nmapanswermachine"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc9cdabd6>",
                    "type": "UnknownWord",
                    "value": "ntlmrelayx"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7d4fc96f>",
                    "type": "UnknownWord",
                    "value": "opdump"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd4039ea0>",
                    "type": "UnknownWord",
                    "value": "ping6"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb9e80aa>",
                    "type": "UnknownWord",
                    "value": "raisechild"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x664b8898>",
                    "type": "UnknownWord",
                    "value": "registry-read"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc0f9faf5>",
                    "type": "UnknownWord",
                    "value": "rpcdump"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5a1453b1>",
                    "type": "UnknownWord",
                    "value": "sambapipe"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x81e25e56>",
                    "type": "UnknownWord",
                    "value": "secretsdump"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9690ed74>",
                    "type": "UnknownWord",
                    "value": "smbclient"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd75d731d>",
                    "type": "UnknownWord",
                    "value": "smbrelayx"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x545e8c0a>",
                    "type": "UnknownWord",
                    "value": "smbserver"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe0224d89>",
                    "type": "UnknownWord",
                    "value": "sniff"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4dd2cb77>",
                    "type": "UnknownWord",
                    "value": "wmipersist"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8bd67a9f>",
                    "type": "UnknownWord",
                    "value": "wmiquery"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xad43bb7c>",
                    "type": "UnknownWord",
                    "value": "ldd2bloodhound"
                },
                "references": {
                    "sentences": [],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2a7956fd>",
                    "type": "UnknownWord",
                    "value": "full-featured"
                },
                "references": {
                    "sentences": [
                        "Read about another threat that targets the telecommunications sector in this blog: LightBasin: A Roaming Threat to Telecommunications Companies.<crlf>Download the CrowdStrike 2022 Global Threat Report for insights into adversaries tracked by CrowdStrike Intelligence in 2020.<crlf>Get a full-featured free trial of CrowdStrike Falcon Prevent and learn how true next-gen AV performs against todays most sophisticated threats."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdeb72ed9>",
                    "type": "UnknownWord",
                    "value": "trial"
                },
                "references": {
                    "sentences": [
                        "Read about another threat that targets the telecommunications sector in this blog: LightBasin: A Roaming Threat to Telecommunications Companies.<crlf>Download the CrowdStrike 2022 Global Threat Report for insights into adversaries tracked by CrowdStrike Intelligence in 2020.<crlf>Get a full-featured free trial of CrowdStrike Falcon Prevent and learn how true next-gen AV performs against todays most sophisticated threats."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x71c46a6e>",
                    "type": "UnknownWord",
                    "value": "tweet"
                },
                "references": {
                    "sentences": [
                        "Tweet<crlf>Share"
                    ],
                    "titles": []
                }
            }
        ]
    },
    "other_links": [],
    "info": {
        "potential_threats": {
            "<UNKNOWNWORD_0x719d87d7>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x719d87d7>",
                    "type": "UnknownWord",
                    "value": "impacket"
                },
                "references": {
                    "sentences": [
                        "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor). While this adversary does interact with Windows systems, mostly during the early stages of an intrusion, CrowdStrike has not yet identified any custom implants geared toward Windows systems. Instead, the adversary relies on publicly available tools, such as ldapdomaindump, or the post-exploitation framework Impacket, to target Windows systems from previously compromised Linux systems."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xcb9d901e>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xcb9d901e>",
                    "type": "UnknownWord",
                    "value": "ld_preload"
                },
                "references": {
                    "sentences": [
                        "As recently as April 2022, CrowdStrike observed further variations with regard to DecisiveArchitects tactics, techniques and procedures (TTPs), with the actor using the LD_PRELOAD environment variable across Linux systems as well, loading the JustForFun implant, /lib64/libcaac.so.1, within the legitimate process /sbin/agetty. This highlights a deviation from the standard list of spoofed command lines in Figure 1, likely as part of a further effort to remain undetected and emphasizing the importance of behavioral-based hunting and detection methods.",
                        "On Solaris systems, though the executable itself exhibits no mechanism for similar command-line spoofing, DecisiveArchitect achieves similar functionality through the use of LD_PRELOAD, such as the following example identified within a SysVinit script:",
                        "DecisiveArchitect targets Solaris systems via publicly available exploit code for CVE-2019-3010, a vulnerability in xscreensaver. Binaries used to exploit this vulnerability have usually been observed within a few minutes of the JustForFun implant deployment. CVE-2019-3010 is a logic bug that utilizes the LD_PRELOAD technique to facilitate local privilege escalation to the root user on Solaris 11 systems. Proof-of-concept (POC) code is publicly available and was not modified by DecisiveArchitect.1 Table 1 lists two files observed across Solaris systems related to this privilege escalation activity."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x8861fcfb>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x8861fcfb>",
                    "type": "UnknownWord",
                    "value": "falcon"
                },
                "references": {
                    "sentences": [
                        "Please note: The examples in the following scenario have CrowdStrike Falcon configured with DETECTIONS ONLY and PREVENTIONS off. A properly configured Falcon instance, as noted previously, would prevent the activity presented here."
                    ],
                    "titles": []
                }
            }
        },
        "sigma": false,
        "yara": false
    },
    "keywords": {
        "classified": [],
        "dubbed": [
            "Similar to the activity cluster reported as LightBasin, this adversary primarily focuses on Linux and Solaris systems using a custom-built implant tracked by CrowdStrike Intelligence as JustForFun (also publicly known as BPFDoor)",
            "CrowdStrike Intelligence is currently tracking these intrusions under the DecisiveArchitect activity cluster (also publicly known as Red Menshen; however, this activity is not currently attributed by CrowdStrike to a specific country-nexus"
        ],
        "associated": [
            "With this method of nested persistence, if an analyst simply reviews a set of SysVinit scripts by themselves, identifying the malicious line associated with the JustForFun implant would likely prove difficult without subsequently reviewing all of the files referenced within the scripts",
            "Figures 2 and 3 highlight the CrowdStrike Falcon platforms machine learning capabilities and Falcon OverWatch detections associated with the JustForFun implant and JustForFun command-line tool",
            "However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary"
        ],
        "targets": [
            "DecisiveArchitect targets Solaris systems via publicly available exploit code for CVE-2019-3010, a vulnerability in xscreensaver",
            "However, by running the lsof command against the process ID without any of the grep filtering, an analyst can list any open files associated with that process, which should reveal the binary",
            "Read about another threat that targets the telecommunications sector in this blog: LightBasin: A Roaming Threat to Telecommunications Companies",
            "Get a full-featured free trial of CrowdStrike Falcon Prevent and learn how true next-gen AV performs against todays most sophisticated threats"
        ],
        "attributed": [
            "CrowdStrike Intelligence is currently tracking these intrusions under the DecisiveArchitect activity cluster (also publicly known as Red Menshen; however, this activity is not currently attributed by CrowdStrike to a specific country-nexus"
        ]
    },
    "resources": {
        "links": {
            "github": [],
            "pastebin": [],
            "text_files": [],
            "other": [
                "https://www.crowdstrike.com/blog/author/jamie-harries/",
                "https://www.crowdstrike.com/blog/category/from-the-front-lines/",
                "https://www.crowdstrike.com/cybersecurity-101/endpoint-security/endpoint-detection-and-response-edr/",
                "https://www.crowdstrike.com/blog/an-analysis-of-lightbasin-telecommunications-attacks/",
                "https://www.crowdstrike.com/blog/an-analysis-of-lightbasin-telecommunications-attacks/",
                "https://www.crowdstrike.com/resources/reports/global-threat-report/",
                "https://go.crowdstrike.com/try-falcon-prevent.html",
                "https://twitter.com/share?text=Hunting+a+Global+Telecommunications+Threat%3A+DecisiveArchitect+and+Its+Custom+Implant+JustForFun&url=https://www.crowdstrike.com/blog/how-to-hunt-for-decisivearchitect-and-justforfun-implant/",
                "https://www.linkedin.com/shareArticle?mini=true&url=https://www.crowdstrike.com/blog/how-to-hunt-for-decisivearchitect-and-justforfun-implant/&title=Hunting+a+Global+Telecommunications+Threat%3A+DecisiveArchitect+and+Its+Custom+Implant+JustForFun",
                "https://go.crowdstrike.com/try-falcon-prevent.html"
            ]
        },
        "images": [
            "https://www.crowdstrike.com/wp-content/uploads/2022/05/0522_10_Hunting-Global-Telecomms-Threat_DecisiveArchitect_JustForFun_Blog_1060x698.jpeg",
            "https://www.crowdstrike.com/wp-content/themes/main-theme/dist/images/blog/breaches-stop-here-post-cta.jpeg"
        ]
    }
}