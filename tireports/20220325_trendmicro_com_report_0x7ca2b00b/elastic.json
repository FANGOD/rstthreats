[
    {
        "report": {
            "id": "report_0x7ca2b00b",
            "date": "20220325",
            "title": "Purple Fox Uses New Arrival Vector and Improves Malware Arsenal",
            "url": "https://www.trendmicro.com/en_us/research/22/c/purple-fox-uses-new-arrival-vector-and-improves-malware-arsenal.html"
        },
        "chapter": {
            "id": "chapter_0xfd04969b",
            "title": "Purple Fox Uses New Arrival Vector and Improves Malware Arsenal",
            "text": "Purple Fox is an old threat that has been making waves since 2018. This most recent investigation covers Purple Foxs new arrival vector and early access loaders. Users machines seem to be targeted with malicious payloads masquerading as legitimate application installers.\nBy: Sherif Magdy, Abdelrhman Sharshar, Jay Yaneza\n\nMarch 25, 2022\nRead time: 7 min (1830 words)\nSave to Folio\nSubscribe\nWe have been continuously tracking the Purple Fox threat since it first made waves in 2018, when it reportedly infected over 30,000 users worldwide. In 2021 we covered how it downloaded and executed cryptocurrency miners, and how it continued to improve its infrastructure while also adding new backdoors.\nThis most recent investigation covers Purple Foxs new arrival vector and the early access loaders we believe are associated with the intrusion set behind this botnet. Our data shows that users machines are targeted via trojanized software packages masquerading as legitimate application installers. The installers are actively distributed online to trick users and increase the overall botnet infrastructure. Other security companies have also reported on Purple Foxs recent activities and their latest payloads.\nThe operators are updating their arsenal with new malware, including a variant of the remote access trojan FatalRAT that they seem to be continuously upgrading. They are also trying to improve their signed rootkit arsenal for antivirus (AV) evasion to be able to bypass security detection mechanisms. These notable changes are covered in the sections below and further explained in our technical brief.\nPurple Fox infection chain and payload updates\nThe attackers distribute their malware using disguised software packages that encapsulate the first stage loader. They use popular legitimate application names like Telegram, WhatsApp, Adobe, and Chrome to hide their malicious package installers.\nThe installers include a specific single character (highlighted in Figure 1 as A) that corresponds to a specific payload. The second stage payload is added as the single character in the request sent by the execution parent to the first stage command and control (C&C) server (illustrated in detail in Figure 2 as r). It is retrieved through the module filenames last character, then the first stage C&C server will log the execution timestamp sent in the request alongside the character. The single character will then determine what payloads will be sent back for the malicious installer to drop on the infected machine.\nFigure 1. Purple Fox infection chain\nFigure 2. Malicious installer requests the second stage payloads\nIn previous campaigns in 2019, HTTP file servers (HFS) were used by Purple Fox to run the C&C servers that host files on the infected bots. In this most recent investigation, we found an exposed HFS that the Purple Fox group uses to host all the second stage samples with their update timestamps. We were able to track the frequency of the second stage updated packages pushed to this exposed server using the timestamp data. Figure 3 shows the number of different second stage malicious packages that received updates. They are still actively updating their components at the time of writing.\nFigure 3. Second stage payloads update count\nNotable Purple Fox tools and techniques\nDisguised packages and malicious components in svchost.txt\nWe noted that some of the software they were impersonating were commonly used by Chinese users. The following list shows the recently used software and the corresponding malicious payload for the second stage of the infection. As mentioned above, the different payloads will be served by the C&C upon execution based on the last character in the module filename.\nTable 1. Disguised package names with highlighted single characters that correspond to the payloads\nWe tracked a server hosting the second stage payloads and saw a compressed RAR archive holding the second stage loaders along with the file svchost.txt, which contains all the malicious portable executable (PE) module components that will be dropped in the second stage.\nThe order of the PE modules inside svchost.txt is dependent on the package requested by the malicious installers. As previously mentioned, the last character in the installer filename will determine the final set of the auxiliary modules that will be stuffed inside svchost.txt.\nShellcode user-mode loader and anti-forensics methods\nA specific set of portable executable (PE) modules found in one of the most distributed clusters from the malware had a wide range of capabilities in terms of AV evasion. This cluster is noteworthy for various reasons as well it has links to older families, it loaded a previously documented Purple Fox MSI installer, and it had different rootkit capabilities in the auxiliary PE modules. More details about this cluster can be found in our technical brief.\nAfter analyzing all the observed malicious execution parents delivering different clusters, we found that the shellcode component at the prologue of the dropped svchost.txt was similar across all the different variants, regardless of the actual payloads embedded after the shellcode. It has two different implementations across all the clusters.\nThe first shellcode implements four main functions for the intended functionality, as shown in Figure 4.\nFigure 4. Shellcode main functions for loading a PE module in memory\nMeanwhile, the new shellcode is more minimalistic because it implements only important functionalities to load a PE in memory and parse several system APIs addresses. It resolves different system APIs from the first one we mentioned.\nOne more thing to note: the Purple Fox group implements a customized user-mode shellcode loader that leaves little traces for cybersecurity forensics. It minimizes both the quantity and quality of the forensic evidence as the execution doesnt rely on the native loader and doesn't respect the PE format for a successful execution.\nThe use of FatalRAT and incremental updates\nAfter the shellcode loads and allocates memory for the PE modules inside svchost.txt, the execution flow will call into the first PE module found after the shellcode. This is a remote access trojan (RAT) that inherits its functionality from a malware known as FatalRAT, a sophisticated C++ RAT that implements a wide set of remote capabilities for the attackers.\nThe executed FatalRAT variants shown in Figures 5 and 6 differ across each cluster, illustrating that the attackers are incrementally updating it.\nFigure 5. Updated FatalRAT variant from cluster-1\nFigure 6. Updated FatalRAT variant from a more recent cluster with more added functionality\nThe RAT is responsible for loading and executing the auxiliary modules based on checks performed on the victim systems. Changes can happen if specific AV agents are running or if registry keys are found. The auxiliary modules are intended as support for the groups specific objectives.\nNew capabilities to evade cybersecurity mechanisms\nOne of the analyzed executables embedded in svchost.txt is a user-mode client used to interface with the accompanying rootkit module. This client supports five different commands, each command implements a specific functionality to be executed from the kernel driver with the appropriate input/output control (IOCTL) interface exposed. Table 2 shows the details of each command:\nTable 2. IOCTL interface implemented by Purple Fox AV killer rootkit\nThe functionality to kill a mini-filter is notable in terms of AV evasion. File systems are targets for input-output (I/O) operations to access files, and file system filtering is the mechanism by which the drivers can intercept calls sent to the file system this specifically is useful for AV agents. The model called file system mini-filters was developed to replace the legacy filter mechanism. Mini-filters are easier to write and are the preferred way to develop file system filtering drivers in almost all AV engines.\nWe looked deeper into the mini-filter driver killer and how the attackers implemented this functionality. The driver first enumerates all the registered mini filter drivers on the system using the system API FltEnumerateFilters, then it gets the targeted mini-filter object information it is searching for by calling FltGetFilterInformation. Lastly, it creates a new system thread to unregister the mini-filter driver and terminate the created system thread (PsCreateSystemThread, FltUnregisterFilter).\nFigure 7 shows the specific call graph for the system APIs used for this functionality.\nFigure 7. System APIs call for unregistering mini-filter drivers\nThe uses of revoked code signing certificates\nTo control the quality of the code that runs in the address space of the kernel-land, Microsoft only allows signed drivers to run in kernel mode. They do this by enforcing kernel-mode code signing (KMCS) mechanisms.\nDue to performance issues and backward compatibility, Windows actually allows the loading of a kernel driver signed by a revoked code signing certificate. So, by testing a previous kernel driver and allowing it to be revoked, it can be loaded successfully. This design choice allows mature threat actors to chase and pursue any stolen code signing certificate and add it to their malware arsenal. If the malware authors acquire any certificate that has been verified by a trusted certificate authority and by Microsoft, even if it was revoked, attackers can use it for malicious purposes.\nLinks to previous Purple Fox activities and artifacts\nAnalyzing the artifacts dropped by this new infection chain, we first looked at the stolen code signing certificates used to sign the kernel drivers modules. This led us to analyze other signed malicious samples in our malware repository, which revealed links to previously known intrusion sets.\nThere were three different stolen code signing certificates confirmed to be related to this campaign with links to Purple Fox:\nHangzhou Hootian Network Technology Co., Ltd. - We found a strong connection to early activity of the Purple Fox botnet that started in 2019.\nShanghai Oceanlink Software Technology Co. Ltd. - Analysis revealed several clusters of malicious kernel modules previously used in Purple Fox activities.\nShanghai easy kradar Information Consulting Co. Ltd. This certificate overlaps with Hangzhou Hootian Network in signing a common cluster of kernel drivers that was also previously seen in Purple Fox activities.\nThis campaign is similar with earlier Purple Fox activities in other ways as well, namely, how the attack infrastructure is run and the malware hosted on their servers:\nThe first stage C&C server 202[.]8.123[.]98 links FatalRAT operators with the Purple Fox. The server was hosting the malicious compressed archives in this campaign and was used before by FatalRAT as their main C&C server.\nOne of the first stage servers (194.146.84.245) hosted an old module for the MSI installer for Purple Fox (e1f3ac7f.moe) that will eventually load the crypto miner discussed in the previous blogs.\nThe dropped FatalRAT from the malicious archive found on the first stage C&C server revealed many code similarities with a previously documented info stealer known as Zegost. We go into commonalities found between these Purple Fox campaign modules and the old Zegost samples in our technical brief.\nConclusion\nOperators of the Purple Fox botnet are still active and consistently updating their arsenal with new malware, while also upgrading the malware variants they have. They are also trying to improve their signed rootkit arsenal for AV evasion and trying to bypass detection mechanisms by targeting them with customized signed kernel drivers.\nAbusing stolen code signing certificates and unprotected drivers are becoming more common with malicious actors. Software driver vendors should secure their code signing certificates and follow secure practices in the Windows kernel driver development process.\nFor more details on this topic download our technical brief and for the full list of the Indicators of Compromise download this document.\nTags\nMalware\n|\nEndpoints\n|\nCyber Crime\n|\nResearch\n|\nArticles, News, Reports"
        }
    },
    {
        "report": {
            "id": "report_0x7ca2b00b",
            "date": "20220325",
            "title": "Purple Fox Uses New Arrival Vector and Improves Malware Arsenal",
            "url": "https://www.trendmicro.com/en_us/research/22/c/purple-fox-uses-new-arrival-vector-and-improves-malware-arsenal.html"
        },
        "chapter": {
            "id": "chapter_0x647f3e3f",
            "title": "Purple Fox Uses New Arrival Vector and Improves Malware Arsenal",
            "text": "Malware"
        }
    },
    {
        "report": {
            "id": "report_0x7ca2b00b",
            "date": "20220325",
            "title": "Purple Fox Uses New Arrival Vector and Improves Malware Arsenal",
            "url": "https://www.trendmicro.com/en_us/research/22/c/purple-fox-uses-new-arrival-vector-and-improves-malware-arsenal.html"
        },
        "chapter": {
            "id": "chapter_0x8864ce7f",
            "title": "Additional IOC file",
            "text": "Detections\nTrojan.Win64.PURPLEFOX.YACAM\nTrojan.Win64.PFSHELLOADER.SM\nPossible_SMPFSHELLOADER\nTrojan.Win64.KILLAV.YCCAF\nSHA-256\nShellcode Samples\n25da2ebdbe2136f07bd414795082364cafda79d8271d099e78891b079158ed1b\n492fdcbdf81ed196b35cdbb7fac85e3a8ee1edebe0803034df900f5e1a5049b6\nSvchost.txt Samples\nSHA 256 Detection\n143be3d067188ae89a2c003ef2671bbdd790d6026664078098117cc7fc3373ed Trojan.Win64.PFSHELLOADER.SM\n21330417621547aa33b421a6d0834436453dd901dce75b9986ef3be743d1bdfa Trojan.Win64.PFSHELLOADER.SM\n7837ce02c57dd9fadd95882af162d46db5ae5718a59f0102478f62143a46cf71 Trojan.Win64.PFSHELLOADER.SM\n88dd42dedc77e8ad117cc54d7b37083bbacaa6ecb84553bda31905b0a29e0e4d Trojan.Win64.PFSHELLOADER.SM\n1c8b01a100c0281153fe93168df3b79adc32bfb677c3a36c1d0d5d598cbe7cf3 Trojan.Win64.PFSHELLOADER.SM\n0486df34e606d421e0f65aee68b5356ff1941f97c12f894f8b71318f607a54cc Trojan.Win64.PFSHELLOADER.SM\n9fb0a0dd309df7cbb7386f4de34be6ccc98ae64dde4773de99804871f49a4260 Trojan.Win64.PFSHELLOADER.SM\n82490fa7297344ca9c37f901cbc5c43c5db51bba4b4a390589db0973d70475e4 Trojan.Win64.PFSHELLOADER.SM\nef979beb55c51ca22265c34a26154e916cd8f3f160d8b0ae1a2b393f13962a0c Trojan.Win64.PFSHELLOADER.SM\nec6ea5da57991f343d28db611c076cb2bfd1100e69c6e5311d5295a05373801d Trojan.Win64.PFSHELLOADER.SM\nojbkcg loader\nSHA 256 Detection\n4d0238834821461963c558e9ceb975b4e9c2a347ea447f9e044966eaf85f5281 TROJ_FRS.VSNTC922\n53132712a773da3c3f15cc9879b8bc89b1a757a041fcfefbb8d75e3238d471d6 TROJ_FRS.VSNTC922\n07719f8de2fe07722f1fa464fa7091830b835b58d9c5f99763b9a49ee0d0491e TROJ_FRS.VSNTC922\n8577bcbd02d38bce9601eb43511017b0bbc5176ebc3c48c08c81f755fcf216f4 TROJ_FRS.VSNTC922\n360.tct DLLs\nSHA 256 Detection\n87d3ea42604943d2230cc0b5aea499da41fc7db46d141abf96875692040e4699 TROJ_FRS.VSNTC922\n83ae0c568d6866c19960f1c2e2f2e28ee855c72d662eabc3acf50a09f1092730 TROJ_FRS.VSNTC922\n799aa9612f9fffa5eab505ef3b9eabe78ac22f8f4bbe6b8f8cc2e8fca454667b TROJ_FRS.VSNTC922\nMalicious Archive Clusters\nSHA 256 Detection\n0926a30d0658671bf6dbb29a8cb33118930bb8211c90b170c2abfdc6a0e95b70 TROJ_GEN.R04CC0PAU22\n1fd53c5ca08065fa72da9b529719166e08948204bea862681f2a04eda8c0a64b TROJ_GEN.R04CC0PAU22\n3f08a6f1998968b10bfbb19ffcb2904b96296a8c378aaa30e974cadfcd059e7f TROJ_GEN.R04CC0PAU22\n601a488c0c9804823866f1c4647fa60a90572edbb101e3247f75cfc2611999a9 TROJ_GEN.R04CC0PAU22\n7bbe1fe9dc3346f40b3d6895dc9417b1c2cc5a940a41aaff39194588fc6efa20 TROJ_GEN.R04CC0PAU22\n8d776597d31016863a00cee4da6a58db5c181337d7dfcacb4e239389af3cb2d8 TROJ_GEN.R04CC0PAU22\n8df5b3d1e564397e838adf593714c97ade863b8caf81f666b93b4b0509062633 TROJ_GEN.R04CC0PAU22\n8f7decbfc2c576c3b1401b9dd11183ea355b12a1ccfcf15d6a36d5470338bfd4 TROJ_GEN.R04CC0PAU22\n937158fb5f7e2ddd0ca26e9d481be5e26efb85dee3bf77f06293ca5288973b92 TROJ_GEN.R04CC0PAU22\n93d35724293f8582757fbb9f139645bb79f3ddb92c8c64c78ded31a021097ecb TROJ_GEN.R04CC0PAU22\n9a1aed2a2addafe001e8655cc869ba939f9a9b32ff55eb04282be435e12078cd TROJ_GEN.R04CC0PAU22\n9d8f53dcf25223d42c818e9f644b332064e43b9e3a26cfbdbc73b68af5580dd3 TROJ_GEN.R04CC0PAU22\n9e20db31a624b1a255b2f7650efd9a1f20d6b077bc41edcfae88410198978941 TROJ_GEN.R04CC0PAU22\na24469103e727ece260bee7623387a2b339df206779bfb364388712606a1904d TROJ_GEN.R04CC0PAU22\nb061de89d542cd0a10558f6006e9a808ba32ac4d7ea54d2ba40f531d46919548 TROJ_GEN.R04CC0PAU22\nb07b090547cb65dffb865dc9ef258a5e67e88555e798e6aaf3d0834bf2c742e3 TROJ_GEN.R04CC0PAU22\nb2e0bd930dae20b4516b35d169b0583592050058d31ae84bcecefd2c15f13ddc TROJ_GEN.R04CC0PAU22\nc5245249c4f3d8851f6ce58d31b8406059e2a8530cfdbd4335f73110a1040f3e TROJ_GEN.R04CC0PAU22\nd152a38aa36cbdf9d384092fe81e3ddc93798999eb769e0e78bbcba4065f6b8c TROJ_GEN.R04CC0PAU22\nd239365a5e07cea9f7e56b9e1063f1fccfa883f654c68dc5f609d10a612262c8 TROJ_GEN.R04CC0PAU22\ne9f7db12761d414a58aa2f4d1bda32698979e4e08bf42d03ae5fb1ebf11abb77 TROJ_GEN.R04CC0PAU22\nMalicious Kernel Drivers\nSHA 256 Detection\n638fa26aea7fe6ebefe398818b09277d01c4521a966ff39b77035b04c058df60 (x64 Driver) Trojan.Win64.PURPLEFOX.YACAM\n0ed3bb6be804402d10ee575d466cfaad59a0be42230a3aa47cf1e952f64970e8 (x86 Driver) Trojan.Win64.PURPLEFOX.YACAM\n8cb47e54d1514bc4e6b4577d2a57117f1fbf9d89ecc6622c7a2515097b2e9b17 (x64 user-mode client) Trojan.Win64.PURPLEFOX.YACAM\ne2c463ac2d147e52b5a53c9c4dea35060783c85260eaac98d0aaeed2d5f5c838 (x86 user-mode client) Trojan.Win64.PURPLEFOX.YACAM\nWeaponized Execution Parents\nSHA 256\nbae1270981c0a2d595677a7a1fefe8087b07ffea061571d97b5cd4c0e3edb6e0\nd25542837c28619603fce465a6876b2984a3c191a908fa57ca7f5b8f8d803180\n4c2ce3ed2ad22a531500046c0a9d790979b7885682aec6160a73ad259eb08cbe\n5f4d31e77dd5b36943212dd55a0747923a69ca1e0f5efea607fc063d86b35995\n111760bb8191b37f89e27f474d29faf77b0db1ae4758d6d08a152e36a9167cae\n71ea052cf6919ed6da26e5fc27df0236bbc0cd36509852c74144b0ba76ee1264\n2d288f2cd6752a01360f2669959e2c61f676f8156d5cc40d4b415245ae04cf6d\ncd38695e4760df90b049f3faa19a826814b60632f74402cd0feddc93d116848e\na5d478171338ab83634f39d6663ba8db328b24ddffe32dbbddb0da8784ef644b\n608b3486309d15bed054e22e20d87c44e43a6cde3dad6942ef592c9d3c4f3cff\n8ade56bd356d12804d384ca24fe876346498a25870f6caf08e16d0c73e5abe59\nb8950b21a65f9699f0965dda2d61d61ceb1ac8b888b84adde8040b3cf25d09c4\nURLs Distributing Malicious Installers\nhxxp://58585[.]xyz/tsetup20473[.]exe\nhxxp://xiaotaiyang[.]xyz/tsetup20473[.]exe\nhxxp://1077cp111[.]com/x[.]exe\nhxxp://whats[.]jsnsgjy[.]cn/whatsappsetupr.exe\nhxxp://kkiiz[.]com/safety3[.]exe\nhxxp://zhiyingzhifu8[.]com/flashc[.]exe\nhxxp://whats[.]hswlkjh[.]cn/whatsappsetupr[.]exe\nFirst Stage C&C\nIP Port\n194.146.84.244 4397\n194.146.84.243 4397\n194.146.84.245 4397\n194.146.84.242 4397\n194.146.84.246 4397\n107.151.64.102 4397/7788\n107.151.64.101 4397\n107.151.94.68 4397\n107.151.94.69 4397\n107.151.94.70 4397\n107.151.94.66 4397\n107.151.94.67 4397\n107.151.64.100 4397\n107.151.64.99 4398\n107.151.64.98 4398\n23.225.132.246 4398\n23.225.132.245 4398\n23.225.132.243 7456\n23.225.132.242 7456\n193.164.223.77 7456\n107.151.113.219 7456\n107.151.113.222 7456\n107.151.113.221 7456\n193.164.223.78 7456\n107.151.113.220 7456\n107.151.113.218 7456\n193.164.223.76 7456\n193.164.223.75 7456\n193.164.223.74 7456\n193.36.112.189 7456\n193.36.112.190 7456\n193.36.112.188 7456\n193.164.222.130 7456\n193.36.112.187 7456\n193.164.222.132 4567\n156.234.65.84 4567\n193.164.222.131 4567\n156.234.65.86 4567\n156.234.65.83 4567\n156.234.65.82 6688\n156.234.65.83 6688\n43.240.238.252 6688\n43.240.238.254 6688\n43.240.238.253 6688\n154.39.248.37 6688\n202.8.123.68 6547\n43.240.238.251 6688\n160.202.170.62 6688\n202.8.123.124 6547\n202.8.123.122 6547\n202.8.123.117 6547\n202.8.123.99 6547\n202.8.123.232 6547\n202.8.123.81 6547\n202.8.123.233 6547\n202.8.123.36 6547\n202.8.123.35 6547\n202.8.123.190 6547\n202.8.123.153 6547\n202.8.123.160 6547\n202.8.123.159 6547\n202.8.123.98 6547\n202.8.123.97 6547\n202.8.123.97 6547\n144.48.222.252 6547\n144.48.222.220 7777\nSecond Stage C&C\n216.83.35.130:10022\n43.129.210.43:10022\n103.145.86.160:10022\n156.226.173.202\n144.48.243.79"
        }
    }
]