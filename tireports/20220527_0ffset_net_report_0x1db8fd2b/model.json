{
    "id": "<report_0x1db8fd2b>",
    "url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader",
    "title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages",
    "meta": [
        {
            "id": "<chapter_0xcd861321>",
            "title": "Step 1: Checking System Languages",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xc49c3d03>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Similar to a lot of malware, BAZARLOADER manually checks the systems languages to avoid executing on machines in Russia and nearby countries.",
                    "html": "<p>Similar to a lot of malware, BAZARLOADER manually checks the system\u2019s languages to avoid executing on machines in Russia and nearby countries.</p>"
                },
                {
                    "id": "<sentence_0x1d02fc1a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It calls GetSystemDefaultLangID to retrieve the systems default language and GetKeyboardLayoutList to iterate through the systems keyboard layouts.",
                    "html": "<p>It calls GetSystemDefaultLangID to retrieve the system\u2019s default language and GetKeyboardLayoutList to iterate through the system\u2019s keyboard layouts.</p>"
                },
                {
                    "id": "<sentence_0xd289c2bd>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x77443014>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar01-1024x566.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5833\" height=\"566\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar01-1024x566.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x954ce105>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For each of these languages, the malware checks if its valid using a bitmask.",
                    "html": "<p>For each of these languages, the malware checks if it\u2019s valid using a bitmask. </p>"
                },
                {
                    "id": "<sentence_0x96cff23c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If the language identifier is greater than 0x43 or less than 0x18, its treated as valid and BAZARLOADER proceeds with its execution.",
                    "html": "<p>If the language identifier is greater than 0x43 or less than 0x18, it\u2019s treated as valid and BAZARLOADER proceeds with its execution. </p>"
                },
                {
                    "id": "<sentence_0xb1098a40>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If its in the range between 0x18 and 0x43, the difference between the language identifier and 0x18 is used as the index of the bit to be checked in the bitmask.",
                    "html": "<p>If it\u2019s in the range between 0x18 and 0x43, the difference between the language identifier and 0x18 is used as the index of the bit to be checked in the bitmask.</p>"
                },
                {
                    "id": "<sentence_0x24932d1f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The bitmask that BAZARLOADER uses is 0xD8080190C03, which is 11011000000010000000000110010000110000000011 in binary. The first bit in the bitmask is checked if the language ID is 0x18. The second bit is checked if the language ID is 0x19, and so on",
                    "html": "<p>The bitmask that BAZARLOADER uses is 0xD8080190C03, which is 11011000000010000000000110010000110000000011 in binary. The first bit in the bitmask is checked if the language ID is 0x18. The second bit is checked if the language ID is 0x19, and so on\u2026</p>"
                },
                {
                    "id": "<sentence_0x5eeed350>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x5f436bb4>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar02.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5835\" height=\"227\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar02.png\" width=\"707\"/></figure>"
                },
                {
                    "id": "<sentence_0x6810a8fb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Below is the list of all languages from the bitmask that the malware avoids.",
                    "html": "<p>Below is the list of all languages from the bitmask that the malware avoids.</p>"
                },
                {
                    "id": "<sentence_0xea4b3c69>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xe4359435>": "Romanian, Russian, Ukrainian, Belarusian, Tajik, Armenian, Azerbaijani, Georgian, Kazakh, Kyrgyz, Turkmen, Uzbek"
                    },
                    "text": "",
                    "html": "<code>Romanian, Russian, Ukrainian, Belarusian, Tajik, Armenian, Azerbaijani, Georgian, Kazakh, Kyrgyz, Turkmen, Uzbek</code>"
                }
            ]
        },
        {
            "id": "<chapter_0x36d3cecf>",
            "title": "Step 2: Run-Once Mutex",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xfb4b9da4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To check for multiple running instances of itself, BAZARLOADER first extracts the subauthority of a SID from its process. It does this by calling GetTokenInformation to retrieve the processs token integrity level and calling GetSidSubAuthorityCount and GetSidSubAuthority to access the subauthority of a SID.",
                    "html": "<p>To check for multiple running instances of itself, BAZARLOADER first extracts the subauthority of a SID from its process. It does this by calling GetTokenInformation to retrieve the process\u2019s token integrity level and calling GetSidSubAuthorityCount and GetSidSubAuthority to access the subauthority of a SID.</p>"
                },
                {
                    "id": "<sentence_0x4e68da8>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x4058203e>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar03-1024x313.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5839\" height=\"313\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar03-1024x313.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x401127d1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If the SIDs subauthority is SECURITY_MANDATORY_SYSTEM_RID or SECURITY_MANDATORY_PROTECTED_PROCESS_RID, BAZARLOADER checks if the mutex {b837ef4f-10ee-4821-ac76-2331eb32a23f} is currently owned by any other process by calling CreateMutexA.",
                    "html": "<p>If the SID\u2019s subauthority is SECURITY_MANDATORY_SYSTEM_RID or SECURITY_MANDATORY_PROTECTED_PROCESS_RID, BAZARLOADER checks if the mutex \u201c{b837ef4f-10ee-4821-ac76-2331eb32a23f}\u201d is currently owned by any other process by calling CreateMutexA. </p>"
                },
                {
                    "id": "<sentence_0x36749274>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If it is, the malware terminates itself. However, there is a small bug with the condition to check if the mutex object exists, which assumes it fails to open the mutex when it actually succeeds.",
                    "html": "<p>If it is, the malware terminates itself. However, there is a small bug with the condition to check if the mutex object exists, which assumes it fails to open the mutex when it actually succeeds.</p>"
                },
                {
                    "id": "<sentence_0x76484d03>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xaffc2e27>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar04.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5841\" height=\"561\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar04.png\" width=\"1000\"/></figure>"
                },
                {
                    "id": "<sentence_0xe64400f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After this, the malware resolves the string {0caa6ebb-cf78-4b01-9b0b-51032c9120ce} and tries to create a mutex with that name.",
                    "html": "<p>After this, the malware resolves the string \u201c{0caa6ebb-cf78-4b01-9b0b-51032c9120ce}\u201d and tries to create a mutex with that name.</p>"
                },
                {
                    "id": "<sentence_0xdc2a6d53>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x375cc79e>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar05.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5842\" height=\"377\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar05.png\" width=\"961\"/></figure>"
                },
                {
                    "id": "<sentence_0x44db6d4b>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x520bb3e6>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar06-1024x85.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5844\" height=\"85\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar06-1024x85.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x7bdb2667>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If this mutex object already exists, the malware also terminates itself.",
                    "html": "<p>If this mutex object already exists, the malware also terminates itself.</p>"
                },
                {
                    "id": "<sentence_0xce1b9e30>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If the SIDs subauthority is not SECURITY_MANDATORY_SYSTEM_RID or SECURITY_MANDATORY_PROTECTED_PROCESS_RID, BAZARLOADER still uses these two mutex names but adds the string Global\\ in front of them. This checks for the mutexes in the global namespace instead of the per-session namespace, which allows the malware to check if it has instances running in other users sessions.",
                    "html": "<p>If the SID\u2019s subauthority is not SECURITY_MANDATORY_SYSTEM_RID or SECURITY_MANDATORY_PROTECTED_PROCESS_RID, BAZARLOADER still uses these two mutex names but adds the string \u201cGlobal\\\u201d in front of them. This checks for the mutexes in the global namespace instead of the per-session namespace, which allows the malware to check if it has instances running in other users\u2019 sessions.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x2cb3a691>",
            "title": "Step 4: Generating Random Internet Traffic",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xf8223a89>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To generate Internet activities to hide its communication with C2 servers, BAZARLOADER first calls InternetOpenA to initialize the use of WinINet functions with the following string as the HTTP user agent.",
                    "html": "<p>To generate Internet activities to hide its communication with C2 servers, BAZARLOADER first calls InternetOpenA to initialize the use of WinINet functions with the following string as the HTTP user agent.</p>"
                },
                {
                    "id": "<sentence_0xa31aece>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xe11561a8>": "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko"
                    },
                    "text": "",
                    "html": "<code>Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</code>"
                },
                {
                    "id": "<sentence_0x13c18d8a>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xb48a0793>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar07-1024x418.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5848\" height=\"418\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar07-1024x418.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x312788b3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The malware then spawns a thread to periodically connect to random URLs and generate noises to hide the main C2 traffic by utilizing the following structure.",
                    "html": "<p>The malware then spawns a thread to periodically connect to random URLs and generate noises to hide the main C2 traffic by utilizing the following structure.</p>"
                },
                {
                    "id": "<sentence_0xa6df4080>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x24b0e0d1>": "struct random_internet_thread_struct\n{\n HINTERNET internet_sess_handle;\n HANDLE thread_handle;\n random_internet_thread_struct *self;\n LPCRITICAL_SECTION critical_section;\n __int64 padding[4];\n int creation_flag;\n};\n"
                    },
                    "text": "",
                    "html": "<code>struct random_internet_thread_struct\n{\n HINTERNET internet_sess_handle;\n HANDLE thread_handle;\n random_internet_thread_struct *self;\n LPCRITICAL_SECTION critical_section;\n __int64 padding[4];\n int creation_flag;\n};\n</code>"
                },
                {
                    "id": "<sentence_0x3ae99dd5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "First, BAZARLOADER calls InitializeCriticalSection to initialize the structures critical section object, which is later used to protect accesses to the creation_flag field.",
                    "html": "<p>First, BAZARLOADER calls InitializeCriticalSection to initialize the structure\u2019s critical section object, which is later used to protect accesses to the creation_flag field.</p>"
                },
                {
                    "id": "<sentence_0x9200d99f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xfae31f2b>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar07a-1024x304.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5850\" height=\"304\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar07a-1024x304.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0xb641b7db>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, it sets the self field to point to the structure, the creation_flag field to TRUE, and calls CreateThread to spawn a thread to perform these random Internet operations. If it fails to create a thread, the creation_flag field is set to FALSE.",
                    "html": "<p>Next, it sets the self field to point to the structure, the creation_flag field to TRUE, and calls CreateThread to spawn a thread to perform these random Internet operations. If it fails to create a thread, the creation_flag field is set to FALSE.</p>"
                },
                {
                    "id": "<sentence_0x54855f10>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xc77707af>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar08.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5851\" height=\"507\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar08.png\" width=\"1023\"/></figure>"
                },
                {
                    "id": "<sentence_0xf2870daf>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The thread first tries to obtain ownership of the critical section object and check if the creation flag is enabled. If it is, the malware resolves the following URLs as stack strings.",
                    "html": "<p>The thread first tries to obtain ownership of the critical section object and check if the creation flag is enabled. If it is, the malware resolves the following URLs as stack strings.</p>"
                },
                {
                    "id": "<sentence_0x2654ddec>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x48cf72df>": "https://google.com/api/get\nhttps://yahoo.com/api/get\nhttps://amazon.com/api/get\nhttps://bing.com/api/get"
                    },
                    "text": "",
                    "html": "<code>https://google.com/api/get\nhttps://yahoo.com/api/get\nhttps://amazon.com/api/get\nhttps://bing.com/api/get</code>"
                },
                {
                    "id": "<sentence_0xe1fe2c56>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x75ace71f>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar09-1024x494.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5852\" height=\"494\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar09-1024x494.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0xe7d15e05>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, the thread enters an infinite loop to start generating the traffic noises. For random number generation, BAZARLOADER uses different functions that call the Windows API BCryptGenRandom to generate a set number of random bytes.",
                    "html": "<p>Next, the thread enters an infinite loop to start generating the traffic noises. For random number generation, BAZARLOADER uses different functions that call the Windows API BCryptGenRandom to generate a set number of random bytes. </p>"
                },
                {
                    "id": "<sentence_0x2f9c3884>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It randomly chooses one of the 4 URLs listed above, randomly generates the URL path segments for that, and combines the two to build the full URL.",
                    "html": "<p>It randomly chooses one of the 4 URLs listed above, randomly generates the URL path segments for that, and combines the two to build the full URL.</p>"
                },
                {
                    "id": "<sentence_0x2016c3>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x322399f8>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar10.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5855\" height=\"528\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar10.png\" width=\"1025\"/></figure>"
                },
                {
                    "id": "<sentence_0xc7c864a8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To generate the path segments, the function takes in the minimum and maximum numbers of path segments to generate and the minimum and maximum length for each path segment.",
                    "html": "<p>To generate the path segments, the function takes in the minimum and maximum numbers of path segments to generate and the minimum and maximum length for each path segment.</p>"
                },
                {
                    "id": "<sentence_0x441d3e06>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It generates a count for the path segments randomly in the given range. For each of the segments, the malware randomly generates a string with a random length in the given range that contains numbers and uppercase/lowercase letters.",
                    "html": "<p>It generates a count for the path segments randomly in the given range. For each of the segments, the malware randomly generates a string with a random length in the given range that contains numbers and uppercase/lowercase letters.</p>"
                },
                {
                    "id": "<sentence_0x440bde73>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x5eac9e55>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar11-1024x516.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5856\" height=\"516\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar11-1024x516.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x77156ca6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Finally, the malware calls InternetOpenURLA to establish a connection with the generated URL. It calls HTTPQueryInfoA with the HTTP_QUERY_CONTENT_LENGTH flag to retrieve the contents length, allocates a buffer with that size, and calls InternetReadFile to read data from that URL.",
                    "html": "<p>Finally, the malware calls InternetOpenURLA to establish a connection with the generated URL. It calls HTTPQueryInfoA with the HTTP_QUERY_CONTENT_LENGTH flag to retrieve the content\u2019s length, allocates a buffer with that size, and calls InternetReadFile to read data from that URL.</p>"
                },
                {
                    "id": "<sentence_0x8b312d1b>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x64977d5d>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar12-1024x551.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5857\" height=\"551\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar12-1024x551.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0xa88fd524>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This is done repeatedly until C2 communication and payload injection are finished, which generates a lot of noise to mask the main traffic coming to and from C2 servers.",
                    "html": "<p>This is done repeatedly until C2 communication and payload injection are finished, which generates a lot of noise to mask the main traffic coming to and from C2 servers.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xfa82f946>",
            "title": "Step 4: Cryptographic Structure Population",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x366fd0c3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "BAZARLOADER mainly uses the following structure for communication with C2 servers. The fields of the structure will be explained as we go along analyzing the code.",
                    "html": "<p>BAZARLOADER mainly uses the following structure for communication with C2 servers. The fields of the structure will be explained as we go along analyzing the code.</p>"
                },
                {
                    "id": "<sentence_0xec1c3f08>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x45a82c3a>": "struct __declspec(align(8)) BazarLoader_struct\n{\n C2_connection_struct C2_connection_struct;\n HINTERNET C2_request_handle;\n HINTERNET C2_temp_request_handle;\n crypto_struct crypto_struct;\n SYSTEMTIME curr_system_time;\n char *datetime_string;\n _QWORD datetime_string_hash;\n unsigned int *datetime_string_hash_len;\n opennic_server_struct opennic_DNS_server_struct;\n string_struct_list C2_addr_list;\n};"
                    },
                    "text": "",
                    "html": "<code>struct __declspec(align(8)) BazarLoader_struct\n{\n C2_connection_struct C2_connection_struct;\n HINTERNET C2_request_handle;\n HINTERNET C2_temp_request_handle;\n crypto_struct crypto_struct;\n SYSTEMTIME curr_system_time;\n char *datetime_string;\n _QWORD datetime_string_hash;\n unsigned int *datetime_string_hash_len;\n opennic_server_struct opennic_DNS_server_struct;\n string_struct_list C2_addr_list;\n};</code>"
                },
                {
                    "id": "<sentence_0x6cb0c28b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "First, it populates the crypto_struct field in the main structure. This structure contains cryptographic handles that are later used to decrypt executables being sent from C2 servers.",
                    "html": "<p>First, it populates the crypto_struct field in the main structure. This structure contains cryptographic handles that are later used to decrypt executables being sent from C2 servers.</p>"
                },
                {
                    "id": "<sentence_0x6795ee96>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The structure can be reconstructed as below.",
                    "html": "<p>The structure can be reconstructed as below.</p>"
                },
                {
                    "id": "<sentence_0xddfc6bbd>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x86f0ff15>": "struct crypto_struct\n{\n BCRYPT_ALG_HANDLE RSA_algo_handle;\n BCRYPT_ALG_HANDLE SHA384_algo_handle;\n BCRYPT_KEY_HANDLE RSA_public_key_handle;\n BCRYPT_KEY_HANDLE RSA_private_key_handle;\n DWORD RSA_public_block_length;\n DWORD RSA_private_block_length;\n};"
                    },
                    "text": "",
                    "html": "<code>struct crypto_struct\n{\n BCRYPT_ALG_HANDLE RSA_algo_handle;\n BCRYPT_ALG_HANDLE SHA384_algo_handle;\n BCRYPT_KEY_HANDLE RSA_public_key_handle;\n BCRYPT_KEY_HANDLE RSA_private_key_handle;\n DWORD RSA_public_block_length;\n DWORD RSA_private_block_length;\n};</code>"
                },
                {
                    "id": "<sentence_0xf44f90c9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The malware resolves the strings RSA and SHA384 and calls BCryptOpenAlgorithmProvider to retrieve handles for these two algorithms. The handles are stored in the corresponding fields in the crypto_struct structure.",
                    "html": "<p>The malware resolves the strings \u201cRSA\u201d and \u201cSHA384\u201d and calls BCryptOpenAlgorithmProvider to retrieve handles for these two algorithms. The handles are stored in the corresponding fields in the crypto_struct structure.</p>"
                },
                {
                    "id": "<sentence_0xf53f16b3>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x91ce46c3>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar13.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5861\" height=\"611\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar13.png\" width=\"944\"/></figure>"
                },
                {
                    "id": "<sentence_0xbbe51cec>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, it resolves its hard-coded RSA public and private key blobs in memory to import their corresponding key handles.",
                    "html": "<p>Next, it resolves its hard-coded RSA public and private key blobs in memory to import their corresponding key handles.</p>"
                },
                {
                    "id": "<sentence_0xac3f70f3>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x2005776f>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar14.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5862\" height=\"485\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar14.png\" width=\"911\"/></figure>"
                },
                {
                    "id": "<sentence_0xdc2c28b5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For each blob, the malware resolves one of the strings RSAFULLPRIVATEBLOB or RSAPUBLICBLOB and uses it to specify the blobs type when calling BCryptImportKeyPair to import the corresponding key handle.",
                    "html": "<p>For each blob, the malware resolves one of the strings \u201cRSAFULLPRIVATEBLOB\u201d or \u201cRSAPUBLICBLOB\u201d and uses it to specify the blob\u2019s type when calling BCryptImportKeyPair to import the corresponding key handle.</p>"
                },
                {
                    "id": "<sentence_0x7edbcdb0>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xc2ea6c>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar15.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5863\" height=\"572\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar15.png\" width=\"655\"/></figure>"
                },
                {
                    "id": "<sentence_0xb8db6142>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Finally, it calls BCryptGetProperty to retrieve the length of the RSA public and private cipher blocks. With this structure fully populated, BAZARLOADER can now perform RSA encryption/decryption as well as SHA384 hashing.",
                    "html": "<p>Finally, it calls BCryptGetProperty to retrieve the length of the RSA public and private cipher blocks. With this structure fully populated, BAZARLOADER can now perform RSA encryption/decryption as well as SHA384 hashing.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x79be37ff>",
            "title": "Step 5: C2 Connection Through Raw IP Addresses",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x14376432>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Prior to communicating with C2 servers, BAZARLOADER first resolves a list of raw IP addresses and writes them into the C2_addr_list field in the main structure.",
                    "html": "<p>Prior to communicating with C2 servers, BAZARLOADER first resolves a list of raw IP addresses and writes them into the C2_addr_list field in the main structure.</p>"
                },
                {
                    "id": "<sentence_0x4927b7ed>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This field is a structure representing a list of string structures, both of which can be reconstructed as below.",
                    "html": "<p>This field is a structure representing a list of string structures, both of which can be reconstructed as below.</p>"
                },
                {
                    "id": "<sentence_0x4f0bb41a>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x5126c81d>": "struct string_struct\n{\n char *buffer;\n char *length;\n char *max_length;\n};\nstruct string_struct_list\n{\n string_struct *list_ptr;\n __int64 count;\n __int64 max_count;\n};"
                    },
                    "text": "",
                    "html": "<code>struct string_struct\n{\n char *buffer;\n char *length;\n char *max_length;\n};\nstruct string_struct_list\n{\n string_struct *list_ptr;\n __int64 count;\n __int64 max_count;\n};</code>"
                },
                {
                    "id": "<sentence_0x359bd8ce>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x1b7c45c>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar17.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5866\" height=\"425\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar17.png\" width=\"924\"/></figure>"
                },
                {
                    "id": "<sentence_0xdcf6693c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Below is the list of all IP addresses for the C2 servers used in this sample.",
                    "html": "<p>Below is the list of all IP addresses for the C2 servers used in this sample.</p>"
                },
                {
                    "id": "<sentence_0x28fd8052>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x4954757b>": "https://5[.]182[.]207[.]28:443\nhttps://80[.]71[.]158[.]42:443\nhttps://198[.]252[.]108[.]16:443\nhttps://84[.]32[.]188[.]136:443"
                    },
                    "text": "",
                    "html": "<code>https://5[.]182[.]207[.]28:443\nhttps://80[.]71[.]158[.]42:443\nhttps://198[.]252[.]108[.]16:443\nhttps://84[.]32[.]188[.]136:443</code>"
                },
                {
                    "id": "<sentence_0x78fa3b8c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For each of these addresses, the malware attempts to communicate with the corresponding server and download the next stage executable.",
                    "html": "<p>For each of these addresses, the malware attempts to communicate with the corresponding server and download the next stage executable.</p>"
                },
                {
                    "id": "<sentence_0xd7b315a3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To establish a connection, it populates the following structure.",
                    "html": "<p>To establish a connection, it populates the following structure.</p>"
                },
                {
                    "id": "<sentence_0xa20645ea>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xf0268feb>": "struct C2_connection_struct\n{\n URL_COMPONENTSA C2_URL_components;\n HINTERNET connection_handle;\n __int64 connection_last_error;\n};"
                    },
                    "text": "",
                    "html": "<code>struct C2_connection_struct\n{\n URL_COMPONENTSA C2_URL_components;\n HINTERNET connection_handle;\n __int64 connection_last_error;\n};</code>"
                },
                {
                    "id": "<sentence_0x88b04200>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The malware calls InternetCrackUrlA to retrieve the C2s URL components and InternetConnectA to connect to the server.",
                    "html": "<p>The malware calls InternetCrackUrlA to retrieve the C2\u2019s URL components and InternetConnectA to connect to the server.</p>"
                },
                {
                    "id": "<sentence_0x3482873e>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xd20aef75>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar18.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5874\" height=\"591\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar18.png\" width=\"934\"/></figure>"
                },
                {
                    "id": "<sentence_0x277f2ea6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This connection structures fields are then copied into the main structures C2_connection_struct. Here, Im not entirely sure why they dont just populate the main structure directly instead.",
                    "html": "<p>This connection structure\u2019s fields are then copied into the main structure\u2019s C2_connection_struct. Here, I\u2019m not entirely sure why they don\u2019t just populate the main structure directly instead.</p>"
                },
                {
                    "id": "<sentence_0x6f62274d>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xc9d62bc5>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar19-1024x415.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5875\" height=\"415\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar19-1024x415.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0xcf075bfc>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Similarly, BAZARLOADER populates the structure below to create an HTTP request to C2. The requests object name and HTTP verb are resolved to be /data/service and GET.",
                    "html": "<p>Similarly, BAZARLOADER populates the structure below to create an HTTP request to C2. The request\u2019s object name and HTTP verb are resolved to be \u201c/data/service\u201d and \u201cGET\u201d.</p>"
                },
                {
                    "id": "<sentence_0x50ed7b05>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x2c84d439>": "struct C2_request_struct\n{\n HINTERNET request_handle;\n __int64 request_error;\n};"
                    },
                    "text": "",
                    "html": "<code>struct C2_request_struct\n{\n HINTERNET request_handle;\n __int64 request_error;\n};</code>"
                },
                {
                    "id": "<sentence_0xf12bd979>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xf30123b5>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar20.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5878\" height=\"444\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar20.png\" width=\"998\"/></figure>"
                },
                {
                    "id": "<sentence_0x54e0944b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The requests HTTP version is resolved to be HTTP/1.1, and BAZARLOADER calls HttpOpenRequestA to create this request for the C2 server using the connection handle retrieved above.",
                    "html": "<p>The request\u2019s HTTP version is resolved to be \u201cHTTP/1.1\u201d, and BAZARLOADER calls HttpOpenRequestA to create this request for the C2 server using the connection handle retrieved above.</p>"
                },
                {
                    "id": "<sentence_0xb978951b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It also calls InternetSetOptionA to set the timeout for receiving a response and sending the request to 300 seconds and the timeout for connecting to C2s to 120 seconds.",
                    "html": "<p>It also calls InternetSetOptionA to set the timeout for receiving a response and sending the request to 300 seconds and the timeout for connecting to C2s to 120 seconds.</p>"
                },
                {
                    "id": "<sentence_0x782d282>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x2653f730>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar21-1024x595.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5879\" height=\"595\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar21-1024x595.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x907eef53>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "BAZARLOADER then generates the HTTP header to be appended to the request. It does this by calling GetSystemTime to populate the curr_system_time and the datetime_string field of the main structure with the current date and time.",
                    "html": "<p>BAZARLOADER then generates the HTTP header to be appended to the request. It does this by calling GetSystemTime to populate the curr_system_time and the datetime_string field of the main structure with the current date and time.</p>"
                },
                {
                    "id": "<sentence_0xf8feb312>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It also generates the SHA384 hash of the datetime string to populate the structures datetime_string_hash and datetime_string_hash_len fields.",
                    "html": "<p>It also generates the SHA384 hash of the datetime string to populate the structure\u2019s datetime_string_hash and datetime_string_hash_len fields.</p>"
                },
                {
                    "id": "<sentence_0x7abae7c3>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa8f01c9b>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar22.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5880\" height=\"513\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar22.png\" width=\"725\"/></figure>"
                },
                {
                    "id": "<sentence_0x80c84204>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, BAZARLOADER signs the generated hash with its RSA private by calling BCryptSignHash and uses this hash signature to randomly generate the HTTP header.",
                    "html": "<p>Next, BAZARLOADER signs the generated hash with its RSA private by calling BCryptSignHash and uses this hash signature to randomly generate the HTTP header.</p>"
                },
                {
                    "id": "<sentence_0x572c454c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Below is the form of the random HTTP header.",
                    "html": "<p>Below is the form of the random HTTP header.</p>"
                },
                {
                    "id": "<sentence_0x5b085a1f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "BAZARLOADERs HTTP Header",
                    "html": "\nBAZARLOADER\u2019s HTTP Header\n"
                },
                {
                    "id": "<sentence_0x4792f8dd>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Date: Tue, 17 May 2022 20:18:27 GMT",
                    "html": "<p>Date: Tue, 17 May 2022 20:18:27 GMT</p>"
                },
                {
                    "id": "<sentence_0x99dbb499>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Cookie: CGIC=YKK%2BIFrld%2FC5FqKj%2Fq1F9a06T0WgC4cOvCqqo3cfsyww1EwAb2TNFWqy8wBcDtObrgkjKtmIBSnsD%2Bmn2eR6MzQeUvHqOBJqA%2FqYS3KEkUQoKUgpOfuW%2BTtuz2OjhVeOJ1oMWnellOIJ4IuNBO5aVtzV8AI3CD4H8Z9tgjhG7i6cXrsAh5EUwKjHqbeEBszHmUhSsCNx0vypRWWd6MkM1HBeENiww7W8GjhoXvX8AwZ5VDTRSX3QSr9jpUuWYXHmJDhOtdG%2FW9UAWEHYkv6IpRsGPKWtAdR%2FzHNzWmZRC3HsMP4LyIOXCs5O8lvUZH2Bv2gtZ1SGZOD0Kd7Oi4nFwA%3D%3D;HSID=gbN30kmxz%2BKKygRK6DJjGJ%2FzGQcMDOSmyQoYi9p2ITFNy6zMnfCERvugTwb5O%2FZyAJ5lGvveYZlNK3N%2BRoNPqCThC%2Fwr2OQbPA3aFJeXZerPSF7bWmhHVGGunlw8HqV3dcjs67tLT7irrJLctXzonzWE%2B6Ukd9kdFTNWW5j7s2JEEAcW9Dp6x6WIdRemz6HC3BifjKQ%2BmwvryFaI%2BsLRi9T042hwKQqV7ikOLOsHOOCqlCKs0vcpFS5vUXzdGwSWdONWLHMEkuApe5B%2BUC7bULbJvnoqnT1jFFEE3vm5gSU%2BGKIbVqBCseLx42av7mxWCmJfB1mpDH3K6tJof0YKpQ%3D%3D;DV=arPk%2BRhtodeAHMzW%2FqoqfkfCFpUR1CYM5oW%2FK7onqCf46Xqk2OR0LjLK%2BQL7jCS5yrcZA2r2hYulBxnpVa%2B8tO%2BJImuPOM9B8JkIbEAMHp%2BvNq8vcSj78wA%2FoW0Wgx8Sw9lSMno4CgPoNgF1mrkm9m9cd7U6wQS7WGKR6Wufxuvjlyt6zf5xtU2gq9WtsxOglu%2BXOYApwXiTIEO853sEnzlVNopwMbYkBm5Mu2LSEycyBm4A9nWKVCr9r0xisHCGzde3sBO4hY7WyykPK6vsU3Ds36FVNH3Kv7jx1Kf6tCVe9ukypCd8j%2FXJWAgPwv%2BsWcyA6ky9skKq1GDuoMJQ5A%3D%3D;ANID=modcr%2B3xO4FT10Fb3jE3afiK3eFqJCs1ylPBjge%2F6lgEM3Li5i5UZ%2BviQCBS1cuiaiQ%2F9Cj62z%2BapXfRMVWSFEeZTv9rkmPKmp5FZHUq5VLHNyhrBtjScNXwDZVakrx9ZYt1uzzh2X93c6Z6YQsyNWlkfdmlZS1FCGOf0aaVZfIRiUW%2FXX6zNVph%2FBpYTicXqZ1qaiPAWb5FNF%2BfJylCjmVDOFCZHJ4E6M0Pph%2BvvgjuCO9bRHWjI2Ouz%2B8ETyMBoQOkSDGzzInMeapRKmXYNDhdcEogwNmRkJqoRJjBhHzvbIYgCXGNJFWVnxywcZSaHfQwGonWClY3vT3PSlEnHg%3D%3D;",
                    "html": "<p>Cookie: CGIC=YKK%2BIFrld%2FC5FqKj%2Fq1F9a06T0WgC4cOvCqqo3cfsyww1EwAb2TNFWqy8wBcDtObrgkjKtmIBSnsD%2Bmn2eR6MzQeUvHqOBJqA%2FqYS3KEkUQoKUgpOfuW%2BTtuz2OjhVeOJ1oMWnellOIJ4IuNBO5aVtzV8AI3CD4H8Z9tgjhG7i6cXrsAh5EUwKjHqbeEBszHmUhSsCNx0vypRWWd6MkM1HBeENiww7W8GjhoXvX8AwZ5VDTRSX3QSr9jpUuWYXHmJDhOtdG%2FW9UAWEHYkv6IpRsGPKWtAdR%2FzHNzWmZRC3HsMP4LyIOXCs5O8lvUZH2Bv2gtZ1SGZOD0Kd7Oi4nFwA%3D%3D;HSID=gbN30kmxz%2BKKygRK6DJjGJ%2FzGQcMDOSmyQoYi9p2ITFNy6zMnfCERvugTwb5O%2FZyAJ5lGvveYZlNK3N%2BRoNPqCThC%2Fwr2OQbPA3aFJeXZerPSF7bWmhHVGGunlw8HqV3dcjs67tLT7irrJLctXzonzWE%2B6Ukd9kdFTNWW5j7s2JEEAcW9Dp6x6WIdRemz6HC3BifjKQ%2BmwvryFaI%2BsLRi9T042hwKQqV7ikOLOsHOOCqlCKs0vcpFS5vUXzdGwSWdONWLHMEkuApe5B%2BUC7bULbJvnoqnT1jFFEE3vm5gSU%2BGKIbVqBCseLx42av7mxWCmJfB1mpDH3K6tJof0YKpQ%3D%3D;DV=arPk%2BRhtodeAHMzW%2FqoqfkfCFpUR1CYM5oW%2FK7onqCf46Xqk2OR0LjLK%2BQL7jCS5yrcZA2r2hYulBxnpVa%2B8tO%2BJImuPOM9B8JkIbEAMHp%2BvNq8vcSj78wA%2FoW0Wgx8Sw9lSMno4CgPoNgF1mrkm9m9cd7U6wQS7WGKR6Wufxuvjlyt6zf5xtU2gq9WtsxOglu%2BXOYApwXiTIEO853sEnzlVNopwMbYkBm5Mu2LSEycyBm4A9nWKVCr9r0xisHCGzde3sBO4hY7WyykPK6vsU3Ds36FVNH3Kv7jx1Kf6tCVe9ukypCd8j%2FXJWAgPwv%2BsWcyA6ky9skKq1GDuoMJQ5A%3D%3D;ANID=modcr%2B3xO4FT10Fb3jE3afiK3eFqJCs1ylPBjge%2F6lgEM3Li5i5UZ%2BviQCBS1cuiaiQ%2F9Cj62z%2BapXfRMVWSFEeZTv9rkmPKmp5FZHUq5VLHNyhrBtjScNXwDZVakrx9ZYt1uzzh2X93c6Z6YQsyNWlkfdmlZS1FCGOf0aaVZfIRiUW%2FXX6zNVph%2FBpYTicXqZ1qaiPAWb5FNF%2BfJylCjmVDOFCZHJ4E6M0Pph%2BvvgjuCO9bRHWjI2Ouz%2B8ETyMBoQOkSDGzzInMeapRKmXYNDhdcEogwNmRkJqoRJjBhHzvbIYgCXGNJFWVnxywcZSaHfQwGonWClY3vT3PSlEnHg%3D%3D;</p>"
                },
                {
                    "id": "<sentence_0xba41cb43>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "X-Tag: f1DOF2QJkbCTJAUqiSLclK%2BsRkiAFHGmQusq2an%2FAud1WpfWVK%2F6gpLmtEQ38e65ILH8bHOzUd51lMpkh2xmHI5WpDJHgCtz5Q%2F%2BCL5usiShe35weofsQr9dQk%2BLsCl%2FulJlRg4cToY4ffie2MvfrtF4FCCZpbMy66UZUNqShGcbuIlRELkGKCTimwpB2wi4J6r%2FaIWAzINIP413ERqcQJ42Q1eQvvMkrEsWZDGEi4PHVtESHkcKKRVlZ9s3%2BPaQgq6TOR9YJxQOJaQ4NgaNuJAyHJnzkvtlQHNAy%2B%2FuLVa%2FpCuXxLvnw6dCIpmMwNHdzA09SL4T%2Bc5I3S6%2BFcu3mA%3D%3D",
                    "html": "<p>X-Tag: f1DOF2QJkbCTJAUqiSLclK%2BsRkiAFHGmQusq2an%2FAud1WpfWVK%2F6gpLmtEQ38e65ILH8bHOzUd51lMpkh2xmHI5WpDJHgCtz5Q%2F%2BCL5usiShe35weofsQr9dQk%2BLsCl%2FulJlRg4cToY4ffie2MvfrtF4FCCZpbMy66UZUNqShGcbuIlRELkGKCTimwpB2wi4J6r%2FaIWAzINIP413ERqcQJ42Q1eQvvMkrEsWZDGEi4PHVtESHkcKKRVlZ9s3%2BPaQgq6TOR9YJxQOJaQ4NgaNuJAyHJnzkvtlQHNAy%2B%2FuLVa%2FpCuXxLvnw6dCIpmMwNHdzA09SL4T%2Bc5I3S6%2BFcu3mA%3D%3D</p>"
                },
                {
                    "id": "<sentence_0x247c036e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Vary: x564msS%2Bd%2BIrc97apj6SftcyuZTeoDUdyeLRN7n%2BkEJYVoJYAeuxpHT1XhTQ%2FywsKB7tZuNCJpid2qbr5DtOphE9Yvu2MfVTPH7nuK3yrk2nl93yuTpwiB%2F2kcFx57oLxtgqXkDlPENI3p31zdp%2B7quVz9C3ZKwA0Pi8%2FjH%2Fj%2BMKFZHpAWxlAWtxWe0xvwPKj3aroG6ujoEB9Fw%2Fq3IvIBsjoCXwIWPCSX7PCIk97ccsOyzqE6jGkgvVhfw%2BcvPL78g7gfvfx6eSDoOQj5M6xcH0aTPEld8rckxqFQmB9Gy%2B%2BNZ0YACTuCn7Aw9ziB9OmeKAy%2B5I%2F1J2ij7aSH3YgA%3D%3D",
                    "html": "<p>Vary: x564msS%2Bd%2BIrc97apj6SftcyuZTeoDUdyeLRN7n%2BkEJYVoJYAeuxpHT1XhTQ%2FywsKB7tZuNCJpid2qbr5DtOphE9Yvu2MfVTPH7nuK3yrk2nl93yuTpwiB%2F2kcFx57oLxtgqXkDlPENI3p31zdp%2B7quVz9C3ZKwA0Pi8%2FjH%2Fj%2BMKFZHpAWxlAWtxWe0xvwPKj3aroG6ujoEB9Fw%2Fq3IvIBsjoCXwIWPCSX7PCIk97ccsOyzqE6jGkgvVhfw%2BcvPL78g7gfvfx6eSDoOQj5M6xcH0aTPEld8rckxqFQmB9Gy%2B%2BNZ0YACTuCn7Aw9ziB9OmeKAy%2B5I%2F1J2ij7aSH3YgA%3D%3D</p>"
                },
                {
                    "id": "<sentence_0x9e763266>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Var: wG852ANm2aHtGTrbsFHawff1eBZc9MnnPFOLEWeX3o7Ulc0fSj1qhaw%2BFlqpKs6ABhhs4opIe%2Bs%2BKqhT5G3jw9xRH%2FxeEYysL5AYbHsguuOivvXTofbFPPOLM%2ByoYIbq9Navi9C0VsaghxYUgsZ3wt4aHJAWXqvYacWoAowqCaZ7pg3FY0iKgLG403wZRS25%2BOrJL6gdo98qXYntX%2B4ZlPAUa49MiLJVQvI1xFCKLo5WbCb3b3aHQ2hpwvcYoh5P6F2su6Br3YL5DxtmpjdQY9IwLubcax%2BSZ4uZrDhX6MfnqQRa8vwA61OYhQUJM7OMeqPZ9lo%2BqkzrlPux1XxOyw%3D%3D",
                    "html": "<p>Var: wG852ANm2aHtGTrbsFHawff1eBZc9MnnPFOLEWeX3o7Ulc0fSj1qhaw%2BFlqpKs6ABhhs4opIe%2Bs%2BKqhT5G3jw9xRH%2FxeEYysL5AYbHsguuOivvXTofbFPPOLM%2ByoYIbq9Navi9C0VsaghxYUgsZ3wt4aHJAWXqvYacWoAowqCaZ7pg3FY0iKgLG403wZRS25%2BOrJL6gdo98qXYntX%2B4ZlPAUa49MiLJVQvI1xFCKLo5WbCb3b3aHQ2hpwvcYoh5P6F2su6Br3YL5DxtmpjdQY9IwLubcax%2BSZ4uZrDhX6MfnqQRa8vwA61OYhQUJM7OMeqPZ9lo%2BqkzrlPux1XxOyw%3D%3D</p>"
                },
                {
                    "id": "<sentence_0x3434f1e5>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xfb0a1926>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar23.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5884\" height=\"611\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar23.png\" width=\"975\"/></figure>"
                },
                {
                    "id": "<sentence_0x2bc08ceb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "With the generated HTTP header and the request handle, BAZARLOADER calls HttpSendRequestA to send the request to the C2 server and calls HttpQueryInfoA to retrieve the status code.",
                    "html": "<p>With the generated HTTP header and the request handle, BAZARLOADER calls HttpSendRequestA to send the request to the C2 server and calls HttpQueryInfoA to retrieve the status code.</p>"
                },
                {
                    "id": "<sentence_0x24b185d9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If the status code is not HTTP_STATUS_OK, the malware moves on to another C2 address.",
                    "html": "<p>If the status code is not HTTP_STATUS_OK, the malware moves on to another C2 address.</p>"
                },
                {
                    "id": "<sentence_0x4a26a4ef>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x3ae58e34>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar24.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5886\" height=\"489\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar24.png\" width=\"833\"/></figure>"
                },
                {
                    "id": "<sentence_0xea8e3349>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If the status code is HTTP_STATUS_OK, BAZARLOADER calls InternetQueryDataAvailable to determine the size of data to read, allocates the memory buffer according to the size, and calls InternetReadFile to read the next-stage payload until everything is written into memory.",
                    "html": "<p>If the status code is HTTP_STATUS_OK, BAZARLOADER calls InternetQueryDataAvailable to determine the size of data to read, allocates the memory buffer according to the size, and calls InternetReadFile to read the next-stage payload until everything is written into memory.</p>"
                },
                {
                    "id": "<sentence_0xd3085bfe>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xe8ded914>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar25.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5887\" height=\"633\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar25.png\" width=\"941\"/></figure>"
                },
                {
                    "id": "<sentence_0x38e09beb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Finally, the malware decrypts the payload with its RSA public key by calling BCryptDecrypt and checks to make sure the payloads size is greater than 64 bytes and that it contains an MZ header.",
                    "html": "<p>Finally, the malware decrypts the payload with its RSA public key by calling BCryptDecrypt and checks to make sure the payload\u2019s size is greater than 64 bytes and that it contains an MZ header.</p>"
                },
                {
                    "id": "<sentence_0xbe3ff85d>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x576d11e4>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar26.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5888\" height=\"531\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar26.png\" width=\"936\"/></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0x8cdb6275>",
            "title": "Step 6: C2 Connection Through Custom URLs",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xe6395d2f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x25168a0c>": "https://www.opennic.org/"
                    },
                    "text": "If BAZARLOADER fails to download the next stage executable from the IP addresses listed above, it attempts to resolve custom C2 domains using OpenNIC, a user-owned DNS community service.",
                    "html": "<p>If BAZARLOADER fails to download the next stage executable from the IP addresses listed above, it attempts to resolve custom C2 domains using <a href=\"https://www.opennic.org/\" rel=\"noreferrer noopener\" target=\"_blank\">OpenNIC</a>, a user-owned DNS community service.</p>"
                },
                {
                    "id": "<sentence_0x83bd1d2d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To begin querying OpenNICs API, the malware first resolves the URL api.opennicproject.org and calls InternetConnectA to establish a connection to the site.",
                    "html": "<p>To begin querying OpenNIC\u2019s API, the malware first resolves the URL \u201capi.opennicproject.org\u201d and calls InternetConnectA to establish a connection to the site.</p>"
                },
                {
                    "id": "<sentence_0x828fa6b0>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x159e4f9>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar27-1024x421.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5890\" height=\"421\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar27-1024x421.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0xfa4dfe69>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, it calls HttpOpenRequestA to create a GET request handle with the object name /geoip/?bare&ipv=4&wl=all&res=8 and send the request using HttpSendRequestA.",
                    "html": "<p>Next, it calls HttpOpenRequestA to create a GET request handle with the object name \u201c/geoip/?bare&amp;ipv=4&amp;wl=all&amp;res=8\u201d and send the request using HttpSendRequestA.</p>"
                },
                {
                    "id": "<sentence_0x5c93dcce>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x24a3cecf>": "https://wiki.opennic.org/api/geoip"
                    },
                    "text": "By examining OpenNICs APIs, we can break down this object name to see what BAZARLOADER is requesting. The bare parameter requests to only list the DNS server IP address, the ipv parameter requests to only list IPv4 servers, the wl parameter requests to only list whitelisted servers, and the res parameter requests to list 8 servers only.",
                    "html": "<p>By examining <a href=\"https://wiki.opennic.org/api/geoip\" rel=\"noreferrer noopener\" target=\"_blank\">OpenNIC\u2019s APIs</a>, we can break down this object name to see what BAZARLOADER is requesting. The \u201cbare\u201d parameter requests to only list the DNS server IP address, the \u201cipv\u201d parameter requests to only list IPv4 servers, the \u201cwl\u201d parameter requests to only list whitelisted servers, and the \u201cres\u201d parameter requests to list 8 servers only.</p>"
                },
                {
                    "id": "<sentence_0xe8a2f2a8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To test this, we can simply paste the path below to a browser of our choosing.",
                    "html": "<p>To test this, we can simply paste the path below to a browser of our choosing.</p>"
                },
                {
                    "id": "<sentence_0x5fff329c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xdfec8db>": "api.opennicproject.org/geoip/?bare&ipv=4&wl=all&res=8"
                    },
                    "text": "",
                    "html": "<code>api.opennicproject.org/geoip/?bare&amp;ipv=4&amp;wl=all&amp;res=8</code>"
                },
                {
                    "id": "<sentence_0xf21c251f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x518fd92a>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar28-1.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5893\" height=\"593\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar28-1.png\" width=\"856\"/></figure>"
                },
                {
                    "id": "<sentence_0x3e1958bd>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The malware then enters a loop to call InternetQueryDataAvailable and InternetReadFile to read the 8 OpenNICs DNS servers into memory.",
                    "html": "<p>The malware then enters a loop to call InternetQueryDataAvailable and InternetReadFile to read the 8 OpenNIC\u2019s DNS servers into memory. </p>"
                },
                {
                    "id": "<sentence_0xb26816ac>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xef62afc9>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar29-2.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5895\" height=\"636\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar29-2.png\" width=\"839\"/></figure>"
                },
                {
                    "id": "<sentence_0xe29f9590>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For each DNS server IP address, BAZARLOADER parses it from string to int and populates the opennic_server_struct field in the main structure. Below is the structure used to store OpenNIC IP addresses.",
                    "html": "<p>For each DNS server IP address, BAZARLOADER parses it from string to int and populates the opennic_server_struct field in the main structure. Below is the structure used to store OpenNIC IP addresses.</p>"
                },
                {
                    "id": "<sentence_0x8163ab41>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xadb8d9ff>": "struct opennic_server_struct\n{\n _QWORD init_server_count;\n HINTERNET opennic_internet_handle;\n DWORD opennic_server_IP_list[7];\n _BYTE gap2C[28];\n _QWORD server_count;\n};"
                    },
                    "text": "",
                    "html": "<code>struct opennic_server_struct\n{\n _QWORD init_server_count;\n HINTERNET opennic_internet_handle;\n DWORD opennic_server_IP_list[7];\n _BYTE gap2C[28];\n _QWORD server_count;\n};</code>"
                },
                {
                    "id": "<sentence_0x5ccb64c1>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x23f80365>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar30.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5896\" height=\"606\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar30.png\" width=\"990\"/></figure>"
                },
                {
                    "id": "<sentence_0xef1b9bba>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Finally, the malware decodes the following custom C2 domains, attempts to resolve them using the DNS servers, and downloads the next-stage executable.",
                    "html": "<p>Finally, the malware decodes the following custom C2 domains, attempts to resolve them using the DNS servers, and downloads the next-stage executable.</p>"
                },
                {
                    "id": "<sentence_0xef2d47d1>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x794fce97>": "reddew28c[.]bazar\nbluehail[.]bazar\nwhitestorm9p[.]bazar"
                    },
                    "text": "",
                    "html": "<code>reddew28c[.]bazar\nbluehail[.]bazar\nwhitestorm9p[.]bazar</code>"
                },
                {
                    "id": "<sentence_0xfeefdf74>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For each of these custom domains, BAZARLOADER calls DnsQuery_A to query a DNS Resource Record from OpenNICs servers to resolve the C2 servers IP address.",
                    "html": "<p>For each of these custom domains, BAZARLOADER calls DnsQuery_A to query a DNS Resource Record from OpenNIC\u2019s servers to resolve the C2 server\u2019s IP address.</p>"
                },
                {
                    "id": "<sentence_0x650c8d46>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x96d8b9c9>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar31.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5898\" height=\"617\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar31.png\" width=\"863\"/></figure>"
                },
                {
                    "id": "<sentence_0xd0729711>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After checking if the IP address is valid, the malware tries connecting to it and requests to download the next stage executable similar to what we have seen in the previous step.",
                    "html": "<p>After checking if the IP address is valid, the malware tries connecting to it and requests to download the next stage executable similar to what we have seen in the previous step.</p>"
                },
                {
                    "id": "<sentence_0xa2c97c7f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x93eb7dee>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar32.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5899\" height=\"513\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar32.png\" width=\"883\"/></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0xed769a5e>",
            "title": "Step 5: Injection Through Process Hollowing",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x22a47660>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After successfully downloading the next stage executable, BAZARLOADER begins the injection functionality to launch it from another process.",
                    "html": "<p>After successfully downloading the next stage executable, BAZARLOADER begins the injection functionality to launch it from another process.</p>"
                },
                {
                    "id": "<sentence_0x3d744a54>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For this functionality, BAZARLOADER populates the following structure.",
                    "html": "<p>For this functionality, BAZARLOADER populates the following structure.</p>"
                },
                {
                    "id": "<sentence_0x2d5665c1>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xf11773a2>": "struct injection_struct\n{\n HANDLE browser_proc_handle;\n PVOID full_exec_command;\n PVOID thread_curr_directory;\n PVOID browser_environment_struct;\n STARTUPINFOA thread_startup_info;\n LPPROC_THREAD_ATTRIBUTE_LIST proc_thread_attr_list;\n};"
                    },
                    "text": "",
                    "html": "<code>struct injection_struct\n{\n HANDLE browser_proc_handle;\n PVOID full_exec_command;\n PVOID thread_curr_directory;\n PVOID browser_environment_struct;\n STARTUPINFOA thread_startup_info;\n LPPROC_THREAD_ATTRIBUTE_LIST proc_thread_attr_list;\n};</code>"
                },
                {
                    "id": "<sentence_0xd787833d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "First, it checks if its process is elevated with admin privileges. It calls GetCurrentProcess and OpenProcessToken to retrieve its own process token handle and GetTokenInformation to get the tokens elevation information.",
                    "html": "<p>First, it checks if its process is elevated with admin privileges. It calls GetCurrentProcess and OpenProcessToken to retrieve its own process token handle and GetTokenInformation to get the token\u2019s elevation information.</p>"
                },
                {
                    "id": "<sentence_0x72fbd9c9>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x8d7154cd>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar33.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5903\" height=\"597\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar33.png\" width=\"866\"/></figure>"
                },
                {
                    "id": "<sentence_0xfb214238>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If the process is not elevated, it resolves the following processes names and tries to populate the injection structures fields.",
                    "html": "<p>If the process is not elevated, it resolves the following processes\u2019 names and tries to populate the injection structure\u2019s fields.</p>"
                },
                {
                    "id": "<sentence_0xbc7ea340>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xf9abfb16>": "chrome.exe\nfirefox.exe\nmsedge.exe"
                    },
                    "text": "",
                    "html": "<code>chrome.exe\nfirefox.exe\nmsedge.exe</code>"
                },
                {
                    "id": "<sentence_0x14906ed0>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xd23a7362>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar34-1024x460.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5904\" height=\"460\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar34-1024x460.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x9c91f60>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For each process name, the malware enumerates the processs snapshot to retrieve its ID and calls OpenProcess to get its handle.",
                    "html": "<p>For each process name, the malware enumerates the process\u2019s snapshot to retrieve its ID and calls OpenProcess to get its handle.</p>"
                },
                {
                    "id": "<sentence_0x7ab485f4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To populate the full_exec_command and thread_curr_directory fields which contain the processs command line and full path, BAZARLOADER first extracts the process parameters from the Process Environment Block (PEB).",
                    "html": "<p>To populate the full_exec_command and thread_curr_directory fields which contain the process\u2019s command line and full path, BAZARLOADER first extracts the process parameters from the Process Environment Block (PEB).</p>"
                },
                {
                    "id": "<sentence_0x5f0e176a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To access the PEB, the malware calls NtQueryInformationProcess to retrieve the PEBs adress and calls ReadProcessMemory to read the PEB into memory.",
                    "html": "<p>To access the PEB, the malware calls NtQueryInformationProcess to retrieve the PEB\u2019s adress and calls ReadProcessMemory to read the PEB into memory.</p>"
                },
                {
                    "id": "<sentence_0x975aa653>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xe1273c6a>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar35.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5906\" height=\"530\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar35.png\" width=\"737\"/></figure>"
                },
                {
                    "id": "<sentence_0xed73a04e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, it calls ReadProcessMemory to read the process parameters from the processs memory.",
                    "html": "<p>Next, it calls ReadProcessMemory to read the process parameters from the process\u2019s memory.</p>"
                },
                {
                    "id": "<sentence_0x24e55d3f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x61555554>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar36.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5907\" height=\"426\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar36.png\" width=\"808\"/></figure>"
                },
                {
                    "id": "<sentence_0x77e1c801>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "With the process parameter RTL_USER_PROCESS_PARAMETERS structure, BAZARLOADER reads the processs command line and full path to populate the injection structure.",
                    "html": "<p>With the process parameter RTL_USER_PROCESS_PARAMETERS structure, BAZARLOADER reads the process\u2019s command line and full path to populate the injection structure.</p>"
                },
                {
                    "id": "<sentence_0xa209df1e>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x6d2d4d5e>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar37-1024x226.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5908\" height=\"226\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar37-1024x226.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x96471a84>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Similarly, it also uses the process parameter to access the browsers environment block and writes it to the injection structure.",
                    "html": "<p>Similarly, it also uses the process parameter to access the browser\u2019s environment block and writes it to the injection structure.</p>"
                },
                {
                    "id": "<sentence_0x34acf5c6>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xc534fb38>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar38.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5909\" height=\"593\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar38.png\" width=\"827\"/></figure>"
                },
                {
                    "id": "<sentence_0xc09466eb>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xcc8ae719>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar39-1024x477.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5911\" height=\"477\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar39-1024x477.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0xdb28fe73>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If BAZARLOADER has admin privilege, instead of a browsers process, it tries to populate the injection structure with a svchost.exe process from the following command line.",
                    "html": "<p>If BAZARLOADER has admin privilege, instead of a browser\u2019s process, it tries to populate the injection structure with a svchost.exe process from the following command line.</p>"
                },
                {
                    "id": "<sentence_0x1fd1e54e>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x9640367e>": "\\\\system32\\\\svchost.exe -k unistackSvcGroup"
                    },
                    "text": "",
                    "html": "<code>\\\\system32\\\\svchost.exe -k unistackSvcGroup</code>"
                },
                {
                    "id": "<sentence_0x8d864cc6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, using the injection struct, the malware calls CreateProcessA to create the target process in the suspended state to perform process hollowing.",
                    "html": "<p>Next, using the injection struct, the malware calls CreateProcessA to create the target process in the suspended state to perform process hollowing.</p>"
                },
                {
                    "id": "<sentence_0x6f945b76>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa3164edc>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar40.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5913\" height=\"447\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar40.png\" width=\"897\"/></figure>"
                },
                {
                    "id": "<sentence_0xa7642350>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x7f4839e6>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar41-1024x491.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5914\" height=\"491\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar41-1024x491.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0x4b20e3da>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3db012df>": "https://github.com/m0n0ph1/Process-Hollowing"
                    },
                    "text": "We wont dive too deep into this process hollowing implementation, since its almost the exact same implementation as seen here.",
                    "html": "<p>We won\u2019t dive too deep into this process hollowing implementation, since it\u2019s almost the exact same implementation as seen <a href=\"https://github.com/m0n0ph1/Process-Hollowing\" rel=\"noreferrer noopener\" target=\"_blank\">here</a>.</p>"
                },
                {
                    "id": "<sentence_0xe53ca1ad>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We can quickly spot that process hollowing is taking place through the Windows APIs being called. NtUnmapViewOfSection is called to unmap and carve out the parents memory. VirtualAllocEx and WriteProcessMemory are then called to allocate virtual memory in the parents process and write the malicious payload into it.",
                    "html": "<p>We can quickly spot that process hollowing is taking place through the Windows APIs being called. NtUnmapViewOfSection is called to unmap and carve out the parent\u2019s memory. VirtualAllocEx and WriteProcessMemory are then called to allocate virtual memory in the parent\u2019s process and write the malicious payload into it.</p>"
                },
                {
                    "id": "<sentence_0xd7a9af24>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x7b1a377b>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar42-1024x503.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5917\" height=\"503\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar42-1024x503.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0xc726736a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We can also see that the malware iterates through the parents section header to find the .reloc section and performs relocation on the injected image in memory.",
                    "html": "<p>We can also see that the malware iterates through the parent\u2019s section header to find the \u201c.reloc\u201d section and performs relocation on the injected image in memory.</p>"
                },
                {
                    "id": "<sentence_0x3b6db1cc>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xdc55967a>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar43-1024x462.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-large\"><img alt=\"\" class=\"wp-image-5918\" height=\"462\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar43-1024x462.png\" width=\"1024\"/></figure>"
                },
                {
                    "id": "<sentence_0xbde425a6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Finally, BAZARLOADER calls SetThreadContext to set the new entry point for the parent process and calls ResumeThread to resume the parents process again, which will execute the injected executable.",
                    "html": "<p>Finally, BAZARLOADER calls SetThreadContext to set the new entry point for the parent process and calls ResumeThread to resume the parent\u2019s process again, which will execute the injected executable.</p>"
                },
                {
                    "id": "<sentence_0x2e277f1c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x6814ae30>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar44-1.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-5922\" height=\"363\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar44-1.png\" width=\"946\"/></figure>"
                },
                {
                    "id": "<sentence_0x3e9f3a3a>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x4e680c3b>": "https://twitter.com/cPeterr"
                    },
                    "text": "And with that, we have analyzed how BAZARLOADER downloads a remote executable and executes it using process hollowing! If you have any questions regarding the analysis, feel free to reach out to me via Twitter.",
                    "html": "<p>And with that, we have analyzed how BAZARLOADER downloads a remote executable and executes it using process hollowing! If you have any questions regarding the analysis, feel free to reach out to me via <a href=\"https://twitter.com/cPeterr\" rel=\"noreferrer noopener\" target=\"_blank\">Twitter</a>.</p>"
                }
            ]
        }
    ],
    "chapters": [
        {
            "id": "<chapter_0xe8fd0c49>",
            "title": "BAZARLOADER: Analysing The Main Loader",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xcd138d10>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x164928d>": "https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar43.png"
                    },
                    "text": "",
                    "html": "<img alt=\"BAZARLOADER: Analysing The Main Loader\" src=\"https://www.0ffset.net/wp-content/uploads/2022/05/main_bazar43.png\"/>"
                },
                {
                    "id": "<sentence_0x503173e5>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xcd045a42>": "https://www.0ffset.net/author/chuong-dong/"
                    },
                    "text": "Chuong Dong<crlf>27th May 2022<crlf>No Comments",
                    "html": "<ul class=\"entry-meta\">\n<li>\n<a href=\"https://www.0ffset.net/author/chuong-dong/\">\n\t\t\t\t\t\t\t\t\t\t\t\tChuong Dong\t\t\t\t\t\t\t\t\t\t\t</a>\n</li>\n<li>\n\t\t\t\t\t\t\t\t\t\t\t27th May 2022\t\t\t\t\t\t\t\t\t\t</li>\n<li>\n \n\t\t\t\t\t\t\t\t\t\t\tNo Comments\t\t\t\t\t\t\t\t\t\t</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xb6c90e6b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xae12d87a>": "https://www.0ffset.net/reverse-engineering/bazarloader-iso-file-infection/"
                    },
                    "text": "This post is a follow up on the last one on BAZARLOADER. If youre interested in how to unpack the initial stages of this malware, you can check it out here.",
                    "html": "<p>This post is a follow up on the last one on BAZARLOADER. If you\u2019re interested in how to unpack the initial stages of this malware, you can check it out <a href=\"https://www.0ffset.net/reverse-engineering/bazarloader-iso-file-infection/\" rel=\"noreferrer noopener\" target=\"_blank\">here</a>. </p>"
                },
                {
                    "id": "<sentence_0x6afbcf2>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x2000f018>": "https://www.malware-traffic-analysis.net/2022/02/07/index.html"
                    },
                    "text": "In this post, well cover the final stage of this loader, which has the capability to download and executes remote payloads such as Cobalt Strike and Conti ransomware. To follow along, you can grab the sample as well as the PCAP files for it on Malware-Traffic-Analysis.net.",
                    "html": "<p>In this post, we\u2019ll cover the final stage of this loader, which has the capability to download and executes remote payloads such as Cobalt Strike and Conti ransomware. To follow along, you can grab the sample as well as the PCAP files for it on <a href=\"https://www.malware-traffic-analysis.net/2022/02/07/index.html\" rel=\"noreferrer noopener\" target=\"_blank\">Malware-Traffic-Analysis.net</a>.</p>"
                }
            ]
        }
    ]
}