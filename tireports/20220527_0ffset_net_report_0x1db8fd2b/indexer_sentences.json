{"id": "sentence_0x910709b7", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x6b550fa2", "chapter_title": "Step 1: Checking System Languages", "text": "Similar to a lot of malware, BAZARLOADER manually checks the systems languages to avoid executing on machines in Russia and nearby countries."}
{"id": "sentence_0x77ac2e25", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x6b550fa2", "chapter_title": "Step 1: Checking System Languages", "text": "It calls GetSystemDefaultLangID to retrieve the systems default language and GetKeyboardLayoutList to iterate through the systems keyboard layouts."}
{"id": "sentence_0xd97f37f0", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x6b550fa2", "chapter_title": "Step 1: Checking System Languages", "text": "For each of these languages, the malware checks if its valid using a bitmask."}
{"id": "sentence_0x2e373441", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x6b550fa2", "chapter_title": "Step 1: Checking System Languages", "text": "If the language identifier is greater than 0x43 or less than 0x18, its treated as valid and BAZARLOADER proceeds with its execution."}
{"id": "sentence_0x88c28900", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x6b550fa2", "chapter_title": "Step 1: Checking System Languages", "text": "If its in the range between 0x18 and 0x43, the difference between the language identifier and 0x18 is used as the index of the bit to be checked in the bitmask."}
{"id": "sentence_0x968e3ddc", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x6b550fa2", "chapter_title": "Step 1: Checking System Languages", "text": "The bitmask that BAZARLOADER uses is 0xD8080190C03, which is 11011000000010000000000110010000110000000011 in binary. The first bit in the bitmask is checked if the language ID is 0x18. The second bit is checked if the language ID is 0x19, and so on"}
{"id": "sentence_0x5cd551bc", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x6b550fa2", "chapter_title": "Step 1: Checking System Languages", "text": "Below is the list of all languages from the bitmask that the malware avoids."}
{"id": "sentence_0xab13ff0b", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x532bd190", "chapter_title": "Step 2: Run-Once Mutex", "text": "To check for multiple running instances of itself, BAZARLOADER first extracts the subauthority of a SID from its process. It does this by calling GetTokenInformation to retrieve the processs token integrity level and calling GetSidSubAuthorityCount and GetSidSubAuthority to access the subauthority of a SID."}
{"id": "sentence_0x268c112d", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x532bd190", "chapter_title": "Step 2: Run-Once Mutex", "text": "If the SIDs subauthority is SECURITY_MANDATORY_SYSTEM_RID or SECURITY_MANDATORY_PROTECTED_PROCESS_RID, BAZARLOADER checks if the mutex {b837ef4f-10ee-4821-ac76-2331eb32a23f} is currently owned by any other process by calling CreateMutexA."}
{"id": "sentence_0xe0492079", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x532bd190", "chapter_title": "Step 2: Run-Once Mutex", "text": "If it is, the malware terminates itself. However, there is a small bug with the condition to check if the mutex object exists, which assumes it fails to open the mutex when it actually succeeds."}
{"id": "sentence_0x560cf445", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x532bd190", "chapter_title": "Step 2: Run-Once Mutex", "text": "After this, the malware resolves the string {0caa6ebb-cf78-4b01-9b0b-51032c9120ce} and tries to create a mutex with that name."}
{"id": "sentence_0xdbb4de7", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x532bd190", "chapter_title": "Step 2: Run-Once Mutex", "text": "If this mutex object already exists, the malware also terminates itself."}
{"id": "sentence_0x8a2f89bf", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x532bd190", "chapter_title": "Step 2: Run-Once Mutex", "text": "If the SIDs subauthority is not SECURITY_MANDATORY_SYSTEM_RID or SECURITY_MANDATORY_PROTECTED_PROCESS_RID, BAZARLOADER still uses these two mutex names but adds the string Global\\ in front of them. This checks for the mutexes in the global namespace instead of the per-session namespace, which allows the malware to check if it has instances running in other users sessions."}
{"id": "sentence_0xbfc6d735", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "To generate Internet activities to hide its communication with C2 servers, BAZARLOADER first calls InternetOpenA to initialize the use of WinINet functions with the following string as the HTTP user agent."}
{"id": "sentence_0x135ea4cd", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "The malware then spawns a thread to periodically connect to random URLs and generate noises to hide the main C2 traffic by utilizing the following structure."}
{"id": "sentence_0xa93d4cec", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "First, BAZARLOADER calls InitializeCriticalSection to initialize the structures critical section object, which is later used to protect accesses to the creation_flag field."}
{"id": "sentence_0x9e664bf4", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "Next, it sets the self field to point to the structure, the creation_flag field to TRUE, and calls CreateThread to spawn a thread to perform these random Internet operations. If it fails to create a thread, the creation_flag field is set to FALSE."}
{"id": "sentence_0x614cc75", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "The thread first tries to obtain ownership of the critical section object and check if the creation flag is enabled. If it is, the malware resolves the following URLs as stack strings."}
{"id": "sentence_0xc546dcbd", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "Next, the thread enters an infinite loop to start generating the traffic noises. For random number generation, BAZARLOADER uses different functions that call the Windows API BCryptGenRandom to generate a set number of random bytes."}
{"id": "sentence_0x393f0b6", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "It randomly chooses one of the 4 URLs listed above, randomly generates the URL path segments for that, and combines the two to build the full URL."}
{"id": "sentence_0x8328b173", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "To generate the path segments, the function takes in the minimum and maximum numbers of path segments to generate and the minimum and maximum length for each path segment."}
{"id": "sentence_0x3260f8fb", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "It generates a count for the path segments randomly in the given range. For each of the segments, the malware randomly generates a string with a random length in the given range that contains numbers and uppercase/lowercase letters."}
{"id": "sentence_0xd830e9e4", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "Finally, the malware calls InternetOpenURLA to establish a connection with the generated URL. It calls HTTPQueryInfoA with the HTTP_QUERY_CONTENT_LENGTH flag to retrieve the contents length, allocates a buffer with that size, and calls InternetReadFile to read data from that URL."}
{"id": "sentence_0xa1e957f8", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x2e4eb10b", "chapter_title": "Step 4: Generating Random Internet Traffic", "text": "This is done repeatedly until C2 communication and payload injection are finished, which generates a lot of noise to mask the main traffic coming to and from C2 servers."}
{"id": "sentence_0x6c020eb6", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x81c7979", "chapter_title": "Step 4: Cryptographic Structure Population", "text": "BAZARLOADER mainly uses the following structure for communication with C2 servers. The fields of the structure will be explained as we go along analyzing the code."}
{"id": "sentence_0x7e9b456b", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x81c7979", "chapter_title": "Step 4: Cryptographic Structure Population", "text": "First, it populates the crypto_struct field in the main structure. This structure contains cryptographic handles that are later used to decrypt executables being sent from C2 servers."}
{"id": "sentence_0xb574b313", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x81c7979", "chapter_title": "Step 4: Cryptographic Structure Population", "text": "The structure can be reconstructed as below."}
{"id": "sentence_0x53b70c7d", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x81c7979", "chapter_title": "Step 4: Cryptographic Structure Population", "text": "The malware resolves the strings RSA and SHA384 and calls BCryptOpenAlgorithmProvider to retrieve handles for these two algorithms. The handles are stored in the corresponding fields in the crypto_struct structure."}
{"id": "sentence_0xf5900aec", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x81c7979", "chapter_title": "Step 4: Cryptographic Structure Population", "text": "Next, it resolves its hard-coded RSA public and private key blobs in memory to import their corresponding key handles."}
{"id": "sentence_0x6e25ef6c", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x81c7979", "chapter_title": "Step 4: Cryptographic Structure Population", "text": "For each blob, the malware resolves one of the strings RSAFULLPRIVATEBLOB or RSAPUBLICBLOB and uses it to specify the blobs type when calling BCryptImportKeyPair to import the corresponding key handle."}
{"id": "sentence_0x27d26120", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x81c7979", "chapter_title": "Step 4: Cryptographic Structure Population", "text": "Finally, it calls BCryptGetProperty to retrieve the length of the RSA public and private cipher blocks. With this structure fully populated, BAZARLOADER can now perform RSA encryption/decryption as well as SHA384 hashing."}
{"id": "sentence_0xdef344e6", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Prior to communicating with C2 servers, BAZARLOADER first resolves a list of raw IP addresses and writes them into the C2_addr_list field in the main structure."}
{"id": "sentence_0x1c0d61de", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "This field is a structure representing a list of string structures, both of which can be reconstructed as below."}
{"id": "sentence_0x2fd5a013", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Below is the list of all IP addresses for the C2 servers used in this sample."}
{"id": "sentence_0x75a23402", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "For each of these addresses, the malware attempts to communicate with the corresponding server and download the next stage executable."}
{"id": "sentence_0xcfb63d9", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "To establish a connection, it populates the following structure."}
{"id": "sentence_0x7271a9d8", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "The malware calls InternetCrackUrlA to retrieve the C2s URL components and InternetConnectA to connect to the server."}
{"id": "sentence_0x2a1f1f93", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "This connection structures fields are then copied into the main structures C2_connection_struct. Here, Im not entirely sure why they dont just populate the main structure directly instead."}
{"id": "sentence_0x892bf96f", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Similarly, BAZARLOADER populates the structure below to create an HTTP request to C2. The requests object name and HTTP verb are resolved to be /data/service and GET."}
{"id": "sentence_0xdba32d65", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "The requests HTTP version is resolved to be HTTP/1.1, and BAZARLOADER calls HttpOpenRequestA to create this request for the C2 server using the connection handle retrieved above."}
{"id": "sentence_0xeac36bad", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "It also calls InternetSetOptionA to set the timeout for receiving a response and sending the request to 300 seconds and the timeout for connecting to C2s to 120 seconds."}
{"id": "sentence_0x906f71d", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "BAZARLOADER then generates the HTTP header to be appended to the request. It does this by calling GetSystemTime to populate the curr_system_time and the datetime_string field of the main structure with the current date and time."}
{"id": "sentence_0xea9d5117", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "It also generates the SHA384 hash of the datetime string to populate the structures datetime_string_hash and datetime_string_hash_len fields."}
{"id": "sentence_0x85b42037", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Next, BAZARLOADER signs the generated hash with its RSA private by calling BCryptSignHash and uses this hash signature to randomly generate the HTTP header."}
{"id": "sentence_0xf60f041f", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Below is the form of the random HTTP header."}
{"id": "sentence_0x4c38b5ee", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "BAZARLOADERs HTTP Header"}
{"id": "sentence_0xff6304ed", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Date: Tue, 17 May 2022 20:18:27 GMT"}
{"id": "sentence_0xca05e915", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Cookie: CGIC=YKK%2BIFrld%2FC5FqKj%2Fq1F9a06T0WgC4cOvCqqo3cfsyww1EwAb2TNFWqy8wBcDtObrgkjKtmIBSnsD%2Bmn2eR6MzQeUvHqOBJqA%2FqYS3KEkUQoKUgpOfuW%2BTtuz2OjhVeOJ1oMWnellOIJ4IuNBO5aVtzV8AI3CD4H8Z9tgjhG7i6cXrsAh5EUwKjHqbeEBszHmUhSsCNx0vypRWWd6MkM1HBeENiww7W8GjhoXvX8AwZ5VDTRSX3QSr9jpUuWYXHmJDhOtdG%2FW9UAWEHYkv6IpRsGPKWtAdR%2FzHNzWmZRC3HsMP4LyIOXCs5O8lvUZH2Bv2gtZ1SGZOD0Kd7Oi4nFwA%3D%3D;HSID=gbN30kmxz%2BKKygRK6DJjGJ%2FzGQcMDOSmyQoYi9p2ITFNy6zMnfCERvugTwb5O%2FZyAJ5lGvveYZlNK3N%2BRoNPqCThC%2Fwr2OQbPA3aFJeXZerPSF7bWmhHVGGunlw8HqV3dcjs67tLT7irrJLctXzonzWE%2B6Ukd9kdFTNWW5j7s2JEEAcW9Dp6x6WIdRemz6HC3BifjKQ%2BmwvryFaI%2BsLRi9T042hwKQqV7ikOLOsHOOCqlCKs0vcpFS5vUXzdGwSWdONWLHMEkuApe5B%2BUC7bULbJvnoqnT1jFFEE3vm5gSU%2BGKIbVqBCseLx42av7mxWCmJfB1mpDH3K6tJof0YKpQ%3D%3D;DV=arPk%2BRhtodeAHMzW%2FqoqfkfCFpUR1CYM5oW%2FK7onqCf46Xqk2OR0LjLK%2BQL7jCS5yrcZA2r2hYulBxnpVa%2B8tO%2BJImuPOM9B8JkIbEAMHp%2BvNq8vcSj78wA%2FoW0Wgx8Sw9lSMno4CgPoNgF1mrkm9m9cd7U6wQS7WGKR6Wufxuvjlyt6zf5xtU2gq9WtsxOglu%2BXOYApwXiTIEO853sEnzlVNopwMbYkBm5Mu2LSEycyBm4A9nWKVCr9r0xisHCGzde3sBO4hY7WyykPK6vsU3Ds36FVNH3Kv7jx1Kf6tCVe9ukypCd8j%2FXJWAgPwv%2BsWcyA6ky9skKq1GDuoMJQ5A%3D%3D;ANID=modcr%2B3xO4FT10Fb3jE3afiK3eFqJCs1ylPBjge%2F6lgEM3Li5i5UZ%2BviQCBS1cuiaiQ%2F9Cj62z%2BapXfRMVWSFEeZTv9rkmPKmp5FZHUq5VLHNyhrBtjScNXwDZVakrx9ZYt1uzzh2X93c6Z6YQsyNWlkfdmlZS1FCGOf0aaVZfIRiUW%2FXX6zNVph%2FBpYTicXqZ1qaiPAWb5FNF%2BfJylCjmVDOFCZHJ4E6M0Pph%2BvvgjuCO9bRHWjI2Ouz%2B8ETyMBoQOkSDGzzInMeapRKmXYNDhdcEogwNmRkJqoRJjBhHzvbIYgCXGNJFWVnxywcZSaHfQwGonWClY3vT3PSlEnHg%3D%3D;"}
{"id": "sentence_0xfbec962e", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "X-Tag: f1DOF2QJkbCTJAUqiSLclK%2BsRkiAFHGmQusq2an%2FAud1WpfWVK%2F6gpLmtEQ38e65ILH8bHOzUd51lMpkh2xmHI5WpDJHgCtz5Q%2F%2BCL5usiShe35weofsQr9dQk%2BLsCl%2FulJlRg4cToY4ffie2MvfrtF4FCCZpbMy66UZUNqShGcbuIlRELkGKCTimwpB2wi4J6r%2FaIWAzINIP413ERqcQJ42Q1eQvvMkrEsWZDGEi4PHVtESHkcKKRVlZ9s3%2BPaQgq6TOR9YJxQOJaQ4NgaNuJAyHJnzkvtlQHNAy%2B%2FuLVa%2FpCuXxLvnw6dCIpmMwNHdzA09SL4T%2Bc5I3S6%2BFcu3mA%3D%3D"}
{"id": "sentence_0xb1b83b27", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Vary: x564msS%2Bd%2BIrc97apj6SftcyuZTeoDUdyeLRN7n%2BkEJYVoJYAeuxpHT1XhTQ%2FywsKB7tZuNCJpid2qbr5DtOphE9Yvu2MfVTPH7nuK3yrk2nl93yuTpwiB%2F2kcFx57oLxtgqXkDlPENI3p31zdp%2B7quVz9C3ZKwA0Pi8%2FjH%2Fj%2BMKFZHpAWxlAWtxWe0xvwPKj3aroG6ujoEB9Fw%2Fq3IvIBsjoCXwIWPCSX7PCIk97ccsOyzqE6jGkgvVhfw%2BcvPL78g7gfvfx6eSDoOQj5M6xcH0aTPEld8rckxqFQmB9Gy%2B%2BNZ0YACTuCn7Aw9ziB9OmeKAy%2B5I%2F1J2ij7aSH3YgA%3D%3D"}
{"id": "sentence_0xe505c495", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Var: wG852ANm2aHtGTrbsFHawff1eBZc9MnnPFOLEWeX3o7Ulc0fSj1qhaw%2BFlqpKs6ABhhs4opIe%2Bs%2BKqhT5G3jw9xRH%2FxeEYysL5AYbHsguuOivvXTofbFPPOLM%2ByoYIbq9Navi9C0VsaghxYUgsZ3wt4aHJAWXqvYacWoAowqCaZ7pg3FY0iKgLG403wZRS25%2BOrJL6gdo98qXYntX%2B4ZlPAUa49MiLJVQvI1xFCKLo5WbCb3b3aHQ2hpwvcYoh5P6F2su6Br3YL5DxtmpjdQY9IwLubcax%2BSZ4uZrDhX6MfnqQRa8vwA61OYhQUJM7OMeqPZ9lo%2BqkzrlPux1XxOyw%3D%3D"}
{"id": "sentence_0x553f7cae", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "With the generated HTTP header and the request handle, BAZARLOADER calls HttpSendRequestA to send the request to the C2 server and calls HttpQueryInfoA to retrieve the status code."}
{"id": "sentence_0xd62d479f", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "If the status code is not HTTP_STATUS_OK, the malware moves on to another C2 address."}
{"id": "sentence_0x7f379630", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "If the status code is HTTP_STATUS_OK, BAZARLOADER calls InternetQueryDataAvailable to determine the size of data to read, allocates the memory buffer according to the size, and calls InternetReadFile to read the next-stage payload until everything is written into memory."}
{"id": "sentence_0x3e40c109", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0xfa93128d", "chapter_title": "Step 5: C2 Connection Through Raw IP Addresses", "text": "Finally, the malware decrypts the payload with its RSA public key by calling BCryptDecrypt and checks to make sure the payloads size is greater than 64 bytes and that it contains an MZ header."}
{"id": "sentence_0x15a5e29c", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "If BAZARLOADER fails to download the next stage executable from the IP addresses listed above, it attempts to resolve custom C2 domains using OpenNIC, a user-owned DNS community service."}
{"id": "sentence_0xc623c77c", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "To begin querying OpenNICs API, the malware first resolves the URL api.opennicproject.org and calls InternetConnectA to establish a connection to the site."}
{"id": "sentence_0xba024493", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "Next, it calls HttpOpenRequestA to create a GET request handle with the object name /geoip/?bare&ipv=4&wl=all&res=8 and send the request using HttpSendRequestA."}
{"id": "sentence_0xb769c551", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "By examining OpenNICs APIs, we can break down this object name to see what BAZARLOADER is requesting. The bare parameter requests to only list the DNS server IP address, the ipv parameter requests to only list IPv4 servers, the wl parameter requests to only list whitelisted servers, and the res parameter requests to list 8 servers only."}
{"id": "sentence_0x4a7c0df0", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "To test this, we can simply paste the path below to a browser of our choosing."}
{"id": "sentence_0xd17e25b6", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "The malware then enters a loop to call InternetQueryDataAvailable and InternetReadFile to read the 8 OpenNICs DNS servers into memory."}
{"id": "sentence_0xb1be1ba0", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "For each DNS server IP address, BAZARLOADER parses it from string to int and populates the opennic_server_struct field in the main structure. Below is the structure used to store OpenNIC IP addresses."}
{"id": "sentence_0x3887114d", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "Finally, the malware decodes the following custom C2 domains, attempts to resolve them using the DNS servers, and downloads the next-stage executable."}
{"id": "sentence_0xc90428a1", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "For each of these custom domains, BAZARLOADER calls DnsQuery_A to query a DNS Resource Record from OpenNICs servers to resolve the C2 servers IP address."}
{"id": "sentence_0x1a26f9dd", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x4df46638", "chapter_title": "Step 6: C2 Connection Through Custom URLs", "text": "After checking if the IP address is valid, the malware tries connecting to it and requests to download the next stage executable similar to what we have seen in the previous step."}
{"id": "sentence_0x1cffddd8", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "After successfully downloading the next stage executable, BAZARLOADER begins the injection functionality to launch it from another process."}
{"id": "sentence_0x8ab6b2f8", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "For this functionality, BAZARLOADER populates the following structure."}
{"id": "sentence_0xe3c8e5d6", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "First, it checks if its process is elevated with admin privileges. It calls GetCurrentProcess and OpenProcessToken to retrieve its own process token handle and GetTokenInformation to get the tokens elevation information."}
{"id": "sentence_0xa86bc2cb", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "If the process is not elevated, it resolves the following processes names and tries to populate the injection structures fields."}
{"id": "sentence_0x90509a7b", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "For each process name, the malware enumerates the processs snapshot to retrieve its ID and calls OpenProcess to get its handle."}
{"id": "sentence_0x908f8beb", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "To populate the full_exec_command and thread_curr_directory fields which contain the processs command line and full path, BAZARLOADER first extracts the process parameters from the Process Environment Block (PEB)."}
{"id": "sentence_0xbc59ad74", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "To access the PEB, the malware calls NtQueryInformationProcess to retrieve the PEBs adress and calls ReadProcessMemory to read the PEB into memory."}
{"id": "sentence_0xae23f94", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "Next, it calls ReadProcessMemory to read the process parameters from the processs memory."}
{"id": "sentence_0x927c7a7b", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "With the process parameter RTL_USER_PROCESS_PARAMETERS structure, BAZARLOADER reads the processs command line and full path to populate the injection structure."}
{"id": "sentence_0x332a5392", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "Similarly, it also uses the process parameter to access the browsers environment block and writes it to the injection structure."}
{"id": "sentence_0x711ca810", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "If BAZARLOADER has admin privilege, instead of a browsers process, it tries to populate the injection structure with a svchost.exe process from the following command line."}
{"id": "sentence_0xe5d237f1", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "Next, using the injection struct, the malware calls CreateProcessA to create the target process in the suspended state to perform process hollowing."}
{"id": "sentence_0x55a4a982", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "We wont dive too deep into this process hollowing implementation, since its almost the exact same implementation as seen here."}
{"id": "sentence_0x982c5aff", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "We can quickly spot that process hollowing is taking place through the Windows APIs being called. NtUnmapViewOfSection is called to unmap and carve out the parents memory. VirtualAllocEx and WriteProcessMemory are then called to allocate virtual memory in the parents process and write the malicious payload into it."}
{"id": "sentence_0x31875fea", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "We can also see that the malware iterates through the parents section header to find the .reloc section and performs relocation on the injected image in memory."}
{"id": "sentence_0xb70f02e0", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "Finally, BAZARLOADER calls SetThreadContext to set the new entry point for the parent process and calls ResumeThread to resume the parents process again, which will execute the injected executable."}
{"id": "sentence_0xa2249677", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x57fb2df8", "chapter_title": "Step 5: Injection Through Process Hollowing", "text": "And with that, we have analyzed how BAZARLOADER downloads a remote executable and executes it using process hollowing! If you have any questions regarding the analysis, feel free to reach out to me via Twitter."}
{"id": "sentence_0x65355764", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x7d13fbc", "chapter_title": "BAZARLOADER: Analysing The Main Loader", "text": "Chuong Dong 27th May 2022 No Comments"}
{"id": "sentence_0xd418779e", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x7d13fbc", "chapter_title": "BAZARLOADER: Analysing The Main Loader", "text": "This post is a follow up on the last one on BAZARLOADER. If youre interested in how to unpack the initial stages of this malware, you can check it out here."}
{"id": "sentence_0xcb3128b", "report_id": "report_0x1db8fd2b", "report_date": "2022-05-27T00:00:00Z", "report_title": "BAZARLOADER: Analysing The Main Loader. Step 1: Checking System Languages", "report_url": "https://www.0ffset.net/reverse-engineering/analysing-the-main-bazarloader/?utm_source=rss&utm_medium=rss&utm_campaign=analysing-the-main-bazarloader", "chapter_id": "chapter_0x7d13fbc", "chapter_title": "BAZARLOADER: Analysing The Main Loader", "text": "In this post, well cover the final stage of this loader, which has the capability to download and executes remote payloads such as Cobalt Strike and Conti ransomware. To follow along, you can grab the sample as well as the PCAP files for it on Malware-Traffic-Analysis.net."}
