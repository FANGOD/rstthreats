{
    "id": "<report_0x1715d2e6>",
    "url": "https://research.nccgroup.com/2022/05/20/metastealer-filling-the-racoon-void",
    "title": "Metastealer filling the Racoon void. tl;dr",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0xdd25712f>",
            "title": "Metastealer filling the Racoon void",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xc57a6aec>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x77d1a9d7>": "https://research.nccgroup.com/author/nccgifc/"
                    },
                    "text": "RIFT: Research and Intelligence Fusion Team",
                    "html": "<a href=\"https://research.nccgroup.com/author/nccgifc/\" rel=\"author\" title=\"Posts by RIFT: Research and Intelligence Fusion Team\">RIFT: Research and Intelligence Fusion Team</a>"
                },
                {
                    "id": "<sentence_0xbbd7d6a6>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x2d82a240>": "https://research.nccgroup.com/category/threat-intelligence/"
                    },
                    "text": "Threat Intelligence",
                    "html": "<a href=\"https://research.nccgroup.com/category/threat-intelligence/\" rel=\"category tag\">Threat Intelligence</a>"
                },
                {
                    "id": "<sentence_0x9a2a9919>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "May 20, 2022<crlf>5 Minutes",
                    "html": " \nMay 20, 2022 \n5 Minutes \n"
                },
                {
                    "id": "<sentence_0x96d17222>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Author: Peter Gurney",
                    "html": "<p>Author: Peter Gurney</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xa95eeaaf>",
            "title": "tl;dr",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x6e739421>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "MetaStealer is a new information stealer variant designed to fill the void following Racoon stealer suspending operations in March of this year. Analysts at Israeli dark web intelligence firm Kela first identified its emergence on underground marketplaces [1] and later as being used in a spam campaign by SANS Internet Storm Centre Handler Brad Duncan [2], where the initial stages and traffic were detailed. This analysis further describes the final MetaStealer payload detailing its functionality.",
                    "html": "<p>MetaStealer is a new information stealer variant designed to fill the void following Racoon stealer suspending operations in March of this year. Analysts at Israeli dark web intelligence firm Kela first identified its emergence on underground marketplaces [1] and later as being used in a spam campaign by SANS Internet Storm Centre Handler Brad Duncan [2], where the initial stages and traffic were detailed. This analysis further describes the final MetaStealer payload detailing its functionality.</p>"
                },
                {
                    "id": "<sentence_0x93ffdced>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Significant findings include:",
                    "html": "<p>Significant findings include:</p>"
                },
                {
                    "id": "<sentence_0xf4f9f635>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Heavy reliance on open-source libraries<crlf>Microsoft Defender Bypass<crlf>Scheduled Task Persistence<crlf>Password Stealer<crlf>Keylogger<crlf>Hidden VNC server",
                    "html": "<ul><li>Heavy reliance on open-source libraries</li><li>Microsoft Defender Bypass</li><li>Scheduled Task Persistence</li><li>Password Stealer</li><li>Keylogger</li><li>Hidden VNC server<a id=\"_msocom_1\"></a></li></ul>"
                },
                {
                    "id": "<sentence_0x838d215c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x4fa97284>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image.png?ssl=1",
                        "<img_0xb565f96e>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image.png?resize=857%2C725&ssl=1"
                    },
                    "text": "Figure 1 MetaStealer Loader Execution",
                    "html": "<figure class=\"wp-block-image size-full\"><a href=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image.png?ssl=1\"><img alt=\"\" class=\"wp-image-15991 jetpack-lazy-image jetpack-lazy-image--handled\" height=\"725\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image.png?resize=857%2C725&amp;ssl=1\" width=\"857\"/><img alt=\"\" class=\"wp-image-15991\" height=\"725\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image.png?resize=857%2C725&amp;ssl=1\" width=\"857\"/></a><figcaption> Figure 1 MetaStealer Loader Execution</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0xa0550846>",
            "title": "Technical Analysis",
            "title_level": 1,
            "sentences": []
        },
        {
            "id": "<chapter_0xcfd5d26b>",
            "title": "Appendix",
            "title_level": 1,
            "sentences": []
        },
        {
            "id": "<chapter_0xe6fba85a>",
            "title": "Metastealer filling the Racoon void",
            "title_level": 1,
            "sentences": []
        },
        {
            "id": "<chapter_0xe04f9aaa>",
            "title": "Defender Bypass",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x790f1fd9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Early on in execution, the below command is executed using PowerShell:",
                    "html": "<p>Early on in execution, the below command is executed using PowerShell:</p>"
                },
                {
                    "id": "<sentence_0x376e68b2>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x3e963643>": "powershell -inputformat none -outputformat none \u2013NonInteractive -Command Add-MpPreference -ExclusionExtension \"exe\""
                    },
                    "text": "",
                    "html": "<code>powershell -inputformat none -outputformat none \u2013NonInteractive -Command Add-MpPreference -ExclusionExtension \"exe\"</code>"
                },
                {
                    "id": "<sentence_0x205bf66f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "As can be seen below in Figure 2 the command adds an exclusion rule to Microsoft Defender, effectively turning off scanning of files with .exe extension. This decreases the chances of the main payload being detected as well as any subsequent payloads that may be delivered to the target host post infection.",
                    "html": "<p>As can be seen below in Figure 2 the command adds an exclusion rule to Microsoft Defender, effectively turning off scanning of files with \u2018.exe\u2019 extension. This decreases the chances of the main payload being detected as well as any subsequent payloads that may be delivered to the target host post infection.</p>"
                },
                {
                    "id": "<sentence_0xb9c96a9d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x122b744e>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-1.png?ssl=1",
                        "<img_0xbb63ac7a>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-1.png?resize=578%2C483&ssl=1"
                    },
                    "text": "Figure 2 Defender Exclusion",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-1.png?ssl=1\"><img alt=\"\" class=\"wp-image-15993 jetpack-lazy-image\" height=\"483\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-1.png?resize=578%2C483&amp;ssl=1\" width=\"578\"/><img alt=\"\" class=\"wp-image-15993\" height=\"483\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-1.png?resize=578%2C483&amp;ssl=1\" width=\"578\"/></a><figcaption>Figure 2 Defender Exclusion</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x8c40b7f9>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x7fa7941b>": ".exe",
                        "<code_0x94728f77>": "{Original filename}.xyz",
                        "<code_0x973cea87>": "hyper-v.exe"
                    },
                    "text": "With the Microsoft Defender exclusion in place another PowerShell command is issued that proceeds to rename the original file to a hardcoded value with an .exe extension. In this case {Original filename}.xyz to",
                    "html": "<p>With the Microsoft Defender exclusion in place another PowerShell command is issued that proceeds to rename the original file to a hardcoded value with an <code>.exe</code> extension. In this case <code>{Original filename}.xyz</code> to <code>hyper-v.exe</code></p>"
                },
                {
                    "id": "<sentence_0x76c20edc>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xec72fea9>": "powershell rename-item -path .xyz -newname hyper-v.exe"
                    },
                    "text": "",
                    "html": "<code>powershell rename-item -path .xyz -newname hyper-v.exe</code>"
                }
            ]
        },
        {
            "id": "<chapter_0x3428e137>",
            "title": "Persistence",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x5e1ad10>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xf1886936>": "sys",
                        "<code_0xc81df33d>": "\\Microsoft\\Windows\u2019"
                    },
                    "text": "To maintain persistence, a scheduled task is created using The Component Object Model (COM), a task named sys is created in the folder \\Microsoft\\Windows The task is set to trigger at user login, ensuring the malware remains persistent across reboots.",
                    "html": "<p>To maintain persistence, a scheduled task is created using The Component Object Model (COM), a task named <code>sys</code> is created in the folder <code>\\Microsoft\\Windows\u2019</code> The task is set to trigger at user login, ensuring the malware remains persistent across reboots.</p>"
                },
                {
                    "id": "<sentence_0x2217f59>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x7e1b0637>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-2.png?ssl=1",
                        "<img_0x24752378>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-2.png?resize=632%2C494&ssl=1"
                    },
                    "text": "Figure 3 String de-obfuscation example",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-2.png?ssl=1\"><img alt=\"\" class=\"wp-image-15995 jetpack-lazy-image\" height=\"494\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-2.png?resize=632%2C494&amp;ssl=1\" width=\"632\"/><img alt=\"\" class=\"wp-image-15995\" height=\"494\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-2.png?resize=632%2C494&amp;ssl=1\" width=\"632\"/></a><figcaption>Figure 3 String de-obfuscation example</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0x3f2d3992>",
            "title": "String Obfuscation",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xfa793245>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "While several strings from included libraries are visible within the sample, the majority of strings within MetaStealers main code are encrypted and only decrypted as needed during runtime. To achieve this, the encrypted strings are moved onto the stack and decrypted with a bitwise XOR operation for use during execution. A Python representation of the routing can be seen below with an example seen below in Figure 4",
                    "html": "<p>While several strings from included libraries are visible within the sample, the majority of strings within MetaStealer\u2019s main code are encrypted and only decrypted as needed during runtime. To achieve this, the encrypted strings are moved onto the stack and decrypted with a bitwise XOR operation for use during execution. A Python representation of the routing can be seen below with an example seen below in Figure 4</p>"
                },
                {
                    "id": "<sentence_0x720a3ec2>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x902e9914>": "def swap32(x):\n return int.from_bytes(x.to_bytes(8, byteorder='little'), byteorder='big', signed=False)\ndef split_hex(input):\n text = hex(input)\n text = text[2:]\n text = text.zfill(len(text) + len(text) % 2)\n output = \" \".join(text[i: i+2] for i in range(0, len(text), 2))\n return(output.split(' '))\nhexIntXOR = []\nhexIntKey = []\nhexIntXOR.append(0x4BFB9390)\nhexIntXOR.append(0x25C2F251)\nhexIntXOR.append(0x11C52ED4)\nhexIntXOR.append(0x5CEDBB0D)\nhexIntKey.append(0x2489FBF3)\nhexIntKey.append(0x25C2973C)\nhexIntKey.append(0x11C52ED4)\nhexIntKey.append(0x5CEDBB0D)\nhexbytesxor = []\nhexbyteskey = []\nfor HexInt in hexIntXOR:\n hexBytes = split_hex(HexInt)\n hexBytes.reverse()\n hexbytesxor = hexbytesxor + hexBytes\nfor HexInt in hexIntKey:\n hexBytes = split_hex(HexInt)\n hexBytes.reverse()\n hexbyteskey = hexbyteskey + hexBytes\ncount = 0\nfor hexByte in hexbytesxor:\n print(chr(int(hexByte, base=16) ^ int(hexbyteskey[count], base=16)), end='')\n count+=1\n"
                    },
                    "text": "",
                    "html": "<code>def swap32(x):\n return int.from_bytes(x.to_bytes(8, byteorder='little'), byteorder='big', signed=False)\ndef split_hex(input):\n text = hex(input)\n text = text[2:]\n text = text.zfill(len(text) + len(text) % 2)\n output = \" \".join(text[i: i+2] for i in range(0, len(text), 2))\n return(output.split(' '))\nhexIntXOR = []\nhexIntKey = []\nhexIntXOR.append(0x4BFB9390)\nhexIntXOR.append(0x25C2F251)\nhexIntXOR.append(0x11C52ED4)\nhexIntXOR.append(0x5CEDBB0D)\nhexIntKey.append(0x2489FBF3)\nhexIntKey.append(0x25C2973C)\nhexIntKey.append(0x11C52ED4)\nhexIntKey.append(0x5CEDBB0D)\nhexbytesxor = []\nhexbyteskey = []\nfor HexInt in hexIntXOR:\n hexBytes = split_hex(HexInt)\n hexBytes.reverse()\n hexbytesxor = hexbytesxor + hexBytes\nfor HexInt in hexIntKey:\n hexBytes = split_hex(HexInt)\n hexBytes.reverse()\n hexbyteskey = hexbyteskey + hexBytes\ncount = 0\nfor hexByte in hexbytesxor:\n print(chr(int(hexByte, base=16) ^ int(hexbyteskey[count], base=16)), end='')\n count+=1\n</code>"
                },
                {
                    "id": "<sentence_0x14139391>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xffa77fb>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-3.png?resize=315%2C369&ssl=1"
                    },
                    "text": "Figure 4 String de-obfuscation example",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-15998 jetpack-lazy-image\" height=\"369\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-3.png?resize=315%2C369&amp;ssl=1\" width=\"315\"/><img alt=\"\" class=\"wp-image-15998\" height=\"369\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-3.png?resize=315%2C369&amp;ssl=1\" width=\"315\"/><figcaption>Figure 4 String de-obfuscation example</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0xd8105b02>",
            "title": "Command and Control",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x2678a9fa>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PCAPs from the SANS Internet Storm Centre report show that while initial C2 registration traffic was successful, later requests resulted in an HTTP 400 error code reply. Our own tests confirm this behaviour indicating this specific campaign was short-lived with commands no longer issued to new infections. This is likely a direct attempt to limit further analysis of the command and control communication protocol by analysts.",
                    "html": "<p>PCAPs from the SANS Internet Storm Centre report show that while initial C2 registration traffic was successful, later requests resulted in an HTTP 400 error code reply. Our own tests confirm this behaviour indicating this specific campaign was short-lived with commands no longer issued to new infections. This is likely a direct attempt to limit further analysis of the command and control communication protocol by analysts.</p>"
                },
                {
                    "id": "<sentence_0x31ebd531>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The sample contains a hardcoded Command and Control server, in this case, 193.106.191[.]162:1775, which is decrypted by the standard string decryption routine described in the previous section.",
                    "html": "<p>The sample contains a hardcoded Command and Control server, in this case, 193.106.191[.]162:1775, which is decrypted by the standard string decryption routine described in the previous section.</p>"
                },
                {
                    "id": "<sentence_0x9660e1fc>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x4b8f0a67>": "cpp-httplib/0.10.1"
                    },
                    "text": "Connection to the command and control infrastructure is performed over HTTP using the library cpp-httplib [3], resulting in the user agent cpp-httplib/0.10.1 being used.",
                    "html": "<p>Connection to the command and control infrastructure is performed over HTTP using the library \u2018cpp-httplib\u2019 [3], resulting in the user agent <code>cpp-httplib/0.10.1</code> being used.</p>"
                },
                {
                    "id": "<sentence_0x8dfe464f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x56d9f955>": "/api/client/new"
                    },
                    "text": "The initial connection is performed to the URL path /api/client/new, decrypted using the XOR routine detailed earlier. This connection is simply a get request with no further information included and expects a reply in JSON format, as can be seen in Figure 5",
                    "html": "<p>The initial connection is performed to the URL path <code>/api/client/new</code>, decrypted using the XOR routine detailed earlier. This connection is simply a get request with no further information included and expects a reply in JSON format, as can be seen in Figure 5</p>"
                },
                {
                    "id": "<sentence_0x452f22fd>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x7bed468a>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-4.png?ssl=1",
                        "<img_0x7a1ed9fc>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-4.png?resize=683%2C469&ssl=1"
                    },
                    "text": "Figure 5 Registration connection",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-4.png?ssl=1\"><img alt=\"\" class=\"wp-image-15999 jetpack-lazy-image\" height=\"469\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-4.png?resize=683%2C469&amp;ssl=1\" width=\"683\"/><img alt=\"\" class=\"wp-image-15999\" height=\"469\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-4.png?resize=683%2C469&amp;ssl=1\" width=\"683\"/></a><figcaption>Figure 5 Registration connection</figcaption></figure>"
                },
                {
                    "id": "<sentence_0xd71b999d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x46436103>": "ok",
                        "<code_0x125faf8b>": "BotId"
                    },
                    "text": "The UUID in the ok key is used as a BotId and changes on each new registration request.",
                    "html": "<p>The UUID in the <code>ok</code> key is used as a <code>BotId</code> and changes on each new registration request.</p>"
                },
                {
                    "id": "<sentence_0xd80068d3>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x68daed4>": "%localappdata%\\hyper-v.ver"
                    },
                    "text": "To parse the JSON string, another open-source library is utilised (Nlohmann JSON [4]), extracting the BotId, which is subsequently written to the file %localappdata%\\hyper-v.ver in plaintext allowing the BotId to remain persistent across reboots.",
                    "html": "<p>To parse the JSON string, another open-source library is utilised (Nlohmann JSON [4]), extracting the BotId, which is subsequently written to the file <code>%localappdata%\\hyper-v.ver</code> in plaintext allowing the BotId to remain persistent across reboots.</p>"
                },
                {
                    "id": "<sentence_0xec3f8d97>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The second request to the command and control server begins with a new JSON object being created utilising the Nlohmann JSON library. The UUID key is populated with the UUID received from the earlier registration request.",
                    "html": "<p>The second request to the command and control server begins with a new JSON object being created utilising the Nlohmann JSON library. The UUID key is populated with the UUID received from the earlier registration request.</p>"
                },
                {
                    "id": "<sentence_0xceb87b1c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x98ab6ce5>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-5.png?ssl=1",
                        "<img_0x9063ef35>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-5.png?resize=780%2C127&ssl=1"
                    },
                    "text": "Figure 6 get worker request body",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-5.png?ssl=1\"><img alt=\"\" class=\"wp-image-16001 jetpack-lazy-image\" height=\"127\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-5.png?resize=780%2C127&amp;ssl=1\" width=\"780\"/><img alt=\"\" class=\"wp-image-16001\" height=\"127\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-5.png?resize=780%2C127&amp;ssl=1\" width=\"780\"/></a><figcaption>Figure 6 get worker request body</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x72559562>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa88a7f59>": "/tasks/get_worker"
                    },
                    "text": "The URL path /tasks/get_worker is decrypted and used to make a POST request to the command and control server, including the UUID JSON string. At the time of writing, the server replies to this command with a HTTP 400 error code as seen in Figure 7.",
                    "html": "<p>The URL path <code>/tasks/get_worker</code> is decrypted and used to make a POST request to the command and control server, including the UUID JSON string. At the time of writing, the server replies to this command with a HTTP 400 error code as seen in Figure 7.</p>"
                },
                {
                    "id": "<sentence_0x60ffca99>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x1857492c>": "https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-6.png?resize=821%2C455&ssl=1"
                    },
                    "text": "Figure 7 get worker request",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-16002 jetpack-lazy-image\" height=\"455\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-6.png?resize=821%2C455&amp;ssl=1\" width=\"821\"/><img alt=\"\" class=\"wp-image-16002\" height=\"455\" src=\"https://i0.wp.com/research.nccgroup.com/wp-content/uploads/2022/05/image-6.png?resize=821%2C455&amp;ssl=1\" width=\"821\"/><figcaption>Figure 7 get worker request</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x1777937c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The final identified command and control request uses the URL path /tasks/collect following the completion of any tasks issued. A POST request is made detailing the success or failure of the task along with additional data such as stolen information or command output.",
                    "html": "<p>The final identified command and control request uses the URL path \u2018/tasks/collect\u2019 following the completion of any tasks issued. A POST request is made detailing the success or failure of the task along with additional data such as stolen information or command output.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x1be266b3>",
            "title": "Command and Control Commands",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x2ac73720>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<table_0x94b17d16>": {
                            "0": {
                                "0": "Command ID",
                                "1": "1001",
                                "2": "1002",
                                "3": "1003",
                                "4": "1004",
                                "5": "1005",
                                "6": "1006",
                                "7": "1007",
                                "8": "1008"
                            },
                            "1": {
                                "0": "Function",
                                "1": "System Information",
                                "2": "Cookie Stealer",
                                "3": "Password Stealer",
                                "4": "Start keylogger",
                                "5": "Stop keylogger",
                                "6": "Start HVNC",
                                "7": "Stop HVNC",
                                "8": "Execute Command"
                            },
                            "2": {
                                "0": "Description",
                                "1": "Spawn cmd.exe process with the command line system info and read output using attached pipes.",
                                "2": "Access Cookie data from the following locations (location can change based on a currently installed version check): Chrome \u2018C:\\Users\\{user}\\AppData\\Local\\Google\\Chrome\\User Data\\Default{\\Network (depending on version check) }\\Cookies\u2019 Firefox C:\\Users\\{user}\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\cookies.sqlite Edge C:\\Users\\{user}\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default{\\Network (depending on version check) }\\Cookies",
                                "3": "Access saved password data from the following locations: Chrome C:\\Users\\{user}\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data Firefox C:\\Users\\{user}\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\ logins.json / signons.sqlite C:\\Users\\{user}\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\LoginData",
                                "4": "Start keylogger on the following applications: ChromeFirefoxNotepad",
                                "5": "Stop Keylogger",
                                "6": "Setup Hidden Virtual Network Connection by creating a hidden desktop and network connectivity using sockets through the open-source library Kissnet [5]",
                                "7": "Stop HNVC",
                                "8": "Execute the given command using a spawned cmd.exe process and read the result using connected pipes."
                            }
                        }
                    },
                    "text": "Command IDFunctionDescription1001System InformationSpawn cmd.exe process with the command line system info and read output using attached pipes.1002Cookie StealerAccess Cookie data from the following locations (location can change based on a currently installed version check): Chrome C:\\Users\\{user}\\AppData\\Local\\Google\\Chrome\\User Data\\Default{\\Network (depending on version check) }\\Cookies Firefox C:\\Users\\{user}\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\cookies.sqlite Edge C:\\Users\\{user}\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default{\\Network (depending on version check) }\\Cookies1003Password StealerAccess saved password data from the following locations: Chrome C:\\Users\\{user}\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data Firefox C:\\Users\\{user}\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\ logins.json / signons.sqlite C:\\Users\\{user}\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\LoginData 1004Start keyloggerStart keylogger on the following applications: ChromeFirefoxNotepad1005Stop keyloggerStop Keylogger1006Start HVNCSetup Hidden Virtual Network Connection by creating a hidden desktop and network connectivity using sockets through the open-source library Kissnet [5]1007Stop HVNCStop HNVC1008Execute CommandExecute the given command using a spawned cmd.exe process and read the result using connected pipes.Table 1 Command and Control Commands",
                    "html": "<figure class=\"wp-block-table\"><table><tbody><tr><td>Command ID</td><td>Function</td><td>Description</td></tr><tr><td>1001</td><td>System Information</td><td>Spawn cmd.exe process with the command line system info and read output using attached pipes.</td></tr><tr><td>1002</td><td>Cookie Stealer</td><td>Access Cookie data from the following locations (location can change based on a currently installed version check): Chrome \u2018C:\\Users\\{user}\\AppData\\Local\\Google\\Chrome\\User Data\\Default{\\Network (depending on version check) }\\Cookies\u2019 Firefox C:\\Users\\{user}\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\cookies.sqlite Edge C:\\Users\\{user}\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default{\\Network (depending on version check) }\\Cookies</td></tr><tr><td>1003</td><td>Password Stealer</td><td>Access saved password data from the following locations: Chrome C:\\Users\\{user}\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data Firefox C:\\Users\\{user}\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\ logins.json / signons.sqlite C:\\Users\\{user}\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\LoginData </td></tr><tr><td>1004</td><td>Start keylogger</td><td>Start keylogger on the following applications: ChromeFirefoxNotepad</td></tr><tr><td>1005</td><td>Stop keylogger</td><td>Stop Keylogger</td></tr><tr><td>1006</td><td>Start HVNC</td><td>Setup Hidden Virtual Network Connection by creating a hidden desktop and network connectivity using sockets through the open-source library Kissnet [5]</td></tr><tr><td>1007</td><td>Stop HVNC</td><td>Stop HNVC</td></tr><tr><td>1008</td><td>Execute Command</td><td>Execute the given command using a spawned cmd.exe process and read the result using connected pipes.</td></tr></tbody></table><figcaption>Table 1 Command and Control Commands</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x7bf9e54e>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p></p>"
                }
            ]
        },
        {
            "id": "<chapter_0xd81e8f0a>",
            "title": "IOCs",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xe69afad6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "193.106.191[.]162:1775<crlf>cpp-httplib/0.10.1<crlf>hyper-v.exe",
                    "html": "<ul><li>193.106.191[.]162:1775</li><li>cpp-httplib/0.10.1</li><li>hyper-v.exe</li></ul>"
                }
            ]
        },
        {
            "id": "<chapter_0x99067432>",
            "title": "YARA",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x8aeb8a84>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xad34a709>": "rule metaStealer_memory {\n meta:\n description = \"MetaStealer Memory\"\n author = \"Peter Gurney\"\n date = \"2022-04-29\"\n strings:\n $str_c2_parse = {B8 56 55 55 55 F7 6D C4 8B C2 C1 E8 1F 03 C2 8B 55 C0 8D 04 40 2B 45 C4}\n $str_filename = \".xyz -newname hyper-v.exe\" fullword wide\n $str_stackstring = {FF FF FF C7 85 ?? ?? ?? ?? ?? ?? ?? ?? C7 85 ?? ?? ?? ?? ?? ?? ?? ?? C7 85 ?? ?? ?? ?? ?? ?? ?? ?? C7 85 ?? ?? ?? ?? ?? ?? ?? ?? 66 0F EF}\n condition:\n uint16(0) == 0x5a4d and\n 2 of ($str_*)\n}\n"
                    },
                    "text": "",
                    "html": "<code>rule metaStealer_memory {\n meta:\n description = \"MetaStealer Memory\"\n author = \"Peter Gurney\"\n date = \"2022-04-29\"\n strings:\n $str_c2_parse = {B8 56 55 55 55 F7 6D C4 8B C2 C1 E8 1F 03 C2 8B 55 C0 8D 04 40 2B 45 C4}\n $str_filename = \".xyz -newname hyper-v.exe\" fullword wide\n $str_stackstring = {FF FF FF C7 85 ?? ?? ?? ?? ?? ?? ?? ?? C7 85 ?? ?? ?? ?? ?? ?? ?? ?? C7 85 ?? ?? ?? ?? ?? ?? ?? ?? C7 85 ?? ?? ?? ?? ?? ?? ?? ?? 66 0F EF}\n condition:\n uint16(0) == 0x5a4d and\n 2 of ($str_*)\n}\n</code>"
                }
            ]
        },
        {
            "id": "<chapter_0x4f99a37e>",
            "title": "References",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x54f54d00>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xadf85b2>": "https://www.bleepingcomputer.com/news/security/new-blackguard-password-stealing-malware-sold-on-hacker-forums/"
                    },
                    "text": "[1]",
                    "html": "<p>[1] <a href=\"https://www.bleepingcomputer.com/news/security/new-blackguard-password-stealing-malware-sold-on-hacker-forums/\">https://www.bleepingcomputer.com/news/security/new-blackguard-password-stealing-malware-sold-on-hacker-forums/</a></p>"
                },
                {
                    "id": "<sentence_0x2fceba19>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x880025e6>": "https://isc.sans.edu/forums/diary/Windows+MetaStealer+Malware/28522/"
                    },
                    "text": "[2]",
                    "html": "<p>[2] <a href=\"https://isc.sans.edu/forums/diary/Windows+MetaStealer+Malware/28522/\">https://isc.sans.edu/forums/diary/Windows+MetaStealer+Malware/28522/</a></p>"
                },
                {
                    "id": "<sentence_0xf9ca6d7f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xdcca62e5>": "https://github.com/yhirose/cpp-httplib"
                    },
                    "text": "[3]",
                    "html": "<p>[3] <a href=\"https://github.com/yhirose/cpp-httplib\">https://github.com/yhirose/cpp-httplib</a></p>"
                },
                {
                    "id": "<sentence_0x803449d1>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xb44fa10f>": "https://github.com/nlohmann/json"
                    },
                    "text": "[4]",
                    "html": "<p>[4] <a href=\"https://github.com/nlohmann/json\">https://github.com/nlohmann/json</a></p>"
                },
                {
                    "id": "<sentence_0x909b14b3>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x2d2293f5>": "https://github.com/Ybalrid/kissnet"
                    },
                    "text": "[5]",
                    "html": "<p>[5] <a href=\"https://github.com/Ybalrid/kissnet\">https://github.com/Ybalrid/kissnet</a></p>"
                },
                {
                    "id": "<sentence_0xe4ce9fa4>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p><a id=\"_msocom_2\"></a></p>"
                }
            ]
        },
        {
            "id": "<chapter_0xed1df474>",
            "title": "Like this:",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x9766786f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Like Loading...",
                    "html": "Like Loading..."
                },
                {
                    "id": "<sentence_0x674e8417>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a class=\"sd-link-color\"></a>"
                },
                {
                    "id": "<sentence_0xd2092d5e>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa84e1645>": "https://secure.gravatar.com/avatar/8875243b6c0f6a934366d0278ee52700?s=80&d=identicon&r=g"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"avatar avatar-80 photo jetpack-lazy-image grav-hashed grav-hijack\" height=\"80\" id=\"grav-8875243b6c0f6a934366d0278ee52700-0\" src=\"https://secure.gravatar.com/avatar/8875243b6c0f6a934366d0278ee52700?s=80&amp;d=identicon&amp;r=g\" width=\"80\"/>"
                },
                {
                    "id": "<sentence_0x5adce1f8>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa84e1645>": "https://secure.gravatar.com/avatar/8875243b6c0f6a934366d0278ee52700?s=80&d=identicon&r=g"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"avatar avatar-80 photo\" height=\"80\" src=\"https://secure.gravatar.com/avatar/8875243b6c0f6a934366d0278ee52700?s=80&amp;d=identicon&amp;r=g\" width=\"80\"/>"
                }
            ]
        }
    ]
}