[
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xd9608a61",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "text": "April 4, 2022\nIn this intrusion from December 2021, the threat actors utilized IcedID as the initial access vector. IcedID is a banking trojan that first appeared in 2017, usually, it is delivered via malspam campaigns and has been widely used as an initial access vector in multiple ransomware intrusions.\nUpon execution of an IcedID DLL, discovery activity was performed which was followed by the dropping of a Cobalt Strike beacon on the infected host. Along the way, the threat actors installed remote management tools such as Atera and Splashtop for persisting in the environment. While remaining dormant most of the time, the adversary deployed Conti ransomware on the 19th day (shortly after Christmas), resulting in domain wide encryption."
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xad49347d",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "text": "adfind\ncobaltstrike\nconti\nexploit\nicedid\nransomware"
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xe4a67ac2",
            "title": "Case Summary",
            "text": "We assess with high confidence that the Stolen Image Evidence email campaign was used to deliver the IcedID DLL. This was first reported by Microsoft in April 2021.\nUpon execution of the IcedID DLL, a connection to a C2 server was established. This was followed by the creation of a scheduled task on the beachhead host for establishing persistence. The task executed the IcedID payload every one (1) hour. The IcedID malware then used Windows utilities such as net, chcp, nltest, and wmic, to perform discovery activity on the host.\nAfter a gap of almost an hour, a Cobalt Strike beacon was dropped and executed on the beachhead host. Soon after, another round of discovery was performed from the Cobalt Strike beacon focusing on the Windows domain. Nltest and net group were utilized to look for sensitive groups such as Domain Admins and Enterprise Admins. Process injection into explorer.exe was then observed from the Cobalt Strike Beacon.\nThe threat actors proceeded to install remote management tools such as Atera Agent and Splashtop. Use of these 3rd party administrative tools allow the threat actors another legitimate means of persistence and access if they were to lose their malware connection. In this intrusion, we observed usage of gmail[.]com and outlook[.]com email accounts for Atera agent registration. Soon after, one of the injected Cobalt Strike processes accessed LSASS memory to dump credentials from the beachhead.\nOn the sixth day of the intrusion, the beachhead host saw new discovery activity with a quick nltest followed by the PowerView script Invoke-ShareFinder. On the following day, the seventh day of the intrusion, the threat actors made their next move. On that day, a new Cobalt Strike server was observed to be used, in fact over the course of the intrusion, four different Cobalt Strike servers were used. From the beachhead host, a DLL was transferred to a domain controller over SMB and then a remote service was created on the domain controller to execute the Cobalt Strike DLL.\nAfter getting a foothold on the domain controller, we saw more process injection followed by the same pattern of installing Atera for additional persistent access. From the domain controller, the threat actors proceeded with more discovery tasks including Adfind and Invoke-ShareFinder again. After this, the threat actors went quiet.\nOn day nine of the intrusion, the next Cobalt Strike server, which would ultimately be used until the end of the intrusion, was observed for the first time. On the tenth day, little activity was observed but the threat actors connected to the beachhead host via the Atera agent and executed a fresh Cobalt Strike DLL. A little discovery check-in was observed on the 14th day, but little else.\nOn the 19th day, the threat actors moved towards their final objectives. They reviewed the directory structure of several hosts including domain controllers and backup servers. They then dropped their final ransomware payload on the beachhead host and attempted to execute using a batch file named backup.bat. However, they found that their execution failed.\nThey left for a few hours, and then returned, and attempted to exploit a couple of CVEs in an attempt to escalate privileges. The threat actors had already secured domain admin access but its possible the operator may have thought they lacked permissions when their first ransomware execution failed.\nWhile these exploits appear to have failed the threat actors found their previously captured domain admin credentials and launched two new Cobalt Strike beacons on the domain controllers. Finally, twenty minutes after accessing the domain controllers, the threat actors dropped the ransomware DLL and the batch script and executed from the domain controller. This time the execution worked as intended and resulted in domain wide ransomware."
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xbcc7a617",
            "title": "Timeline",
            "text": "Report lead: @0xtornado\nContributing analysts: @yatinwad, @MetallicHack, and @_pete_0"
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0x6f5d064f",
            "title": "Initial Access",
            "text": "The IcedID DLL, which gave the threat actors a foothold into the network, was likely delivered by a Stolen Image Evidence email campaign. These initial access campaigns reportedly utilize contact forms to send malicious emails to intended targets.\nThe emails contain a link to a legitimate storage service like those offered by Google and Microsoft. In this example, http://storage.googleapis.com was used to host a zip file. The zip archive contains an ISO file, which once clicked and mounted, shows a document-like LNK file. Once the victim opens that LNK file, the IcedID DLL loader executes, downloads, and runs the second stage of IcedID.\nBelow is a configuration extraction of that initial IcedID malware from an automated sandbox analysis of the sample:\n{\n\"Campaign ID\": 870605016,\n\"C2 url\": \"guguchrome.com\"\n}"
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0x770253f7",
            "title": "Execution",
            "text": "The graph below shows detailed actions performed through IcedID, including reconnaissance and Cobalt Strike beacons drops:"
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xdd213cd8",
            "title": "Persistence",
            "text": "Scheduled Tasks\nOnly one scheduled task was created during this intrusion. The scheduled task was created on the beachhead host upon the execution of IcedID DLL, which executed every hour:\n<Exec>\n<Command>rundll32.exe</Command>\n<Arguments>\"C:\\Users\\REDACTED\\AppData\\Local\\{C904416E-A880-3136-ED72-AA63AF7DB1F2}\\Gaagsp2.dll\",DllMain --ob=\"CapitalLadder\\license.dat\"</Arguments>\n</Exec>\nAtera Agent\nThreat actors dropped and installed Atera agent (T1219 Remote Access Software), using two MSI packages sql.msi and mstsc.msi, from the Cobalt Strike beacons, which allowed them to have a non-malware backdoor in the environment.\nThe installation of those two packages reveals two emails potentially belonging to the ransomware operators or affiliates:\nBoth of the configurations had the same AccountId, and different email addresses:\n/IntegratorLogin=\"\"marsmors1947@gmail.com\"\" /CompanyId=\"\"1\"\" /IntegratorLoginUI=\"\"\"\" /CompanyIdUI=\"\"\"\" /FolderId=\"\"\"\" /AccountId=\"\"0013z00002kcnS1AAI\"\n/IntegratorLogin=\"\"hughess6623@outlook.com\"\" /CompanyId=\"\"1\"\" /IntegratorLoginUI=\"\"\"\" /CompanyIdUI=\"\"\"\" /FolderId=\"\"\"\" /AccountId=\"\"0013z00002kbhSdAAI\"\nAtera agent is a remote monitoring and management system.\nAt one point in the intrusion the threat actors utilized Atera to download and launch a new Cobalt Strike beacon on one of the hosts they had installed the agent on."
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xd358969e",
            "title": "Privilege Escalation",
            "text": "There were attempts to exploit Active Directory vulnerabilities CVE-2021-42278 and CVE-2021-42287 in order to create privileged accounts [https://techcommunity.microsoft.com/t5/security-compliance-and-identity/sam-name-impersonation/ba-p/3042699]. This attempt failed, however, there were indicators through DNS requests enumerating accounts for the existence of SAMTHEADMIN-XX (XX being a random number). The query status 9003 indicates that this does not exist [https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes9000-11999-]\nThe injected process dllhost.exe requesting SAMTHEADMIN-92 and SAMTHEADMIN-20 accounts:\nWe believe the operator used the publicly available script sam_the_admin or a variant based on https://github.com/WazeHell/sam-the-admin/. Part of the script generates a new computer name account in the form SAMTHEADMIN- followed by a random value between 0 to 100, as indicated below.\nThe exploitation involves invoking look ups to ensure that the new accounts were successful, explaining why failed DNS requests were observed."
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xaaac6a3b",
            "title": "Defense Evasion",
            "text": "Disable Defender\nA base64 encoded PowerShell command was executed on the beachhead which disabled Windows Defender AV (T1562.001).\nEncoded Command:\npowershell -nop -exec bypass -EncodedCommand UwBlAHQALQBNAHAAUAByAGUAZgBlAHIAZQBuAGMAZQAgAC0ARABpAHMAYQBiAGwAZQBSAGUAYQBsAHQAaQBtAGUATQBvAG4AaQB0AG8AcgBpAG4AZwAgACQAdAByAHUAZQA=\nThe decoded base64 PowerShell command uses Set-MpPreference cmdlet to disable Defenders real time monitoring:\nSet-MpPreference -DisableRealtimeMonitoring $true\nProcess Injection\nA number of process injections were seen during this intrusion. The Cobalt Strike beacon used the CreateRemoteThread Win32 function in order to inject code into running processes. The usage of this function triggers the Sysmon Event ID 8, a well known pattern of CS beacon activity.\nRemote threads were created in Winlogon and Explorer processes."
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0x2a843923",
            "title": "Credential Access",
            "text": "LSASS Access\nThe threat actors accessed LSASS process memory (T1003.001) on different hosts, including domain controllers, using multiple techniques.\nThe screenshot below shows the different DesiredAccess to the LSASS process object from different beacons (dllhost.exe, Edebef4.dll, etc.) or Task Manager:\nThe table below maps the DesiredAccess values with the actual corresponding access rights, and examples of credentials dumping tools requesting those accesses:\n*A handle that has the PROCESS_QUERY_INFORMATION access right is automatically granted PROCESS_QUERY_LIMITED_INFORMATION.\nThose DesiredAccess values could be interesting to build detections or hunting queries if you are using Sysmon or such a verbose monitoring tool.\nIn our case, the access to LSASS process allowed the threat actors to compromise a domain admin account, which was then used to move laterally and deploy ransomware.",
            "table": "0;1;2;3\nDesired Access;Hex value;Process Access Rights;Offensive Tools\n5136;1410;PROCESS_VM_READ (0x0010)  PROCESS_QUERY_INFORMATION (0x0400)  PROCESS_QUERY_LIMITED_INFORMATION (0x1000)*;Mimikatz (Winver <5)  NanoDump\n4112;1010;PROCESS_VM_READ (0x0010)  PROCESS_QUERY_LIMITED_INFORMATION (0x1000);Mimikatz (Winver >=6)\n64;40;PROCESS_DUP_HANDLE (0x0040);MirrorDump  HandleKatz\n"
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0x25e94b6a",
            "title": "Discovery",
            "text": "Multiple discovery techniques were observed throughout the case. The initial discovery techniques were conducted on the beachhead host by the IcedID malware focusing on determining the system language and security products installed (T1518.001). Other familiar discovery techniques were then leveraged to establish situational awareness, such as network configurations and Windows domain configuration.\nDiscovery was achieved using a combination of living off the land techniques (WMIC and CMD) and via third-party tools.\ncmd.exe /c chcp >&2\nipconfig /all\nsysteminfo\nWMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get * /Format:List\nnet config workstation\nnltest /domain_trusts\nnltest /domain_trusts /all_trusts\nnet view /all /domain\nnet view /all\nnet group \"Domain Admins\" /domain\ncmd.exe /C nltest /dclist:\ncmd.exe /C net group /domain \"Domain Computers\"\ncmd.exe /C net group /domain \"Enterprise Admins\"\nThreat actors also used chcp for discovery of the system locale/language (T1614.001)Change Control Page (ChCP) is a Microsoft utility for changing the console control page (language). https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/chcp. In this case, the existing control page language was collected using the following command:\ncmd.exe /c chcp >&2\nAs a test, entering this on a command prompt shows a numeric value. The Microsoft link shows the number of the language used (437 United States).\nIt is highly likely that the threat actors were establishing the country of origin based on the language used an extra fail-safe check to ensure certain users or regions were not targeted. The >&2 parameter could indicate a parameter was expected as part of a script, or possibly a redirect using stderr.\nThe second discovery was from a different Cobalt Strike beacon Faicuy4.exe which focused on domain discovery and user groups using the net command.\nOnce the threat actors had achieved lateral movement to domain controllers, the AdFind utility was employed to enumerate active directory objects (T1018).\nadf.bat is a common batch file that we have observed in previous cases, we saw this script in 2020 as part of a Ryuk intrusion [https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/]. The recent Conti leaks indicate that Conti operators were surprised Ryuk operators were using their file.\nThe PowerView module Invoke-ShareFinder was executed from the beachhead host and a domain controller.\nSome network discovery was conducted using the ping utility to check the existence of hosts on the network (T1049).\nFilesystem discovery (T1083) was conducted to collect directory lists to a text file.\nOther variations included:\nC:\\Windows\\system32\\cmd.exe /C dir \\\\<REDACTED>\\C$ /s >> listback.txt\nC:\\Windows\\system32\\cmd.exe /C dir \\\\<REDACTED>\\C$ /s >> list1.txt"
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0x2c4842e8",
            "title": "Lateral Movement",
            "text": "On the 6th day, the threat actors began their lateral movement activity using SMB to transfer Cobalt Strike DLLs onto a domain controller and another server.\nServices were then created on the hosts to execute the uploaded Cobalt Strike Beacons.\nOn the final day, right before execution of the ransomware, SMB was again used to transfer Cobalt Strike Beacon executable to the domain controllers.\nThe beacons were then executed using a remote service.\nKnown Cobalt Strike named pipes were observed on the Domain Controllers with these executable beacons. Named pipes connections can be observed through Sysmon Event ID 18.\nNote that the named pipes followed MSSE-[0-9]{4}-server pattern, which indicates that the threat actors were using the default Cobalt Strike Artifact Kit binaries:\npipeName: \\MSSE-3328-server and Image: 61582ab.exe\npipeName: \\MSSE-7344-server and Image: 044b7e1.exe\nCommand and Control\nWe observed the IcedID DLL dropping multiple CS beacons on the beachhead.\nSplashtop Streamer\nThreat actors used Splashtop Streamer via Atera agent, allowing them to remotely connect to machines without using RDP tunneling or other techniques previously seen in our cases.\nBy default, the Splashtop Streamer is automatically installed together with the AteraAgent.\nSplashtop Streamer usage leaves many network connections to *.api.splashtop.com and *.relay.splashtop.com on port 443:\nCobalt Strike\nWe observed a default Cobalt Strike malleable C2 profile, using the jquery agent string. This activity can be detected with relative ease by the ET rules.\nThere appeared to be no jitter configured, resulting in a constant stream of HTTP requests, and if using ET rules, constant alerts would be generated.\nJust based on the ET Cobalt Strike rule, ET MALWARE Cobalt Strike Malleable C2 JQuery Custom Profile Response, there were in excess of 6K alerts generated.\nDue to the length of this intrusion, we observerd the threat actors handing off between C2 servers. We also observed one Cobalt Strike domain change IP resolutions three times, over the length of the case.\nIcedID:\nguguchrome.com\n5.181.80.214:80\napplesflying.com\n5.181.80.113:443\nJa3: a0e9f5d64349fb13191bc781f81f42e1\nJA3s: ec74a5c51106f0419184d0dd08fb05bc\nCertificate: [89:ac:17:b1:f1:b6:9e:c8:bb:e5:f3:59:ac:e4:91:b2:91:f4:85:58 ]\nNot Before: 2021/12/08 20:30:05 UTC\nNot After: 2022/12/08 20:30:05 UTC\nIssuer Org: Internet Widgits Pty Ltd\nSubject Common: localhost\nSubject Org: Internet Widgits Pty Ltd\nPublic Algorithm: rsaEncryption\nCobalt Strike:\nbunced.net\n103.208.86.7:80\n103.208.86.7:443\nJa3: 0eecb7b1551fba4ec03851810d31743f\nJA3s:10b29985cd0ecd878ac083f059c42d51\nCertificate: [8f:98:c5:f8:48:96:b6:cd:13:91:7c:4c:32:85:db:b7:e5:e1:bc:8f ]\nNot Before: 2021/12/09 10:32:43 UTC\nNot After: 2022/03/09 10:32:42 UTC\nIssuer Org: Let's Encrypt\nSubject Common: bunced.net\nPublic Algorithm: id-ec\nPublicKey Curve: secp384r1\n{\n\"x64\": {\n\"sha256\": \"01a4c5ef0410b379fa83ac1a4132ba6f7b5814192dbdb87e9d7370e6256ea528\",\n\"md5\": \"21242d958caf225f76ad71a4d3a6d4d9\",\n\"config\": {\n\"Jitter\": 10,\n\"Spawn To x86\": \"%windir%\\\\syswow64\\\\dllhost.exe\",\n\"Port\": 80,\n\"Watermark\": 0,\n\"C2 Host Header\": \"\",\n\"HTTP Method Path 2\": \"/jquery-3.3.2.min.js\",\n\"Beacon Type\": \"0 (HTTP)\",\n\"C2 Server\": \"bunced.net,/jquery-3.3.1.min.js\",\n\"Method 1\": \"GET\",\n\"Spawn To x64\": \"%windir%\\\\sysnative\\\\dllhost.exe\",\n\"Method 2\": \"POST\",\n\"Polling\": 5000\n},\n\"time\": 1639100549541.8,\n\"sha1\": \"04bbd0ffa580dd5a85ce4c7fc19c66cc753e45ff\",\n\"uri_queried\": \"/uKVG\"\n},\n\"x86\": {\n\"sha256\": \"9c01afed2a863fa2466679ef53127e925963cc95de98bc4c59cb4743ccc73bf5\",\n\"md5\": \"e7df03bc59b478f0588039416b845c7f\",\n\"config\": {\n\"Jitter\": 10,\n\"Spawn To x86\": \"%windir%\\\\syswow64\\\\dllhost.exe\",\n\"Port\": 80,\n\"Watermark\": 0,\n\"C2 Host Header\": \"\",\n\"HTTP Method Path 2\": \"/jquery-3.3.2.min.js\",\n\"Beacon Type\": \"0 (HTTP)\",\n\"C2 Server\": \"bunced.net,/jquery-3.3.1.min.js\",\n\"Method 1\": \"GET\",\n\"Spawn To x64\": \"%windir%\\\\sysnative\\\\dllhost.exe\",\n\"Method 2\": \"POST\",\n\"Polling\": 5000\n},\n\"time\": 1639100538593.3,\n\"sha1\": \"18ddb5fac720599983791036e43154a9ce67ffde\",\n\"uri_queried\": \"/Uq4b\"\n}\n}\nshytur.com\n179.43.176.93:80\n216.73.159.33:80\n179.43.176.80:80\n{\n\"x64\": {\n\"config\": {\n\"Port\": 80,\n\"Beacon Type\": \"0 (HTTP)\",\n\"Spawn To x86\": \"%windir%\\\\syswow64\\\\dllhost.exe\",\n\"Polling\": 5000,\n\"Method 2\": \"POST\",\n\"C2 Server\": \"shytur.com,/jquery-3.3.1.min.js\",\n\"C2 Host Header\": \"\",\n\"Method 1\": \"GET\",\n\"Spawn To x64\": \"%windir%\\\\sysnative\\\\dllhost.exe\",\n\"Watermark\": 0,\n\"Jitter\": 10,\n\"HTTP Method Path 2\": \"/jquery-3.3.2.min.js\"\n},\n\"uri_queried\": \"/RnJS\",\n\"md5\": \"22bbd14a893b19220e829940ad474687\",\n\"sha256\": \"10084d7146462d06c599bd14664d14c511b40687e21983e6f8bded06982931a9\",\n\"sha1\": \"06ef512d5a2b9353b6d0a412a1876e02d3474527\",\n\"time\": 1640639559417.7\n},\n\"x86\": {\n\"config\": {\n\"Port\": 80,\n\"Beacon Type\": \"0 (HTTP)\",\n\"Spawn To x86\": \"%windir%\\\\syswow64\\\\dllhost.exe\",\n\"Polling\": 5000,\n\"Method 2\": \"POST\",\n\"C2 Server\": \"shytur.com,/jquery-3.3.1.min.js\",\n\"C2 Host Header\": \"\",\n\"Method 1\": \"GET\",\n\"Spawn To x64\": \"%windir%\\\\sysnative\\\\dllhost.exe\",\n\"Watermark\": 0,\n\"Jitter\": 10,\n\"HTTP Method Path 2\": \"/jquery-3.3.2.min.js\"\n},\n\"uri_queried\": \"/COPz\",\n\"md5\": \"a48fbea91a31afaf348f713b1f59dfbf\",\n\"sha256\": \"d281caef6c8fc45d8725d6cd1542234aea35b97b99bb6aaff7688d91a10716f0\",\n\"sha1\": \"7d700ad69d2800de159af5f50bbb82e89467d8b4\",\n\"time\": 1640639554775.3\n}\n}\ncirite.com\n23.81.246.30\nJa3: a0e9f5d64349fb13191bc781f81f42e1\nJa3s: ae4edc6faf64d08308082ad26be60767\nCertificate: [f1:43:f2:43:29:79:35:ad:b5:60:c7:79:3a:0f:c6:68:a3:f2:d5:d1 ]\nNot Before: 2021/10/22 00:00:00 UTC\nNot After: 2022/10/22 23:59:59 UTC\nIssuer Org: Sectigo Limited\nSubject Common: cirite.com [cirite.com ,www.cirite.com ]\nPublic Algorithm: rsaEncryption\n{\n\"beacontype\": [\n\"HTTPS\"\n],\n\"sleeptime\": 5000,\n\"jitter\": 20,\n\"maxgetsize\": 1864736,\n\"spawnto\": \"AAAAAAAAAAAAAAAAAAAAAA==\",\n\"license_id\": 0,\n\"cfg_caution\": false,\n\"kill_date\": null,\n\"server\": {\n\"hostname\": \"cirite.com\",\n\"port\": 443,\n\"publickey\": \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCNZaG28qpSpw7xhHStBrU+s2eWiOIBlBERsSzWagdI1TzzJHc/EvkkAx3p2NrSkmd3/CoHejTabftxOT7DmjsfLSTOJJy7CETGzCN/Yu3Y+5gYapIgy9h96hXVJJkrU2dFPXAvdWBeYq/5B8wR07jWusXvvb5STypVWiPfKVcrkQIDAQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\"\n},\n\"host_header\": \"\",\n\"useragent_header\": null,\n\"http-get\": {\n\"uri\": \"/posting\",\n\"verb\": \"GET\",\n\"client\": {\n\"headers\": null,\n\"metadata\": null\n},\n\"server\": {\n\"output\": [\n\"print\",\n\"prepend 600 characters\",\n\"base64\",\n\"base64url\"\n]\n}\n},\n\"http-post\": {\n\"uri\": \"/extension\",\n\"verb\": \"POST\",\n\"client\": {\n\"headers\": null,\n\"id\": null,\n\"output\": null\n}\n},\n\"tcp_frame_header\": \"AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\n\"crypto_scheme\": 0,\n\"proxy\": {\n\"type\": null,\n\"username\": null,\n\"password\": null,\n\"behavior\": \"Use IE settings\"\n},\n\"http_post_chunk\": 0,\n\"uses_cookies\": true,\n\"post-ex\": {\n\"spawnto_x86\": \"%windir%\\\\syswow64\\\\rundll32.exe\",\n\"spawnto_x64\": \"%windir%\\\\sysnative\\\\rundll32.exe\"\n},\n\"process-inject\": {\n\"allocator\": \"VirtualAllocEx\",\n\"execute\": [\n\"CreateThread\",\n\"CreateRemoteThread\",\n\"RtlCreateUserThread\"\n],\n\"min_alloc\": 23886,\n\"startrwx\": false,\n\"stub\": \"Ms1B7fCBDFtfSY7fRzHMbQ==\",\n\"transform-x86\": [\n\"prepend '\\\\x90\\\\x90\\\\x90'\"\n],\n\"transform-x64\": [\n\"prepend '\\\\x90\\\\x90\\\\x90'\"\n],\n\"userwx\": false\n},\n\"dns-beacon\": {\n\"dns_idle\": null,\n\"dns_sleep\": null,\n\"maxdns\": null,\n\"beacon\": null,\n\"get_A\": null,\n\"get_AAAA\": null,\n\"get_TXT\": null,\n\"put_metadata\": null,\n\"put_output\": null\n},\n\"pipename\": null,\n\"smb_frame_header\": \"AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\n\"stage\": {\n\"cleanup\": true\n},\n\"ssh\": {\n\"hostname\": null,\n\"port\": null,\n\"username\": null,\n\"password\": null,\n\"privatekey\": null\n}\n}\nwayeyoy.com\n172.241.29.192:443\nCertificate: [00:e7:34:3a:ad:bc:61:59:16:5e:d4:2b:e7:64:fa:8c:d5:42:40:17]\nNot Before: 2021/12/07 00:00:00 UTC\nNot After: 2022/12/07 23:59:59 UTC\nIssuer Org: Sectigo Limited\nSubject Common: wayeyoy.com [wayeyoy.com ,www.wayeyoy.com ]\nPublic Algorithm: rsaEncryption\nA configuration was not obtained for this server.\nExfiltration\nWe did not observe any exfiltration indicators while analyzing host and network forensic artifacts.\nThis does not mean that there was no exfiltration, as this could have been performed via Cobalt Strike beacons over encrypted channels.\nImpact\nOn the 19th day of the intrusion, the threat actors prepared for their final objectives. From the beachhead host, the directory listings of the domain controllers were checked again, followed by the backup server. On the beachhead host, we observed the threat actors attempt to execute the final ransomware payload. From that host however the attempt failed.\nThe threat actors then proceeded to look for other elevation paths. After a failed attempt with CVE-2021-42278 and CVE-2021-42287, the threat actors executed Cobalt Strike beacons on a couple of domain controllers. Once they established this access, around twenty minutes later, they again attempted the ransomware deployment and this time the payload executed properly and began spreading across the network via SMB.\nThe threat actors deployed ransomware payload in a DLL, named x64.dll, which was executed using backup.bat batch script.\nThis x64.dll DLL contains fingerprints, conti_v3.dll, seen in our previous cases:\nWe didnt dig into reversing this DLL, as a detailed step-by-step analysis already exists, and gives an excellent explanation of command line parameters used during the execution of Conti ransomware.\nOnce the threat actors pushed the encryptor to C$, an excessive SMB network activity were generated in a short period of time (~7K) as indicated by the chart.\nThis resulted in files being encrypted and a readme.txt ransom note generated on the hosts:\nThe ransom note has slightly been modified from our last Conti cases:\nIndicators\nNetwork\nEmail Addresses used for Atera Registration:\nmarsmors1947@gmail.com\nhughess6623@outlook.com\n5.181.80.214:80\nguguchrome.com\n5.181.80.113:443\napplesflying.com\n103.208.86.7:80\nbunced.net\n172.241.29.192:443\nwayeyoy.com\n23.81.246.30:443\ncirite.com\n216.73.159.33:80\nshytur.com\nFile\ndata.dll\n71c8eb081c33fd6b2c10effa92154a18\n8222ed4fcac2c7408e7fbb748af1752e72bb9b01\nbaeb13eea3a71cfaba9d20ef373dcea69cf31f2ec21f45b83f29f699330cb3e3\nFaicuy4.exe\nfe4fb0b3ca2cb379d74cd239e71af44f\n6ccd04b109a5148a04ae3ac7f6bc061ccab2122f\na79f5ce304707a268b335f63d15e2d7d740b4d09b6e7d095d7d08235360e739c\nEwge.dll/Ijucko32.dll\nb3053228b51ae7af99e0abfa663368d5\n670d974d936262c1c569442238d953ed009f7c79\n4d62929aa9e76694a62b46bc05425452f26e1e9b09ea6f294850ace825229966\nEdebef4.dll\n7375eccff18bef7e89665d1a7f31edca\na0836d54aa2a783fd8bae685a1b94e913b655430\n50d2a2564541887570cf784c677de6900aa503648c510927e08c32b5a6ae3bf5\nx64.dll\n28bd01b6b3efa726bf00d633398c5c8a\n11012f0074e37e105c404a2eda61f9d652b8c03d\n8fb035b73bf207243c9b29d96e435ce11eb9810a0f4fdcc6bb25a14a0ec8\nDetections\nSuricata\nET MALWARE Cobalt Strike Malleable C2 JQuery Custom Profile Response\nET MALWARE Cobalt Strike Beacon Activity (GET)\nETPRO POLICY Observed Atera Remote Access Application Activity Domain in TLS SNI\nET POLICY Command Shell Activity Over SMB - Possible Lateral Movement\nET POLICY SMB Executable File Transfer\nET POLICY SMB2 NT Create AndX Request For an Executable File\nET HUNTING Possible Powershell .ps1 Script Use Over SMB\nET POLICY SMB2 NT Create AndX Request For a Powershell .ps1 File\nSigma\ntitle: CHCP CodePage Locale Lookup\nstatus: Experimental\ndescription: Detects use of chcp to look up the system locale value as part of host discovery\nauthor: _pete_0, TheDFIRReport\nreferences:\n- https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/chcp\ndate: 2022/02/21\nmodified: 2022/02/21\nlogsource:\ncategory: process_creation\nproduct: windows\ndetection:\nselection:\nImage|endswith:\n- '\\chcp.com'\nCommandLine|endswith:\n- 'chcp'\nParentImage|endswith:\n- '\\cmd.exe'\nParentCommandLine|contains:\n- '/c'\ncondition: selection\nfields:\n- CommandLine\n- ParentCommandLine\nfalsepositives:\n- Unknown\nlevel: high\ntags:\n- attack.discovery\n- attack.t1614.001"
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xb932bfd3",
            "title": "Yara",
            "text": "/*\nYARA Rule Set\nAuthor: The DFIR Report\nDate: 2022-02-19\nIdentifier: 9438 conti\nReference: https://thedfirreport.com\n*/\n/* Rule Set ----------------------------------------------------------------- */\nrule cs_exe_9438 {\nmeta:\ndescription = \"9438 - file Faicuy4.exe\"\nauthor = \"TheDFIRReport\"\nreference = \"https://thedfirreport.com\"\ndate = \"2022-02-19\"\nhash1 = \"a79f5ce304707a268b335f63d15e2d7d740b4d09b6e7d095d7d08235360e739c\"\nstrings:\n$x1 = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\Visual Studio 2008\\\\Projects\\\\MUTEXES\\\\x64\\\\Release\\\\MUTEXES.pdb\" fullword ascii\n$s2 = \"mutexes Version 1.0\" fullword wide\n$s3 = \" <requestedExecutionLevel level=\\\"asInvoker\\\" uiAccess=\\\"false\\\"></requestedExecutionLevel>\" fullword ascii\n$s4 = \".?AVCMutexesApp@@\" fullword ascii\n$s5 = \".?AVCMutexesDlg@@\" fullword ascii\n$s6 = \"About mutexes\" fullword wide\n$s7 = \"Mutexes Sample\" fullword wide\n$s8 = \" 1992 - 2001 Microsoft Corporation. All rights reserved.\" fullword wide\n$s9 = \"&Process priority class:\" fullword wide\n$s10 = \" Type Descriptor'\" fullword ascii\n$s11 = \"&About mutexes...\" fullword wide\n$s12 = \" constructor or from DllMain.\" fullword ascii\n$s13 = \".?AVCDisplayThread@@\" fullword ascii\n$s14 = \"IsQ:\\\"P\" fullword ascii\n$s15 = \"CExampleThread\" fullword ascii\n$s16 = \".?AVCCounterThread@@\" fullword ascii\n$s17 = \".?AVCExampleThread@@\" fullword ascii\n$s18 = \" <trustInfo xmlns=\\\"urn:schemas-microsoft-com:asm.v3\\\">\" fullword ascii\n$s19 = \"CDisplayThread\" fullword ascii\n$s20 = \"CCounterThread\" fullword ascii\ncondition:\nuint16(0) == 0x5a4d and filesize < 2000KB and\n1 of ($x*) and 4 of them\n}\nrule conti_dll_9438 {\nmeta:\ndescription = \"9438 - file x64.dll\"\nauthor = \"TheDFIRReport\"\nreference = \"https://thedfirreport.com\"\ndate = \"2022-02-19\"\nhash1 = \"8fb035b73bf207243c9b29d96e435ce11eb9810a0f4fdcc6bb25a14a0ec8cc21\"\nstrings:\n$s1 = \"AppPolicyGetProcessTerminationMethod\" fullword ascii\n$s2 = \"conti_v3.dll\" fullword ascii\n$s3 = \" <requestedExecutionLevel level='asInvoker' uiAccess='false' />\" fullword ascii\n$s4 = \"api-ms-win-core-processthreads-l1-1-2\" fullword wide\n$s5 = \"ext-ms-win-ntuser-dialogbox-l1-1-0\" fullword wide\n$s6 = \" Type Descriptor'\" fullword ascii\n$s7 = \"operator \\\"\\\" \" fullword ascii\n$s8 = \"operator co_await\" fullword ascii\n$s9 = \" <trustInfo xmlns=\\\"urn:schemas-microsoft-com:asm.v3\\\">\" fullword ascii\n$s10 = \"api-ms-win-rtcore-ntuser-window-l1-1-0\" fullword wide\n$s11 = \"api-ms-win-security-systemfunctions-l1-1-0\" fullword wide\n$s12 = \"ext-ms-win-ntuser-windowstation-l1-1-0\" fullword wide\n$s13 = \"api-ms-win-appmodel-runtime-l1-1-2\" fullword wide\n$s14 = \" Base Class Descriptor at (\" fullword ascii\n$s15 = \" Class Hierarchy Descriptor'\" fullword ascii\n$s16 = \"bad array new length\" fullword ascii\n$s17 = \" Complete Object Locator'\" fullword ascii\n$s18 = \".data$r\" fullword ascii\n$s19 = \" delete[]\" fullword ascii\n$s20 = \" </trustInfo>\" fullword ascii\ncondition:\nuint16(0) == 0x5a4d and filesize < 700KB and\nall of them"
        }
    },
    {
        "report": {
            "id": "report_0xe5b0d22",
            "date": "20220404",
            "title": "Stolen Images Campaign Ends in Conti Ransomware",
            "url": "https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware"
        },
        "chapter": {
            "id": "chapter_0xca36cbe3",
            "title": "MITRE",
            "text": "T1614.001 - System Location Discovery: System Language Discovery\nT1218.010 - Signed Binary Proxy Execution: Regsvr32\nT1218.011 - Signed Binary Proxy Execution: Rundll32\nT1059.001 - Command and Scripting Interpreter: PowerShell\nT1055 - Process Injection\nT1003.001 - OS Credential Dumping: LSASS Memory\nT1486 - Data Encrypted for Impact\nT1482 - Domain Trust Discovery\nT1021.002 - Remote Services: SMB/Windows Admin Shares\nT1219 - Remote Access Software\nT1083 - File and Directory Discovery\nT1562.001 - Impair Defenses: Disable or Modify Tools\nT1518.001 - Software Discovery: Security Software Discovery\nT1047 - Windows Management Instrumentation\nT1087.002 - Account Discovery: Domain Account\nT1068 - Exploitation for Privilege Escalation\nT1082 - System Information Discovery\nT1018 - Remote System Discovery\nT1053.005 - Scheduled Task/Job: Scheduled Task\nT1569.002 - Service Execution\nT1071.001 Web Protocols\nS0552 - AdFind\nS0154 - Cobalt Strike\nS0097 - Ping\nInternal case #9438"
        }
    }
]