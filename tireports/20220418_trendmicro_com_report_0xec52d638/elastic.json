[
    {
        "report": {
            "id": "report_0xec52d638",
            "date": "20220419",
            "title": "An Investigation of the BlackCat Ransomware via Trend Micro Vision One. Finding the threats",
            "url": "https://www.trendmicro.com/en_us/research/22/d/an-investigation-of-the-blackcat-ransomware.html"
        },
        "chapter": {
            "id": "chapter_0x9823aea7",
            "title": "An Investigation of the BlackCat Ransomware via Trend Micro Vision One",
            "text": "We recently investigated a case related to the BlackCat ransomware group using the Trend Micro Vision One platform, which comes with extended detection and response (XDR) capabilities. BlackCat (aka AlphaVM or AlphaV) is a ransomware family created in the Rust programming language and operated under a ransomware-as-a-service (RaaS) model.\nBy: Lucas Silva, Leandro Froes\n\nApril 18, 2022\nRead time: 7 min (1986 words)\nSave to Folio\nSubscribe\nWe recently investigated a case related to the BlackCat ransomware group using the Trend Micro Vision One platform, which comes with extended detection and response (XDR) capabilities. BlackCat (aka AlphaVM or AlphaV) is a ransomware family created in the Rust programming language and operated under a ransomware-as-a-service (RaaS) model. Our data indicates that BlackCat is primarily delivered via third-party frameworks and toolsets (for example, Cobalt Strike) and uses exploitation of exposed and vulnerable applications (for example, Microsoft Exchange Server) as an entry point.\nBlackCat has versions that work on both Windows and Linux operating systems and in VMwares ESXi environment. In this incident, we identified the exploitation of CVE-2021-31207. This vulnerability abuses the New-MailboxExportRequest PowerShell command to export the user mailbox to an arbitrary file location, which could be used to write a web shell on the Exchange Server.\nIn this blog entry, we discuss the kill chain used by the malicious actors behind this incident and how we used the Trend Micro Vision One platform to track the threats involved in the incident. We also dive deeper into the notable post-exploitation routines that were used until the hosts encryption."
        }
    },
    {
        "report": {
            "id": "report_0xec52d638",
            "date": "20220419",
            "title": "An Investigation of the BlackCat Ransomware via Trend Micro Vision One. Finding the threats",
            "url": "https://www.trendmicro.com/en_us/research/22/d/an-investigation-of-the-blackcat-ransomware.html"
        },
        "chapter": {
            "id": "chapter_0x9c2100a8",
            "title": "Finding the threats",
            "text": "We begin with the Trend Micro Vision One platform, where we noticed an incident being created in the Vision One console with a few workbenches related to it. Upon checking, we noticed several suspicious web shells being dropped on the local Microsoft Exchange Server. Based on that information, we started the analysis of the Exchange Server.\nFigure 1. The incident view created by Vision One\nWe first noticed that ASPX files, normally dropped after ProxyShell and ProxyLogon exploitation, were dropped and detected (Backdoor.ASP.WEBSHELL.SMYXBH5A) in the affected machine. This type of ProxyShell exploitation usually involves three vulnerabilities: CVE-2021-34473, CVE-2021-34523, and the previously mentioned CVE-2021-31207. The first two were patched in July 2021, while the last one was fixed in May 2021. Successful exploitation of these vulnerabilities could lead to arbitrary writing of files that an attacker could abuse to upload web shells to a target Exchange Server. In this engagement, we determined that CVE-2021-31207 was being actively exploited.\nThe exploitation is performed by importing a web shell as an email inside the user draft mailbox. It is then exported to c:/inetpub/wwwroot/aspnet_client/{5-random-digit}.aspx. Upon analysis of the infected host, we identified several web shell variants used by the malicious actors.\nFigure 2. The email saved in the drafts folder\nFigure 3. The ASPX files as shown on the Vision One workbench\nA web shell is a piece of code written in web development programming language, such as ASP or JSP, that attackers could drop onto web servers to gain remote access and the ability to execute arbitrary code and commands to meet their objectives.\nWe discovered that the web shell employed in the attack uses the exec_code query parameter to execute the desired command.\nFigure 4. A snippet of web shell content\nOnce a web shell is successfully inserted into the victims server, it could allow remote attackers to perform various tasks, such as stealing data and dropping other malicious tools. In this engagement, we saw the Internet Information Services (IIS) process (w3wp.exe) spawning a PowerShell process that downloaded a Cobalt Strike beacon (detected as Backdoor.Win32.COBEACON.OSLJDO).\nFigure 5. The IIS process w3wp.exe spawning a PowerShell process\nThe PowerShell method WebClient.DownloadFile was used to download a DLL file from the IP address 5[.]255[.]100[.]242. After the download, the DLL was executed using rundll32.exe to call the exported function ASN1_OBJECT_create.\nFigure 6. The PowerShell command used to download the DLL\nUpon further investigation, we discovered that the DLL, libeay32.dll, was a tampered version of a known DLL normally used by OpenSSL and by other programs to help with SSL communication. The malicious actors modified an exported function of the DLL to host a Cobalt Strike stager shellcode. The DLL was using a nonvalid certificate that belonged to the video communications company Zoom and was issued by GoDaddy.\nFigure 7. The libeay32.dll certificate\nFigure 8. The libeay32.dll issuer\nOnce executed, the exported function (ASN1_OBJECT_create) works as a loader for a classic Cobalt Strike stager shellcode. Although this function contains a lot of code, most of it is just junk code containing useless operations. What it really does is simply allocate memory using VirtualAlloc, copy a nonencrypted shellcode to the allocated region, and then transfer the execution to it. The shellcode then decrypts another shellcode, which is the Cobalt Strike stager shellcode.\nFigure 9. Virtual memory being allocated for the first shellcode\nFigure 10. Execution being transferred to the first shellcode\nFigure 11. Decrypted Cobalt Strike stager shellcode\nThe stager performs an HTTP GET request to a remote server mimicking a normal jQuery request to the path /jquery-3.5.1.slim.min.js. The shellcode then reads the server response, allocates memory also using the VirtualAlloc function, copies the downloaded content to the allocated region, and then transfers the execution to a hard-coded offset within the downloaded content.\nBecause of the way malleable command-and-control (C&C) stagers work, the behavior depends on the content being downloaded. During our research, we were not able to collect the payload from the remote server. However, using the Vision One platform, we collected enough information to be able to state that the downloaded payload managed to spawn the WerFault.exe process and inject it into the system to host another Cobalt Strike beacon.\nIt should be noted that all the following activities described in this blog post were performed by the injected WerFault.exe process.\nWhile using the Vision One platform, we identified the C&C server used by the malicious actors.\nFigure 12. The Cobalt Strike beacon C&C server as shown in the Vision One console\nThe spawned WerFault.exe process generated the following activities:\nDiscovered accounts (account discovery technique)\nDropped and executed the NetScan tool\nDropped and executed the Bloodhound tool\nDropped the CrackMapExec tool\nDropped other versions of the tampered DLL to remote machines (lateral movement)\nExecuted the PowerShell version of the Inveigh tool\nThe following commands were executed for account discovery:\nnet group Domain Admins /DOMAIN\nnet group Domain Controllers /DOMAIN\nnet group Enterprise Admins /DOMAIN\nsysteminfo\nFigure 13. The account discovery commands\nThe NetScan tool was dropped on the file path C:\\Windows\\debug and used to scan the network (network discovery activities). The same directory was also used to drop other tools and samples described in this blog post. The NetScan tool, created by SoftPerfect, is capable of pinging remote computers, scanning ports, and discovering shared folders.\nFigure 14. The network scanning tool execution\nAfter the initial account discovery, the BloodHound tool was dropped. This tool allows the analysis of Active Directory (AD) rights and relations. Using the collected data, BloodHound maps out AD objects such as users, groups, and computers, and then accesses and queries these relationships.\nFigure 15. BloodHound being dropped into the system\nFigure 16. Data extracted using BloodHound\nCrackMapExec (aka CME) is a post-exploitation tool that abuses built-in AD features and protocols to achieve its functionality. Its capabilities include auto-injecting Mimikatz, shellcode, and DLLs into memory using PowerShell, and dumping NTDS.dit. The malicious actors tried to use the tool to dump credentials and conduct lateral movement through the network (detected as HackTool.Win32.Mpacket.SM).\nFigure 17. The CrackMapExec execution\nThe spawned WerFault.exe process was also responsible for spreading other tampered versions of libeay32.dll to other machines across the environment via SMB.\nFigure 18. WerFault.exe used to drop the libeay32.dll across the environment\nInveigh is a cross-platform .NET IPv4/IPv6 machine-in-the-middle penetration-testing tool. It can conduct spoofing attacks and NTLM challenge/response captures via SMB service. The information is captured through both packet sniffing and protocol-specific listeners/sockets. In this incident, the PowerShell version of Inveigh was used to spoof the mDNS (multicast DNS) and NBNS (NetBIOS Name Service) protocols.\nFigure 19. The Inveigh command being executed"
        }
    },
    {
        "report": {
            "id": "report_0xec52d638",
            "date": "20220419",
            "title": "An Investigation of the BlackCat Ransomware via Trend Micro Vision One. Finding the threats",
            "url": "https://www.trendmicro.com/en_us/research/22/d/an-investigation-of-the-blackcat-ransomware.html"
        },
        "chapter": {
            "id": "chapter_0xe8675dd3",
            "title": "BlackCat execution",
            "text": "Before the execution of the BlackCat ransomware, we identified suspicious batch scripts being used by the malicious actors to prepare the environment for encryption.\nA file named spread.bat was created, and the following PowerShell command was used to execute the spread.bat file. It should be noted that we could not collect the .bat file to verify its content.\npowershell -nop -exec bypass -EncodedCommand LgBcAHMAcAByAGUAYQBkAC4AYgBhAHQAIABtAGsAcwBoAGEAcgBlACAAUgBFAEEARAA=\nThe Vision One platform decoded the command, resulting in the code shown in the following figure.\nFigure 20. The code generated after decoding the command used to execute spread.bat\nAnother batch file, 123.bat, was executed. As with the previous batch file, we could not collect it to analyze its content.\nTo execute the sample, a token is required to avoid automated sandbox analysis. However, any provided token can bypass the restriction and enable the malware execution. The ransomware also supports other commands, which can be obtained via the -h or --help parameters.\nFigure 21. The BlackCat help command output\nThe malicious actors used SysVol Share to host the BlackCat sample that was executed across the environment. This approach was used because the contents of SysVol Share are replicated across all domain controllers in the Windows Server domain, meaning that all machines will be able to access it. A copy of the sample was also dropped locally on the C:\\Windows\\debug folder.\nFigure 22. The BlackCat binary that was dropped in SysVol Share\nFile permissions were changed using icacls.exe, a command-line utility that can be used to modify NTFS permissions, as well as net share commands.\nFigure 23. Permission granted through icalcls.exe\nFigure 24. Permission granted through net share commands\nAfter preparing the environment, the malicious actors proceeded to execute the ransomware. Upon execution, BlackCat performs the following tasks:\nQuery the system UUID using wmic.\nThe universally unique identifier (UUID) is later used, together with the token, to identify the victim in a Tor website hosted by the malicious actors.\nDelete volume shadow copies.\nUse BCDedit to disable recovery mode.\nIncrease the number of network requests that the server service can perform.\nThis allows the malware to access enough files during the encryption process.\nStop the IIS service using the iisreset.exe, a well-known tool used to handle IIS services.\nExecute arp command to display current ARP (Address Resolution Protocol) entries.\nExecute Fsutil to allow the use of both remote and local symlinks.\nClear all event logs via wevutil.exe.\nOnce these tasks are finished, the target files are encrypted, and a 7-random-digit extension is added to the files. The ransom note (detected as Ransom.Win32.BLACKCAT.B.note) is then dropped. It informs the victim that their data has been stolen and instructs them to access a Tor onion domain.\nFigure 25. The BlackCat ransom note\nBlackCat samples, which are immediately detected by Trend Micro Predictive Machine Learning, are detected as Ransom.Win32.BLACKCAT.YXCCY."
        }
    },
    {
        "report": {
            "id": "report_0xec52d638",
            "date": "20220419",
            "title": "An Investigation of the BlackCat Ransomware via Trend Micro Vision One. Finding the threats",
            "url": "https://www.trendmicro.com/en_us/research/22/d/an-investigation-of-the-blackcat-ransomware.html"
        },
        "chapter": {
            "id": "chapter_0xe510b24b",
            "title": "Conclusion and security recommendations",
            "text": "This investigation gave us the opportunity to learn more about the BlackCat infection chain. It highlights the continued evolution of threats that are designed to evade detection. Notable capabilities and characteristics we observed included evasive tactics, such as masking a tampered DLL to make it seem legitimate.\nOrganizations should take note of the continuing trend among malicious actors of using Cobalt Strike in attacks, living-off-the-land binaries (LOLBins), and red team or penetration-testing tools to blend in with the environment.\nFor organizations, a good patch management protocol can help prevent the exploitation of vulnerable internet-facing servers. Early containment and mitigation are also essential to cut off more damaging attacks that compromise environments and deploy ransomware. In this case, close monitoring of the system and prompt detection could have prevented all that was described here from coming to pass.\nIn analyzing and correlating ransomware attacks, the use of multilayered detection and response solutions such as Trend Micro Vision One can provide powerful XDR capabilities that collect and automatically correlate data across multiple security layers email, endpoints, servers, cloud workloads, and networks to prevent attacks via automated protection, while also ensuring that no significant incidents go unnoticed.\nA list of the indicators of compromise (IOCs) for this case can be found here.\nTags\nEndpoints\n|\nRansomware\n|\nResearch\n|\nArticles, News, Reports"
        }
    },
    {
        "report": {
            "id": "report_0xec52d638",
            "date": "20220419",
            "title": "An Investigation of the BlackCat Ransomware via Trend Micro Vision One. Finding the threats",
            "url": "https://www.trendmicro.com/en_us/research/22/d/an-investigation-of-the-blackcat-ransomware.html"
        },
        "chapter": {
            "id": "chapter_0xa9f77135",
            "title": "An Investigation of the BlackCat Ransomware via Trend Micro Vision One",
            "text": "Ransomware"
        }
    },
    {
        "report": {
            "id": "report_0xec52d638",
            "date": "20220419",
            "title": "An Investigation of the BlackCat Ransomware via Trend Micro Vision One. Finding the threats",
            "url": "https://www.trendmicro.com/en_us/research/22/d/an-investigation-of-the-blackcat-ransomware.html"
        },
        "chapter": {
            "id": "chapter_0xfb7321f3",
            "title": "Additional IOC file",
            "text": "Webshells\nfe8c3512fb69d95dda0bf8be3504303db17372b1 Backdoor.ASP.WEBSHELL.SMYXBH5A\n112d93779df978005e8bb296e27cc3f4966fa36d Backdoor.ASP.WEBSHELL.SMYXBH5A\ne4af7325151280caa16040d50b4c38c038a030b7 Backdoor.ASP.WEBSHELL.SMYXBH5A\n8cceb378eb83f589e87417d75aca132f8879206a Backdoor.ASP.WEBSHELL.SMYXBH5A\n98b261e1d0fc77e4a45ee70d1e633f810a444b4b Backdoor.ASP.WEBSHELL.SMYXBH5A\ne4e21af4b344b3015f2d1bc4e379f91616fc8ae2 Backdoor.ASP.WEBSHELL.SMYXBH5A\nd9f7735ee128f29e8e058a292144badda534a63b Backdoor.ASP.WEBSHELL.SMYXBH5A\n7701707d563eb744f13589688526c8420b61b859 Backdoor.ASP.WEBSHELL.SMYXBH5A\nf6df68f27dafa699f6bfaab5d60b276623a6c608 Backdoor.ASP.WEBSHELL.SMYXBH5A\nb290614f85d44fcd5234f1fa81a7a549d3287a2b Backdoor.ASP.WEBSHELL.SMYXBH5A\n1ffdc233034198c64fef76cd58bb4adcea0f00a9 Backdoor.ASP.WEBSHELL.SMYXBH5A\n5093be336fa3fa79c7f582bdfdabe10527295ba0 Backdoor.ASP.WEBSHELL.SMYXBH5A\ndc82e060bda5d7a41aa477e23c31fa969bab82ed Backdoor.ASP.WEBSHELL.SMYXBH5A\n5f5d676311420a673bd1d5f1a65078aae8ee4742 Backdoor.ASP.WEBSHELL.SMYXBH5A\n3b163d6fa3f6fa6e18aefee223777d2bd04b1911 Backdoor.ASP.WEBSHELL.SMYXBH5A\n1b76a07c8b417b6f4f288c1cd1bef02b07605f00 Backdoor.ASP.WEBSHELL.SMYXBH5A\n2402020e1081461258aff54af44ffd5052f98aa1 Backdoor.ASP.WEBSHELL.SMYXBH5A\n29b196fa82a6a692e52af266b7fe43b2661a2e31 Backdoor.ASP.WEBSHELL.SMYXBH5A\nCobalt Strike\nf0f5f5de1c182c4905a51c1f132866a234818706 Backdoor.Win32.COBEACON.OSLJDO\nf1063e55ef96e0fabd39645e51e98a08d9595ace Backdoor.Win32.COBEACON.OSLJDO\ne525616b726cfe39f320a19f9dae8d0bbe9729c6 Backdoor.Win32.COBEACON.OSLJDO\nC&C Cobalt Strike\nupdatedaemon[.com\nC&C Cobalt Strike IP Address\n51.83.57.149\n5.255.100.242\nBlackCat\n9373F26B9C872047A1BEFD2E776889FDED4F360D Ransom.Win32.BLACKCAT.YXCCY & Troj.Win32.TRX.XXPE50FFF054\n97d5153f43eb48b9c2b12ba1f7857173da0e4143 Ransom.Win32.BLACKCAT.YXCCY & Troj.Win32.TRX.XXPE50FFF054\n928d66f4fe8da031daccfb7642324f1e10f31ce0 Trojan.XML.BLACKCAT.YXCCY\nCrackMapExec\n619652b42afe5fb0e3719d7aeda7a5494ab193e8 HackTool.Win32.Mpacket.SM"
        }
    }
]