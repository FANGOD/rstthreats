{
    "id": "<report_0xef9ec04b>",
    "url": "https://blog.malwarebytes.com/threat-intelligence/2022/04/new-uac-0056-activity-theres-a-go-elephant-in-the-room",
    "title": "New UAC-0056 activity: Theres a Go Elephant in the room",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0xe3ac8a1b>",
            "title": "New UAC-0056 activity: Theres a Go Elephant in the room",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xdff2a75b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x22bf261d>": "https://blog.malwarebytes.com/author/threatintelligence/"
                    },
                    "text": "Posted: April 1, 2022 by Threat Intelligence Team",
                    "html": "<p class=\"small\">Posted: April 1, 2022 by <a href=\"https://blog.malwarebytes.com/author/threatintelligence/\" rel=\"author\" title=\"Posts by Threat Intelligence Team\">Threat Intelligence Team</a>\n</p>"
                },
                {
                    "id": "<sentence_0xadd255ea>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In late March, the cyber espionage group UNC2589 also known as SaintBear launched a spear phishing campaign targeting several entities in Ukraine. In this blog we review this attack and the intended payloads.",
                    "html": "\nIn late March, the cyber espionage group UNC2589 also known as SaintBear launched a spear phishing campaign targeting several entities in Ukraine. In this blog we review this attack and the intended payloads.\n"
                },
                {
                    "id": "<sentence_0xb4ae74a2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This blog post was authored by Ankur Saini, Roberto Santos and Hossein Jazi.",
                    "html": "<p>This blog post was authored by Ankur Saini, Roberto Santos and Hossein Jazi.</p>"
                },
                {
                    "id": "<sentence_0x396b1a38>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x559c6aa7>": "https://www.mandiant.com/resources/russia-invasion-ukraine-retaliation"
                    },
                    "text": "UAC-0056 also known as SaintBear, UNC2589 and TA471 is a cyber espionage actor that has been active since early 2021 and has mainly targeted Ukraine and Georgia. The group is known to have performed a wiper attack in January 2022 on multiple Ukrainian government computers and websites.",
                    "html": "<p>UAC-0056 also known as SaintBear, UNC2589 and TA471 is a <a href=\"https://www.mandiant.com/resources/russia-invasion-ukraine-retaliation\">cyber espionage actor</a> that has been active since early 2021 and has mainly targeted Ukraine and Georgia. The group is known to have performed a wiper attack in January 2022 on multiple Ukrainian government computers and websites.</p>"
                },
                {
                    "id": "<sentence_0xa06686d4>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x9dc6e5fb>": "https://cert.gov.ua/article/37704",
                        "<a_0x81cc81f6>": "https://socprime.com/blog/cobalt-strike-beacon-grimplant-and-graphsteel-malware-massively-spread-by-uac-0056-threat-actors-in-targeted-phishing-emails-cert-ua-alert/",
                        "<a_0x231d6564>": "https://www.sentinelone.com/blog/threat-actor-uac-0056-targeting-ukraine-with-fake-translation-software/"
                    },
                    "text": "Earlier in March, Cert-UA reported UAC-0056 activity that targeted state organizations in Ukraine using malicious implants called GrimPlant, GraphSteel as well as CobaltStrike Beacon. Following up with that campaign, SOCPRIME and SentinelOne have reported some similar activities associated with this actor.",
                    "html": "<p>Earlier in March, Cert-UA reported <a href=\"https://cert.gov.ua/article/37704\">UAC-0056</a> activity that targeted state organizations in Ukraine using malicious implants called GrimPlant, GraphSteel as well as CobaltStrike Beacon. Following up with that campaign, <a href=\"https://socprime.com/blog/cobalt-strike-beacon-grimplant-and-graphsteel-malware-massively-spread-by-uac-0056-threat-actors-in-targeted-phishing-emails-cert-ua-alert/\">SOCPRIME</a> and <a href=\"https://www.sentinelone.com/blog/threat-actor-uac-0056-targeting-ukraine-with-fake-translation-software/\">SentinelOne</a> have reported some similar activities associated with this actor.</p>"
                },
                {
                    "id": "<sentence_0x69d83ea1>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x6481a91>": "https://twitter.com/h2jazi/status/1509382428296728580"
                    },
                    "text": "In late March, the Malwarebytes Threat Intelligence Team identified new activity from this group that targeted several entities in Ukraine, including ICTV, a private TV channel. Unlike previous attacks that were trying to convince victims to open a url and download a first stage payload or distributing fake translation software, in this campaign the threat actor is using a spear phishing attack that contains macro-embedded Excel documents. In this blog post, we provide a technical analysis of this new campaign.",
                    "html": "<p>In late March, the Malwarebytes Threat Intelligence Team identified <a href=\"https://twitter.com/h2jazi/status/1509382428296728580\">new</a> activity from this group that targeted several entities in Ukraine, including ICTV, a private TV channel. Unlike previous attacks that were trying to convince victims to open a url and download a first stage payload or distributing fake translation software, in this campaign the threat actor is using a spear phishing attack that contains macro-embedded Excel documents. In this blog post, we provide a technical analysis of this new campaign. </p>"
                }
            ]
        },
        {
            "id": "<chapter_0x318bb221>",
            "title": "New UAC-0056 activity: Theres a Go Elephant in the room",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x26c24314>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x420f3518>": "https://blog.malwarebytes.com/wp-content/uploads/2016/09/photodune-15293904-oil-refinery-petrochemical-industrial-at-night-s-900x506.jpg"
                    },
                    "text": "",
                    "html": "<p><img alt=\"New UAC-0056 activity: There\u2019s a Go Elephant in the room\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2016/09/photodune-15293904-oil-refinery-petrochemical-industrial-at-night-s-900x506.jpg\"/></p>"
                },
                {
                    "id": "<sentence_0x3fc5cb34>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xce9ac4fd>": "https://blog.malwarebytes.com/category/threat-intelligence/"
                    },
                    "text": "Threat Intelligence",
                    "html": "<p class=\"breadcrumbs hidden-xs\"><a href=\"https://blog.malwarebytes.com/category/threat-intelligence/\" rel=\"category tag\">Threat Intelligence</a></p>"
                }
            ]
        },
        {
            "id": "<chapter_0xdc6fcdcb>",
            "title": "Attack process",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x45af27aa>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The following picture shows the overall attack procedure used by this actor. The attack starts with malicious documents sent as attachment to a phishing email. The document contains a malicious macro that drops an embedded payload within the document. The next stage payloads are being downloaded from the attacker server in Base64 format.",
                    "html": "<p>The following picture shows the overall attack procedure used by this actor. The attack starts with malicious documents sent as attachment to a phishing email. The document contains a malicious macro that drops an embedded payload within the document. The next stage payloads are being downloaded from the attacker server in Base64 format. </p>"
                },
                {
                    "id": "<sentence_0x91dfc3e2>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x342db61e>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/Screenshot-2022-03-31-at-10.23.05-PM.png"
                    },
                    "text": "Figure 1: Attack process",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/Screenshot-2022-03-31-at-10.23.05-PM.png\" title=\"\"><img alt=\"\" class=\"wp-image-55430\" height=\"1012\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/Screenshot-2022-03-31-at-10.23.05-PM.png\" width=\"2182\"/></a><figcaption>Figure 1: Attack process</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0x3249205f>",
            "title": "Phishing email",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x36a3470b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The actor has distributed phishing emails at least from March 23th to March 28th. The email subject is (wage arrears) and the body of all the emails is the same:<crlf>. . . (Wage arrears. Updated automatically. Please send your offer to reduce your salary arrears.)",
                    "html": "<p>The actor has distributed phishing emails at least from March 23th to March 28th. The email subject is \u0417\u0430\u0431\u043e\u0440\u0433\u043e\u0432\u0430\u043d\u0456\u0441\u0442\u044c \u043f\u043e \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0456 (wage arrears) and the body of all the emails is the same:\n\u0417\u0430\u0431\u043e\u0440\u0433\u043e\u0432\u0430\u043d\u0456\u0441\u0442\u044c \u043f\u043e \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0456. \u041e\u043d\u043e\u0432\u043b\u044e\u0454\u0442\u044c\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e. \u041f\u0440\u043e\u0441\u0438\u043c\u043e \u043d\u0430\u0434\u0456\u0441\u043b\u0430\u0442\u0438 \u0432\u0430\u0448\u0443 \u043f\u0440\u043e\u043f\u043e\u0437\u0438\u0446\u0456\u044e \u0434\u043b\u044f \u0441\u043a\u043e\u0440\u043e\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u0431\u043e\u0440\u0433\u043e\u0432\u0430\u043d\u043e\u0441\u0442\u0456 \u043f\u043e \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0456. (Wage arrears. Updated automatically. Please send your offer to reduce your salary arrears.) </p>"
                },
                {
                    "id": "<sentence_0x829fbf89>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x9730b6c0>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/email.png"
                    },
                    "text": "Figure 2: Phishing email",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/email.png\" title=\"\"><img alt=\"\" class=\"wp-image-55484\" height=\"343\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/email.png\" width=\"605\"/></a><figcaption>Figure 2: Phishing email</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0x327e36e2>",
            "title": "Excel document:",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xe4c05e50>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The attached document has the same name as email subject and it seems the actor has used a legit document as decoy.",
                    "html": "<p>The attached document has the same name as email subject \u201c\u0417\u0430\u0431\u043e\u0440\u0433\u043e\u0432\u0430\u043d\u0456\u0441\u0442\u044c \u043f\u043e \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0456\u201d and it seems the actor has used a legit document as decoy. </p>"
                },
                {
                    "id": "<sentence_0xdca54a04>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x89f83732>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-doc.png"
                    },
                    "text": "Figure 3: Macro-embedded excel document",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-doc.png\" title=\"\"><img alt=\"\" class=\"wp-image-55433\" height=\"942\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-doc.png\" width=\"1852\"/></a><figcaption>Figure 3: Macro-embedded excel document</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x11536bc1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This document contains an embedded macro that drops the first stage payload called base-update.exe. The payload has been saved in a very hidden sheet named SheetForAttachedFile. The sheet contains the filename, the date the payload is attached (21th March 2022), the file size and the content of the attached file in hex format.",
                    "html": "<p>This document contains an embedded macro that drops the first stage payload called \u201cbase-update.exe\u201d. The payload has been saved in a \u201cvery hidden sheet\u201d named \u201cSheetForAttachedFile\u201d. The sheet contains the filename, the date the payload is attached (21th March 2022), the file size and the content of the attached file in hex format. </p>"
                },
                {
                    "id": "<sentence_0x87af391e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xfdaaf8c3>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-hidden-sheet.png"
                    },
                    "text": "Figure 4: Hidden Sheet",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-hidden-sheet.png\" title=\"\"><img alt=\"\" class=\"wp-image-55434\" height=\"902\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-hidden-sheet.png\" width=\"2776\"/></a><figcaption>Figure 4: Hidden Sheet</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x18121ec0>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x4fb00b45>": "https://excelvba.ru/code/tools/Attachments"
                    },
                    "text": "The macro reads the content of the embedded file in the hidden sheet and writes it into the defined location for this payload which is the AppData\\Local\\Temp\\ directory. The macro used by the actor is taken from a website that described and provided code for a method to attach and extract the files from an Excel workbook.",
                    "html": "<p>The macro reads the content of the embedded file in the hidden sheet and writes it into the defined location for this payload which is the \u201cAppData\\Local\\Temp\\\u201d directory. The macro used by the actor is taken from a <a href=\"https://excelvba.ru/code/tools/Attachments\">website</a> that described and provided code for a method to attach and extract the files from an Excel workbook.</p>"
                },
                {
                    "id": "<sentence_0xca587c51>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xe1253b94>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-macro.png"
                    },
                    "text": "Figure 5: Macro",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-macro.png\" title=\"\"><img alt=\"\" class=\"wp-image-55435\" height=\"932\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/uac-macro.png\" width=\"2468\"/></a><figcaption>Figure 5: Macro</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0x6173fef2>",
            "title": "Elephant Dropper (Base-Update.exe)",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x7af46641>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Elephant Dropper is the initial executable deployed in this attack; as the name suggests this is a simple dropper which deploys further stages. This executable is written in the Go programming language and is signed with a stolen Microsoft certificate. The strings in the binary suggest that it was actually named as Elephant Dropper by the attackers themselves.",
                    "html": "<p>Elephant Dropper is the initial executable deployed in this attack; as the name suggests this is a simple dropper which deploys further stages. This executable is written in the Go programming language and is signed with a stolen Microsoft certificate. The strings in the binary suggest that it was actually named as Elephant Dropper by the attackers themselves.</p>"
                },
                {
                    "id": "<sentence_0xd05cbf52>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It checks if the C:\\Users\\{user}\\.java-sdk directory exists on the system and creates it if it does not. The strings in the binary are encoded and are only decoded when they are required to be used.<crlf>The dropper decodes the C2 address from a string and then downloads a Base64 encoded binary from the C2 and writes it to C:\\Users\\{user}\\.java-sdk\\java-sdk.exe. This downloaded binary is named as Elephant Downloader by the attackers judging from the strings present. java-sdk.exe is then executed by the dropper with the following arguments, -a 0CyCcrhI/6B5wKE8XLOd+w==. The argument -a refers to address and the Base64 string is the C2 address in AES encrypted format.",
                    "html": "<p>It checks if the \u201cC:\\Users\\{user}\\.java-sdk\u201d directory exists on the system and creates it if it does not. The strings in the binary are encoded and are only decoded when they are required to be used. \nThe dropper decodes the C2 address from a string and then downloads a Base64 encoded binary from the C2 and writes it to \u201cC:\\Users\\{user}\\.java-sdk\\java-sdk.exe\u201d. This downloaded binary is named as Elephant Downloader by the attackers judging from the strings present. java-sdk.exe is then executed by the dropper with the following arguments, \u201c-a 0CyCcrhI/6B5wKE8XLOd+w==\u201d. The argument \u201c-a\u201d refers to address and the Base64 string is the C2 address in AES encrypted format.</p>"
                },
                {
                    "id": "<sentence_0xe97632eb>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xb335d321>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/Screenshot-2022-04-01-at-12.52.21-AM.png"
                    },
                    "text": "Figure 6: Elephant Dropper",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/Screenshot-2022-04-01-at-12.52.21-AM.png\" title=\"\"><img alt=\"\" class=\"wp-image-55442\" height=\"738\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/Screenshot-2022-04-01-at-12.52.21-AM.png\" width=\"1674\"/></a><figcaption>Figure 6: Elephant Dropper</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0x80000518>",
            "title": "Elephant Downloader (java-sdk.exe)",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x79b64111>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Elephant Downloader is also written in the Go Programming Language and is executed by the Dropper. The main purpose of this payload is to maintain persistence on the system and also deploy the next two stages of the attack. The strings in this executable are encoded in the same way as in the Dropper. It makes itself persistent through the auto-run registry key. To do so, it creates a registry key under \\Software\\Microsoft\\Windows\\CurrentVersion\\Run named as Java-SDK with value C:\\Users\\{user}\\Desktop\\java-sdk.exe -a 0CyCcrhI/6B5wKE8XLOd+w==.",
                    "html": "<p>Elephant Downloader is also written in the Go Programming Language and is executed by the Dropper. The main purpose of this payload is to maintain persistence on the system and also deploy the next two stages of the attack. The strings in this executable are encoded in the same way as in the Dropper. It makes itself persistent through the auto-run registry key. To do so, it creates a registry key under \u201c\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\u201d named as \u201cJava-SDK\u201d with value \u201cC:\\Users\\{user}\\Desktop\\java-sdk.exe -a 0CyCcrhI/6B5wKE8XLOd+w==\u201d. </p>"
                },
                {
                    "id": "<sentence_0x47def618>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x16d6554f>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-2.44.46-PM.png"
                    },
                    "text": "Figure 7: Registry Key for Persistence",
                    "html": "<figure class=\"aligncenter size-full is-resized\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-2.44.46-PM.png\" title=\"\"><img alt=\"\" class=\"wp-image-55459\" height=\"279\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-2.44.46-PM.png\" width=\"767\"/></a><figcaption>Figure 7: Registry Key for Persistence</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x943b9f59>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The downloader is responsible for getting the implant and the client; the URL paths for the payloads are stored in encoded form in the binary. It downloads the implant and the client from http://194.31.98.124:443/m and http://194.31.98.124:443/p respectively in Base64 encoded format.",
                    "html": "<p>The downloader is responsible for getting the implant and the client; the URL paths for the payloads are stored in encoded form in the binary. It downloads the implant and the client from http://194.31.98.124:443/m and http://194.31.98.124:443/p respectively in Base64 encoded format. </p>"
                },
                {
                    "id": "<sentence_0x36f6b68>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After this, it decodes the file names which are stored as well in encoded format and creates the file in the earlier mentioned directory .java-sdk. The file name of the implant is oracle-java.exe and the client is microsoft-cortana.exe. The downloader executes both payloads and passes -addr 0CyCcrhI/6B5wKE8XLOd+w== as arguments to both. Again the Base64 string is the C2 address in AES encrypted format.",
                    "html": "<p>After this, it decodes the file names which are stored as well in encoded format and creates the file in the earlier mentioned directory .java-sdk. The file name of the implant is oracle-java.exe and the client is microsoft-cortana.exe. The downloader executes both payloads and passes \u201c-addr 0CyCcrhI/6B5wKE8XLOd+w==\u201d as arguments to both. Again the Base64 string is the C2 address in AES encrypted format.</p>"
                },
                {
                    "id": "<sentence_0x365332d1>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x5c8556ab>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-3.01.54-PM.png"
                    },
                    "text": "Figure 8: Implant and Client being dropped",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-3.01.54-PM.png\" title=\"\"><img alt=\"\" class=\"wp-image-55460\" height=\"474\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-3.01.54-PM.png\" width=\"1364\"/></a><figcaption>Figure 8: Implant and Client being dropped</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0x65d4cc0>",
            "title": "Elephant Implant (oracle-java.exe)",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xf5841129>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Elephant Implant (also tracked as GrimPlant backdoor) seems to be one of the most important payloads in this attack. This executable communicates with the C2 on port 80. Similar to earlier payloads, strings are encoded in the same fashion is in this binary as well, and it also gets the C2 address encrypted from its parent process. The implant makes use of gRPC to communicate with the C2, it has a TLS certificate embedded in the binary and makes use of SSL/TLS integration in gRPC. This allows the malware to encrypt all the data that is being sent to the C2 via gRPC.",
                    "html": "<p>Elephant Implant (also tracked as GrimPlant backdoor) seems to be one of the most important payloads in this attack. This executable communicates with the C2 on port 80. Similar to earlier payloads, strings are encoded in the same fashion is in this binary as well, and it also gets the C2 address encrypted from its parent process. The implant makes use of gRPC to communicate with the C2, it has a TLS certificate embedded in the binary and makes use of SSL/TLS integration in gRPC. This allows the malware to encrypt all the data that is being sent to the C2 via gRPC. </p>"
                },
                {
                    "id": "<sentence_0x99ce799f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x6062c07b>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-03-31-at-5.40.52-PM.png"
                    },
                    "text": "Figure 9: Embedded TLS Certificate in the Implant",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-03-31-at-5.40.52-PM.png\" title=\"\"><img alt=\"\" class=\"wp-image-55472\" height=\"1062\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-03-31-at-5.40.52-PM.png\" width=\"1626\"/></a><figcaption>Figure 9: Embedded TLS Certificate in the Implant</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x363217f0>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x37be11bc>": "https://github.com/denisbrodbeck/machineid"
                    },
                    "text": "The implant uses the MachineID library to derive a unique id for each machine. It also gets the IP address of the machine by making a request to https://api.ipify.org/.<crlf>It also collects information related to the OS in a function named GetOSInfo, as part of this the malware collects the hostname, OS name and number of CPUs in the system. A function named GetUserInfo collects the Name, Username and path to Home directory of the current user.",
                    "html": "<p>The implant uses the <a href=\"https://github.com/denisbrodbeck/machineid\" rel=\"noreferrer noopener\" target=\"_blank\">MachineID</a> library to derive a unique id for each machine. It also gets the IP address of the machine by making a request to \u201chttps://api.ipify.org/\u201d. \nIt also collects information related to the OS in a function named GetOSInfo, as part of this the malware collects the hostname, OS name and number of CPUs in the system. A function named GetUserInfo collects the Name, Username and path to Home directory of the current user.</p>"
                },
                {
                    "id": "<sentence_0x685887ea>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xe2ad91eb>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-9.22.06-PM.png"
                    },
                    "text": "Figure 10: getSystemInfo function",
                    "html": "<figure class=\"aligncenter size-full is-resized\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-9.22.06-PM.png\" title=\"\"><img alt=\"\" class=\"wp-image-55473\" height=\"-23\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-9.22.06-PM.png\" width=\"-54\"/></a><figcaption>Figure 10: getSystemInfo function</figcaption></figure>"
                },
                {
                    "id": "<sentence_0xf11af196>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The Implant can communicate with the C2 by using 4 types of RPC requests:",
                    "html": "<p>The Implant can communicate with the C2 by using 4 types of RPC requests:</p>"
                },
                {
                    "id": "<sentence_0x27227bb8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "/Implant/Login This is the initial RPC request that is sent to the C2. Along with this RPC request the earlier retrieved ID and system information is sent to the C2 as well.<crlf>/Implant/FetchCommand This RPC request is used to retrieve the command that the actor wants to execute on the target machine. The retrieved command is executed via %windir%\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe. An AdminId and Command to be executed is received as a response to this command.<crlf>/Implant/SendCmdOutput This is used to send the output of an executed command by sending a SendCmdOutput RPC request to the C2. An AdminId and Command Output is sent with this request.<crlf>/Implant/Heartbeat A Heartbeat RPC request is made to C2 to send the status to the C2 at regular intervals. The machine id and system info retrieved earlier is sent with this request.",
                    "html": "<ul><li>/Implant/Login \u2013 This is the initial RPC request that is sent to the C2. Along with this RPC request the earlier retrieved ID and system information is sent to the C2 as well.</li><li>/Implant/FetchCommand \u2013 This RPC request is used to retrieve the command that the actor wants to execute on the target machine. The retrieved command is executed via \u201c%windir%\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe\u201c. An AdminId and Command to be executed is received as a response to this command.</li><li>/Implant/SendCmdOutput \u2013 This is used to send the output of an executed command by sending a \n SendCmdOutput RPC request to the C2. An AdminId and Command Output is sent with this request.</li><li>/Implant/Heartbeat \u2013 A Heartbeat RPC request is made to C2 to send the status to the C2 at regular intervals. The machine id and system info retrieved earlier is sent with this request.</li></ul>"
                },
                {
                    "id": "<sentence_0x3219cd5>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xb7f1db89>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-9.29.30-PM-600x126.png"
                    },
                    "text": "Figure 11: RPC Requests",
                    "html": "<figure class=\"aligncenter size-large\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-9.29.30-PM.png\" title=\"\"><img alt=\"\" class=\"wp-image-55475\" height=\"126\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screenshot-2022-04-01-at-9.29.30-PM-600x126.png\" width=\"600\"/></a><figcaption>Figure 11: RPC Requests</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0xb98ba474>",
            "title": "Elephant Client (microsoft-cortana.exe)",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x6b5f4d41>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x937a649b>": "d02c8272b848ffa079c0a13c5cb39dfb",
                        "<code_0x5390279b>": "F1D21960D8EB2FDDF2538D29A5FD50B5F64A3F9BF06F2A3C4C950438C9A7F78E"
                    },
                    "text": "The last payload that will be described is this blog is the one named elephant_client by the actor (also tracked as GraphSteel backdoor). The functionality suggests that this final payload is a data stealer.<crlf>Similar to other payloads in this attack chain, this payload receives the C2 server as a parameter in Base64 format (0CyCcrhI/6B5wKE8XLOd+w==) which is AES encrypted format of the server. Decoding the Base64 string gives us the C2 IP address in AES encrypted format: d02c8272b848ffa079c0a13c5cb39dfb. The actor uses the following key to AES decrypt (ECB-NoPadding mode) the C2 address: F1D21960D8EB2FDDF2538D29A5FD50B5F64A3F9BF06F2A3C4C950438C9A7F78E.",
                    "html": "<p>The last payload that will be described is this blog is the one named elephant_client by the actor (also tracked as GraphSteel backdoor). The functionality suggests that this final payload is a data stealer. \nSimilar to other payloads in this attack chain, this payload receives the C2 server as a parameter in Base64 format (0CyCcrhI/6B5wKE8XLOd+w==) which is AES encrypted format of the server. Decoding the Base64 string gives us the C2 IP address in AES encrypted format: <code>d02c8272b848ffa079c0a13c5cb39dfb</code>. The actor uses the following key to AES decrypt (ECB-NoPadding mode) the C2 address: <code>F1D21960D8EB2FDDF2538D29A5FD50B5F64A3F9BF06F2A3C4C950438C9A7F78E</code>.</p>"
                },
                {
                    "id": "<sentence_0x45df4fe3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Once the sample has established its connection with its C2 server, it starts collecting data and exfiltrating them into the server. At first it collects some basic info about the user and send it to the server as shown in Figure 12. (some info has been removed for privacy). The collected data is Base64 encoded, and includes hostname, OS name(windows), number of CPUs, IP address, Name, Username and home directory.",
                    "html": "<p>Once the sample has established its connection with its C2 server, it starts collecting data and exfiltrating them into the server. At first it collects some basic info about the user and send it to the server as shown in Figure 12. (some info has been removed for privacy). The collected data is Base64 encoded, and includes hostname, OS name(windows), number of CPUs, IP address, Name, Username and home directory.</p>"
                },
                {
                    "id": "<sentence_0x513c7256>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xb10b1f50>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-22.png"
                    },
                    "text": "Figure 12: Collect user info",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-22.png\" title=\"\"><img alt=\"\" class=\"wp-image-55448\" height=\"66\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-22.png\" width=\"671\"/></a><figcaption>Figure 12: Collect user info</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x75c5f39>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After that, the client tries to steal credentials from the victims machine. The actor steals data from the following services:",
                    "html": "<p>After that, the client tries to steal credentials from the victim\u2019s machine. The actor steals data from the following services:</p>"
                },
                {
                    "id": "<sentence_0xc8431fa5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Browser credentials<crlf>WiFi information<crlf>Credentials manager data<crlf>Mail accounts<crlf>Putty connections data<crlf>Filezilla credentials",
                    "html": "<ul><li>Browser credentials</li><li>WiFi information</li><li>Credentials manager data</li><li>Mail accounts</li><li>Putty connections data</li><li>Filezilla credentials</li></ul>"
                },
                {
                    "id": "<sentence_0x853b748b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We have installed some of these services for testing purposes. Figure 13 shows how the stolen data is being sent to C2 server:",
                    "html": "<p>We have installed some of these services for testing purposes. Figure 13 shows how the stolen data is being sent to C2 server:</p>"
                },
                {
                    "id": "<sentence_0x54a7fe55>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x554b17b>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-24.png"
                    },
                    "text": "Figure 13: C2 communications",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-24.png\" title=\"\"><img alt=\"\" class=\"wp-image-55451\" height=\"94\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-24.png\" width=\"813\"/></a><figcaption>Figure 13: C2 communications</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x741a5eef>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Base64 decoding data shows what data has been exfiltrated:",
                    "html": "<p>Base64 decoding data shows what data has been exfiltrated: </p>"
                },
                {
                    "id": "<sentence_0x6abb3925>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xde6a723b>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-25.png"
                    },
                    "text": "Figure 14: Stolen data",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-25.png\" title=\"\"><img alt=\"\" class=\"wp-image-55452\" height=\"286\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-25.png\" width=\"769\"/></a><figcaption>Figure 14: Stolen data</figcaption></figure>"
                },
                {
                    "id": "<sentence_0xe803f1f5>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa9104008>": "netsh wlan show profiles",
                        "<code_0x8b31d4d8>": " netsh wlan show profile [SSID] key=clear"
                    },
                    "text": "For example, to recover Wifi data, the command netsh wlan show profiles (that list all SSIDs saved in the machine) has been used. Once all the SSIDs are gathered, if any, it will launch the command netsh wlan show profile [SSID] key=clear, revealing all saved wifi passwords:",
                    "html": "<p>For example, to recover Wifi data, the command <code>netsh wlan show profiles</code> (that list all SSIDs saved in the machine) has been used. Once all the SSIDs are gathered, if any, it will launch the command<code> netsh wlan show profile [SSID] key=clear</code>, revealing all saved wifi passwords:</p>"
                },
                {
                    "id": "<sentence_0xf42f8568>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xbf2d03ad>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-27.png"
                    },
                    "text": "Figure 15: Wifi data exfiltration commands",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-27.png\" title=\"\"><img alt=\"\" class=\"wp-image-55454\" height=\"242\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-27.png\" width=\"643\"/></a><figcaption>Figure 15: Wifi data exfiltration commands</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x7e3bc3ea>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The following image shows an example of the command execution, where you can see some of the commands executed in the process:",
                    "html": "<p>The following image shows an example of the command execution, where you can see some of the commands executed in the process:</p>"
                },
                {
                    "id": "<sentence_0x145660de>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x3db979ea>": "https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-26.png"
                    },
                    "text": "Figure 16: Used commands",
                    "html": "<figure class=\"aligncenter size-full\"><a href=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-26.png\" title=\"\"><img alt=\"\" class=\"wp-image-55453\" height=\"122\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/03/image-26.png\" width=\"1097\"/></a><figcaption>Figure 16: Used commands</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x17b66861>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 17 shows another example of exfiltration in which an encoded PowerShell command is used to steal the data from the Secure Vault:",
                    "html": "<p>Figure 17 shows another example of exfiltration in which an encoded PowerShell command is used to steal the data from the Secure Vault:</p>"
                },
                {
                    "id": "<sentence_0xf4f52b68>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xb6b8037b>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/image.png"
                    },
                    "text": "Figure 17: PS command for exfiltration",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-55476\" height=\"380\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/image.png\" width=\"1024\"/><figcaption>Figure 17: PS command for exfiltration</figcaption></figure>"
                },
                {
                    "id": "<sentence_0xe972721e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In addition to stealing credentials, the actor steals all the files from the victims machine. To collect the data it iterates through all the files in the user directory and hashes each of them. All of these collected hashes will be sent to the actors C2 server. Finally, the malware will send to the attackers all these files.<crlf>Note that all the collected data are AES encrypted before being sent to C2 server, so packet inspection will not reveal any useful information.",
                    "html": "<p>In addition to stealing credentials, the actor steals all the files from the victim\u2019s machine. To collect the data it iterates through all the files in the user directory and hashes each of them. All of these collected hashes will be sent to the actor\u2019s C2 server. Finally, the malware will send to the attackers all these files. \nNote that all the collected data are AES encrypted before being sent to C2 server, so packet inspection will not reveal any useful information. </p>"
                },
                {
                    "id": "<sentence_0x6c268fb2>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x911bf6d6>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/image-1.png"
                    },
                    "text": "Figure 18: Stealing files activity",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-55477\" height=\"138\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/image-1.png\" width=\"856\"/><figcaption>Figure 18: Stealing files activity</figcaption></figure>"
                }
            ]
        },
        {
            "id": "<chapter_0x6af776aa>",
            "title": "Conclusion",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x12aa330f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "UAC-0056 aka UNC2589, TA471, or SaintBear is an active actor that has been performing cyber espionage campaigns against Ukraine since 2021. The group is known to have performed the WhisperGate disruptive attack against Ukraine government entities in early 2022. Recently we have observed new activity associated with this actor that used macro-embedded excel documents to drop its malicious software on victims machines. In this blog we provided a technical analysis of this campaign.",
                    "html": "<p>UAC-0056 aka UNC2589, TA471, or SaintBear is an active actor that has been performing cyber espionage campaigns against Ukraine since 2021. The group is known to have performed the WhisperGate disruptive attack against Ukraine government entities in early 2022. Recently we have observed new activity associated with this actor that used macro-embedded excel documents to drop its malicious software on victims machines. In this blog we provided a technical analysis of this campaign. </p>"
                },
                {
                    "id": "<sentence_0x2bb49649>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xbbea68cd>": "https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-01-at-1.38.25-PM.png"
                    },
                    "text": "",
                    "html": "<figure class=\"aligncenter size-full\"><img alt=\"\" class=\"wp-image-55483\" height=\"665\" src=\"https://blog.malwarebytes.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-01-at-1.38.25-PM.png\" width=\"779\"/></figure>"
                },
                {
                    "id": "<sentence_0x2f5d5e05>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x6a6ed081>": "https://twitter.com/MBThreatIntel"
                    },
                    "text": "The Malwarebytes Threat Intelligence team continues to monitor cyber attacks related to the Ukraine war. We are protecting our customers and sharing additional indicators of compromise.",
                    "html": "<p>The <a href=\"https://twitter.com/MBThreatIntel\" rel=\"noreferrer noopener\" target=\"_blank\">Malwarebytes Threat Intelligence team</a> continues to monitor cyber attacks related to the Ukraine war. We are protecting our customers and sharing additional indicators of compromise.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xd769e57c>",
            "title": "IOCs",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x212af7df>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Emails:<crlf>1ce85d7be2e0717b79fbe0132e6851d81d0478dba563991b3404be9e58d745b1<crlf>58c93b729273ffa86ed7baa7f00ccd9664ab9b19727010a5a263066bff77cee8<crlf>ed0128095910fa2faa44e41f9623dc0ba26f00d84be178ef46c1ded003285ae3<crlf>Excel doc:<crlf>c1afb561cd5363ac5826ce7a72f0055b400b86bd7524da43474c94bc480d7eff<crlf>Elephant dropper (base-update.exe):<crlf>9e9fa8b3b0a59762b429853a36674608df1fa7d7f7140c8fccd7c1946070995a<crlf>Elephant downloader (java-sdk.exe):<crlf>8ffe7f2eeb0cbfbe158b77bbff3e0055d2ef7138f481b4fac8ade6bfb9b2b0a1<crlf>Elephant Implant (oracle-java.exe):<crlf>99a2b79a4231806d4979aa017ff7e8b804d32bfe9dcc0958d403dfe06bdd0532<crlf>Elephant Client (microsoft-cortana.exe):<crlf>60bdfecd1de9cc674f4cd5dd42d8cb3ac478df058e1962f0f43885c14d69e816<crlf>C2:<crlf>194.31.98.124",
                    "html": "<p>Emails:\n1ce85d7be2e0717b79fbe0132e6851d81d0478dba563991b3404be9e58d745b1\n58c93b729273ffa86ed7baa7f00ccd9664ab9b19727010a5a263066bff77cee8\ned0128095910fa2faa44e41f9623dc0ba26f00d84be178ef46c1ded003285ae3\nExcel doc:\nc1afb561cd5363ac5826ce7a72f0055b400b86bd7524da43474c94bc480d7eff\nElephant dropper (base-update.exe): \n9e9fa8b3b0a59762b429853a36674608df1fa7d7f7140c8fccd7c1946070995a\nElephant downloader (java-sdk.exe):\n8ffe7f2eeb0cbfbe158b77bbff3e0055d2ef7138f481b4fac8ade6bfb9b2b0a1\nElephant Implant (oracle-java.exe):\n99a2b79a4231806d4979aa017ff7e8b804d32bfe9dcc0958d403dfe06bdd0532\nElephant Client (microsoft-cortana.exe): \n60bdfecd1de9cc674f4cd5dd42d8cb3ac478df058e1962f0f43885c14d69e816\nC2:\n194.31.98.124\n</p>"
                },
                {
                    "id": "<sentence_0xdb475662>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "SHARE THIS ARTICLE",
                    "html": "<p>SHARE THIS ARTICLE</p>"
                },
                {
                    "id": "<sentence_0x576afd4a>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x60592ab1>": "http://www.facebook.com/sharer.php?u=https%3A%2F%2Fblog.malwarebytes.com%2F%3Fp%3D55426&t=New+UAC-0056+activity%3A+There%26%238217%3Bs+a+Go+Elephant+in+the+room"
                    },
                    "text": "",
                    "html": "<a class=\"socicon-facebook\" href=\"http://www.facebook.com/sharer.php?u=https%3A%2F%2Fblog.malwarebytes.com%2F%3Fp%3D55426&amp;t=New+UAC-0056+activity%3A+There%26%238217%3Bs+a+Go+Elephant+in+the+room\" id=\"social-share-facebook\" target=\"_blank\"></a>"
                },
                {
                    "id": "<sentence_0x36d0284>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3742d90>": "https://twitter.com/intent/tweet?text=New+UAC-0056+activity%3A+There%26%238217%3Bs+a+Go+Elephant+in+the+room+https%3A%2F%2Fblog.malwarebytes.com%2F%3Fp%3D55426&via=Malwarebytes"
                    },
                    "text": "",
                    "html": "<a class=\"socicon-twitter\" href=\"https://twitter.com/intent/tweet?text=New+UAC-0056+activity%3A+There%26%238217%3Bs+a+Go+Elephant+in+the+room+https%3A%2F%2Fblog.malwarebytes.com%2F%3Fp%3D55426&amp;via=Malwarebytes\" id=\"social-share-twitter\" target=\"_blank\"></a>"
                },
                {
                    "id": "<sentence_0xf5496d8>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x9702ce60>": "https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fblog.malwarebytes.com%2F%3Fp%3D55426&title=New+UAC-0056+activity%3A+There%26%238217%3Bs+a+Go+Elephant+in+the+room&summary=&source="
                    },
                    "text": "",
                    "html": "<a class=\"socicon-linkedin\" href=\"https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A%2F%2Fblog.malwarebytes.com%2F%3Fp%3D55426&amp;title=New+UAC-0056+activity%3A+There%26%238217%3Bs+a+Go+Elephant+in+the+room&amp;summary=&amp;source=\" id=\"social-share-linkedin\" target=\"_blank\"></a>"
                },
                {
                    "id": "<sentence_0xb9db2a72>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "ABOUT THE AUTHOR",
                    "html": "<p>ABOUT THE AUTHOR</p>"
                },
                {
                    "id": "<sentence_0x6e49e774>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x65b0c5a1>": "https://secure.gravatar.com/avatar/147cd7280d6ece931e4488a3a10809d9?s=96&d=identicon&r=g"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"avatar avatar-96 photo grav-hashed grav-hijack\" height=\"96\" id=\"grav-147cd7280d6ece931e4488a3a10809d9-0\" src=\"https://secure.gravatar.com/avatar/147cd7280d6ece931e4488a3a10809d9?s=96&amp;d=identicon&amp;r=g\" width=\"96\"/>"
                },
                {
                    "id": "<sentence_0x14abf01a>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x22bf261d>": "https://blog.malwarebytes.com/author/threatintelligence/"
                    },
                    "text": "Threat Intelligence Team",
                    "html": "<p class=\"details\">\n<a href=\"https://blog.malwarebytes.com/author/threatintelligence/\" rel=\"author\" title=\"Posts by Threat Intelligence Team\">Threat Intelligence Team</a>\n</p>"
                },
                {
                    "id": "<sentence_0x77bc167c>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p class=\"desc\"></p>"
                }
            ]
        }
    ]
}