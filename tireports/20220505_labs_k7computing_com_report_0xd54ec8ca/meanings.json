{
    "title": "Shells blooming in Spring",
    "url": "https://labs.k7computing.com/index.php/shells-blooming-in-spring",
    "threats": {
        "Threat": [
            {
                "token": {
                    "id": "<THREAT_0xead7da89>",
                    "type": "Threat",
                    "value": "spring4shell"
                },
                "references": {
                    "sentences": [
                        "Update your Spring framework to 5.3.18 and 5.2.20 or later<crlf>If you are in a restricted environment, it is recommend to implement the following workarounds Downgrading to Java 8 Upgrading to Tomcat 10.0.20, 9.0.62 or 8.5.78<crlf>Downgrading to Java 8<crlf>Upgrading to Tomcat 10.0.20, 9.0.62 or 8.5.78",
                        "CVE-2022-22965 is an unauthorised Remote Code Execution (RCE) vulnerability found in the Java Spring Framework. The Spring team has released a patch for both vulnerabilities.",
                        "Yet another vulnerability has been reported in the Java platform, this time in the popular Java Spring framework, just a few months after Log4shell, which was in the Java Logging Framework.",
                        "Note: The mere presence of the Spring framework doesnt make the application vulnerable. So, its not easy to track all the vulnerable products that are affected by this vulnerability. But, here are some that are obvious.",
                        "This vulnerability lets a local class load in the HTTP parameter, thus leveraging the internal class directly and leading to an RCE. In other words, Injecting malicious values into unsafe properties of Java class via HTTP parameters. The vulnerability leverages DataBinder class and is exploitable by populating an object from request parameters (binding HTTP parameters in this case). You can find data binding rules by spring framework here.",
                        "The SpringShell vulnerability allows attackers to target applications running with Java Spring Framework. This vulnerability is triggered when parameters that are passed to the Spring application via HTTP GET/POST request contain a class in them which results in those classes getting loaded allowing arbitrary write on the server.",
                        "CVE-2022-22965 (a.k.a Springshell), found in the Spring Core framework<crlf>CVE-2022-22963, found in Spring Cloud",
                        "To exploit CVE-2022-22965 (Springshell), the victims environment must have",
                        "The impact of CVE-2022-22965 would be huge compared to CVE-2022-22963, as SpringShell vulnerability affects the Java core framework (spring) and every organisation/application that uses this vulnerable module is susceptible to this vulnerability. On the other hand, the CVE-2022-22963s scope is limited, as the cloud function module is used primarily in cloud projects and the majority of the spring cloud platforms have patched this vulnerability.",
                        "Some recent events brought to light the real-world exploitation of the Springshell vulnerability. It was observed to be exploited and Mirai malware was deployed on infected servers as post-exploitation.",
                        "Spring Framework versions 5.3.0 to 5.3.17 or 5.2.0 to 5.2.19, and older versions<crlf>Apache Tomcat as the Servlet container<crlf>JDK 9 or higher<crlf>Packaged as a traditional WAR (Web application archive, in contrast to JAR)<crlf>spring-webmvc or spring-webflux dependency",
                        "Figure 5: Patch diff of spring shell vulnerability",
                        "The following is a patch diff for springshell vulnerability. The exact patch we are looking at is under CachedIntrospectionResults.java which is restricting property paths under Class and properties of types ClassLoader. By not allowing the binding, and only allowing name variants of class properties, the vulnerability is patched."
                    ],
                    "titles": [
                        "Analysis",
                        "Shells blooming in Spring"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CVE_0xc3f56334>",
                            "type": "CVE",
                            "value": "cve-2022-22963"
                        },
                        "relation": "use_cve",
                        "dst": {
                            "id": "<THREAT_0xead7da89>",
                            "type": "Threat",
                            "value": "spring4shell"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xead7da89>",
                            "type": "Threat",
                            "value": "spring4shell"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xead7da89>",
                            "type": "Threat",
                            "value": "spring4shell"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xd61db454>",
                            "type": "Threat",
                            "value": "log4shell_vuln"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0x80089c24>",
                            "type": "CVE",
                            "value": "cve-2022-22965"
                        },
                        "relation": "use_cve",
                        "dst": {
                            "id": "<THREAT_0xead7da89>",
                            "type": "Threat",
                            "value": "spring4shell"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0xd61db454>",
                    "type": "Threat",
                    "value": "log4shell_vuln"
                },
                "references": {
                    "sentences": [
                        "Yet another vulnerability has been reported in the Java platform, this time in the popular Java Spring framework, just a few months after Log4shell, which was in the Java Logging Framework."
                    ],
                    "titles": [
                        "Shells blooming in Spring"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xd61db454>",
                            "type": "Threat",
                            "value": "log4shell_vuln"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xead7da89>",
                            "type": "Threat",
                            "value": "spring4shell"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<THREAT_0xd61db454>",
                            "type": "Threat",
                            "value": "log4shell_vuln"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<THREAT_0x84817d62>",
                    "type": "Threat",
                    "value": "mirai"
                },
                "references": {
                    "sentences": [
                        "Mirai botnet",
                        "Some recent events brought to light the real-world exploitation of the Springshell vulnerability. It was observed to be exploited and Mirai malware was deployed on infected servers as post-exploitation."
                    ],
                    "titles": [
                        "Analysis"
                    ]
                }
            },
            {
                "token": {
                    "id": "<THREAT_0x8bd5383c>",
                    "type": "Threat",
                    "value": "emotet"
                },
                "references": {
                    "sentences": [
                        "Previous Post Diving into the Emotet Maldoc Boutade<crlf>Next Post"
                    ],
                    "titles": [
                        "Like what you're reading? Subscribe to our top stories."
                    ]
                }
            }
        ]
    },
    "ttps": {},
    "meanings": {
        "Category": [
            {
                "token": {
                    "id": "<CATEGORY_0xb68aa214>",
                    "type": "Category",
                    "value": "rat"
                },
                "references": {
                    "sentences": [
                        "Name of the log file we want to create, here we are creating a web shell with the name shell",
                        "A malicious JSP web shell is being created here in our example, and for that, the below-mentioned class properties will be set accordingly as a result of parameter binding.",
                        "To access the created webshell, we request /shell.jsp and use the cmd parameter to pass-along the commands that we want. An example is shown in a subsequent image.",
                        "class.module.classLoader.resources.context.parent.pipeline.first.prefix = shell",
                        "Figure 4: A Shell uploaded to the Web Server; B Shell accessed using browser",
                        "curl http://someip:8030/helloworld/greeting?class.module.classLoader.resources.context.parent.pipeline.first.pattern=shell",
                        "The directory of the web shell is set by this parameter. Usually this will be the location where logs will be stored.",
                        "In the figure above, as a result of the CVE-2022-22695, a specific pattern will be written to the shell.JSP log file. Part of this pattern is shown in Figure 4-A which is a web shell, which can be accessed via browser as can be seen in Figure 4-B."
                    ],
                    "titles": [
                        "Analysis",
                        "Shells blooming in Spring"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0xead7da89>",
                            "type": "Threat",
                            "value": "spring4shell"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0xd61db454>",
                            "type": "Threat",
                            "value": "log4shell_vuln"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0xc3f56334>",
                            "type": "CVE",
                            "value": "cve-2022-22963"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0x80089c24>",
                            "type": "CVE",
                            "value": "cve-2022-22965"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x17b3120>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.prefix"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x7367fb48>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.filedateformat"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<CATEGORY_0xf1a480bb>",
                    "type": "Category",
                    "value": "malware"
                },
                "references": {
                    "sentences": [
                        "This is the actual payload. The pattern property is usually set for a logging pattern. But, we injected our malicious payload into that by keeping the pattern as is.",
                        "A malicious JSP web shell is being created here in our example, and for that, the below-mentioned class properties will be set accordingly as a result of parameter binding.",
                        "This vulnerability lets a local class load in the HTTP parameter, thus leveraging the internal class directly and leading to an RCE. In other words, Injecting malicious values into unsafe properties of Java class via HTTP parameters. The vulnerability leverages DataBinder class and is exploitable by populating an object from request parameters (binding HTTP parameters in this case). You can find data binding rules by spring framework here.",
                        "Some recent events brought to light the real-world exploitation of the Springshell vulnerability. It was observed to be exploited and Mirai malware was deployed on infected servers as post-exploitation."
                    ],
                    "titles": [
                        "Analysis"
                    ]
                }
            },
            {
                "token": {
                    "id": "<CATEGORY_0xd91561a2>",
                    "type": "Category",
                    "value": "botnet"
                },
                "references": {
                    "sentences": [
                        "Mirai botnet"
                    ],
                    "titles": [
                        "Analysis"
                    ]
                }
            }
        ],
        "CVE": [
            {
                "token": {
                    "id": "<CVE_0x80089c24>",
                    "type": "CVE",
                    "value": "cve-2022-22965"
                },
                "references": {
                    "sentences": [
                        "CVE-2022-22965 is an unauthorised Remote Code Execution (RCE) vulnerability found in the Java Spring Framework. The Spring team has released a patch for both vulnerabilities.",
                        "CVE-2022-22965 (a.k.a Springshell), found in the Spring Core framework<crlf>CVE-2022-22963, found in Spring Cloud",
                        "To exploit CVE-2022-22965 (Springshell), the victims environment must have",
                        "The impact of CVE-2022-22965 would be huge compared to CVE-2022-22963, as SpringShell vulnerability affects the Java core framework (spring) and every organisation/application that uses this vulnerable module is susceptible to this vulnerability. On the other hand, the CVE-2022-22963s scope is limited, as the cloud function module is used primarily in cloud projects and the majority of the spring cloud platforms have patched this vulnerability.",
                        "Lets discuss and dive deep into the analysis of CVE-202222965 vulnerability and its impact on organisations."
                    ],
                    "titles": [
                        "Shells blooming in Spring"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CVE_0x80089c24>",
                            "type": "CVE",
                            "value": "cve-2022-22965"
                        },
                        "relation": "use_cve",
                        "dst": {
                            "id": "<THREAT_0xead7da89>",
                            "type": "Threat",
                            "value": "spring4shell"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0x80089c24>",
                            "type": "CVE",
                            "value": "cve-2022-22965"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ],
                "info": {
                    "vulners_score": "PENDING",
                    "cvss_score": 7.5,
                    "exploit": "Unknown",
                    "softs": {
                        "vmware spring framework": [
                            "<5.2.20",
                            "<5.3.18"
                        ],
                        "cisco cx cloud agent": [
                            "<2.1.0"
                        ],
                        "oracle communications cloud native core automated test suite": [
                            "1.9.0",
                            "22.1.0"
                        ],
                        "oracle communications cloud native core console": [
                            "1.9.0",
                            "22.1.0"
                        ],
                        "oracle communications cloud native core network exposure function": [
                            "22.1.0"
                        ],
                        "oracle communications cloud native core network function cloud native environment": [
                            "1.10.0",
                            "22.1.0"
                        ],
                        "oracle communications cloud native core network repository function": [
                            "1.15.0",
                            "22.1.0"
                        ],
                        "oracle communications cloud native core network slice selection function": [
                            "1.8.0",
                            "1.15.0",
                            "22.1.0"
                        ],
                        "oracle communications cloud native core policy": [
                            "1.15.0",
                            "22.1.0"
                        ],
                        "oracle communications cloud native core security edge protection proxy": [
                            "1.7.0",
                            "22.1.0"
                        ],
                        "oracle communications cloud native core unified data repository": [
                            "1.15.0",
                            "22.1.0"
                        ],
                        "oracle communications policy management": [
                            "12.6.0.0.0"
                        ],
                        "oracle financial services analytical applications infrastructure": [
                            "8.1.1",
                            "8.1.2.0"
                        ],
                        "oracle financial services behavior detection platform": [
                            "8.1.1.0",
                            "8.1.1.1",
                            "8.1.2.0"
                        ],
                        "oracle financial services enterprise case management": [
                            "8.1.1.0",
                            "8.1.1.1",
                            "8.1.2.0"
                        ],
                        "oracle mysql enterprise monitor": [
                            "<8.0.29"
                        ],
                        "oracle product lifecycle analytics": [
                            "3.6.1"
                        ],
                        "oracle retail xstore point of service": [
                            "20.0.1",
                            "21.0.0"
                        ],
                        "oracle sd-wan edge": [
                            "9.0",
                            "9.1"
                        ],
                        "siemens operation scheduler": [
                            "<2.0.4"
                        ],
                        "siemens sipass integrated": [
                            "2.80",
                            "2.85"
                        ],
                        "siemens siveillance identity": [
                            "1.5",
                            "1.6"
                        ]
                    },
                    "patch": "official fix",
                    "risk_level": 9.8
                }
            },
            {
                "token": {
                    "id": "<CVE_0xc3f56334>",
                    "type": "CVE",
                    "value": "cve-2022-22963"
                },
                "references": {
                    "sentences": [
                        "And to exploit CVE-2022-22963, the victims environment must have",
                        "The impact of CVE-2022-22965 would be huge compared to CVE-2022-22963, as SpringShell vulnerability affects the Java core framework (spring) and every organisation/application that uses this vulnerable module is susceptible to this vulnerability. On the other hand, the CVE-2022-22963s scope is limited, as the cloud function module is used primarily in cloud projects and the majority of the spring cloud platforms have patched this vulnerability.",
                        "CVE-2022-22965 (a.k.a Springshell), found in the Spring Core framework<crlf>CVE-2022-22963, found in Spring Cloud"
                    ],
                    "titles": [
                        "Shells blooming in Spring"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<CVE_0xc3f56334>",
                            "type": "CVE",
                            "value": "cve-2022-22963"
                        },
                        "relation": "use_cve",
                        "dst": {
                            "id": "<THREAT_0xead7da89>",
                            "type": "Threat",
                            "value": "spring4shell"
                        }
                    },
                    {
                        "src": {
                            "id": "<CVE_0xc3f56334>",
                            "type": "CVE",
                            "value": "cve-2022-22963"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ],
                "info": {
                    "vulners_score": "PENDING",
                    "cvss_score": 7.5,
                    "exploit": "Unknown",
                    "softs": {
                        "vmware spring cloud function": [
                            "le3.1.6",
                            "le3.2.2"
                        ]
                    },
                    "patch": "official fix",
                    "risk_level": 9.8
                }
            },
            {
                "token": {
                    "id": "<CVE_0x9b1b4d23>",
                    "type": "CVE",
                    "value": "cve-2022-22695"
                },
                "references": {
                    "sentences": [
                        "In the figure above, as a result of the CVE-2022-22695, a specific pattern will be written to the shell.JSP log file. Part of this pattern is shown in Figure 4-A which is a web shell, which can be accessed via browser as can be seen in Figure 4-B."
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x1f834272>",
                            "type": "File",
                            "value": "shell.jsp"
                        },
                        "relation": "use_cve",
                        "dst": {
                            "id": "<CVE_0x9b1b4d23>",
                            "type": "CVE",
                            "value": "cve-2022-22695"
                        }
                    }
                ]
            }
        ]
    },
    "iocs": {
        "File": [
            {
                "token": {
                    "id": "<FILE_0x5266f973>",
                    "type": "File",
                    "value": "class.module.classloader"
                },
                "references": {
                    "sentences": [
                        "This is a part request of the exploitation. As you can see in the request, the class object is directly being accessed via HTTP requests. The classLoader is being accessed via class.module.classloader parameter."
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x5266f973>",
                            "type": "File",
                            "value": "class.module.classloader"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x3fb55bcc>",
                            "type": "UnknownWord",
                            "value": "classloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x5266f973>",
                            "type": "File",
                            "value": "class.module.classloader"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xedd6f487>",
                            "type": "UnknownWord",
                            "value": "accessed"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x9830a29e>",
                    "type": "File",
                    "value": "class.module.classloader.resources.context.parent.pipeline.first.pattern"
                },
                "references": {
                    "sentences": [
                        "class.module.classLoader.resources.context.parent.pipeline.first.pattern = <PATTERN_REDACTED>"
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x9830a29e>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.pattern"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xaa43eac1>",
                            "type": "UnknownWord",
                            "value": "<pattern_redacted>"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xe3da3f7b>",
                    "type": "File",
                    "value": "class.module.classloader.resources.context.parent.pipeline.first.suffix"
                },
                "references": {
                    "sentences": [
                        "class.module.classLoader.resources.context.parent.pipeline.first.suffix = .jsp"
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe3da3f7b>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.suffix"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x9876a454>",
                            "type": "UnknownWord",
                            "value": "jsp"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x17b3120>",
                    "type": "File",
                    "value": "class.module.classloader.resources.context.parent.pipeline.first.prefix"
                },
                "references": {
                    "sentences": [
                        "class.module.classLoader.resources.context.parent.pipeline.first.prefix = shell"
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x17b3120>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.prefix"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x7367fb48>",
                    "type": "File",
                    "value": "class.module.classloader.resources.context.parent.pipeline.first.filedateformat"
                },
                "references": {
                    "sentences": [
                        "class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat ="
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x7367fb48>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.filedateformat"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xb68aa214>",
                            "type": "Category",
                            "value": "rat"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x1f834272>",
                    "type": "File",
                    "value": "shell.jsp"
                },
                "references": {
                    "sentences": [
                        "The log file is created with the name shell.jsp and the location webapps/root as we mentioned in the parameter. We smuggled in some Java code via pattern property to execute it on the system within the typical log format. If we dissect the payload, we can see the input stream to take in the input command and pass the command to the exec function as shown below.",
                        "In the figure above, as a result of the CVE-2022-22695, a specific pattern will be written to the shell.JSP log file. Part of this pattern is shown in Figure 4-A which is a web shell, which can be accessed via browser as can be seen in Figure 4-B."
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x1f834272>",
                            "type": "File",
                            "value": "shell.jsp"
                        },
                        "relation": "use_cve",
                        "dst": {
                            "id": "<CVE_0x9b1b4d23>",
                            "type": "CVE",
                            "value": "cve-2022-22695"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0x1f834272>",
                            "type": "File",
                            "value": "shell.jsp"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xf7ed1f65>",
                            "type": "UnknownWord",
                            "value": "webapps"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0x2e40159c>",
                    "type": "File",
                    "value": "runtime.getruntime"
                },
                "references": {
                    "sentences": [
                        "Runtime.getRuntime().exec(request.getParameter(cmd))"
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x2e40159c>",
                            "type": "File",
                            "value": "runtime.getruntime"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x95a9465d>",
                            "type": "UnknownWord",
                            "value": "exec"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<FILE_0xb8716dac>",
                    "type": "File",
                    "value": "request.getparameter"
                },
                "references": {
                    "sentences": [
                        "Runtime.getRuntime().exec(request.getParameter(cmd))"
                    ],
                    "titles": [
                        "Analysis"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xb8716dac>",
                            "type": "File",
                            "value": "request.getparameter"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x95a9465d>",
                            "type": "UnknownWord",
                            "value": "exec"
                        }
                    }
                ]
            }
        ],
        "Hash": [
            {
                "token": {
                    "id": "<SHA256_0x4a02259b>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "5fb0c8f3daef02b9d2ab285d0bf348cf1cb7c36708b0034ad0dee4998a16b9e9"
                },
                "references": {
                    "sentences": [
                        "5fb0c8f3daef02b9d2ab285d0bf348cf1cb7c36708b0034ad0dee4998a16b9e9 Second stage post exploitation file"
                    ],
                    "titles": [
                        "Analysis"
                    ]
                }
            }
        ]
    },
    "unknownwords": {
        "UnknownWord": [
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x88566ea5>",
                    "type": "UnknownWord",
                    "value": "blooming"
                },
                "references": {
                    "sentences": [],
                    "titles": [
                        "Shells blooming in Spring"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9de91505>",
                    "type": "UnknownWord",
                    "value": "spring"
                },
                "references": {
                    "sentences": [
                        "CVE-2022-22965 is an unauthorised Remote Code Execution (RCE) vulnerability found in the Java Spring Framework. The Spring team has released a patch for both vulnerabilities.",
                        "the patterns for disallowedFields in a DataBinder were case sensitive which means a field was not effectively protected Spring team",
                        "CVE-2022-22965 (a.k.a Springshell), found in the Spring Core framework<crlf>CVE-2022-22963, found in Spring Cloud",
                        "The SpringShell vulnerability allows attackers to target applications running with Java Spring Framework. This vulnerability is triggered when parameters that are passed to the Spring application via HTTP GET/POST request contain a class in them which results in those classes getting loaded allowing arbitrary write on the server.",
                        "The impact of CVE-2022-22965 would be huge compared to CVE-2022-22963, as SpringShell vulnerability affects the Java core framework (spring) and every organisation/application that uses this vulnerable module is susceptible to this vulnerability. On the other hand, the CVE-2022-22963s scope is limited, as the cloud function module is used primarily in cloud projects and the majority of the spring cloud platforms have patched this vulnerability.",
                        "Spring cloud function <=3.1.6 or<crlf>Spring cloud function <=3.2.2"
                    ],
                    "titles": [
                        "Shells blooming in Spring"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf78c23d1>",
                    "type": "UnknownWord",
                    "value": "mohith"
                },
                "references": {
                    "sentences": [
                        "By Mohith Kalyan and Anurag ShandilyaMay 5, 2022"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1009bdbb>",
                    "type": "UnknownWord",
                    "value": "kalyan"
                },
                "references": {
                    "sentences": [
                        "By Mohith Kalyan and Anurag ShandilyaMay 5, 2022"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9c197864>",
                    "type": "UnknownWord",
                    "value": "anurag"
                },
                "references": {
                    "sentences": [
                        "By Mohith Kalyan and Anurag ShandilyaMay 5, 2022"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x899c8f7e>",
                    "type": "UnknownWord",
                    "value": "shandilyamay"
                },
                "references": {
                    "sentences": [
                        "By Mohith Kalyan and Anurag ShandilyaMay 5, 2022"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x80cf7fd6>",
                    "type": "UnknownWord",
                    "value": "unauthorised"
                },
                "references": {
                    "sentences": [
                        "CVE-2022-22965 is an unauthorised Remote Code Execution (RCE) vulnerability found in the Java Spring Framework. The Spring team has released a patch for both vulnerabilities."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x34855ce1>",
                    "type": "UnknownWord",
                    "value": "mere"
                },
                "references": {
                    "sentences": [
                        "Note: The mere presence of the Spring framework doesnt make the application vulnerable. So, its not easy to track all the vulnerable products that are affected by this vulnerability. But, here are some that are obvious."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf0414c2a>",
                    "type": "UnknownWord",
                    "value": "<10"
                },
                "references": {
                    "sentences": [
                        "Apache tomcat <10.0.20<crlf>Apache tomcat <9.0.62<crlf>Apache tomcat <8.5.78<crlf>VMware"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x550c9c84>",
                    "type": "UnknownWord",
                    "value": "<9"
                },
                "references": {
                    "sentences": [
                        "Apache tomcat <10.0.20<crlf>Apache tomcat <9.0.62<crlf>Apache tomcat <8.5.78<crlf>VMware"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf253d867>",
                    "type": "UnknownWord",
                    "value": "<8"
                },
                "references": {
                    "sentences": [
                        "Apache tomcat <10.0.20<crlf>Apache tomcat <9.0.62<crlf>Apache tomcat <8.5.78<crlf>VMware"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xc9d1c1d9>",
                    "type": "UnknownWord",
                    "value": "jdk"
                },
                "references": {
                    "sentences": [
                        "Spring Framework versions 5.3.0 to 5.3.17 or 5.2.0 to 5.2.19, and older versions<crlf>Apache Tomcat as the Servlet container<crlf>JDK 9 or higher<crlf>Packaged as a traditional WAR (Web application archive, in contrast to JAR)<crlf>spring-webmvc or spring-webflux dependency"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xcd1c8d5a>",
                    "type": "UnknownWord",
                    "value": "spring-webmvc"
                },
                "references": {
                    "sentences": [
                        "Spring Framework versions 5.3.0 to 5.3.17 or 5.2.0 to 5.2.19, and older versions<crlf>Apache Tomcat as the Servlet container<crlf>JDK 9 or higher<crlf>Packaged as a traditional WAR (Web application archive, in contrast to JAR)<crlf>spring-webmvc or spring-webflux dependency"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbe148aca>",
                    "type": "UnknownWord",
                    "value": "spring-webflux"
                },
                "references": {
                    "sentences": [
                        "Spring Framework versions 5.3.0 to 5.3.17 or 5.2.0 to 5.2.19, and older versions<crlf>Apache Tomcat as the Servlet container<crlf>JDK 9 or higher<crlf>Packaged as a traditional WAR (Web application archive, in contrast to JAR)<crlf>spring-webmvc or spring-webflux dependency"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9f01505e>",
                    "type": "UnknownWord",
                    "value": "dependency"
                },
                "references": {
                    "sentences": [
                        "Spring Framework versions 5.3.0 to 5.3.17 or 5.2.0 to 5.2.19, and older versions<crlf>Apache Tomcat as the Servlet container<crlf>JDK 9 or higher<crlf>Packaged as a traditional WAR (Web application archive, in contrast to JAR)<crlf>spring-webmvc or spring-webflux dependency"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2f9fc753>",
                    "type": "UnknownWord",
                    "value": "<"
                },
                "references": {
                    "sentences": [
                        "Spring cloud function <=3.1.6 or<crlf>Spring cloud function <=3.2.2"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xad64c800>",
                    "type": "UnknownWord",
                    "value": "susceptible"
                },
                "references": {
                    "sentences": [
                        "The impact of CVE-2022-22965 would be huge compared to CVE-2022-22963, as SpringShell vulnerability affects the Java core framework (spring) and every organisation/application that uses this vulnerable module is susceptible to this vulnerability. On the other hand, the CVE-2022-22963s scope is limited, as the cloud function module is used primarily in cloud projects and the majority of the spring cloud platforms have patched this vulnerability."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x61087f74>",
                    "type": "UnknownWord",
                    "value": "unsafe"
                },
                "references": {
                    "sentences": [
                        "This vulnerability lets a local class load in the HTTP parameter, thus leveraging the internal class directly and leading to an RCE. In other words, Injecting malicious values into unsafe properties of Java class via HTTP parameters. The vulnerability leverages DataBinder class and is exploitable by populating an object from request parameters (binding HTTP parameters in this case). You can find data binding rules by spring framework here."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x99bed101>",
                    "type": "UnknownWord",
                    "value": "databinder"
                },
                "references": {
                    "sentences": [
                        "This vulnerability lets a local class load in the HTTP parameter, thus leveraging the internal class directly and leading to an RCE. In other words, Injecting malicious values into unsafe properties of Java class via HTTP parameters. The vulnerability leverages DataBinder class and is exploitable by populating an object from request parameters (binding HTTP parameters in this case). You can find data binding rules by spring framework here.",
                        "the patterns for disallowedFields in a DataBinder were case sensitive which means a field was not effectively protected Spring team"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfe395d0d>",
                    "type": "UnknownWord",
                    "value": "populating"
                },
                "references": {
                    "sentences": [
                        "This vulnerability lets a local class load in the HTTP parameter, thus leveraging the internal class directly and leading to an RCE. In other words, Injecting malicious values into unsafe properties of Java class via HTTP parameters. The vulnerability leverages DataBinder class and is exploitable by populating an object from request parameters (binding HTTP parameters in this case). You can find data binding rules by spring framework here."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x243e225a>",
                    "type": "UnknownWord",
                    "value": "binding"
                },
                "references": {
                    "sentences": [
                        "A malicious JSP web shell is being created here in our example, and for that, the below-mentioned class properties will be set accordingly as a result of parameter binding.",
                        "This vulnerability lets a local class load in the HTTP parameter, thus leveraging the internal class directly and leading to an RCE. In other words, Injecting malicious values into unsafe properties of Java class via HTTP parameters. The vulnerability leverages DataBinder class and is exploitable by populating an object from request parameters (binding HTTP parameters in this case). You can find data binding rules by spring framework here.",
                        "The following is a patch diff for springshell vulnerability. The exact patch we are looking at is under CachedIntrospectionResults.java which is restricting property paths under Class and properties of types ClassLoader. By not allowing the binding, and only allowing name variants of class properties, the vulnerability is patched."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x1cd81592>",
                    "type": "UnknownWord",
                    "value": "someip"
                },
                "references": {
                    "sentences": [
                        "curl http://someip:8030/helloworld/greeting?class.module.classLoader.resources.context.parent.pipeline.first.pattern=shell"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9b1e42ee>",
                    "type": "UnknownWord",
                    "value": "helloworld"
                },
                "references": {
                    "sentences": [
                        "curl http://someip:8030/helloworld/greeting?class.module.classLoader.resources.context.parent.pipeline.first.pattern=shell"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xd45039c8>",
                    "type": "UnknownWord",
                    "value": "greeting"
                },
                "references": {
                    "sentences": [
                        "curl http://someip:8030/helloworld/greeting?class.module.classLoader.resources.context.parent.pipeline.first.pattern=shell"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3fb55bcc>",
                    "type": "UnknownWord",
                    "value": "classloader"
                },
                "references": {
                    "sentences": [
                        "The following is a patch diff for springshell vulnerability. The exact patch we are looking at is under CachedIntrospectionResults.java which is restricting property paths under Class and properties of types ClassLoader. By not allowing the binding, and only allowing name variants of class properties, the vulnerability is patched.",
                        "This is a part request of the exploitation. As you can see in the request, the class object is directly being accessed via HTTP requests. The classLoader is being accessed via class.module.classloader parameter.",
                        "curl http://someip:8030/helloworld/greeting?class.module.classLoader.resources.context.parent.pipeline.first.pattern=shell"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x5266f973>",
                            "type": "File",
                            "value": "class.module.classloader"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x3fb55bcc>",
                            "type": "UnknownWord",
                            "value": "classloader"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xedd6f487>",
                    "type": "UnknownWord",
                    "value": "accessed"
                },
                "references": {
                    "sentences": [
                        "This is a part request of the exploitation. As you can see in the request, the class object is directly being accessed via HTTP requests. The classLoader is being accessed via class.module.classloader parameter.",
                        "Figure 4: A Shell uploaded to the Web Server; B Shell accessed using browser",
                        "In the figure above, as a result of the CVE-2022-22695, a specific pattern will be written to the shell.JSP log file. Part of this pattern is shown in Figure 4-A which is a web shell, which can be accessed via browser as can be seen in Figure 4-B."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x5266f973>",
                            "type": "File",
                            "value": "class.module.classloader"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xedd6f487>",
                            "type": "UnknownWord",
                            "value": "accessed"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb3615cc4>",
                    "type": "UnknownWord",
                    "value": "unfiltered"
                },
                "references": {
                    "sentences": [
                        "To achieve Remote Code Execution, we pass as parameters, a location and a template to the unfiltered Java class via a few properties, and that causes the object to create a new file for storing logs in our specified format."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3b9a0e2a>",
                    "type": "UnknownWord",
                    "value": "hood"
                },
                "references": {
                    "sentences": [
                        "Having seen the above example, heres what happens under the hood to achieve RCE :"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9876a454>",
                    "type": "UnknownWord",
                    "value": "jsp"
                },
                "references": {
                    "sentences": [
                        "We have set the suffix parameter to .jsp, this is usually .txt or .log as log files are in text format in general.",
                        "A malicious JSP web shell is being created here in our example, and for that, the below-mentioned class properties will be set accordingly as a result of parameter binding.",
                        "To access the created webshell, we request /shell.jsp and use the cmd parameter to pass-along the commands that we want. An example is shown in a subsequent image.",
                        "class.module.classLoader.resources.context.parent.pipeline.first.suffix = .jsp"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0xe3da3f7b>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.suffix"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x9876a454>",
                            "type": "UnknownWord",
                            "value": "jsp"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf60d6893>",
                    "type": "UnknownWord",
                    "value": "below-mentioned"
                },
                "references": {
                    "sentences": [
                        "A malicious JSP web shell is being created here in our example, and for that, the below-mentioned class properties will be set accordingly as a result of parameter binding."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7e560d97>",
                    "type": "UnknownWord",
                    "value": "accordingly"
                },
                "references": {
                    "sentences": [
                        "A malicious JSP web shell is being created here in our example, and for that, the below-mentioned class properties will be set accordingly as a result of parameter binding."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xaa43eac1>",
                    "type": "UnknownWord",
                    "value": "<pattern_redacted>"
                },
                "references": {
                    "sentences": [
                        "class.module.classLoader.resources.context.parent.pipeline.first.pattern = <PATTERN_REDACTED>"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x9830a29e>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.pattern"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xaa43eac1>",
                            "type": "UnknownWord",
                            "value": "<pattern_redacted>"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7f78e84f>",
                    "type": "UnknownWord",
                    "value": "suffix"
                },
                "references": {
                    "sentences": [
                        "AccessLogValve is an extended Class that is used for generating Web Server access logs. As per this information available online, it refers to the currentLogFile, Prefix, Suffix and Pattern fields to write logs.",
                        "We have set the suffix parameter to .jsp, this is usually .txt or .log as log files are in text format in general."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xf7ed1f65>",
                    "type": "UnknownWord",
                    "value": "webapps"
                },
                "references": {
                    "sentences": [
                        "class.module.classLoader.resources.context.parent.pipeline.first.directory = webapps/ROOT",
                        "The log file is created with the name shell.jsp and the location webapps/root as we mentioned in the parameter. We smuggled in some Java code via pattern property to execute it on the system within the typical log format. If we dissect the payload, we can see the input stream to take in the input command and pass the command to the exec function as shown below."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x1f834272>",
                            "type": "File",
                            "value": "shell.jsp"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xf7ed1f65>",
                            "type": "UnknownWord",
                            "value": "webapps"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3e4c7202>",
                    "type": "UnknownWord",
                    "value": "wire"
                },
                "references": {
                    "sentences": [
                        "You can find the exploitation and setting of these exposed class properties on the wire as seen in Figure 1."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xab0c6b08>",
                    "type": "UnknownWord",
                    "value": "smuggled"
                },
                "references": {
                    "sentences": [
                        "The log file is created with the name shell.jsp and the location webapps/root as we mentioned in the parameter. We smuggled in some Java code via pattern property to execute it on the system within the typical log format. If we dissect the payload, we can see the input stream to take in the input command and pass the command to the exec function as shown below."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x95a9465d>",
                    "type": "UnknownWord",
                    "value": "exec"
                },
                "references": {
                    "sentences": [
                        "Runtime.getRuntime().exec(request.getParameter(cmd))",
                        "The log file is created with the name shell.jsp and the location webapps/root as we mentioned in the parameter. We smuggled in some Java code via pattern property to execute it on the system within the typical log format. If we dissect the payload, we can see the input stream to take in the input command and pass the command to the exec function as shown below."
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x2e40159c>",
                            "type": "File",
                            "value": "runtime.getruntime"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x95a9465d>",
                            "type": "UnknownWord",
                            "value": "exec"
                        }
                    },
                    {
                        "src": {
                            "id": "<FILE_0xb8716dac>",
                            "type": "File",
                            "value": "request.getparameter"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0x95a9465d>",
                            "type": "UnknownWord",
                            "value": "exec"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x18b7c3cc>",
                    "type": "UnknownWord",
                    "value": "throws"
                },
                "references": {
                    "sentences": [
                        "and throws the output on standard output."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3b2a6785>",
                    "type": "UnknownWord",
                    "value": "pass-along"
                },
                "references": {
                    "sentences": [
                        "To access the created webshell, we request /shell.jsp and use the cmd parameter to pass-along the commands that we want. An example is shown in a subsequent image."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xdb3b8ed8>",
                    "type": "UnknownWord",
                    "value": "analyse"
                },
                "references": {
                    "sentences": [
                        "We deployed the PoC available here to analyse and debug the vulnerability. We deployed the WAR in Apache Tomcat 9.0.58 in Kali Linux and used IntelliJ to debug Tomcat."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x33f25d5>",
                    "type": "UnknownWord",
                    "value": "kali"
                },
                "references": {
                    "sentences": [
                        "We deployed the PoC available here to analyse and debug the vulnerability. We deployed the WAR in Apache Tomcat 9.0.58 in Kali Linux and used IntelliJ to debug Tomcat."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe9287671>",
                    "type": "UnknownWord",
                    "value": "accesslogvalve"
                },
                "references": {
                    "sentences": [
                        "AccessLogValve is an extended Class that is used for generating Web Server access logs. As per this information available online, it refers to the currentLogFile, Prefix, Suffix and Pattern fields to write logs."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9d9f78a8>",
                    "type": "UnknownWord",
                    "value": "currentlogfile"
                },
                "references": {
                    "sentences": [
                        "AccessLogValve is an extended Class that is used for generating Web Server access logs. As per this information available online, it refers to the currentLogFile, Prefix, Suffix and Pattern fields to write logs."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xb8c71a97>",
                    "type": "UnknownWord",
                    "value": "4-a"
                },
                "references": {
                    "sentences": [
                        "In the figure above, as a result of the CVE-2022-22695, a specific pattern will be written to the shell.JSP log file. Part of this pattern is shown in Figure 4-A which is a web shell, which can be accessed via browser as can be seen in Figure 4-B."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe79c7dac>",
                    "type": "UnknownWord",
                    "value": "4-b"
                },
                "references": {
                    "sentences": [
                        "In the figure above, as a result of the CVE-2022-22695, a specific pattern will be written to the shell.JSP log file. Part of this pattern is shown in Figure 4-A which is a web shell, which can be accessed via browser as can be seen in Figure 4-B."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3a5006dd>",
                    "type": "UnknownWord",
                    "value": "diff"
                },
                "references": {
                    "sentences": [
                        "Figure 5: Patch diff of spring shell vulnerability",
                        "The following is a patch diff for springshell vulnerability. The exact patch we are looking at is under CachedIntrospectionResults.java which is restricting property paths under Class and properties of types ClassLoader. By not allowing the binding, and only allowing name variants of class properties, the vulnerability is patched.",
                        "The root cause(Diff)"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5da64440>",
                    "type": "UnknownWord",
                    "value": "restricting"
                },
                "references": {
                    "sentences": [
                        "The following is a patch diff for springshell vulnerability. The exact patch we are looking at is under CachedIntrospectionResults.java which is restricting property paths under Class and properties of types ClassLoader. By not allowing the binding, and only allowing name variants of class properties, the vulnerability is patched."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x87937905>",
                    "type": "UnknownWord",
                    "value": "realized"
                },
                "references": {
                    "sentences": [
                        "we realized that the disallowedFields configuration setting on WebDataBinder is not intuitive and is not clearly documented."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9ac61d54>",
                    "type": "UnknownWord",
                    "value": "disallowedfields"
                },
                "references": {
                    "sentences": [
                        "we realized that the disallowedFields configuration setting on WebDataBinder is not intuitive and is not clearly documented.",
                        "the patterns for disallowedFields in a DataBinder were case sensitive which means a field was not effectively protected Spring team"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xaa379ff0>",
                    "type": "UnknownWord",
                    "value": "webdatabinder"
                },
                "references": {
                    "sentences": [
                        "we realized that the disallowedFields configuration setting on WebDataBinder is not intuitive and is not clearly documented."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xbfcaf5c0>",
                    "type": "UnknownWord",
                    "value": "intuitive"
                },
                "references": {
                    "sentences": [
                        "we realized that the disallowedFields configuration setting on WebDataBinder is not intuitive and is not clearly documented."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x6ac54061>",
                    "type": "UnknownWord",
                    "value": "boutade"
                },
                "references": {
                    "sentences": [
                        "Previous Post Diving into the Emotet Maldoc Boutade<crlf>Next Post"
                    ],
                    "titles": []
                }
            }
        ]
    },
    "other_links": [],
    "info": {
        "potential_threats": {
            "<UNKNOWNWORD_0x9de91505>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x9de91505>",
                    "type": "UnknownWord",
                    "value": "spring"
                },
                "references": {
                    "sentences": [
                        "CVE-2022-22965 is an unauthorised Remote Code Execution (RCE) vulnerability found in the Java Spring Framework. The Spring team has released a patch for both vulnerabilities.",
                        "the patterns for disallowedFields in a DataBinder were case sensitive which means a field was not effectively protected Spring team",
                        "CVE-2022-22965 (a.k.a Springshell), found in the Spring Core framework<crlf>CVE-2022-22963, found in Spring Cloud",
                        "The SpringShell vulnerability allows attackers to target applications running with Java Spring Framework. This vulnerability is triggered when parameters that are passed to the Spring application via HTTP GET/POST request contain a class in them which results in those classes getting loaded allowing arbitrary write on the server.",
                        "The impact of CVE-2022-22965 would be huge compared to CVE-2022-22963, as SpringShell vulnerability affects the Java core framework (spring) and every organisation/application that uses this vulnerable module is susceptible to this vulnerability. On the other hand, the CVE-2022-22963s scope is limited, as the cloud function module is used primarily in cloud projects and the majority of the spring cloud platforms have patched this vulnerability.",
                        "Spring cloud function <=3.1.6 or<crlf>Spring cloud function <=3.2.2"
                    ],
                    "titles": [
                        "Shells blooming in Spring"
                    ]
                }
            },
            "<UNKNOWNWORD_0xf78c23d1>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xf78c23d1>",
                    "type": "UnknownWord",
                    "value": "mohith"
                },
                "references": {
                    "sentences": [
                        "By Mohith Kalyan and Anurag ShandilyaMay 5, 2022"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x1009bdbb>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x1009bdbb>",
                    "type": "UnknownWord",
                    "value": "kalyan"
                },
                "references": {
                    "sentences": [
                        "By Mohith Kalyan and Anurag ShandilyaMay 5, 2022"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x9c197864>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x9c197864>",
                    "type": "UnknownWord",
                    "value": "anurag"
                },
                "references": {
                    "sentences": [
                        "By Mohith Kalyan and Anurag ShandilyaMay 5, 2022"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x899c8f7e>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x899c8f7e>",
                    "type": "UnknownWord",
                    "value": "shandilyamay"
                },
                "references": {
                    "sentences": [
                        "By Mohith Kalyan and Anurag ShandilyaMay 5, 2022"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x99bed101>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x99bed101>",
                    "type": "UnknownWord",
                    "value": "databinder"
                },
                "references": {
                    "sentences": [
                        "This vulnerability lets a local class load in the HTTP parameter, thus leveraging the internal class directly and leading to an RCE. In other words, Injecting malicious values into unsafe properties of Java class via HTTP parameters. The vulnerability leverages DataBinder class and is exploitable by populating an object from request parameters (binding HTTP parameters in this case). You can find data binding rules by spring framework here.",
                        "the patterns for disallowedFields in a DataBinder were case sensitive which means a field was not effectively protected Spring team"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xaa43eac1>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xaa43eac1>",
                    "type": "UnknownWord",
                    "value": "<pattern_redacted>"
                },
                "references": {
                    "sentences": [
                        "class.module.classLoader.resources.context.parent.pipeline.first.pattern = <PATTERN_REDACTED>"
                    ],
                    "titles": []
                },
                "links": [
                    {
                        "src": {
                            "id": "<FILE_0x9830a29e>",
                            "type": "File",
                            "value": "class.module.classloader.resources.context.parent.pipeline.first.pattern"
                        },
                        "relation": "related",
                        "dst": {
                            "id": "<UNKNOWNWORD_0xaa43eac1>",
                            "type": "UnknownWord",
                            "value": "<pattern_redacted>"
                        }
                    }
                ]
            },
            "<UNKNOWNWORD_0x9d9f78a8>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x9d9f78a8>",
                    "type": "UnknownWord",
                    "value": "currentlogfile"
                },
                "references": {
                    "sentences": [
                        "AccessLogValve is an extended Class that is used for generating Web Server access logs. As per this information available online, it refers to the currentLogFile, Prefix, Suffix and Pattern fields to write logs."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x9ac61d54>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x9ac61d54>",
                    "type": "UnknownWord",
                    "value": "disallowedfields"
                },
                "references": {
                    "sentences": [
                        "we realized that the disallowedFields configuration setting on WebDataBinder is not intuitive and is not clearly documented.",
                        "the patterns for disallowedFields in a DataBinder were case sensitive which means a field was not effectively protected Spring team"
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0xaa379ff0>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xaa379ff0>",
                    "type": "UnknownWord",
                    "value": "webdatabinder"
                },
                "references": {
                    "sentences": [
                        "we realized that the disallowedFields configuration setting on WebDataBinder is not intuitive and is not clearly documented."
                    ],
                    "titles": []
                }
            },
            "<UNKNOWNWORD_0x6ac54061>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x6ac54061>",
                    "type": "UnknownWord",
                    "value": "boutade"
                },
                "references": {
                    "sentences": [
                        "Previous Post Diving into the Emotet Maldoc Boutade<crlf>Next Post"
                    ],
                    "titles": []
                }
            }
        },
        "sigma": false,
        "yara": false
    },
    "keywords": {
        "classified": [],
        "dubbed": [],
        "associated": [],
        "targets": [],
        "attributed": []
    },
    "resources": {
        "links": {
            "github": [
                "https://github.com/lunasec-io/Spring4Shell-POC",
                "https://github.com/reznok/Spring4Shell-POC",
                "https://github.com/dinosn/CVE-2022-22963"
            ],
            "pastebin": [],
            "text_files": [],
            "other": [
                "https://labs.k7computing.com/index.php/category/remote-code-execution-attacks/",
                "https://labs.k7computing.com/index.php/category/vulnerability/",
                "https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968",
                "https://tomcat.apache.org/tomcat-7.0-doc/api/org/apache/catalina/valves/AccessLogValve.html",
                "https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968",
                "https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement",
                "https://tomcat.apache.org/tomcat-7.0-doc/api/org/apache/catalina/valves/AccessLogValve.html",
                "https://www.virustotal.com/gui/file/5fb0c8f3daef02b9d2ab285d0bf348cf1cb7c36708b0034ad0dee4998a16b9e9/detection",
                "https://spring.io/blog/2022/04/13/spring-framework-data-binding-rules-vulnerability-cve-2022-22968",
                "https://labs.k7computing.com/index.php/diving-into-the-emotet-maldoc-boutade/"
            ]
        },
        "images": [
            "https://labs.k7computing.com/wp-content/uploads/2022/05/Shells-Spring-2.png",
            "https://labs.k7computing.com/wp-content/uploads/2022/05/Figure-1.png",
            "https://labs.k7computing.com/wp-content/uploads/2022/05/Figure-2.png",
            "https://labs.k7computing.com/wp-content/uploads/2022/05/Figure-3.png",
            "https://labs.k7computing.com/wp-content/uploads/2022/05/Figure-4.png",
            "https://labs.k7computing.com/wp-content/uploads/2022/05/FIG5-1.png"
        ]
    }
}