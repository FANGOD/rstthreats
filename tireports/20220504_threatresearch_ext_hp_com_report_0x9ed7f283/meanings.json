{
    "title": "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware",
    "url": "https://threatresearch.ext.hp.com/tips-for-automating-ioc-extraction-from-gootloader-a-changing-javascript-malware",
    "threats": {
        "Threat": [
            {
                "token": {
                    "id": "<THREAT_0x50f5610d>",
                    "type": "Threat",
                    "value": "gootloader"
                },
                "references": {
                    "sentences": [
                        "To keep the script still compatible for older GootLoader versions, we add an If statement. If we do not get regex matches for the simple statement, we use the code which evaluates compound statements. Finally, we remove the print statements which we inserted for debugging and run the repaired script to get the following output:",
                        "Based on the output we try to figure out the position where the script fails to decode the new GootLoader version. In this case, we get an empty content output and therefore the script failed earlier in the process. In Figure 2, above the regex evaluation, we you can see an additional print statement to debug the script:",
                        "This is the typical process we go through to adapt the decoding script to new GootLoader versions. As the threat actors behind GootLoader have been making version changes more frequently lately, we have had to make changes to our script more frequently as well. We hope that this explanation is helpful for analyzing GootLoader and making adjustments of our decoder script.",
                        "You can download the latest GootLoader decoder script here:",
                        "To understand why this specific regex does not work anymore, we compare our debug outputs to the outputs of an older GootLoader version where the decoder worked. Using the output of the working one, we can see what it should look like (Figure 5).",
                        "gootloader",
                        "The regex result for this evaluation should lead to a list of variables concatenated with plus signs. This list is used by GootLoader to rearrange the code into the right order and then later on execute it using the eval function. To decode the script and extract the domains and URLs we need to do the same and bring the code into the correct order. With this version adjustment, GootLoader no longer uses just one statement to rearrange the code, but several interdependent ones. To fix the script we need to make two edits. First, we need to adjust the regex pattern so that it matches the new statements. Second, we need to add logic to merge the code. With the help of regex101.com we can adjust and fix the regex pattern.",
                        "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware",
                        "Figure 8 Modified code sequence to decode the new GootLoader version.",
                        "New GootLoader version:<crlf>0a7c07fc84fd9f5b91bde6822b865f9647ca4ece67e8a4a646ce8d405187dc8b<crlf>hxxps://lakeside-fishandchips[.]com/test.php?sgjngbizjfwgs=<crlf>hxxps://learn.openschool[.]ua/test.php?sgjngbizjfwgs=<crlf>hxxps://kristinee[.]com/test.php?sgjngbizjfwgs=",
                        "Figure 5 Printed script content of an older GootLoader version.",
                        "Older GootLoader version:<crlf>765fbca3b6b1a922b442bc7304454e752e8bf231e2abe5060ace55db72c78d68<crlf>hxxps://kristinee[.]com/test.php?zemyrwgzcsnjur=<crlf>hxxps://kepw[.]org/test.php?zemyrwgzcsnjur=<crlf>hxxps://korsakovmusic[.]com/test.php?zemyrwgzcsnjur=",
                        "The threat actors behind GootLoader are always making adjustments to this family of JavaScript malware, which affects indicator of compromise (IOC) extraction using our decoder script. Whenever the GootLoader decoder breaks we try to adapt it to the new version of the malware to help the security community. In this post, we share the process of debugging and fixing the script, showing the common steps we usually take.",
                        "Figure 9 GootLoader decoding script output.",
                        "Figure 4 Printed script content of the new GootLoader version."
                    ],
                    "titles": [
                        "Tools",
                        "IOCs",
                        "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0xf079d1f9>",
                            "type": "Url",
                            "value": "https://kepw.org/test.php?zemyrwgzcsnjur="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0x5c53f231>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "765fbca3b6b1a922b442bc7304454e752e8bf231e2abe5060ace55db72c78d68"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0xf3c07947>",
                            "type": "Url",
                            "value": "https://learn.openschool.ua/test.php?sgjngbizjfwgs="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0xf8bf6d6f>",
                            "type": "Url",
                            "value": "https://lakeside-fishandchips.com/test.php?sgjngbizjfwgs="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0xfd541661>",
                            "type": "Url",
                            "value": "https://kristinee.com/test.php?sgjngbizjfwgs="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x9a2f7ec3>",
                            "type": "Url",
                            "value": "https://korsakovmusic.com/test.php?zemyrwgzcsnjur="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<URL_0x4f7953a6>",
                            "type": "Url",
                            "value": "https://kristinee.com/test.php?zemyrwgzcsnjur="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    },
                    {
                        "src": {
                            "id": "<SHA256_0xd3cc9163>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "0a7c07fc84fd9f5b91bde6822b865f9647ca4ece67e8a4a646ce8d405187dc8b"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            }
        ]
    },
    "ttps": {},
    "meanings": {
        "Category": [
            {
                "token": {
                    "id": "<CATEGORY_0xf1a480bb>",
                    "type": "Category",
                    "value": "malware"
                },
                "references": {
                    "sentences": [
                        "The threat actors behind GootLoader are always making adjustments to this family of JavaScript malware, which affects indicator of compromise (IOC) extraction using our decoder script. Whenever the GootLoader decoder breaks we try to adapt it to the new version of the malware to help the security community. In this post, we share the process of debugging and fixing the script, showing the common steps we usually take.",
                        "At this point we finally get an output from our debug print statements. This tells us that we found the position where the script fails to decode the new version of the malware.",
                        "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware"
                    ],
                    "titles": [
                        "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        }
                    },
                    {
                        "src": {
                            "id": "<CATEGORY_0xf1a480bb>",
                            "type": "Category",
                            "value": "malware"
                        },
                        "relation": "has_category",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            }
        ]
    },
    "iocs": {
        "Hash": [
            {
                "token": {
                    "id": "<SHA256_0xd3cc9163>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "0a7c07fc84fd9f5b91bde6822b865f9647ca4ece67e8a4a646ce8d405187dc8b"
                },
                "references": {
                    "sentences": [
                        "New GootLoader version:<crlf>0a7c07fc84fd9f5b91bde6822b865f9647ca4ece67e8a4a646ce8d405187dc8b<crlf>hxxps://lakeside-fishandchips[.]com/test.php?sgjngbizjfwgs=<crlf>hxxps://learn.openschool[.]ua/test.php?sgjngbizjfwgs=<crlf>hxxps://kristinee[.]com/test.php?sgjngbizjfwgs="
                    ],
                    "titles": [
                        "IOCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<SHA256_0xd3cc9163>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "0a7c07fc84fd9f5b91bde6822b865f9647ca4ece67e8a4a646ce8d405187dc8b"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<SHA256_0x5c53f231>",
                    "type": "Hash",
                    "hash_type": "SHA256",
                    "value": "765fbca3b6b1a922b442bc7304454e752e8bf231e2abe5060ace55db72c78d68"
                },
                "references": {
                    "sentences": [
                        "Older GootLoader version:<crlf>765fbca3b6b1a922b442bc7304454e752e8bf231e2abe5060ace55db72c78d68<crlf>hxxps://kristinee[.]com/test.php?zemyrwgzcsnjur=<crlf>hxxps://kepw[.]org/test.php?zemyrwgzcsnjur=<crlf>hxxps://korsakovmusic[.]com/test.php?zemyrwgzcsnjur="
                    ],
                    "titles": [
                        "IOCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<SHA256_0x5c53f231>",
                            "type": "Hash",
                            "hash_type": "SHA256",
                            "value": "765fbca3b6b1a922b442bc7304454e752e8bf231e2abe5060ace55db72c78d68"
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            }
        ],
        "Url": [
            {
                "token": {
                    "id": "<URL_0xf8bf6d6f>",
                    "type": "Url",
                    "value": "https://lakeside-fishandchips.com/test.php?sgjngbizjfwgs="
                },
                "references": {
                    "sentences": [
                        "New GootLoader version:<crlf>0a7c07fc84fd9f5b91bde6822b865f9647ca4ece67e8a4a646ce8d405187dc8b<crlf>hxxps://lakeside-fishandchips[.]com/test.php?sgjngbizjfwgs=<crlf>hxxps://learn.openschool[.]ua/test.php?sgjngbizjfwgs=<crlf>hxxps://kristinee[.]com/test.php?sgjngbizjfwgs="
                    ],
                    "titles": [
                        "IOCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0xf8bf6d6f>",
                            "type": "Url",
                            "value": "https://lakeside-fishandchips.com/test.php?sgjngbizjfwgs="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<URL_0xf3c07947>",
                    "type": "Url",
                    "value": "https://learn.openschool.ua/test.php?sgjngbizjfwgs="
                },
                "references": {
                    "sentences": [
                        "New GootLoader version:<crlf>0a7c07fc84fd9f5b91bde6822b865f9647ca4ece67e8a4a646ce8d405187dc8b<crlf>hxxps://lakeside-fishandchips[.]com/test.php?sgjngbizjfwgs=<crlf>hxxps://learn.openschool[.]ua/test.php?sgjngbizjfwgs=<crlf>hxxps://kristinee[.]com/test.php?sgjngbizjfwgs="
                    ],
                    "titles": [
                        "IOCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0xf3c07947>",
                            "type": "Url",
                            "value": "https://learn.openschool.ua/test.php?sgjngbizjfwgs="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<URL_0xfd541661>",
                    "type": "Url",
                    "value": "https://kristinee.com/test.php?sgjngbizjfwgs="
                },
                "references": {
                    "sentences": [
                        "New GootLoader version:<crlf>0a7c07fc84fd9f5b91bde6822b865f9647ca4ece67e8a4a646ce8d405187dc8b<crlf>hxxps://lakeside-fishandchips[.]com/test.php?sgjngbizjfwgs=<crlf>hxxps://learn.openschool[.]ua/test.php?sgjngbizjfwgs=<crlf>hxxps://kristinee[.]com/test.php?sgjngbizjfwgs="
                    ],
                    "titles": [
                        "IOCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0xfd541661>",
                            "type": "Url",
                            "value": "https://kristinee.com/test.php?sgjngbizjfwgs="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<URL_0x4f7953a6>",
                    "type": "Url",
                    "value": "https://kristinee.com/test.php?zemyrwgzcsnjur="
                },
                "references": {
                    "sentences": [
                        "Older GootLoader version:<crlf>765fbca3b6b1a922b442bc7304454e752e8bf231e2abe5060ace55db72c78d68<crlf>hxxps://kristinee[.]com/test.php?zemyrwgzcsnjur=<crlf>hxxps://kepw[.]org/test.php?zemyrwgzcsnjur=<crlf>hxxps://korsakovmusic[.]com/test.php?zemyrwgzcsnjur="
                    ],
                    "titles": [
                        "IOCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0x4f7953a6>",
                            "type": "Url",
                            "value": "https://kristinee.com/test.php?zemyrwgzcsnjur="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<URL_0xf079d1f9>",
                    "type": "Url",
                    "value": "https://kepw.org/test.php?zemyrwgzcsnjur="
                },
                "references": {
                    "sentences": [
                        "Older GootLoader version:<crlf>765fbca3b6b1a922b442bc7304454e752e8bf231e2abe5060ace55db72c78d68<crlf>hxxps://kristinee[.]com/test.php?zemyrwgzcsnjur=<crlf>hxxps://kepw[.]org/test.php?zemyrwgzcsnjur=<crlf>hxxps://korsakovmusic[.]com/test.php?zemyrwgzcsnjur="
                    ],
                    "titles": [
                        "IOCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0xf079d1f9>",
                            "type": "Url",
                            "value": "https://kepw.org/test.php?zemyrwgzcsnjur="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            },
            {
                "token": {
                    "id": "<URL_0x9a2f7ec3>",
                    "type": "Url",
                    "value": "https://korsakovmusic.com/test.php?zemyrwgzcsnjur="
                },
                "references": {
                    "sentences": [
                        "Older GootLoader version:<crlf>765fbca3b6b1a922b442bc7304454e752e8bf231e2abe5060ace55db72c78d68<crlf>hxxps://kristinee[.]com/test.php?zemyrwgzcsnjur=<crlf>hxxps://kepw[.]org/test.php?zemyrwgzcsnjur=<crlf>hxxps://korsakovmusic[.]com/test.php?zemyrwgzcsnjur="
                    ],
                    "titles": [
                        "IOCs"
                    ]
                },
                "links": [
                    {
                        "src": {
                            "id": "<URL_0x9a2f7ec3>",
                            "type": "Url",
                            "value": "https://korsakovmusic.com/test.php?zemyrwgzcsnjur="
                        },
                        "relation": "use_threat",
                        "dst": {
                            "id": "<THREAT_0x50f5610d>",
                            "type": "Threat",
                            "value": "gootloader"
                        }
                    }
                ]
            }
        ]
    },
    "unknownwords": {
        "UnknownWord": [
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x84b96bda>",
                    "type": "UnknownWord",
                    "value": "extraction"
                },
                "references": {
                    "sentences": [
                        "The threat actors behind GootLoader are always making adjustments to this family of JavaScript malware, which affects indicator of compromise (IOC) extraction using our decoder script. Whenever the GootLoader decoder breaks we try to adapt it to the new version of the malware to help the security community. In this post, we share the process of debugging and fixing the script, showing the common steps we usually take.",
                        "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware"
                    ],
                    "titles": [
                        "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware"
                    ]
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x51f7bcaa>",
                    "type": "UnknownWord",
                    "value": "adjustments"
                },
                "references": {
                    "sentences": [
                        "The threat actors behind GootLoader are always making adjustments to this family of JavaScript malware, which affects indicator of compromise (IOC) extraction using our decoder script. Whenever the GootLoader decoder breaks we try to adapt it to the new version of the malware to help the security community. In this post, we share the process of debugging and fixing the script, showing the common steps we usually take.",
                        "This is the typical process we go through to adapt the decoding script to new GootLoader versions. As the threat actors behind GootLoader have been making version changes more frequently lately, we have had to make changes to our script more frequently as well. We hope that this explanation is helpful for analyzing GootLoader and making adjustments of our decoder script."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xa42820ed>",
                    "type": "UnknownWord",
                    "value": "decoder"
                },
                "references": {
                    "sentences": [
                        "First, we look at all extracts from the regular expressions (regex) because this is usually the reason why the decoder breaks. To do so, we add print statements before and after each regex evaluation starting from the bottom of the script. The following image shows our first check.",
                        "This is the typical process we go through to adapt the decoding script to new GootLoader versions. As the threat actors behind GootLoader have been making version changes more frequently lately, we have had to make changes to our script more frequently as well. We hope that this explanation is helpful for analyzing GootLoader and making adjustments of our decoder script.",
                        "You can download the latest GootLoader decoder script here:",
                        "To understand why this specific regex does not work anymore, we compare our debug outputs to the outputs of an older GootLoader version where the decoder worked. Using the output of the working one, we can see what it should look like (Figure 5).",
                        "The threat actors behind GootLoader are always making adjustments to this family of JavaScript malware, which affects indicator of compromise (IOC) extraction using our decoder script. Whenever the GootLoader decoder breaks we try to adapt it to the new version of the malware to help the security community. In this post, we share the process of debugging and fixing the script, showing the common steps we usually take."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x5050e642>",
                    "type": "UnknownWord",
                    "value": "fixing"
                },
                "references": {
                    "sentences": [
                        "The threat actors behind GootLoader are always making adjustments to this family of JavaScript malware, which affects indicator of compromise (IOC) extraction using our decoder script. Whenever the GootLoader decoder breaks we try to adapt it to the new version of the malware to help the security community. In this post, we share the process of debugging and fixing the script, showing the common steps we usually take."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xae1ba092>",
                    "type": "UnknownWord",
                    "value": "evaluation"
                },
                "references": {
                    "sentences": [
                        "The regex result for this evaluation should lead to a list of variables concatenated with plus signs. This list is used by GootLoader to rearrange the code into the right order and then later on execute it using the eval function. To decode the script and extract the domains and URLs we need to do the same and bring the code into the correct order. With this version adjustment, GootLoader no longer uses just one statement to rearrange the code, but several interdependent ones. To fix the script we need to make two edits. First, we need to adjust the regex pattern so that it matches the new statements. Second, we need to add logic to merge the code. With the help of regex101.com we can adjust and fix the regex pattern.",
                        "Running the script again leads to another empty output. So further debugging is required. Again, we add two print statements around the next regex evaluation, which looks as follows:",
                        "Based on the output we try to figure out the position where the script fails to decode the new GootLoader version. In this case, we get an empty content output and therefore the script failed earlier in the process. In Figure 2, above the regex evaluation, we you can see an additional print statement to debug the script:",
                        "First, we look at all extracts from the regular expressions (regex) because this is usually the reason why the decoder breaks. To do so, we add print statements before and after each regex evaluation starting from the bottom of the script. The following image shows our first check."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x3959474d>",
                    "type": "UnknownWord",
                    "value": "evaluations"
                },
                "references": {
                    "sentences": [
                        "Figure 1 Print statements around regular expression evaluations."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xac200d2f>",
                    "type": "UnknownWord",
                    "value": "printing"
                },
                "references": {
                    "sentences": [
                        "Figure 2 Printing the content and the longest match of the regex."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xba1ea49b>",
                    "type": "UnknownWord",
                    "value": "longest"
                },
                "references": {
                    "sentences": [
                        "Figure 2 Printing the content and the longest match of the regex."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x98874a18>",
                    "type": "UnknownWord",
                    "value": "anymore"
                },
                "references": {
                    "sentences": [
                        "To understand why this specific regex does not work anymore, we compare our debug outputs to the outputs of an older GootLoader version where the decoder worked. Using the output of the working one, we can see what it should look like (Figure 5)."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfdbf39f>",
                    "type": "UnknownWord",
                    "value": "rearrange"
                },
                "references": {
                    "sentences": [
                        "The regex result for this evaluation should lead to a list of variables concatenated with plus signs. This list is used by GootLoader to rearrange the code into the right order and then later on execute it using the eval function. To decode the script and extract the domains and URLs we need to do the same and bring the code into the correct order. With this version adjustment, GootLoader no longer uses just one statement to rearrange the code, but several interdependent ones. To fix the script we need to make two edits. First, we need to adjust the regex pattern so that it matches the new statements. Second, we need to add logic to merge the code. With the help of regex101.com we can adjust and fix the regex pattern."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x8c16a10f>",
                    "type": "UnknownWord",
                    "value": "eval"
                },
                "references": {
                    "sentences": [
                        "The regex result for this evaluation should lead to a list of variables concatenated with plus signs. This list is used by GootLoader to rearrange the code into the right order and then later on execute it using the eval function. To decode the script and extract the domains and URLs we need to do the same and bring the code into the correct order. With this version adjustment, GootLoader no longer uses just one statement to rearrange the code, but several interdependent ones. To fix the script we need to make two edits. First, we need to adjust the regex pattern so that it matches the new statements. Second, we need to add logic to merge the code. With the help of regex101.com we can adjust and fix the regex pattern."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9e1f7afb>",
                    "type": "UnknownWord",
                    "value": "adjustment"
                },
                "references": {
                    "sentences": [
                        "The regex result for this evaluation should lead to a list of variables concatenated with plus signs. This list is used by GootLoader to rearrange the code into the right order and then later on execute it using the eval function. To decode the script and extract the domains and URLs we need to do the same and bring the code into the correct order. With this version adjustment, GootLoader no longer uses just one statement to rearrange the code, but several interdependent ones. To fix the script we need to make two edits. First, we need to adjust the regex pattern so that it matches the new statements. Second, we need to add logic to merge the code. With the help of regex101.com we can adjust and fix the regex pattern."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xea1e2e6c>",
                    "type": "UnknownWord",
                    "value": "interdependent"
                },
                "references": {
                    "sentences": [
                        "The regex result for this evaluation should lead to a list of variables concatenated with plus signs. This list is used by GootLoader to rearrange the code into the right order and then later on execute it using the eval function. To decode the script and extract the domains and URLs we need to do the same and bring the code into the correct order. With this version adjustment, GootLoader no longer uses just one statement to rearrange the code, but several interdependent ones. To fix the script we need to make two edits. First, we need to adjust the regex pattern so that it matches the new statements. Second, we need to add logic to merge the code. With the help of regex101.com we can adjust and fix the regex pattern."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x66628959>",
                    "type": "UnknownWord",
                    "value": "arrangement"
                },
                "references": {
                    "sentences": [
                        "The idea is to extract all the statements used for the code arrangement."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x95a5f6c8>",
                    "type": "UnknownWord",
                    "value": "dictionary"
                },
                "references": {
                    "sentences": [
                        "Each statement can be split into the variable and the expression. To keep track of the variables we create a dictionary which uses the variables as keys and the expressions as values. The last statement is the main statement used to join the code. For this statement we substitute the expression based on the values in our dictionary and get the final expression consisting of variables that refer to code fragments. The adjusted code sequence looks like this:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x4b041ab0>",
                    "type": "UnknownWord",
                    "value": "substitute"
                },
                "references": {
                    "sentences": [
                        "Each statement can be split into the variable and the expression. To keep track of the variables we create a dictionary which uses the variables as keys and the expressions as values. The last statement is the main statement used to join the code. For this statement we substitute the expression based on the values in our dictionary and get the final expression consisting of variables that refer to code fragments. The adjusted code sequence looks like this:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9c9f9a0c>",
                    "type": "UnknownWord",
                    "value": "adjusted"
                },
                "references": {
                    "sentences": [
                        "Each statement can be split into the variable and the expression. To keep track of the variables we create a dictionary which uses the variables as keys and the expressions as values. The last statement is the main statement used to join the code. For this statement we substitute the expression based on the values in our dictionary and get the final expression consisting of variables that refer to code fragments. The adjusted code sequence looks like this:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xfaf9ee7f>",
                    "type": "UnknownWord",
                    "value": "compound"
                },
                "references": {
                    "sentences": [
                        "To keep the script still compatible for older GootLoader versions, we add an If statement. If we do not get regex matches for the simple statement, we use the code which evaluates compound statements. Finally, we remove the print statements which we inserted for debugging and run the repaired script to get the following output:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x2a24b8b4>",
                    "type": "UnknownWord",
                    "value": "repaired"
                },
                "references": {
                    "sentences": [
                        "To keep the script still compatible for older GootLoader versions, we add an If statement. If we do not get regex matches for the simple statement, we use the code which evaluates compound statements. Finally, we remove the print statements which we inserted for debugging and run the repaired script to get the following output:"
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x9a9ba07a>",
                    "type": "UnknownWord",
                    "value": "adapt"
                },
                "references": {
                    "sentences": [
                        "This is the typical process we go through to adapt the decoding script to new GootLoader versions. As the threat actors behind GootLoader have been making version changes more frequently lately, we have had to make changes to our script more frequently as well. We hope that this explanation is helpful for analyzing GootLoader and making adjustments of our decoder script."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0x7d1ab2ae>",
                    "type": "UnknownWord",
                    "value": "lately"
                },
                "references": {
                    "sentences": [
                        "This is the typical process we go through to adapt the decoding script to new GootLoader versions. As the threat actors behind GootLoader have been making version changes more frequently lately, we have had to make changes to our script more frequently as well. We hope that this explanation is helpful for analyzing GootLoader and making adjustments of our decoder script."
                    ],
                    "titles": []
                }
            },
            {
                "token": {
                    "id": "<UNKNOWNWORD_0xe34d47e0>",
                    "type": "UnknownWord",
                    "value": "patrick schlpfer"
                },
                "references": {
                    "sentences": [
                        "Patrick Schlpfer"
                    ],
                    "titles": []
                }
            }
        ]
    },
    "other_links": [],
    "info": {
        "potential_threats": {
            "<UNKNOWNWORD_0x84b96bda>": {
                "token": {
                    "id": "<UNKNOWNWORD_0x84b96bda>",
                    "type": "UnknownWord",
                    "value": "extraction"
                },
                "references": {
                    "sentences": [
                        "The threat actors behind GootLoader are always making adjustments to this family of JavaScript malware, which affects indicator of compromise (IOC) extraction using our decoder script. Whenever the GootLoader decoder breaks we try to adapt it to the new version of the malware to help the security community. In this post, we share the process of debugging and fixing the script, showing the common steps we usually take.",
                        "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware"
                    ],
                    "titles": [
                        "Tips for Automating IOC Extraction from GootLoader, a Changing JavaScript Malware"
                    ]
                }
            },
            "<UNKNOWNWORD_0xac200d2f>": {
                "token": {
                    "id": "<UNKNOWNWORD_0xac200d2f>",
                    "type": "UnknownWord",
                    "value": "printing"
                },
                "references": {
                    "sentences": [
                        "Figure 2 Printing the content and the longest match of the regex."
                    ],
                    "titles": []
                }
            }
        },
        "sigma": false,
        "yara": false
    },
    "keywords": {
        "classified": [],
        "dubbed": [],
        "associated": [],
        "targets": [],
        "attributed": []
    },
    "resources": {
        "links": {
            "github": [
                "https://github.com/hpthreatresearch/tools/blob/main/gootloader/decode.py",
                "https://github.com/hpthreatresearch/tools/blob/main/gootloader/decode.py"
            ],
            "pastebin": [],
            "text_files": [],
            "other": [
                "https://threatresearch.ext.hp.com/blog/",
                "https://threatresearch.ext.hp.com/blog/?wpv-category=threat-research",
                "https://threatresearch.ext.hp.com/blog/?author-filter=46",
                "https://twitter.com/share?url=https://threatresearch.ext.hp.com/tips-for-automating-ioc-extraction-from-gootloader-a-changing-javascript-malware/",
                "https://www.linkedin.com/shareArticle?url=https://threatresearch.ext.hp.com/tips-for-automating-ioc-extraction-from-gootloader-a-changing-javascript-malware/",
                "https://www.facebook.com/sharer.php?u=https://threatresearch.ext.hp.com/tips-for-automating-ioc-extraction-from-gootloader-a-changing-javascript-malware/",
                "mailto:?subject=I%20wanted%20to%20share%20this%20post%20with%20you%20from%20https://threatresearch.ext.hp.com/tips-for-automating-ioc-extraction-from-gootloader-a-changing-javascript-malware/&body=Tips%20for%20Automating%20IOC%20Extraction%20from%20GootLoader,%20a%20Changing%20JavaScript%20Malware",
                "https://threatresearch.ext.hp.com/blog/?post-tag=automate",
                "https://threatresearch.ext.hp.com/blog/?post-tag=gootloader",
                "https://threatresearch.ext.hp.com/blog/?post-tag=ioc"
            ]
        },
        "images": [
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_001.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_002.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_003.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_004.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_005.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_006.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_007.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_008.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2022/05/gootloader_debug_009.png",
            "https://threatresearch.ext.hp.com/wp-content/uploads/2021/10/blogImage_refresh_001.jpg"
        ]
    }
}