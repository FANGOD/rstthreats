{
    "id": "<report_0xb24e0b2e>",
    "url": "https://www.mandiant.com/resources/unc3524-eye-spy-email",
    "title": "UNC3524: Eye Spy on Your Email",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0xf7721e42>",
            "title": "UNC3524: Eye Spy on Your Email",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x1cd29626>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Doug Bienstock, Melissa Derr, Josh Madeley, Tyler McLellan, Chris Gardner<crlf>May 02, 2022<crlf><crlf>14 mins read<crlf><crlf>Uncategorized Groups (UNC Groups)<crlf>Threat Research<crlf>Threat Intelligence<crlf>Malware<crlf>email<crlf>backdoor",
                    "html": "\nDoug Bienstock, Melissa Derr, Josh Madeley, Tyler McLellan, Chris Gardner\n May 02, 2022\n \n 14 mins read\n \nUncategorized Groups (UNC Groups)\nThreat Research\nThreat Intelligence\nMalware\nemail\nbackdoor\n"
                },
                {
                    "id": "<sentence_0xd46298a2>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x93ddd668>": "https://docs.microsoft.com/en-us/microsoft-365/compliance/ediscovery?view=o365-worldwide",
                        "<a_0xbed51e9>": "https://docs.microsoft.com/en-us/graph/overview",
                        "<a_0x3de6f86a>": "https://www.mandiant.com/resources/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452"
                    },
                    "text": "Since December 2019, Mandiant has observed advanced threat actors increase their investment in tools to facilitate bulk email collection from victim environments, especially as it relates to their support of suspected espionage objectives. Email messages and their attachments offer a rich source of information about an organization, stored in a centralized location for threat actors to collect. Most email systems, whether on-premises or in the cloud, offer programmatic methods to search and access email data across an entire organization, such as eDiscovery and the Graph API. Mandiant has observed threat actors use these same tools to support their own collection requirements and to target the mailboxes of individuals in victim organizations.",
                    "html": "<p>Since December 2019, Mandiant has observed advanced threat actors increase their investment in tools to facilitate bulk email collection from victim environments, especially as it relates to their support of suspected espionage objectives. Email messages and their attachments offer a rich source of information about an organization, stored in a centralized location for threat actors to collect. Most email systems, whether on-premises or in the cloud, offer programmatic methods to search and access email data across an entire organization, such as <a href=\"https://docs.microsoft.com/en-us/microsoft-365/compliance/ediscovery?view=o365-worldwide\">eDiscovery</a> and the <a href=\"https://docs.microsoft.com/en-us/graph/overview\">Graph API</a>. Mandiant has observed threat actors use <a href=\"https://www.mandiant.com/resources/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452\">these same tools</a> to support their own collection requirements and to target the mailboxes of individuals in victim organizations.</p>"
                },
                {
                    "id": "<sentence_0x30b208a5>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xde3ad609>": "https://www.mandiant.com/resources/m-trends-2022"
                    },
                    "text": "In this blog post, we introduce UNC3524, a newly discovered suspected espionage threat actor that, to date, heavily targets the emails of employees that focus on corporate development, mergers and acquisitions, and large corporate transactions. On the surface, their targeting of individuals involved in corporate transactions suggests a financial motivation; however, their ability to remain undetected for an order of magnitude longer than the average dwell time of 21 days in 2021, as reported in M-Trends 2022, suggests an espionage mandate. Part of the groups success at achieving such a long dwell time can be credited to their choice to install backdoors on appliances within victim environments that do not support security tools, such as anti-virus or endpoint protection. The high level of operational security, low malware footprint, adept evasive skills, and a large Internet of Things (IoT) device botnet set this group apart and emphasize the advanced in Advanced Persistent Threat. UNC3524 also takes persistence seriously. Each time a victim environment removed their access, the group wasted no time re-compromising the environment with a variety of mechanisms, immediately restarting their data theft campaign. We are sharing the tools, tactics, and procedures used by UNC3524 to help organizations hunt for and protect against their operations.",
                    "html": "<p>In this blog post, we introduce UNC3524, a newly discovered suspected espionage threat actor that, to date, heavily targets the emails of employees that focus on corporate development, mergers and acquisitions, and large corporate transactions. On the surface, their targeting of individuals involved in corporate transactions suggests a financial motivation; however, their ability to remain undetected for an order of magnitude longer than the average dwell time of 21 days in 2021, as reported in <a href=\"https://www.mandiant.com/resources/m-trends-2022\">M-Trends 2022</a>, suggests an espionage mandate. Part of the group\u2019s success at achieving such a long dwell time can be credited to their choice to install backdoors on appliances within victim environments that do not support security tools, such as anti-virus or endpoint protection. The high level of operational security, low malware footprint, adept evasive skills, and a large Internet of Things (IoT) device botnet set this group apart and emphasize the \u201cadvanced\u201d in Advanced Persistent Threat. UNC3524 also takes persistence seriously. Each time a victim environment removed their access, the group wasted no time re-compromising the environment with a variety of mechanisms, immediately restarting their data theft campaign. We are sharing the tools, tactics, and procedures used by UNC3524 to help organizations hunt for and protect against their operations.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xde1e3e90>",
            "title": "UNC3524: Eye Spy on Your Email",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xe5465df>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Blog",
                    "html": "\nBlog\n"
                }
            ]
        },
        {
            "id": "<chapter_0x2168ece5>",
            "title": "Attack Lifecycle",
            "title_level": 2,
            "sentences": []
        },
        {
            "id": "<chapter_0xcdb325cc>",
            "title": "Initial Compromise and Maintain Presence",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xde598dfc>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After gaining initial access by unknown means, UNC3524 deployed a novel backdoor tracked by Mandiant as QUIETEXIT, which is based on the open-source Dropbear SSH client-server software. For their long-haul remote access, UNC3524 opted to deploy QUIETEXIT on opaque network appliances within the victim environment; think backdoors on SAN arrays, load balancers, and wireless access point controllers. These kinds of devices dont support antivirus or endpoint detection and response tools (EDRs), subsequently leaving the underlying operating systems to vendors to manage. These appliances are often running older versions of BSD or CentOS and would require considerable planning to compile functional malware for them. By targeting trusted systems within victim environments that do not support any type of security tooling, UNC3524 was able to remain undetected in victim environments for at least 18 months.",
                    "html": "<p>After gaining initial access by unknown means, UNC3524 deployed a novel backdoor tracked by Mandiant as QUIETEXIT, which is based on the open-source Dropbear SSH client-server software. For their long-haul remote access, UNC3524 opted to deploy QUIETEXIT on opaque network appliances within the victim environment; think backdoors on SAN arrays, load balancers, and wireless access point controllers. These kinds of devices don\u2019t support antivirus or endpoint detection and response tools (EDRs), subsequently leaving the underlying operating systems to vendors to manage. These appliances are often running older versions of BSD or CentOS and would require considerable planning to compile functional malware for them. By targeting trusted systems within victim environments that do not support any type of security tooling, UNC3524 was able to remain undetected in victim environments for at least 18 months.</p>"
                },
                {
                    "id": "<sentence_0xfd87818e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "QUIETEXIT works as if the traditional client-server roles in an SSH connection were reversed. Once the client, running on a compromised system, establishes a TCP connection to a server, it performs the SSH server role. The QUIETEXIT component running on the threat actors infrastructure initiates the SSH connection and sends a password. Once the backdoor establishes a connection, the threat actor can use any of the options available to an SSH client, including proxying traffic via SOCKS. QUIETEXIT has no persistence mechanism; however, we have observed UNC3524 install a run command (rc) as well as hijack legitimate application-specific startup scripts to enable the backdoor to execute on system startup.",
                    "html": "<p>QUIETEXIT works as if the traditional client-server roles in an SSH connection were reversed. Once the client, running on a compromised system, establishes a TCP connection to a server, it performs the SSH server role. The QUIETEXIT component running on the threat actor\u2019s infrastructure initiates the SSH connection and sends a password. Once the backdoor establishes a connection, the threat actor can use any of the options available to an SSH client, including proxying traffic via SOCKS. QUIETEXIT has no persistence mechanism; however, we have observed UNC3524 install a run command (rc) as well as hijack legitimate application-specific startup scripts to enable the backdoor to execute on system startup.</p>"
                },
                {
                    "id": "<sentence_0x5c5d2854>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x562165a1>": "https://www.mandiant.com/sites/default/files/inline-images/unc3524-fig1.png"
                    },
                    "text": "Figure 1: How QUIETEXIT works with IoT devices",
                    "html": "<figure><img alt=\"How QUIETEXIT works with IoT devices\" height=\"868\" src=\"/sites/default/files/inline-images/unc3524-fig1.png\" width=\"1694\"/><figcaption>Figure 1: How QUIETEXIT works with IoT devices</figcaption></figure>"
                },
                {
                    "id": "<sentence_0xb6760652>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "On startup, QUIETEXIT attempts to change its name to cron, but the malware author did not implement this correctly, so it fails. During our incident response investigations, we recovered QUIETEXIT samples that were renamed to blend in with other legitimate files on the file system. In one case with an infected node of a NAS array, UNC3524 named the binary to blend in with a suite of scripts used to mount various filesystems to the NAS.",
                    "html": "<p>On startup, QUIETEXIT attempts to change its name to cron, but the malware author did not implement this correctly, so it fails. During our incident response investigations, we recovered QUIETEXIT samples that were renamed to blend in with other legitimate files on the file system. In one case with an infected node of a NAS array, UNC3524 named the binary to blend in with a suite of scripts used to mount various filesystems to the NAS.</p>"
                },
                {
                    "id": "<sentence_0xf2c91c55>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x8fbd6759>": "-X -p <port>",
                        "<code_0x394b8993>": "-X -p <host>:<port>"
                    },
                    "text": "When run with command line arguments -X -p <port> the malware connects to a hard-coded command and control (C2) address on the specific port. If this fails, it will attempt to connect to a second hard coded C2 if one is configured. The user can also specify a hostname or IP address on the command line in the -p argument as well, e.g. -X -p <host>:<port>.The -X command line argument is case sensitive. If the lower-case x option is used, then the malware will only attempt to connect to the C2 server once. If the upper-case X option is used, then the malware will sleep for a random number of minutes between a hard-coded time range and fork to reattempt the connection. It re-attempts the connection regardless of whether a connection has already been established. In our investigations we observed UNC3524 use C2 domains that intended to blend in with legitimate traffic originating from the infected appliances. Using the example of an infected load balancer, the C2 domains contained strings that could plausibly relate to the device vendor and branded operating system name. This level of planning demonstrates that UNC3524 understands incident response processes and tried to make their C2 traffic appear as legitimate to anyone that might scroll through DNS or session logs.",
                    "html": "<p>When run with command line arguments <code>-X -p &lt;port&gt;</code> the malware connects to a hard-coded command and control (C2) address on the specific port. If this fails, it will attempt to connect to a second hard coded C2 if one is configured. The user can also specify a hostname or IP address on the command line in the -p argument as well, e.g. <code>-X -p &lt;host&gt;:&lt;port&gt;</code>.The -X command line argument is case sensitive. If the lower-case x option is used, then the malware will only attempt to connect to the C2 server once. If the upper-case X option is used, then the malware will sleep for a random number of minutes between a hard-coded time range and fork to reattempt the connection. It re-attempts the connection regardless of whether a connection has already been established. In our investigations we observed UNC3524 use C2 domains that intended to blend in with legitimate traffic originating from the infected appliances. Using the example of an infected load balancer, the C2 domains contained strings that could plausibly relate to the device vendor and branded operating system name. This level of planning demonstrates that UNC3524 understands incident response processes and tried to make their C2 traffic appear as legitimate to anyone that might scroll through DNS or session logs.</p>"
                },
                {
                    "id": "<sentence_0xb1bc2f10>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "All QUIETEXIT C2 domains that Mandiant observed used Dynamic DNS providers. Dynamic DNS allows for threat actors to update the DNS records for domains in a near seamless fashion. When the C2s where inactive, the threat actor had the domains resolve to 127.0.0.1. However, occasionally the port numbers would change or VPS infrastructure would be used rather than compromised camera botnet. We suspected that when the threat actor experienced issues accessing a victim, they would troubleshoot using new infrastructure or different ports.",
                    "html": "<p>All QUIETEXIT C2 domains that Mandiant observed used Dynamic DNS providers. Dynamic DNS allows for threat actors to update the DNS records for domains in a near seamless fashion. When the C2s where inactive, the threat actor had the domains resolve to 127.0.0.1. However, occasionally the port numbers would change or VPS infrastructure would be used rather than compromised camera botnet. We suspected that when the threat actor experienced issues accessing a victim, they would troubleshoot using new infrastructure or different ports.</p>"
                },
                {
                    "id": "<sentence_0x9f92bc1f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xae825f02>": "https://advantage.mandiant.com/malware/malware--33065e77-067e-5554-a325-86f0e95968dc"
                    },
                    "text": "In some cases, the threat actor deployed a secondary backdoor as a means of alternate access into victim environments. This alternate access was a REGEORG web shell previously placed on a DMZ web server. REGEORG is a web shell that creates a SOCKS proxy, keeping with UNC3452s preference for tunneling malware. Once inside the victim environment, the threat actor spent time to identify web servers in the victim environment and ensure they found one that was Internet accessible before copying REGEORG to it. They also took care to name the file so that it blended in with the application running on the compromised server. Mandiant also observed instances where UNC3452 used timestomping to alter the Standard Information timestamps of the REGEORG web shell to match other files in the same directory.",
                    "html": "<p>In some cases, the threat actor deployed a secondary backdoor as a means of alternate access into victim environments. This alternate access was a <a href=\"https://advantage.mandiant.com/malware/malware--33065e77-067e-5554-a325-86f0e95968dc\">REGEORG</a> web shell previously placed on a DMZ web server. REGEORG is a web shell that creates a SOCKS proxy, keeping with UNC3452\u2019s preference for tunneling malware. Once inside the victim environment, the threat actor spent time to identify web servers in the victim environment and ensure they found one that was Internet accessible before copying REGEORG to it. They also took care to name the file so that it blended in with the application running on the compromised server. Mandiant also observed instances where UNC3452 used timestomping to alter the Standard Information timestamps of the REGEORG web shell to match other files in the same directory.</p>"
                },
                {
                    "id": "<sentence_0x792b09a8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "UNC3452 only used these web shells when their QUIETEXIT backdoors stopped functioning and only to re-establish QUIETEXIT on another system in the network. Rather than use the public version of REGEORG published by Sensepost, UNC3452 used a still public but little-known version of the web shell that is heavily obfuscated. This allowed them to bypass common signature-based detections for REGEORG.",
                    "html": "<p>UNC3452 only used these web shells when their QUIETEXIT backdoors stopped functioning and only to re-establish QUIETEXIT on another system in the network. Rather than use the public version of REGEORG published by Sensepost, UNC3452 used a still public but little-known version of the web shell that is heavily obfuscated. This allowed them to bypass common signature-based detections for REGEORG.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xd27a58b5>",
            "title": "Move Laterally",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x238a4f2f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Once UNC3524 established a foothold in the network they demonstrated a very low malware footprint and instead relied on built-in Windows protocols. During our incident response investigations, we traced most accesses to a victim appliance infected with QUIETEXIT. QUIETEXIT supports the full functionality of SSH, and our observation is consistent with UNC3524 using it to establish a SOCKS tunnel into the victim environments. By standing up a SOCKS tunnel, the threat actor effectively plugs in their machine to an ethernet jack within the victims network. By tunneling over SOCKS, the threat actor can execute tools to steal data from their own computer, leaving no traces of the tooling itself on victim computers.",
                    "html": "<p>Once UNC3524 established a foothold in the network they demonstrated a very low malware footprint and instead relied on built-in Windows protocols. During our incident response investigations, we traced most accesses to a victim appliance infected with QUIETEXIT. QUIETEXIT supports the full functionality of SSH, and our observation is consistent with UNC3524 using it to establish a SOCKS tunnel into the victim environments. By standing up a SOCKS tunnel, the threat actor effectively plugs in their machine to an ethernet jack within the victim\u2019s network. By tunneling over SOCKS, the threat actor can execute tools to steal data from their own computer, leaving no traces of the tooling itself on victim computers.</p>"
                },
                {
                    "id": "<sentence_0xd4730aaa>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa1339250>": "https://www.mandiant.com/sites/default/files/inline-images/unc3524-fig2.png"
                    },
                    "text": "Figure 2: Tunneling through QUIETEXIT",
                    "html": "<figure><img alt=\"Tunneling through QUIETEXIT\" height=\"976\" src=\"/sites/default/files/inline-images/unc3524-fig2.png\" width=\"1754\"/><figcaption>Figure 2: Tunneling through QUIETEXIT</figcaption></figure>"
                },
                {
                    "id": "<sentence_0x2a6db1cc>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf920021b>": "https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py",
                        "<code_0xc40ceee5>": "reg save"
                    },
                    "text": "To perform lateral movement to systems of interest, UNC3524 used a customized version of Impackets WMIEXEC. WMIEXEC uses Windows Management Instrumentation to establish a semi-interactive shell on a remote host. The utility provides a semi-interactive shell by writing command outputs to a file on the remote host and then printing the output to the terminal. The default Impacket version uses a hardcoded file path and filename structure for these output files, providing a detection opportunity. Mandiant has observed UNC3524 modifying the hardcoded file path (\\\\127.0.0.1\\ADMIN$\\debug\\DEBUG.LOG) to evade basic detections for filenames such as Impackets default double underscore files. We also observed the threat actor using the built-in reg save command to save registry hives and extract LSA secrets offline.",
                    "html": "<p>To perform lateral movement to systems of interest, UNC3524 used a customized version of Impacket\u2019s <a href=\"https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py\">WMIEXEC</a>. WMIEXEC uses Windows Management Instrumentation to establish a semi-interactive shell on a remote host. The utility provides a semi-interactive shell by writing command outputs to a file on the remote host and then printing the output to the terminal. The default Impacket version uses a hardcoded file path and filename structure for these output files, providing a detection opportunity. Mandiant has observed UNC3524 modifying the hardcoded file path (\\\\127.0.0.1\\ADMIN$\\debug\\DEBUG.LOG) to evade basic detections for filenames such as Impacket\u2019s default double underscore files. We also observed the threat actor using the built-in <code>reg save</code> command to save registry hives and extract LSA secrets offline.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x972f700>",
            "title": "Complete Mission",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x9cf20e48>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Once UNC3524 successfully obtained privileged credentials to the victims mail environment, they began making Exchange Web Services (EWS) API requests to either the on-premises Microsoft Exchange or Microsoft 365 Exchange Online environment. In each of the UNC3524 victim environments, the threat actor would target a subset of mailboxes, focusing their attention on executive teams and employees that work in corporate development, mergers and acquisitions, or IT security staff. Its likely that the threat actor was targeting the IT security team as a method to determine if their operation had been detected.",
                    "html": "<p>Once UNC3524 successfully obtained privileged credentials to the victim\u2019s mail environment, they began making Exchange Web Services (EWS) API requests to either the on-premises Microsoft Exchange or Microsoft 365 Exchange Online environment. In each of the UNC3524 victim environments, the threat actor would target a subset of mailboxes, focusing their attention on executive teams and employees that work in corporate development, mergers and acquisitions, or IT security staff. It\u2019s likely that the threat actor was targeting the IT security team as a method to determine if their operation had been detected.</p>"
                },
                {
                    "id": "<sentence_0xeb4231f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3de6f86a>": "https://www.mandiant.com/resources/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452"
                    },
                    "text": "The methods that UNC3524 used to authenticate to the Exchange infrastructure evolved throughout the course of the intrusions; this may be a result of them periodically losing access due to the natural changes in corporate infrastructure or simply updating their tactics. They authenticated to Exchange using the username and password of targeted accounts, using accounts holding ApplicationImpersonation rights, or using Service Principal credentials. Each of these methods, their detections, and configuration recommendations can be found at Mandiant's UNC2452 Microsoft 365 Hardening Guide.",
                    "html": "<p>The methods that UNC3524 used to authenticate to the Exchange infrastructure evolved throughout the course of the intrusions; this may be a result of them periodically losing access due to the natural changes in corporate infrastructure or simply updating their tactics. They authenticated to Exchange using the username and password of targeted accounts, using accounts holding ApplicationImpersonation rights, or using Service Principal credentials. Each of these methods, their detections, and configuration recommendations can be found at <a href=\"https://www.mandiant.com/resources/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452\">Mandiant's UNC2452 Microsoft 365 Hardening Guide</a>.</p>"
                },
                {
                    "id": "<sentence_0x23334ce8>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x2f4d2298>": "GetFolder",
                        "<code_0x8553c0fe>": "FindFolder"
                    },
                    "text": "Once authenticated to the exchange infrastructure, UNC3524 made a series of EWS API requests to extract mail items from the target mailbox. For each mailbox, the threat actor made a series of GetFolder and FindFolder requests that returned data describing the mailbox, such as the number of unread messages and sub-folders within the specified folder.",
                    "html": "<p>Once authenticated to the exchange infrastructure, UNC3524 made a series of EWS API requests to extract mail items from the target mailbox. For each mailbox, the threat actor made a series of <code>GetFolder</code> and <code>FindFolder</code> requests that returned data describing the mailbox, such as the number of unread messages and sub-folders within the specified folder.</p>"
                },
                {
                    "id": "<sentence_0x26006ecb>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xc2faf949>": {
                            "0": {
                                "0": "<?xml version=\"1.0\" encoding=\"utf-8\"?>  <soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"  xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\">  <soap:Header>  <t:RequestServerVersion Version=\"Exchange2013\" />  <t:ExchangeImpersonation>  <t:ConnectingSID>  <t:PrimarySmtpAddress>target@victimorg.com</t:PrimarySmtpAddress>  </t:ConnectingSID>  </t:ExchangeImpersonation>  </soap:Header>  <soap:Body>  <GetFolder xmlns=\"https://schemas.microsoft.com/exchange/services/2006/messages\"  xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\">  <FolderShape>  <t:BaseShape>Default</t:BaseShape>  </FolderShape>  <FolderIds>  <t:DistinguishedFolderId Id=\"Root\"/>  </FolderIds>  </GetFolder>  </soap:Body>  </soap:Envelope>"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>Figure 3: Sample EWS GetFolder request\n<tbody><tr><td>\n<p><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</code></p>\n<p><code>&lt;soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"</code></p>\n<p><code> xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\"&gt;\n\t\t\t &lt;soap:Header&gt;</code></p>\n<p><code> &lt;t:RequestServerVersion Version=\"Exchange2013\" /&gt;</code></p>\n<p><code> &lt;t:ExchangeImpersonation&gt;</code></p>\n<p><code> &lt;t:ConnectingSID&gt;</code></p>\n<p><code> &lt;t:PrimarySmtpAddress&gt;target@victimorg.com&lt;/t:PrimarySmtpAddress&gt;</code></p>\n<p><code> &lt;/t:ConnectingSID&gt;</code></p>\n<p><code> &lt;/t:ExchangeImpersonation&gt;</code></p>\n<p><code> &lt;/soap:Header&gt;</code></p>\n<p><code> &lt;soap:Body&gt;</code></p>\n<p><code> &lt;GetFolder xmlns=\"https://schemas.microsoft.com/exchange/services/2006/messages\"</code></p>\n<p><code> xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\"&gt;</code></p>\n<p><code> &lt;FolderShape&gt;</code></p>\n<p><code> &lt;t:BaseShape&gt;Default&lt;/t:BaseShape&gt;</code></p>\n<p><code> &lt;/FolderShape&gt;</code></p>\n<p><code> &lt;FolderIds&gt;</code></p>\n<p><code> &lt;t:DistinguishedFolderId Id=\"Root\"/&gt;</code></p>\n<p><code> &lt;/FolderIds&gt;</code></p>\n<p><code> &lt;/GetFolder&gt;</code></p>\n<p><code> &lt;/soap:Body&gt;</code></p>\n<p><code>&lt;/soap:Envelope&gt;</code></p>\n</td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0x49d99030>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x1973a6ed>": "FindItem",
                        "<code_0x8abd485d>": "DateTimeCreated"
                    },
                    "text": "After the enumeration of the mailbox structure, the threat actor issued a FindItem request with a Query Filter that selected all messages from a specific folder with a DateTimeCreated greater than a specific date. The date in the filter corresponded to the last time the threat actor accessed the mailbox. This meant that the threat actor would acquire all newly created items in the mailbox since the last time they had extracted data. This follows an approach that Mandiant has previously observed with APT29. Rather than target a mailbox using specific keywords, the threat actor instead extracted the entire contents over a particular date range.",
                    "html": "<p>After the enumeration of the mailbox structure, the threat actor issued a <code>FindItem</code> request with a Query Filter that selected all messages from a specific folder with a <code>DateTimeCreated</code> greater than a specific date. The date in the filter corresponded to the last time the threat actor accessed the mailbox. This meant that the threat actor would acquire all newly created items in the mailbox since the last time they had extracted data. This follows an approach that Mandiant has previously observed with APT29. Rather than target a mailbox using specific keywords, the threat actor instead extracted the entire contents over a particular date range.</p>"
                },
                {
                    "id": "<sentence_0x43a050f3>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xa8c57fd7>": {
                            "0": {
                                "0": "<?xml version=\"1.0\" encoding=\"utf-8\"?>  <soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xmlns:m=\"https://schemas.microsoft.com/exchange/services/2006/messages\"  xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\"  xmlns:soap=\"https://schemas.xmlsoap.org/soap/envelope/\">  <soap:Header>  <t:RequestServerVersion Version=\"Exchange2013\" />  <t:ExchangeImpersonation>  <t:ConnectingSID>  <t:PrimarySmtpAddress>target@victimorg.com</t:PrimarySmtpAddress>  </t:ConnectingSID>  </t:ExchangeImpersonation>  </soap:Header>  <soap:Body>  <m:FindItem Traversal=\"Shallow\">  <m:ItemShape>  <t:BaseShape>IdOnly</t:BaseShape>  <t:AdditionalProperties>  <t:FieldURI FieldURI=\"item:Subject\" />  <t:FieldURI FieldURI=\"item:DateTimeCreated \" />  </t:AdditionalProperties>  </m:ItemShape>  <m:IndexedPageItemView MaxEntriesReturned=\"100\" Offset=\"0\" BasePoint=\"Beginning\" />  <m:Restriction>  <t:IsGreaterThan>  <t:FieldURI FieldURI=\"item:DateTimeCreated \" />  <t:FieldURIOrConstant>  <t:Constant Value=\"2022-01-01T00:00:00\" />  </t:FieldURIOrConstant>  </t:IsGreaterThan>  </m:Restriction>  <m:SortOrder>  <t:FieldOrder Order=\"Descending\">  <t:FieldURI FieldURI=\"item:DateTimeCreated\" />  </t:FieldOrder>  </m:SortOrder>  <m:ParentFolderIds>  <t:DistinguishedFolderId Id=\"inbox\" />  </m:ParentFolderIds>  </m:FindItem>  </soap:Body>  </soap:Envelope>"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>Figure 4: Sample EWS FindItem request\n<tbody><tr><td>\n<p><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</code></p>\n<p><code>&lt;soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" </code></p>\n<p><code> xmlns:m=\"https://schemas.microsoft.com/exchange/services/2006/messages\" </code></p>\n<p><code> xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\" </code></p>\n<p><code> xmlns:soap=\"https://schemas.xmlsoap.org/soap/envelope/\"&gt;</code></p>\n<p><code> &lt;soap:Header&gt;</code></p>\n<p><code> &lt;t:RequestServerVersion Version=\"Exchange2013\" /&gt;</code></p>\n<p><code> &lt;t:ExchangeImpersonation&gt;</code></p>\n<p><code> &lt;t:ConnectingSID&gt;</code></p>\n<p><code> &lt;t:PrimarySmtpAddress&gt;target@victimorg.com&lt;/t:PrimarySmtpAddress&gt;</code></p>\n<p><code> &lt;/t:ConnectingSID&gt;</code></p>\n<p><code> &lt;/t:ExchangeImpersonation&gt;</code></p>\n<p><code> &lt;/soap:Header&gt;</code></p>\n<p><code> &lt;soap:Body&gt;</code></p>\n<p><code> &lt;m:FindItem Traversal=\"Shallow\"&gt;</code></p>\n<p><code> &lt;m:ItemShape&gt;</code></p>\n<p><code> &lt;t:BaseShape&gt;IdOnly&lt;/t:BaseShape&gt;</code></p>\n<p><code> &lt;t:AdditionalProperties&gt;</code></p>\n<p><code> &lt;t:FieldURI FieldURI=\"item:Subject\" /&gt;</code></p>\n<p><code> &lt;t:FieldURI FieldURI=\"item:DateTimeCreated \" /&gt;</code></p>\n<p><code> &lt;/t:AdditionalProperties&gt;</code></p>\n<p><code> &lt;/m:ItemShape&gt;</code></p>\n<p><code> &lt;m:IndexedPageItemView MaxEntriesReturned=\"100\" Offset=\"0\" BasePoint=\"Beginning\" /&gt;</code></p>\n<p><code> &lt;m:Restriction&gt; </code></p>\n<p><code> &lt;t:IsGreaterThan&gt;</code></p>\n<p><code> &lt;t:FieldURI FieldURI=\"item:DateTimeCreated \" /&gt;</code></p>\n<p><code> &lt;t:FieldURIOrConstant&gt;</code></p>\n<p><code> &lt;t:Constant Value=\"2022-01-01T00:00:00\" /&gt;</code></p>\n<p><code> &lt;/t:FieldURIOrConstant&gt;</code></p>\n<p><code> &lt;/t:IsGreaterThan&gt;</code></p>\n<p><code> &lt;/m:Restriction&gt;</code></p>\n<p><code> &lt;m:SortOrder&gt;</code></p>\n<p><code> &lt;t:FieldOrder Order=\"Descending\"&gt;</code></p>\n<p><code> &lt;t:FieldURI FieldURI=\"item:DateTimeCreated\" /&gt;</code></p>\n<p><code> &lt;/t:FieldOrder&gt;</code></p>\n<p><code> &lt;/m:SortOrder&gt;</code></p>\n<p><code> &lt;m:ParentFolderIds&gt;</code></p>\n<p><code> &lt;t:DistinguishedFolderId Id=\"inbox\" /&gt;</code></p>\n<p><code> &lt;/m:ParentFolderIds&gt;</code></p>\n<p><code> &lt;/m:FindItem&gt;</code></p>\n<p><code> &lt;/soap:Body&gt;</code></p>\n<code>&lt;/soap:Envelope&gt;</code></td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0x1e16159d>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<code_0x614b3cd4>": "FindItem",
                        "<code_0xea88d267>": "GetItem",
                        "<code_0x3f92d071>": "IncludeMimeContent",
                        "<code_0x7db8feca>": "GetItem"
                    },
                    "text": "Finally, the threat actor iterated through each message identifier returned in the FindItem response and made a GetItem request. The threat actor set the IncludeMimeContent parameter to true for the request, which resulted in Exchange returning the message in MIME format. This is important because the MIME message includes both the message body and any attachments. It is worth noting that if the messages were encrypted using PGP, SMIME, Office 365 Message Encryption (OME), or other encryption technology, then the GetItem response will only contain the ciphertext or in the case of OME, a link to authenticate and view the real message.",
                    "html": "<p>Finally, the threat actor iterated through each message identifier returned in the <code>FindItem</code> response and made a <code>GetItem</code> request. The threat actor set the <code>IncludeMimeContent</code> parameter to true for the request, which resulted in Exchange returning the message in MIME format. This is important because the MIME message includes both the message body and any attachments. It is worth noting that if the messages were encrypted using PGP, SMIME, Office 365 Message Encryption (OME), or other encryption technology, then the <code>GetItem</code> response will only contain the ciphertext or in the case of OME, a link to authenticate and view the real message.</p>"
                },
                {
                    "id": "<sentence_0x5d0a2246>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x842a9928>": {
                            "0": {
                                "0": "<?xml version=\"1.0\" encoding=\"utf-8\"?>  <soap:Envelope  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"  xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"  xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\">  <soap:Body>  <GetItem  xmlns=\"https://schemas.microsoft.com/exchange/services/2006/messages\"  xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\">  <ItemShape>  <t:BaseShape>Default</t:BaseShape>  <t:IncludeMimeContent>true</t:IncludeMimeContent>  </ItemShape>  <ItemIds>  <t:ItemId Id=\"<ID OF MESSAGE>\" ChangeKey=\"CQAAAB\" />  </ItemIds>  </GetItem>  </soap:Body>  </soap:Envelope>"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>Figure 5: Sample EWS GetItem request\n<tbody><tr><td>\n<p><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</code></p>\n<p><code>&lt;soap:Envelope</code></p>\n<p><code> xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"</code></p>\n<p><code> xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"</code></p>\n<p><code> xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"</code></p>\n<p><code> xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\"&gt;</code></p>\n<p><code> &lt;soap:Body&gt;</code></p>\n<p><code> &lt;GetItem</code></p>\n<p><code> xmlns=\"https://schemas.microsoft.com/exchange/services/2006/messages\"</code></p>\n<p><code> xmlns:t=\"https://schemas.microsoft.com/exchange/services/2006/types\"&gt;</code></p>\n<p><code> &lt;ItemShape&gt;</code></p>\n<p><code> &lt;t:BaseShape&gt;Default&lt;/t:BaseShape&gt;</code></p>\n<p><code> &lt;t:IncludeMimeContent&gt;true&lt;/t:IncludeMimeContent&gt;</code></p>\n<p><code> &lt;/ItemShape&gt;</code></p>\n<p><code> &lt;ItemIds&gt;</code></p>\n<p><code> &lt;t:ItemId Id=\"&lt;ID OF MESSAGE&gt;\" ChangeKey=\"CQAAAB\" /&gt;</code></p>\n<p><code> &lt;/ItemIds&gt;</code></p>\n<p><code> &lt;/GetItem&gt;</code></p>\n<p><code> &lt;/soap:Body&gt;</code></p>\n<p><code>&lt;/soap:Envelope&gt;</code></p>\n</td>\n</tr></tbody></table>"
                }
            ]
        },
        {
            "id": "<chapter_0x34347d3d>",
            "title": "Operational Security and Infrastructure",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x16420100>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Throughout their operations, the threat actor demonstrated sophisticated operational security that we see only a small number of threat actors demonstrate. The threat actor evaded detection by operating from devices in the victim environments blind spots, including servers running uncommon versions of Linux and network appliances running opaque OSes. These devices and appliances were running versions of operating systems that were unsupported by agent-based security tools, and often had an expected level of network traffic that allowed the attackers to blend in. The threat actors use of the QUIETEXIT tunneler allowed them to largely live off the land, without the need to bring in additional tools, further reducing the opportunity for detection. This allowed UNC3524 to remain undetected in victim environments for, in some cases, upwards of 18 months.",
                    "html": "<p>Throughout their operations, the threat actor demonstrated sophisticated operational security that we see only a small number of threat actors demonstrate. The threat actor evaded detection by operating from devices in the victim environment\u2019s blind spots, including servers running uncommon versions of Linux and network appliances running opaque OSes. These devices and appliances were running versions of operating systems that were unsupported by agent-based security tools, and often had an expected level of network traffic that allowed the attackers to blend in. The threat actor\u2019s use of the QUIETEXIT tunneler allowed them to largely live off the land, without the need to bring in additional tools, further reducing the opportunity for detection. This allowed UNC3524 to remain undetected in victim environments for, in some cases, upwards of 18 months.</p>"
                },
                {
                    "id": "<sentence_0x916bb72b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The C2 systems that Mandiant identified were primarily legacy conference room camera systems sold by LifeSize, Inc. and in one instance, a D-Link IP camera. These camera systems appeared to be infected, likely with the server component of QUIETEXIT. These cameras were directly Internet exposed, possibly through an improper UPnP configuration, and may have been running older firmware. Mandiant suspects that default credentials, rather than an exploit, were the likely mechanism used to compromise these devices and form the IoT botnet used by UNC3524. Similar to the use of embedded network devices, UNC3524 can avoid detection by operating from compromised infrastructure connected directly to the public Internet such as IP cameras where typical antivirus and security monitoring may be absent.",
                    "html": "<p>The C2 systems that Mandiant identified were primarily legacy conference room camera systems sold by LifeSize, Inc. and in one instance, a D-Link IP camera. These camera systems appeared to be infected, likely with the server component of QUIETEXIT. These cameras were directly Internet exposed, possibly through an improper UPnP configuration, and may have been running older firmware. Mandiant suspects that default credentials, rather than an exploit, were the likely mechanism used to compromise these devices and form the IoT botnet used by UNC3524. Similar to the use of embedded network devices, UNC3524 can avoid detection by operating from compromised infrastructure connected directly to the public Internet such as IP cameras where typical antivirus and security monitoring may be absent.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x69951e13>",
            "title": "Detection",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x924f5d67>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "UNC3524s use of compromised appliances makes host-based hunting and detection extremely difficult. The best opportunity for detection remains in network-based logging, specifically monitoring traffic at the layer 7 level. Mandiant recommends hunting for traffic tagged as the SSH application egressing environments over ports other than 22. This traffic should be relatively small, and any findings should be investigated. Organizations can also look for outbound SSH traffic originating from IP addresses that are unknown or not in asset management systems. These source systems are more likely to be appliances that arent centrally managed. Finally, large volumes of network traffic originating from the management interfaces of appliances such as NAS arrays and load balancers should be investigated as suspicious as well.",
                    "html": "<p>UNC3524\u2019s use of compromised appliances makes host-based hunting and detection extremely difficult. The best opportunity for detection remains in network-based logging, specifically monitoring traffic at the layer 7 level. Mandiant recommends hunting for traffic tagged as the \u201cSSH\u201d application egressing environments over ports other than 22. This traffic should be relatively small, and any findings should be investigated. Organizations can also look for outbound SSH traffic originating from IP addresses that are unknown or not in asset management systems. These source systems are more likely to be appliances that aren\u2019t centrally managed. Finally, large volumes of network traffic originating from the \u201cmanagement\u201d interfaces of appliances such as NAS arrays and load balancers should be investigated as suspicious as well.</p>"
                },
                {
                    "id": "<sentence_0x4c6e8930>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "UNC3524 targets opaque network appliances because they are often the most unsecure and unmonitored systems in a victim environment. Organizations should take steps to inventory their devices that are on the network and do not support monitoring tools. Each device likely has vendor-specific hardening actions to take to ensure that the proper logging is enabled, and logs are forwarded to a central repository. Organizations can also take steps to use network access controls to limit or completely restrict egress traffic from these devices.",
                    "html": "<p>UNC3524 targets opaque network appliances because they are often the most unsecure and unmonitored systems in a victim environment. Organizations should take steps to inventory their devices that are on the network and do not support monitoring tools. Each device likely has vendor-specific hardening actions to take to ensure that the proper logging is enabled, and logs are forwarded to a central repository. Organizations can also take steps to use network access controls to limit or completely restrict egress traffic from these devices.</p>"
                },
                {
                    "id": "<sentence_0xd7b39f19>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For host-based hunting, Mandiant recommends hunting for QUIETEXIT on devices using the provided grep commands. Most appliances that provide shell access should have the grep binary available.",
                    "html": "<p>For host-based hunting, Mandiant recommends hunting for QUIETEXIT on devices using the provided grep commands. Most appliances that provide shell access should have the grep binary available.</p>"
                },
                {
                    "id": "<sentence_0xe77c9563>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Find QUIETEXIT hard-coded byte string using grep:",
                    "html": "<p>Find QUIETEXIT hard-coded byte string using grep:</p>"
                },
                {
                    "id": "<sentence_0x3f0da700>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xaa4fe535>": {
                            "0": {
                                "0": "grep \"\\x48\\x8b\\x3c\\xd3\\x4c\\x89\\xe1\\xf2\\xae\" -rs /"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table><tbody><tr><td><code>grep \"\\x48\\x8b\\x3c\\xd3\\x4c\\x89\\xe1\\xf2\\xae\" -rs /</code></td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0x4b14978>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Find QUIETEXIT by looking for the hard-coded password value:",
                    "html": "<p>Find QUIETEXIT by looking for the hard-coded password value:</p>"
                },
                {
                    "id": "<sentence_0x79660dda>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x735e069c>": {
                            "0": {
                                "0": "grep '\\xDD\\xE5\\xD5\\x97\\x20\\x53\\x27\\xBF\\xF0\\xA2\\xBA\\xCD\\x96\\x35\\x9A\\xAD\\x1C\\x75\\xEB\\x47' -rs /"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table><tbody><tr><td><code>grep '\\xDD\\xE5\\xD5\\x97\\x20\\x53\\x27\\xBF\\xF0\\xA2\\xBA\\xCD\\x96\\x35\\x9A\\xAD\\x1C\\x75\\xEB\\x47' -rs /</code></td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0x6b15b8a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Find QUIETEXIT persistence mechanisms in the appliances rc.local directory by looking for the command line arguments:",
                    "html": "<p>Find QUIETEXIT persistence mechanisms in the appliance\u2019s rc.local directory by looking for the command line arguments:</p>"
                },
                {
                    "id": "<sentence_0xa0300333>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x59183674>": {
                            "0": {
                                "0": "grep -e \" -[Xx] -p [[:digit:]{2,6}]\" -rs /etc"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table><tbody><tr><td><code>grep -e \" -[Xx] -p [[:digit:]{2,6}]\" -rs /etc</code></td>\n</tr></tbody></table>"
                }
            ]
        },
        {
            "id": "<chapter_0xf4e43c6d>",
            "title": "Remediation and Hardening",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x79f0563c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3de6f86a>": "https://www.mandiant.com/resources/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452"
                    },
                    "text": "Mandiant has published remediation and hardening strategies for Microsoft 365.",
                    "html": "<p>Mandiant has published <a href=\"https://www.mandiant.com/resources/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452\">remediation and hardening strategies</a> for Microsoft 365. </p>"
                }
            ]
        },
        {
            "id": "<chapter_0x881c8190>",
            "title": "Attribution",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xce8b54a3>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x63fbfb8c>": "https://www.mandiant.com/resources/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor",
                        "<a_0x516fe7d>": "https://media.defense.gov/2021/Jul/01/2002753896/-1/-1/1/CSA_GRU_GLOBAL_BRUTE_FORCE_CAMPAIGN_UOO158036-21.PDF"
                    },
                    "text": "The methodologies Mandiant observed during UNC3524 intrusions overlapped with techniques used by multiple Russia-based espionage threat actors including both EWS impersonation and SPN credential addition. Mandiant has only observed APT29 performing SPN credential addition; however, this technique has been reported on publicly since early 2019. The NSA has previously reported automated password spraying using Kubernetes, Exchange Exploitation, and REGEORG as associated with APT28. While the activity reported by the NSA used TOR and commercial VPNs, UNC3524 primarily used compromised internet facing devices. One interesting aspect of UNC3524s use of REGEORG was that it matched identically with the version publicly reported by the NSA as used by APT28. At the time of writing, Mandiant cannot conclusively link UNC3524 to an existing group currently tracked by Mandiant.",
                    "html": "<p>The methodologies Mandiant observed during UNC3524 intrusions overlapped with techniques used by multiple Russia-based espionage threat actors including both EWS impersonation and SPN credential addition. Mandiant has only observed <a href=\"https://www.mandiant.com/resources/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor\">APT29 performing SPN credential addition</a>; however, this technique has been reported on publicly since early 2019. The NSA has previously reported automated password spraying using Kubernetes, Exchange Exploitation, and REGEORG as <a href=\"https://media.defense.gov/2021/Jul/01/2002753896/-1/-1/1/CSA_GRU_GLOBAL_BRUTE_FORCE_CAMPAIGN_UOO158036-21.PDF\">associated with APT28</a>. While the activity reported by the NSA used TOR and commercial VPNs, UNC3524 primarily used compromised internet facing devices. One interesting aspect of UNC3524\u2019s use of REGEORG was that it matched identically with the version publicly reported by the NSA as used by APT28. At the time of writing, Mandiant cannot conclusively link UNC3524 to an existing group currently tracked by Mandiant.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x9cce9e51>",
            "title": "Acknowledgements",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x6d526dc4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We would like to thank our incident response consultants, Managed Defense responders, and FLARE reverse engineers who enabled this research. Thanks to Kirstie Failey, Jake Nicastro, John Wolfram, Sarah Hawley and Nick Richard for technical review, and Ryan Hall and Alyssa Rahman for research contributions.",
                    "html": "<p>We would like to thank our incident response consultants, Managed Defense responders, and FLARE reverse engineers who enabled this research. Thanks to Kirstie Failey, Jake Nicastro, John Wolfram, Sarah Hawley and Nick Richard for technical review, and Ryan Hall and Alyssa Rahman for research contributions.</p>"
                }
            ]
        },
        {
            "id": "<chapter_0x94e6df81>",
            "title": "MITRE ATT&CK",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x8a6c6015>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Mandiant has observed UNC3524 use the following techniques.",
                    "html": "<p>Mandiant has observed UNC3524 use the following techniques.</p>"
                },
                {
                    "id": "<sentence_0xf88bbf3d>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xa669e0af>": {
                            "0": {
                                "0": "ATT&CK Tactic Category",
                                "1": "Defense Evasion",
                                "2": "Discovery",
                                "3": "Credential Access",
                                "4": "Collection",
                                "5": "Lateral Movement",
                                "6": "Persistence",
                                "7": "Command and Control",
                                "8": "Resource Development",
                                "9": "Execution"
                            },
                            "1": {
                                "0": "Techniques",
                                "1": "T1027: Obfuscated Files or Information",
                                "2": "T1012: Query Registry  T1016: System Network Configuration Discovery  T1049: System Network Connections Discovery  T1057: Process Discovery  T1518: Software Discovery",
                                "3": "T1003.004: LSA Secrets  T1003.006: DCSync  T1111: Two-Factor Authentication Interception",
                                "4": "T1114: Email Collection  T1114.002: Remote Email Collection",
                                "5": "T1021.004: SSH",
                                "6": "T1037.004: RC Scripts  T1098.001: Additional Cloud Credentials  T1505.003: Web Shell",
                                "7": "T1071: Application Layer Protocol  T1090.003: Multi-hop Proxy  T1095: Non-Application Layer Protocol  T1572: Protocol Tunneling  T1573.002: Asymmetric Cryptography",
                                "8": "T1583.003: Virtual Private Server  T1584: Compromise Infrastructure  T1608.003: Install Digital Certificate",
                                "9": "T1059.001: PowerShell  T1059.003: Windows Command Shell"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table class=\"MsoTableGrid\"><tbody><tr><td>\n<p>ATT&amp;CK Tactic Category</p>\n</td>\n<td>\n<p>Techniques</p>\n</td>\n</tr><tr><td>\n<p>Defense Evasion</p>\n</td>\n<td>\n<p> T1027: Obfuscated Files or Information</p>\n</td>\n</tr><tr><td>\n<p>Discovery</p>\n</td>\n<td>\n<p> T1012: Query Registry</p>\n<p> T1016: System Network Configuration Discovery</p>\n<p> T1049: System Network Connections Discovery</p>\n<p> T1057: Process Discovery</p>\n<p> T1518: Software Discovery</p>\n</td>\n</tr><tr><td>\n<p>Credential Access</p>\n</td>\n<td>\n<p> T1003.004: LSA Secrets</p>\n<p> T1003.006: DCSync</p>\n<p> T1111: Two-Factor Authentication Interception</p>\n</td>\n</tr><tr><td>\n<p>Collection</p>\n</td>\n<td>\n<p> T1114: Email Collection</p>\n<p> T1114.002: Remote Email Collection</p>\n</td>\n</tr><tr><td>\n<p>Lateral Movement</p>\n</td>\n<td>\n<p> T1021.004: SSH</p>\n</td>\n</tr><tr><td>\n<p>Persistence</p>\n</td>\n<td>\n<p> T1037.004: RC Scripts</p>\n<p> T1098.001: Additional Cloud Credentials</p>\n<p> T1505.003: Web Shell</p>\n</td>\n</tr><tr><td>\n<p>Command and Control</p>\n</td>\n<td>\n<p> T1071: Application Layer Protocol</p>\n<p> T1090.003: Multi-hop Proxy</p>\n<p> T1095: Non-Application Layer Protocol</p>\n<p> T1572: Protocol Tunneling</p>\n<p> T1573.002: Asymmetric Cryptography</p>\n</td>\n</tr><tr><td>\n<p>Resource Development</p>\n</td>\n<td>\n<p> T1583.003: Virtual Private Server</p>\n<p> T1584: Compromise Infrastructure</p>\n<p> T1608.003: Install Digital Certificate</p>\n</td>\n</tr><tr><td>\n<p>Execution</p>\n</td>\n<td>\n<p> T1059.001: PowerShell</p>\n<p> T1059.003: Windows Command Shell</p>\n</td>\n</tr></tbody></table>"
                }
            ]
        },
        {
            "id": "<chapter_0xb42adb62>",
            "title": "YARA Signatures",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x31cbe776>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Note: These rules are designed to broadly capture suspicious files and are not designed to detect a particular malware or threat.",
                    "html": "<p>Note: These rules are designed to broadly capture suspicious files and are not designed to detect a particular malware or threat.</p>"
                },
                {
                    "id": "<sentence_0x9babd709>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x7dbdf0cc>": {
                            "0": {
                                "0": "rule QUIETEXIT_strings  {  meta:  author = \"Mandiant\"  date_created = \"2022-01-13\"  date_modified = \"2022-01-13\"  rev = 1  strings:  $s1 = \"auth-agent@openssh.com\"  $s2 = \"auth-%.8x-%d\"  $s3 = \"Child connection from %s:%s\"  $s4 = \"Compiled without normal mode, can't run without -i\"  $s5 = \"cancel-tcpip-forward\"  $s6 = \"dropbear_prng\"  $s7 = \"cron\"  condition:  uint32be(0) == 0x7F454C46 and filesize < 2MB and all of them  }"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table><tbody><tr><td>\n<p><code>rule QUIETEXIT_strings</code></p>\n<p><code>{</code></p>\n<p><code> meta:</code></p>\n<p><code> author = \"Mandiant\"</code></p>\n<p><code> date_created = \"2022-01-13\"</code></p>\n<p><code> date_modified = \"2022-01-13\"</code></p>\n<p><code> rev = 1</code></p>\n<p><code> strings:</code></p>\n<p><code> $s1 = \"auth-agent@openssh.com\"</code></p>\n<p><code> $s2 = \"auth-%.8x-%d\"</code></p>\n<p><code> $s3 = \"Child connection from %s:%s\"</code></p>\n<p><code> $s4 = \"Compiled without normal mode, can't run without -i\"</code></p>\n<p><code> $s5 = \"cancel-tcpip-forward\"</code></p>\n<p><code> $s6 = \"dropbear_prng\"</code></p>\n<p><code> $s7 = \"cron\"</code></p>\n<p><code> condition:</code></p>\n<p><code> uint32be(0) == 0x7F454C46 and filesize &lt; 2MB and all of them</code></p>\n<p><code>}</code></p>\n</td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0x66d0052f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xf2fec258>": {
                            "0": {
                                "0": "rule REGEORG_Tuneller_generic  {  meta:  author = \"Mandiant\"  date_created = \"2021-12-20\"  date_modified = \"2021-12-20\"  md5 = \"ba22992ce835dadcd06bff4ab7b162f9\"  strings:  $s1 = \"System.Net.IPEndPoint\"  $s2 = \"Response.AddHeader\"  $s3 = \"Request.InputStream.Read\"  $s4 = \"Request.Headers.Get\"  $s5 = \"Response.Write\"  $s6 = \"System.Buffer.BlockCopy\"  $s7 = \"Response.BinaryWrite\"  $s8 = \"SocketException soex\"  condition:  filesize < 1MB and 7 of them  }"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table><tbody><tr><td>\n<p><code>rule REGEORG_Tuneller_generic</code></p>\n<p><code>{</code></p>\n<p><code> meta:</code></p>\n<p><code> author = \"Mandiant\"</code></p>\n<p><code> date_created = \"2021-12-20\"</code></p>\n<p><code> date_modified = \"2021-12-20\"</code></p>\n<p><code> md5 = \"ba22992ce835dadcd06bff4ab7b162f9\"</code></p>\n<p><code> strings:</code></p>\n<p><code> $s1 = \"System.Net.IPEndPoint\"</code></p>\n<p><code> $s2 = \"Response.AddHeader\"</code></p>\n<p><code> $s3 = \"Request.InputStream.Read\"</code></p>\n<p><code> $s4 = \"Request.Headers.Get\"</code></p>\n<p><code> $s5 = \"Response.Write\"</code></p>\n<p><code> $s6 = \"System.Buffer.BlockCopy\"</code></p>\n<p><code> $s7 = \"Response.BinaryWrite\"</code></p>\n<p><code> $s8 = \"SocketException soex\"</code></p>\n<p><code> condition:</code></p>\n<p><code> filesize &lt; 1MB and 7 of them</code></p>\n<p><code>}</code></p>\n</td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0xc6f0f5cd>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xd675828e>": {
                            "0": {
                                "0": "rule UNC3524_sha1  {  meta:  author = \"Mandiant\"  date_created = \"2022-01-19\"  date_modified = \"2022-01-19\"  strings:  $h1 = { DD E5 D5 97 20 53 27 BF F0 A2 BA CD 96 35 9A AD 1C 75 EB 47 }  condition:  uint32be(0) == 0x7F454C46 and filesize < 10MB and all of them  }"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table><tbody><tr><td>\n<p><code>rule UNC3524_sha1</code></p>\n<p><code>{</code></p>\n<p><code> meta:</code></p>\n<p><code> author = \"Mandiant\"</code></p>\n<p><code> date_created = \"2022-01-19\"</code></p>\n<p><code> date_modified = \"2022-01-19\"</code></p>\n<p><code> strings:</code></p>\n<p><code> $h1 = { DD E5 D5 97 20 53 27 BF F0 A2 BA CD 96 35 9A AD 1C 75 EB 47 }</code></p>\n<p><code> condition:</code></p>\n<p><code> uint32be(0) == 0x7F454C46 and filesize &lt; 10MB and all of them</code></p>\n<p><code>}</code></p>\n</td>\n</tr></tbody></table>"
                }
            ]
        },
        {
            "id": "<chapter_0x8a493d8>",
            "title": "Indicators",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0x97b070f4>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x8a24a515>": {
                            "0": {
                                "0": "MALWARE FAMILY",
                                "1": "QUIETEXIT Dynamic DNS"
                            },
                            "1": {
                                "0": "Indicator",
                                "1": "cloudns.asia  dynu.net  mywire.org  webredirect.org"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table class=\"MandiantDefaultTableBlack\"><tbody><tr><td>\n<p>MALWARE FAMILY</p>\n</td>\n<td>\n<p>Indicator</p>\n</td>\n</tr><tr><td>\n<p>QUIETEXIT Dynamic DNS</p>\n</td>\n<td>\n<p>cloudns.asia\n\t\t\tdynu.net\n\t\t\tmywire.org\n\t\t\twebredirect.org</p>\n</td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0xee030869>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x505b94ac>": {
                            "0": {
                                "0": "MALWARE FAMILY",
                                "1": "REGEORG GitHub version"
                            },
                            "1": {
                                "0": "MD5",
                                "1": "ba22992ce835dadcd06bff4ab7b162f9"
                            },
                            "2": {
                                "0": "SHA1",
                                "1": "3d4dcc859c6ca7e5b36483ad84c9ceef34973f9a"
                            },
                            "3": {
                                "0": "SHA256",
                                "1": "7b5e3c1c06d82b3e7309C258dfbd4bfcd476c8ffcb4cebda76146145502a5997"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table class=\"Table\"><tbody><tr><td>\n<p>MALWARE FAMILY</p>\n</td>\n<td>\n<p>MD5</p>\n</td>\n<td>\n<p>SHA1</p>\n</td>\n<td>\n<p>SHA256</p>\n</td>\n</tr><tr><td>\n<p>REGEORG GitHub version</p>\n</td>\n<td>\n<p>ba22992ce835dadcd06bff4ab7b162f9</p>\n</td>\n<td>\n<p>3d4dcc859c6ca7e5b36483ad84c9ceef34973f9a</p>\n</td>\n<td>\n<p>7b5e3c1c06d82b3e7309C258dfbd4bfcd476c8ffcb4cebda76146145502a5997</p>\n</td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0x5f928a13>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p>\n</p>"
                }
            ]
        }
    ]
}