{
    "id": "<report_0x5d82eddf>",
    "url": "https://blog.minerva-labs.com/a-new-blustealer-loader-uses-direct-syscalls-to-evade-edrs",
    "title": "Minerva Labs Blog",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0x364b9996>",
            "title": "Minerva Labs Blog",
            "title_level": 1,
            "sentences": []
        },
        {
            "id": "<chapter_0x2218c906>",
            "title": "A new BluStealer Loader Uses Direct Syscalls to Evade EDRs",
            "title_level": 2,
            "sentences": [
                {
                    "id": "<sentence_0xd893771a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "May 03, 2022<crlf>|<crlf><crlf><crlf>Natalie Zargarov",
                    "html": "\n\t\t\t\t\t\t May 03, 2022\n\t\t\t\t\t | \n\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\tNatalie Zargarov\n\t\t\t\t\t\t\n\t\t\t\t\t \n"
                },
                {
                    "id": "<sentence_0x406a6ef1>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<ul class=\"hs-blog-social-share-list\">\n<li class=\"hs-blog-social-share-item hs-blog-social-share-item-twitter\">\n</li>\n<li class=\"hs-blog-social-share-item hs-blog-social-share-item-linkedin\">\n</li>\n<li class=\"hs-blog-social-share-item hs-blog-social-share-item-facebook\">\n</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x4f05f7a0>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x1e8aef4e>": "https://twitter.com/James_inthe_box/status/1395824249605025792",
                        "<a_0x98c1d5f7>": "https://decoded.avast.io/anhho/blustealer/",
                        "<a_0x2e29ef77>": "http://www.a1vbcode.com/app-2530.asp"
                    },
                    "text": "BluStealer malware was first detected in May 2021 by James_inthe_box. Back then, it was delivered through a phishing mail, either as an attachment or a Discord link leading to the malware download URL. According to Avast 2021 analysis, it consists of a core written in Visual Basic and the C# .NET inner payload(s). The VB core reuses a large amount of code from a 2004 SpyEx project. Its capabilities to steal crypto wallet data, swap crypto addresses present in the clipboard, find and upload document files, exfiltrate data through SMTP and the Telegram Bot API, as well as anti-analysis/anti-VM tactics",
                    "html": "<p>BluStealer malware was first detected in May 2021 by <a href=\"https://twitter.com/James_inthe_box/status/1395824249605025792\" rel=\"noopener nofollow\" target=\"_blank\">James_inthe_box</a>. Back then, it was delivered through a phishing mail, either as an attachment or a Discord link leading to the malware download URL. According to <a href=\"https://decoded.avast.io/anhho/blustealer/\" rel=\"noopener nofollow\" target=\"_blank\">Avast 2021 analysis</a>, it \u201cconsists of a core written in Visual Basic and the C# .NET inner payload(s). The VB core reuses a large amount of code from a 2004 <a href=\"http://www.a1vbcode.com/app-2530.asp\" rel=\"noopener nofollow\" target=\"_blank\">SpyEx</a> project. Its capabilities to steal crypto wallet data, swap crypto addresses present in the clipboard, find and upload document files, exfiltrate data through SMTP and the Telegram Bot API, as well as anti-analysis/anti-VM tactics\u201d </p>"
                },
                {
                    "id": "<sentence_0x28cdbf27>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "BluStealer authors are not staying behind, and in their latest version, they implement what was one of 2021s biggest trends - the use of direct syscalls to bypass EDRs.",
                    "html": "<p>BluStealer authors are not staying behind, and in their latest version, they implement what was one of 2021\u2019s biggest trends - the use of direct syscalls to bypass EDRs. </p>"
                },
                {
                    "id": "<sentence_0x246850a5>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0xa4661811>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa73225e2>": "https://blog.minerva-labs.com/hs-fs/hubfs/pdf%20icon.png?width=76&name=pdf%20icon.png"
                    },
                    "text": "The latest version seems to have a pdf icon inserted to it, which would indicate that the delivery is via email, with the intention of tricking the user into executing the .exe loader while thinking it's a pdf.",
                    "html": "<p>The latest version seems to have a pdf icon inserted to it, which would indicate that the delivery is via email, with the intention of tricking the user into executing the .exe loader while thinking it's a pdf. <img alt=\"pdf icon\" src=\"https://blog.minerva-labs.com/hs-fs/hubfs/pdf%20icon.png?width=76&amp;name=pdf%20icon.png\" width=\"76\"/></p>"
                },
                {
                    "id": "<sentence_0x286b9674>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 1 - First Stage Icon",
                    "html": "<p>Figure 1 - First Stage Icon </p>"
                },
                {
                    "id": "<sentence_0x5b7e55c6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The first stage loader is created with NSIS (Nullsoft Scriptable Install System), a professional open-source system used to create Windows installers, which drops three files to the users temp folder:",
                    "html": "<p>The first stage loader is created with NSIS (Nullsoft Scriptable Install System), a professional open-source system used to create Windows installers, which drops three files to the user\u2019s temp folder: </p>"
                },
                {
                    "id": "<sentence_0xf7d89f25>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "rwzhmby.exe - second stage loader file",
                    "html": "<ol>\n<li>rwzhmby.exe - second stage loader file </li>\n</ol>"
                },
                {
                    "id": "<sentence_0x2acf1d81>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "mhxbnyunxz third stage loader file",
                    "html": "<ol>\n<li>mhxbnyunxz \u2013 third stage loader file </li>\n</ol>"
                },
                {
                    "id": "<sentence_0x8a0335df>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "3amz20m5vs BluStealer malware",
                    "html": "<ol>\n<li>3amz20m5vs \u2013 BluStealer malware </li>\n</ol>"
                },
                {
                    "id": "<sentence_0xb3502128>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It then executes the rwzhmby.exe with C:\\Users\\username\\AppData\\Local\\Temp\\mhxbnyunxz.",
                    "html": "<p>It then executes the rwzhmby.exe with C:\\Users\\username\\AppData\\Local\\Temp\\mhxbnyunxz. </p>"
                },
                {
                    "id": "<sentence_0x2640ff41>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xd11938d3>": "https://blog.minerva-labs.com/hs-fs/hubfs/the%20execution.png?width=683&name=the%20execution.png"
                    },
                    "text": "",
                    "html": "<p> <img alt=\"the execution\" src=\"https://blog.minerva-labs.com/hs-fs/hubfs/the%20execution.png?width=683&amp;name=the%20execution.png\" width=\"683\"/></p>"
                },
                {
                    "id": "<sentence_0x33d2a8f5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 2 Second Stage execution Command Line",
                    "html": "<p>Figure 2 \u2013 Second Stage execution Command Line </p>"
                },
                {
                    "id": "<sentence_0x20bc8eb3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The second stage loader reads the mhxbnyunxz and then allocates new memory, decrypts every byte read from mhxbnyunxz and continues to the decrypted code.",
                    "html": "<p>The second stage loader reads the mhxbnyunxz and then allocates new memory, decrypts every byte read from mhxbnyunxz and continues to the decrypted code. </p>"
                },
                {
                    "id": "<sentence_0x3cf0c6d3>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa985888a>": "https://blog.minerva-labs.com/hs-fs/hubfs/read%20file.png?width=458&name=read%20file.png"
                    },
                    "text": "",
                    "html": "<p> <img alt=\"read file\" src=\"https://blog.minerva-labs.com/hs-fs/hubfs/read%20file.png?width=458&amp;name=read%20file.png\" width=\"458\"/></p>"
                },
                {
                    "id": "<sentence_0xe8400ac>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 3 - Read and Allocate Memory for Third Stage",
                    "html": "<p>Figure 3 - Read and Allocate Memory for Third Stage </p>"
                },
                {
                    "id": "<sentence_0x79855d68>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The decrypted code (third stage) from mhxbnyunxz is the most interesting part. It is the main BluStealer loader and is responsible for gaining persistency, creating the necessary environment, and finally executing the malware itself.",
                    "html": "<p>The decrypted code (third stage) from mhxbnyunxz is the most interesting part. It is the main BluStealer loader and is responsible for gaining persistency, creating the necessary environment, and finally executing the malware itself. </p>"
                },
                {
                    "id": "<sentence_0x14d0c510>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "BluStealer Environment:",
                    "html": "<p>BluStealer Environment: </p>"
                },
                {
                    "id": "<sentence_0xd6b38e4a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The loader checks if the C:\\Users\\username\\AppData\\Roaming\\rmfyvviyify folder exists. If it doesnt, it creates it and then creates a copy of the second stage rwzhmby.exe file to the folder under the name juvhkpig.exe.",
                    "html": "<p>The loader checks if the C:\\Users\\username\\AppData\\Roaming\\rmfyvviyify folder exists. If it doesn\u2019t, it creates it and then creates a copy of the second stage rwzhmby.exe file to the folder under the name juvhkpig.exe. </p>"
                },
                {
                    "id": "<sentence_0x585519ef>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xf0a17175>": "https://blog.minerva-labs.com/hs-fs/hubfs/copied%20file.png?width=682&name=copied%20file.png"
                    },
                    "text": "",
                    "html": "<p><img alt=\"copied file\" src=\"https://blog.minerva-labs.com/hs-fs/hubfs/copied%20file.png?width=682&amp;name=copied%20file.png\" width=\"682\"/></p>"
                },
                {
                    "id": "<sentence_0x87e7def1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 4 - Copied file to newly created folder",
                    "html": "<p>Figure 4 - Copied file to newly created folder </p>"
                },
                {
                    "id": "<sentence_0x979ac8e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Persistency:",
                    "html": "<p>Persistency: </p>"
                },
                {
                    "id": "<sentence_0x33528a07>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After creating a folder and copying rwzhmby.exe to it, the loader creates a new HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\wnyutmbcgovbty registry key, which will run the malware every time the user logs on.",
                    "html": "<p>After creating a folder and copying rwzhmby.exe to it, the loader creates a new HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\wnyutmbcgovbty registry key, which will run the malware every time the user logs on. </p>"
                },
                {
                    "id": "<sentence_0x1af1fab6>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x48e31f5d>": "https://blog.minerva-labs.com/hs-fs/hubfs/new%20persistency.png?width=925&name=new%20persistency.png"
                    },
                    "text": "",
                    "html": "<p> <img alt=\"new persistency\" src=\"https://blog.minerva-labs.com/hs-fs/hubfs/new%20persistency.png?width=925&amp;name=new%20persistency.png\" width=\"925\"/></p>"
                },
                {
                    "id": "<sentence_0x725ba8b3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 5 Registry Persistency",
                    "html": "<p>Figure 5 \u2013 Registry Persistency </p>"
                },
                {
                    "id": "<sentence_0x523b2afc>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Main Payload Execution:",
                    "html": "<p>Main Payload Execution: </p>"
                },
                {
                    "id": "<sentence_0xf67d16a7>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The main payload seems to arrive in the 3amz20m5vs file. The loader first reads the file into allocated memory and then decrypts it. The only thing left is then to execute it. The malware uses a Process Hallowing Technique with a twist to execute the main payload a malware . Some of the API calls used for Process Hollowing were switched to direct syscalls.",
                    "html": "<p>The main payload seems to arrive in the 3amz20m5vs file. The loader first reads the file into allocated memory and then decrypts it. The only thing left is then to execute it. The malware uses a Process Hallowing Technique with a twist to execute the main payload a malware . Some of the API calls used for Process Hollowing were switched to direct syscalls. </p>"
                },
                {
                    "id": "<sentence_0xd94bad51>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x4d4fcaa0>": "https://blog.minerva-labs.com/hs-fs/hubfs/direct%20syscall.png?width=271&name=direct%20syscall.png"
                    },
                    "text": "",
                    "html": "<p> <img alt=\"direct syscall\" src=\"https://blog.minerva-labs.com/hs-fs/hubfs/direct%20syscall.png?width=271&amp;name=direct%20syscall.png\" width=\"271\"/></p>"
                },
                {
                    "id": "<sentence_0x7ca61042>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 6 - Direct Syscall Function",
                    "html": "<p>Figure 6 - Direct Syscall Function </p>"
                },
                {
                    "id": "<sentence_0x42f9cdec>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The List of Standard API calls used in the Process Hollowing technique:",
                    "html": "<p>The List of Standard API calls used in the Process Hollowing technique: </p>"
                },
                {
                    "id": "<sentence_0xfa3ef6fd>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "CreateProcessA the loader runs ---first file ---- in suspended mode.<crlf>NtQueryInformationProcess<crlf>ReadProcessMemory<crlf>NtUnmapViewOfSection called by direct syscall (0x002a)<crlf>VirtualAllocEx<crlf>WriteProcessMemory - called by direct syscall (0x003a)<crlf>GetThreadContext<crlf>SetThreadContext<crlf>ResumeThread - - called by direct syscall (0x0052)",
                    "html": "<ol>\n<li>CreateProcessA \u2013 the loader runs ---first file ---- in suspended mode. </li>\n<li>NtQueryInformationProcess </li>\n<li>ReadProcessMemory </li>\n<li>NtUnmapViewOfSection \u2013 called by direct syscall (0x002a) </li>\n<li>VirtualAllocEx </li>\n<li>WriteProcessMemory - called by direct syscall (0x003a) </li>\n<li>GetThreadContext </li>\n<li>SetThreadContext </li>\n<li>ResumeThread - - called by direct syscall (0x0052) </li>\n</ol>"
                },
                {
                    "id": "<sentence_0xbf237041>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x55b9b3bc>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Implementing an evasion technique like Process Hollowing while partly changing API calls to direct syscall is likely to confuse and bypass security products that rely on a specific set of API calls for detection.",
                    "html": "<p>Implementing an evasion technique like Process Hollowing while partly changing API calls to direct syscall is likely to confuse and bypass security products that rely on a specific set of API calls for detection. </p>"
                },
                {
                    "id": "<sentence_0xed16e9c6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The injected file is the final stage. Its original file name is firebed.exe and it is BluStealer itself. It seems to have been compiled on Apr 7th 2022, which might indicate that the author is constantly working on the stealers capabilities. As a first step it creates a C:\\Users\\Public\\3046414246424646303030333036463242464246463030303330 folder which will contain the stolen data before the exfiltration. The injected file, firebed.exe, is also copied to this folder under the name misguise.exe.",
                    "html": "<p>The injected file is the final stage. Its original file name is firebed.exe and it is BluStealer itself. It seems to have been compiled on Apr 7th 2022, which might indicate that the author is constantly working on the stealer\u2019s capabilities. As a first step it creates a C:\\Users\\Public\\3046414246424646303030333036463242464246463030303330 folder which will contain the stolen data before the exfiltration. The injected file, firebed.exe, is also copied to this folder under the name misguise.exe. </p>"
                },
                {
                    "id": "<sentence_0xb7e17ed1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Persistence capabilities have been changed since the previous version was released in September 2021. Our sample creates a HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\boos registry key which executes C:\\Users\\Public\\3046414246424646303030333036463242464246463030303330\\misguise.exe",
                    "html": "<p>Persistence capabilities have been changed since the previous version was released in September 2021. Our sample creates a HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\boos registry key which executes C:\\Users\\Public\\3046414246424646303030333036463242464246463030303330\\misguise.exe </p>"
                },
                {
                    "id": "<sentence_0x7887b74c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The new version of BluStealer is able to steal credentials from the following browsers:",
                    "html": "<p>The new version of BluStealer is able to steal credentials from the following browsers: </p>"
                },
                {
                    "id": "<sentence_0x456e6c63>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Iridium<crlf>7Star<crlf>Cent Browser<crlf>Chedot<crlf>Vivaldi",
                    "html": "<ul>\n<li>Iridium </li>\n<li>7Star </li>\n<li>Cent Browser </li>\n<li>Chedot </li>\n<li>Vivaldi </li>\n</ul>"
                },
                {
                    "id": "<sentence_0xefc4f46b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Kometa<crlf>Elements Browser<crlf>Epic Privacy Browser<crlf>Sleipnir5<crlf>Citrio",
                    "html": "<ul>\n<li>Kometa </li>\n<li>Elements Browser </li>\n<li>Epic Privacy Browser </li>\n<li>Sleipnir5 </li>\n<li>Citrio </li>\n</ul>"
                },
                {
                    "id": "<sentence_0xc3a41b5c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Coowon<crlf>liebao<crlf>QIP Surf<crlf>Orbitum<crlf>Amigo",
                    "html": "<ul>\n<li>Coowon </li>\n<li>liebao </li>\n<li>QIP Surf </li>\n<li>Orbitum </li>\n<li>Amigo </li>\n</ul>"
                },
                {
                    "id": "<sentence_0xb0b8ec5f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Torch<crlf>Yandex Browser<crlf>Comodo Dragon<crlf>360Browser<crlf>Maxthon3",
                    "html": "<ul>\n<li>Torch </li>\n<li>Yandex Browser </li>\n<li>Comodo Dragon </li>\n<li>360Browser </li>\n<li>Maxthon3 </li>\n</ul>"
                },
                {
                    "id": "<sentence_0xcbb95760>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "K-Melon<crlf>Sputnik<crlf>Nichrome<crlf>CocCoc<crlf>Uran",
                    "html": "<ul>\n<li>K-Melon </li>\n<li>Sputnik </li>\n<li>Nichrome </li>\n<li>CocCoc </li>\n<li>Uran </li>\n</ul>"
                },
                {
                    "id": "<sentence_0xf73a251>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Chromodo<crlf>Atom<crlf>Brave Browser<crlf>Microsoft Edge<crlf>Chromium",
                    "html": "<ul>\n<li>Chromodo </li>\n<li>Atom </li>\n<li>Brave Browser </li>\n<li>Microsoft Edge </li>\n<li>Chromium </li>\n</ul>"
                },
                {
                    "id": "<sentence_0x6ed63229>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Google Chrome<crlf>Opera<crlf>Mozilla Firefox",
                    "html": "<ul>\n<li>Google Chrome </li>\n<li>Opera </li>\n<li>Mozilla Firefox </li>\n</ul>"
                },
                {
                    "id": "<sentence_0x5e27677b>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x8b32b061>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Many people store different credentials in their browsers so stealing this type of data might endanger both private and corporate users.",
                    "html": "<p>Many people store different credentials in their browsers so stealing this type of data might endanger both private and corporate users. </p>"
                },
                {
                    "id": "<sentence_0x7ac2f5b2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It also steals doc files (.txt, .xls, .xlsx,.doc, .docx, .pdf, .utc, .rtf) and personal data from email applications such as MailMaster and ThunderBird .",
                    "html": "<p>It also steals doc files (.txt, .xls, .xlsx,.doc, .docx, .pdf, .utc, .rtf) and personal data from email applications such as \u201cMailMaster\u201d and \u201cThunderBird\u201d . </p>"
                },
                {
                    "id": "<sentence_0xb084ad47>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Zcash crypto wallet was added to last year's list and the current list of wallet keys that can be stolen is:",
                    "html": "<p>Zcash crypto wallet was added to last year's list and the current list of wallet keys that can be stolen is: </p>"
                },
                {
                    "id": "<sentence_0xf0c26214>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Zcash<crlf>Armory<crlf>Bytecoin<crlf>Jaxx Liberty<crlf>Exodus<crlf>Electrum<crlf>Atomic<crlf>Guarda<crlf>Coinomi",
                    "html": "<ol>\n<li>Zcash </li>\n<li>Armory </li>\n<li>Bytecoin </li>\n<li>Jaxx Liberty </li>\n<li>Exodus </li>\n<li>Electrum </li>\n<li>Atomic </li>\n<li>Guarda </li>\n<li>Coinomi </li>\n</ol>"
                },
                {
                    "id": "<sentence_0x7ac674ea>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0xaedd5b5b>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0xc2d6af2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The last step is exfiltrating the collected data through SMTP.",
                    "html": "<p>The last step is exfiltrating the collected data through SMTP. </p>"
                },
                {
                    "id": "<sentence_0xa999040b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It is worth mentioning, that Loader implementing such evasive injection technique can allow it to will bypass most security products, Including AVs &EDRs. By changing the main payload file, the loader can potentially one might execute different types of malwares, including ransomware.",
                    "html": "<p>It is worth mentioning, that Loader implementing such evasive injection technique can allow it to will bypass most security products, Including AVs &amp;EDRs. By changing the main payload file, the loader can potentially one might execute different types of malwares, including ransomware. </p>"
                },
                {
                    "id": "<sentence_0x7b12b234>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x1cd4d8fa>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0xf5a41e78>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x2dab0a4c>": "https://blog.minerva-labs.com/hs-fs/hubfs/flow.png?width=964&name=flow.png"
                    },
                    "text": "",
                    "html": "<p> <img alt=\"flow\" src=\"https://blog.minerva-labs.com/hs-fs/hubfs/flow.png?width=964&amp;name=flow.png\" width=\"964\"/></p>"
                },
                {
                    "id": "<sentence_0x85842b58>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 7 - BluStealer Execution Flow",
                    "html": "<p>Figure 7 - BluStealer Execution Flow </p>"
                },
                {
                    "id": "<sentence_0xcc43dbd1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Minerva Labs prevents the main payload from being executed by preventing the use of direct syscalls execution:",
                    "html": "<p>Minerva Labs prevents the main payload from being executed by preventing the use of direct syscalls execution: </p>"
                },
                {
                    "id": "<sentence_0x30bc9f35>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa28d0d5f>": "https://blog.minerva-labs.com/hs-fs/hubfs/minerva%20prevention.png?width=685&name=minerva%20prevention.png"
                    },
                    "text": "",
                    "html": "<p> <img alt=\"minerva prevention\" src=\"https://blog.minerva-labs.com/hs-fs/hubfs/minerva%20prevention.png?width=685&amp;name=minerva%20prevention.png\" width=\"685\"/></p>"
                },
                {
                    "id": "<sentence_0x787eba30>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Figure 8 - Minerva Labs Prevention",
                    "html": "<p> Figure 8 - Minerva Labs Prevention </p>"
                },
                {
                    "id": "<sentence_0x2b8d1123>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x93396eb7>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "IOCs",
                    "html": "<p>IOC\u2019s </p>"
                },
                {
                    "id": "<sentence_0x46fe7440>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "790F4DA318B3A9592F4B35B73528DE2C - rwzhmby.exe",
                    "html": "<ol>\n<li>790F4DA318B3A9592F4B35B73528DE2C - rwzhmby.exe </li>\n</ol>"
                },
                {
                    "id": "<sentence_0x388fdf14>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "122C0AA6F0362E3F6F11FF83E3A608C4 - mhxbnyunxz",
                    "html": "<ol>\n<li>122C0AA6F0362E3F6F11FF83E3A608C4 - mhxbnyunxz </li>\n</ol>"
                },
                {
                    "id": "<sentence_0xa4a1c6f2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "43E7B7F7D9E59C3256CF7E5CE114FC53 - 3amz20m5vs",
                    "html": "<ol>\n<li>43E7B7F7D9E59C3256CF7E5CE114FC53 - 3amz20m5vs </li>\n</ol>"
                },
                {
                    "id": "<sentence_0xdf36f9d1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "953B2013A8B0D4BE5368A65FC74C93F4 - firebed.exe/ misguise.exe",
                    "html": "<ol>\n<li>953B2013A8B0D4BE5368A65FC74C93F4 - firebed.exe/ misguise.exe </li>\n</ol>"
                },
                {
                    "id": "<sentence_0x44a16ecd>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x865b2ad0>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x814e7f1f>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x22fbd1bd>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0xacb759eb>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<p> </p>"
                },
                {
                    "id": "<sentence_0x7f7c2a08>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x5975c905>": "new-black-basta-ransomware-hijacks-windows-fax-service?hsLang=en-us"
                    },
                    "text": "Previous Post",
                    "html": "<a href=\"new-black-basta-ransomware-hijacks-windows-fax-service?hsLang=en-us\">\n\u00ab Previous Post\n </a>"
                }
            ]
        }
    ]
}