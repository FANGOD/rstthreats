{
    "id": "<report_0xf531a6e4>",
    "url": "http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html",
    "title": "TeamTNT targeting AWS, Alibaba",
    "meta": [
        {
            "id": "<chapter_0x53ab3e08>",
            "title": "TeamTNT targeting AWS, Alibaba",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xceaee34c>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x61cc3450>": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi34N8obG8v-hWTxOK_sFnlr_K2aRwa7BMS7Py_dgq0fSj1cw934-Rwfv794lAgw2sHCbgNv9Z_34bEoDewY1OB1vq6k0gS62--THVZEin_iD_BXipHa5Tfr_WYHTLf_gK9hxAVrTdHkLG5XAE2j02Gw0RK7SzF3z8OQHA9mMrqAbMxO0DwmTzdTyV6rw/s16000/image6.jpg"
                    },
                    "text": "",
                    "html": "<img border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi34N8obG8v-hWTxOK_sFnlr_K2aRwa7BMS7Py_dgq0fSj1cw934-Rwfv794lAgw2sHCbgNv9Z_34bEoDewY1OB1vq6k0gS62--THVZEin_iD_BXipHa5Tfr_WYHTLf_gK9hxAVrTdHkLG5XAE2j02Gw0RK7SzF3z8OQHA9mMrqAbMxO0DwmTzdTyV6rw/s16000/image6.jpg\"/>"
                },
                {
                    "id": "<sentence_0x76e37b1b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "By",
                    "html": "\nBy "
                },
                {
                    "id": "<sentence_0xec826faa>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xae688f99>": "https://twitter.com/darinhsmith"
                    },
                    "text": "Darin Smith",
                    "html": "<a href=\"https://twitter.com/darinhsmith\">Darin Smith</a>"
                },
                {
                    "id": "<sentence_0x98ae625b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ".",
                    "html": "."
                },
                {
                    "id": "<sentence_0x20da9604>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "TeamTNT is actively modifying its scripts after they were made public by security researchers.<crlf>These scripts primarily target Amazon Web Services, but can also run in on-premise, container, or other forms of Linux instances.<crlf>The group's payloads include credential stealers, cryptocurrency miners, persistence and lateral movement.<crlf>TeamTNT scripts are also capable of disabling cloud security tools, such as Alibaba's aegis cloud security agent.",
                    "html": "<ul>\n<li>\nTeamTNT is actively modifying its scripts after they were made public by security researchers.</li>\n<li>\nThese scripts primarily target Amazon Web Services, but can also run in on-premise, container, or other forms of Linux instances.</li>\n<li>\nThe group's payloads include credential stealers, cryptocurrency miners, persistence and lateral movement.</li>\n<li>\nTeamTNT scripts are also capable of disabling cloud security tools, such as Alibaba's aegis cloud security agent.\n</li>\n</ul>"
                }
            ]
        }
    ],
    "chapters": [
        {
            "id": "<chapter_0x357aa6a9>",
            "title": "TeamTNT targeting AWS, Alibaba",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x95aa808a>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a name=\"8555514210551471206\"></a>"
                }
            ]
        },
        {
            "id": "<chapter_0xc2540a72>",
            "title": "Summary",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x2f6102ae>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Cisco Talos has recently received modified versions of the TeamTNT cyber crime group's malicious shell scripts, an earlier version of which was detailed",
                    "html": "Cisco Talos has recently received modified versions of the TeamTNT cyber crime group's malicious shell scripts, an earlier version of which was detailed "
                },
                {
                    "id": "<sentence_0x6dd3479e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xbd9a0f3e>": "https://www.trendmicro.com/en_us/research/21/c/teamtnt-continues-attack-on-the-cloud--targets-aws-credentials.html"
                    },
                    "text": "by Trend Micro",
                    "html": "<a href=\"https://www.trendmicro.com/en_us/research/21/c/teamtnt-continues-attack-on-the-cloud--targets-aws-credentials.html\">by Trend Micro</a>"
                },
                {
                    "id": "<sentence_0xd3d35b1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ", from an intelligence partner. According to our intelligence partner, the malware author modified these tools after they became aware that security researchers published the previous version of their scripts. These scripts are primarily designed to target Amazon Web Services (AWS) but could also run in on-premise, container or other forms of Linux instances.<crlf>Besides the primary credential stealer scripts, there are several TeamTNT payloads focused on cryptocurrency mining, persistence and lateral movement using techniques such as discovering and deploying onto all Kubernetes pods in a local network. There is also a script with login credentials for the primary distribution server, and another with an API key that might provide remote access to a tmate shared terminal session. Some of the TeamTNT scripts even contain defense evasion functions focused on disabling Alibaba cloud security tools. The focus on compromising modern cloud environments sets TeamTNT apart from many of the other cybercriminals encountered by Cisco Talos.<crlf>This post describes the functionality of the various scripts provided, serving as a \"field guide\" of sorts for further analysis and provides centralized documentation for all indicators of compromise and other atomic intelligence attributes. Any alerts that may be triggered by the malware are described as well, though unfortunately, there are no AWS or cloud API calls made. The",
                    "html": ", from an intelligence partner. According to our intelligence partner, the malware author modified these tools after they became aware that security researchers published the previous version of their scripts. These scripts are primarily designed to target Amazon Web Services (AWS) but could also run in on-premise, container or other forms of Linux instances. \nBesides the primary credential stealer scripts, there are several TeamTNT payloads focused on cryptocurrency mining, persistence and lateral movement using techniques such as discovering and deploying onto all Kubernetes pods in a local network. There is also a script with login credentials for the primary distribution server, and another with an API key that might provide remote access to a tmate shared terminal session. Some of the TeamTNT scripts even contain defense evasion functions focused on disabling Alibaba cloud security tools. The focus on compromising modern cloud environments sets TeamTNT apart from many of the other cybercriminals encountered by Cisco Talos. \nThis post describes the functionality of the various scripts provided, serving as a \"field guide\" of sorts for further analysis and provides centralized documentation for all indicators of compromise and other atomic intelligence attributes. Any alerts that may be triggered by the malware are described as well, though unfortunately, there are no AWS or cloud API calls made. The "
                },
                {
                    "id": "<sentence_0x2f720ef4>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf21dbc70>": "https://www.cisco.com/c/en/us/products/security/stealthwatch-cloud/index.html"
                    },
                    "text": "Secure Cloud Analytics (SCA)",
                    "html": "<a href=\"https://www.cisco.com/c/en/us/products/security/stealthwatch-cloud/index.html\">Secure Cloud Analytics (SCA)</a>"
                },
                {
                    "id": "<sentence_0xe0db2de5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "alert AWS Temporary Token Persistence should detect the use of temporary credentials generated by users of the credentials exfiltrated from the Instance Metadata Service, while a confirmed threat watchlist may catch traffic to the TeamTNT servers and cryptocurrency mining pools. Additionally, while most of the mining scripts are configured to use 70% of available CPU power, rather than 100%, this would still be apparent through the SCA Cloud Security Posture Management dashboard if that is monitored.",
                    "html": " alert AWS Temporary Token Persistence should detect the use of temporary credentials generated by users of the credentials exfiltrated from the Instance Metadata Service, while a confirmed threat watchlist may catch traffic to the TeamTNT servers and cryptocurrency mining pools. Additionally, while most of the mining scripts are configured to use 70% of available CPU power, rather than 100%, this would still be apparent through the SCA Cloud Security Posture Management dashboard if that is monitored.\n"
                },
                {
                    "id": "<sentence_0x9c916c0f>",
                    "is_empty": true,
                    "have_tags": false,
                    "tags": {},
                    "text": "",
                    "html": "<a name=\"more\"></a>"
                }
            ]
        },
        {
            "id": "<chapter_0x30881c34>",
            "title": "Files & Testing",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xfb564bd0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "GRABBER_aws_cloud.sh<crlf>This is a bash script to collect and exfiltrate AWS credentials (specifically, IAM key pairs) from a target instance. Along with the main cred stealing capability and various other functions such as locking files and updating packages, it modifies the /etc/hosts file to map the domains chimaera[.]cc and teamtnt[.]red to the IP address 45.9.148[.]108. Google's DNS server IP addresses are also added to /etc/resolv.conf.",
                    "html": "\nGRABBER_aws_cloud.sh\nThis is a bash script to collect and exfiltrate AWS credentials (specifically, IAM key pairs) from a target instance. Along with the main cred stealing capability and various other functions such as locking files and updating packages, it modifies the /etc/hosts file to map the domains chimaera[.]cc and teamtnt[.]red to the IP address 45.9.148[.]108. Google's DNS server IP addresses are also added to /etc/resolv.conf. \n"
                },
                {
                    "id": "<sentence_0x39dd9508>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x5fa0c728>": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiv1r7xr53xQsehI-GeQhQ5L-y0Yg4FzdPNphQq52mNZFcTsyqxV690dxyKGyf2QSD_WTui-U8JMazaNgvFWM7CRdZN07Ja-EfOzMqzgJdm0qBV22ZO1DfDwrKMsEz5EORA7_QYRbRU5nQZW0UFrmNPjlpEsp7AYClzIH5GGMf95-eqocJvJxzKNZwm/w640-h172/image4.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" border=\"0\" height=\"172\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiv1r7xr53xQsehI-GeQhQ5L-y0Yg4FzdPNphQq52mNZFcTsyqxV690dxyKGyf2QSD_WTui-U8JMazaNgvFWM7CRdZN07Ja-EfOzMqzgJdm0qBV22ZO1DfDwrKMsEz5EORA7_QYRbRU5nQZW0UFrmNPjlpEsp7AYClzIH5GGMf95-eqocJvJxzKNZwm/w640-h172/image4.png\" width=\"640\"/>"
                },
                {
                    "id": "<sentence_0xf7602a66>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Before performing any other functions, it checks if the system hostname is \"HaXXoRsMoPPeD\" and exits if it is. This type of check statement is typically done to avoid executing on the malware author's own system. It also checks the system architecture, and explicitly supports \"aarch64,\" or 64-bit ARM processors, especially useful for AWS malware considering the popularity of the provider's Graviton processors. The script contains various strings in German, such as \"Alle AWS Systemvariablen.\"<crlf>As for actually acquiring credentials, the script checks the following locations and APIs:",
                    "html": "\nBefore performing any other functions, it checks if the system hostname is \"HaXXoRsMoPPeD\" and exits if it is. This type of check statement is typically done to avoid executing on the malware author's own system. It also checks the system architecture, and explicitly supports \"aarch64,\" or 64-bit ARM processors, especially useful for AWS malware considering the popularity of the provider's Graviton processors. The script contains various strings in German, such as \"Alle AWS Systemvariablen.\"\n As for actually acquiring credentials, the script checks the following locations and APIs:\n"
                },
                {
                    "id": "<sentence_0x7e18b72c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Linux system environment variables containing the string 'AWS', which it attempts to acquire from /proc/*/environ.<crlf>Docker environment variables containing the string 'AWS', obtained by executing the command $(docker inspect $(docker ps -q).<crlf>The default AWS CLI credential file locations at /home/.aws/credentials and /root/.aws/credentials.<crlf>Temporary credentials from the AWS Instance Metadata Service (IMDS), including a session token, with queries to the EC2 and Container endpoints. Note: While the query alone would not be detected using Cisco Secure Cloud Analytics, later use of these credentials to generate additional temporary credentials will be detected by the alert \"AWS Temporary Token Persistence.\"",
                    "html": "<ul>\n<li>\nLinux system environment variables containing the string 'AWS', which it attempts to acquire from /proc/*/environ.</li>\n<li>\nDocker environment variables containing the string 'AWS', obtained by executing the command $(docker inspect $(docker ps -q).</li>\n<li>\nThe default AWS CLI credential file locations at /home/.aws/credentials and /root/.aws/credentials. </li>\n<li>\nTemporary credentials from the AWS Instance Metadata Service (IMDS), including a session token, with queries to the EC2 and Container endpoints. Note: While the query alone would not be detected using Cisco Secure Cloud Analytics, later use of these credentials to generate additional temporary credentials will be detected by the alert \"AWS Temporary Token Persistence.\" </li>\n</ul>"
                },
                {
                    "id": "<sentence_0x55cf22eb>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x9e873a22>": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAL4-mlBlpsfKDZjrTEI84t5zcmqzDXBU4TyudOs5ULueT_enlyOieR6cNqOBT5D4I3f6uZiVpiKq4IX4wQjDPNNjNQafdksLJiCrYM1fL6QsnQp3uEy7CddrmpU8uwnMJXb1HLwzbY_lz8UUnc8kwPgFmUpQOLgpWBc5sNtTFrGuu5QDxipuOcE_1/w640-h65/image1.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" border=\"0\" height=\"65\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgAL4-mlBlpsfKDZjrTEI84t5zcmqzDXBU4TyudOs5ULueT_enlyOieR6cNqOBT5D4I3f6uZiVpiKq4IX4wQjDPNNjNQafdksLJiCrYM1fL6QsnQp3uEy7CddrmpU8uwnMJXb1HLwzbY_lz8UUnc8kwPgFmUpQOLgpWBc5sNtTFrGuu5QDxipuOcE_1/w640-h65/image1.png\" width=\"640\"/>"
                },
                {
                    "id": "<sentence_0x5dc9d8dc>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Finally, the malware writes any credentials gathered by the previous functions to the location \"/var/tmp/TeamTNT_AWS_STEALER.txt\", and sends this to the URL http://chimaera[.]cc/in/AWS.php using cURL and deletes the file. When run on the victim EC2 instance with all network traffic blocked by the VPC Security Group so that the script could not contact TeamTNT's servers, no CloudTrail, GuardDuty or SCA events were generated.<crlf>init.sh<crlf>This is a simple script that pulls the two Kubernetes payload scripts from 45.9.148[.]108 using cURL and executes them.<crlf>init_main_root.sh<crlf>This script serves as something of a compilation of many of the other scripts and functions detailed herein. Specifically, it has the standard history control and clearing, file locking and permissions modification, DNS modification and package management update functions. It also installs XMRig and the bot at http://45.9.148[.182]//bin/bot_root/$C_hg_SYS and turns it into a rootkit that will persist across reboots if possible. Finally, it downloads the grabber.sh script and executes it.<crlf>Kubernetes_root_PayLoad_1.sh<crlf>This script has many of the same functions as GRABBAR_aws_cloud.sh for checking system variables, exiting depending on the hostname, and updating packages and DNS entries on the victim system. As usual, it checks the system architecture using the command uname -m and saves this as the variable $C_hg_SYS. Its primary function is downloading a script hosted at the URL \"http://85.214.149[.]236:443/sugarcrm/themes/default/images/SugarLogic/.../TNTb/$C_hg_SYS\" and saving it as \"/usr/bin/dockerd_env\". This means it will download a file named \"aarch64\", \"x86_64\" or \"i386\" from the TNTb directory on the distribution server. The",
                    "html": "\nFinally, the malware writes any credentials gathered by the previous functions to the location \"/var/tmp/TeamTNT_AWS_STEALER.txt\", and sends this to the URL http://chimaera[.]cc/in/AWS.php using cURL and deletes the file. When run on the victim EC2 instance with all network traffic blocked by the VPC Security Group so that the script could not contact TeamTNT's servers, no CloudTrail, GuardDuty or SCA events were generated.\ninit.sh\nThis is a simple script that pulls the two Kubernetes payload scripts from 45.9.148[.]108 using cURL and executes them. \ninit_main_root.sh\nThis script serves as something of a compilation of many of the other scripts and functions detailed herein. Specifically, it has the standard history control and clearing, file locking and permissions modification, DNS modification and package management update functions. It also installs XMRig and the bot at http://45.9.148[.182]//bin/bot_root/$C_hg_SYS and turns it into a rootkit that will persist across reboots if possible. Finally, it downloads the grabber.sh script and executes it. \nKubernetes_root_PayLoad_1.sh\nThis script has many of the same functions as GRABBAR_aws_cloud.sh for checking system variables, exiting depending on the hostname, and updating packages and DNS entries on the victim system. As usual, it checks the system architecture using the command uname -m and saves this as the variable $C_hg_SYS. Its primary function is downloading a script hosted at the URL \"http://85.214.149[.]236:443/sugarcrm/themes/default/images/SugarLogic/.../TNTb/$C_hg_SYS\" and saving it as \"/usr/bin/dockerd_env\". This means it will download a file named \"aarch64\", \"x86_64\" or \"i386\" from the TNTb directory on the distribution server. The \n"
                },
                {
                    "id": "<sentence_0xf5de6292>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa30be3c8>": "https://www.virustotal.com/gui/file/95809d96f85e1571a3120c7c09a7f34fa84cb5902ad5172398dc2bb0ff1dd24a/community"
                    },
                    "text": "aarch64",
                    "html": "<a href=\"https://www.virustotal.com/gui/file/95809d96f85e1571a3120c7c09a7f34fa84cb5902ad5172398dc2bb0ff1dd24a/community\">aarch64</a>"
                },
                {
                    "id": "<sentence_0x95be7d78>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "and",
                    "html": " and \n"
                },
                {
                    "id": "<sentence_0xf4898eac>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa30be3c8>": "https://www.virustotal.com/gui/file/95809d96f85e1571a3120c7c09a7f34fa84cb5902ad5172398dc2bb0ff1dd24a/community"
                    },
                    "text": "x86_64",
                    "html": "<a href=\"https://www.virustotal.com/gui/file/95809d96f85e1571a3120c7c09a7f34fa84cb5902ad5172398dc2bb0ff1dd24a/community\">x86_64</a>"
                },
                {
                    "id": "<sentence_0xe70d1f59>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "files were included in the collection of malware received by RET, and their hashes are detected on VirusTotal as the Tsunami malware.<crlf>It will attempt to use cURL, Wget and a custom bash function built into the script to download this file in case any of the options are unavailable. It then uses the",
                    "html": " files were included in the collection of malware received by RET, and their hashes are detected on VirusTotal as the Tsunami malware. \nIt will attempt to use cURL, Wget and a custom bash function built into the script to download this file in case any of the options are unavailable. It then uses the "
                },
                {
                    "id": "<sentence_0xded067c8>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x2e32d3b6>": "https://www.man7.org/linux/man-pages/man1/chattr.1.html"
                    },
                    "text": "chattr tool",
                    "html": "<a href=\"https://www.man7.org/linux/man-pages/man1/chattr.1.html\">chattr tool</a>"
                },
                {
                    "id": "<sentence_0xdd10be8c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "to make this new script impossible to modify using the -ia flag, makes it executable and modifies the permissions. Next, it checks the process ID number of dockerd_env, and if it doesn't have a pid again adds the executable bit and attempts to run the executable. Finally, it kills ~/.dockerd, ~/.kube and ~/.configure, and removes the file k31r.sh.<crlf>Kubernetes_root_PayLoad_2.sh<crlf>As the name implies, this is an enhanced version of Kubernetes_root_PayLoad_1.sh with various added functionality. It has a hardcoded Monero wallet address and SSH key included in the code, which can be found in the \"Indicators of Compromise\" section below. Besides the functionality included in version 1, it uses",
                    "html": " to make this new script impossible to modify using the -ia flag, makes it executable and modifies the permissions. Next, it checks the process ID number of dockerd_env, and if it doesn't have a pid again adds the executable bit and attempts to run the executable. Finally, it kills ~/.dockerd, ~/.kube and ~/.configure, and removes the file k31r.sh.\nKubernetes_root_PayLoad_2.sh\nAs the name implies, this is an enhanced version of Kubernetes_root_PayLoad_1.sh with various added functionality. It has a hardcoded Monero wallet address and SSH key included in the code, which can be found in the \"Indicators of Compromise\" section below. Besides the functionality included in version 1, it uses"
                },
                {
                    "id": "<sentence_0x1ed14bf4>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf78d0577>": "https://attack.mitre.org/techniques/T1480"
                    },
                    "text": "",
                    "html": "<a href=\"https://attack.mitre.org/techniques/T1480\"> </a>"
                },
                {
                    "id": "<sentence_0x16272f9c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf78d0577>": "https://attack.mitre.org/techniques/T1480"
                    },
                    "text": "Execution Guardrails (Mitre ATT&CK T1480)",
                    "html": "<a href=\"https://attack.mitre.org/techniques/T1480\">Execution Guardrails (Mitre ATT&amp;CK T1480)</a>"
                },
                {
                    "id": "<sentence_0x628153a1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "by only executing the rest of the script if XMRig is not already installed. It also performs",
                    "html": " by only executing the rest of the script if XMRig is not already installed. It also performs"
                },
                {
                    "id": "<sentence_0xf1b05dbc>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x5955da8f>": "https://attack.mitre.org/techniques/T1562/"
                    },
                    "text": "Impair Defenses (ATT&CK T1562)",
                    "html": "<a href=\"https://attack.mitre.org/techniques/T1562/\"> Impair Defenses (ATT&amp;CK T1562)</a>"
                },
                {
                    "id": "<sentence_0xfe4b8ac8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "by disabling various defensive services, especially Alibaba Cloud agents such as aliyun-service, cloudmonitor and aegis along with the",
                    "html": " by disabling various defensive services, especially Alibaba Cloud agents such as aliyun-service, cloudmonitor and aegis along with the "
                },
                {
                    "id": "<sentence_0x80a89b00>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe2f7280e>": "https://www.bmc.com/"
                    },
                    "text": "BMC agent",
                    "html": "<a href=\"https://www.bmc.com/\">BMC agent</a>"
                },
                {
                    "id": "<sentence_0x94375fa1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ". It also will clean up previous miners that may have been installed, including moneroocean. There are no attempts made to disable AWS defensive services such as CloudTrail or GuardDuty through API calls, so unfortunately, none of SCA's current Impair Defenses alerts would capture this behavior.<crlf>Once the system checks have been completed, a configuration file for XMRig is written to disk at the path \"/usr/sbin/.configure/config.json\". The defanged configuration template utilized is",
                    "html": ". It also will clean up previous miners that may have been installed, including moneroocean. There are no attempts made to disable AWS defensive services such as CloudTrail or GuardDuty through API calls, so unfortunately, none of SCA's current Impair Defenses alerts would capture this behavior. \nOnce the system checks have been completed, a configuration file for XMRig is written to disk at the path \"/usr/sbin/.configure/config.json\". The defanged configuration template utilized is "
                },
                {
                    "id": "<sentence_0x98b0e430>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe450d72b>": "https://talosintelligence.com/resources/426"
                    },
                    "text": "saved here",
                    "html": "<a href=\"https://talosintelligence.com/resources/426\">saved here</a>"
                },
                {
                    "id": "<sentence_0xd5ee30a3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ", and includes a number of Monero pools to contribute to if mining is successfully set up on the victim infrastructure",
                    "html": ", and includes a number of Monero pools to contribute to if mining is successfully set up on the victim infrastructure"
                },
                {
                    "id": "<sentence_0x6cddcea6>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x6e95f058>": "https://attack.mitre.org/techniques/T1496/"
                    },
                    "text": "(ATT&CK T1496, Resource Hijacking.)",
                    "html": "<a href=\"https://attack.mitre.org/techniques/T1496/\">(ATT&amp;CK T1496, Resource Hijacking.)</a>"
                },
                {
                    "id": "<sentence_0xff091022>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After creating the config file, xmrig is downloaded, setup and executed, with the target hash rate set to 70% of the available CPU capacity and large memory pages enabled. A system service is created to make sure XMRig survives reboots with the alias \"sad_service.service\" using systemctl (",
                    "html": " After creating the config file, xmrig is downloaded, setup and executed, with the target hash rate set to 70% of the available CPU capacity and large memory pages enabled. A system service is created to make sure XMRig survives reboots with the alias \"sad_service.service\" using systemctl ("
                },
                {
                    "id": "<sentence_0x18a605b6>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xe4932d6a>": "https://attack.mitre.org/techniques/T1547/"
                    },
                    "text": "ATT&CK T1547",
                    "html": "<a href=\"https://attack.mitre.org/techniques/T1547/\">ATT&amp;CK T1547</a>"
                },
                {
                    "id": "<sentence_0xf4809e57>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "). Finally, the SSH key specified at the beginning of the script is added to the authorized SSH keys for the system for persistence, and the file \"k32r.sh\" is deleted. Considering no cloud provider API calls are made, it is unlikely that any SCA alerts would fire for this script's execution, although network traffic from XMRig to the mining pool addresses might be caught after execution.<crlf>Setup_Rainbow_miner.sh",
                    "html": "). Finally, the SSH key specified at the beginning of the script is added to the authorized SSH keys for the system for persistence, and the file \"k32r.sh\" is deleted. Considering no cloud provider API calls are made, it is unlikely that any SCA alerts would fire for this script's execution, although network traffic from XMRig to the mining pool addresses might be caught after execution. \nSetup_Rainbow_miner.sh\n"
                },
                {
                    "id": "<sentence_0x208ec82e>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x7bb7e05d>": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhohVLonYnkStS76V5V3_wuff-YCsHXKRzEb5rE3q4XsVQkTEkdzkwfiJK2-N_f_Cv5Kcf1e_FG7EdwQKi6j8GMAwJJi_n27iv77wIZJFQ17Z44GHWn6NFhslT-zaRePgKfbCQkITD_7ansEZ-uvK9W2TBy_KWhWLCWqVp3CeaMineUGD78hgnc34hH/w640-h283/image3.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" border=\"0\" height=\"283\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhohVLonYnkStS76V5V3_wuff-YCsHXKRzEb5rE3q4XsVQkTEkdzkwfiJK2-N_f_Cv5Kcf1e_FG7EdwQKi6j8GMAwJJi_n27iv77wIZJFQ17Z44GHWn6NFhslT-zaRePgKfbCQkITD_7ansEZ-uvK9W2TBy_KWhWLCWqVp3CeaMineUGD78hgnc34hH/w640-h283/image3.png\" width=\"640\"/>"
                },
                {
                    "id": "<sentence_0xf3ddf817>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This file is a simple script that clones the open-source",
                    "html": "\nThis file is a simple script that clones the open-source "
                },
                {
                    "id": "<sentence_0xea68c68>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xbade9eda>": "https://github.com/rainbowminer/RainbowMiner"
                    },
                    "text": "RainbowMiner from GitHub",
                    "html": "<a href=\"https://github.com/rainbowminer/RainbowMiner\">RainbowMiner from GitHub</a>"
                },
                {
                    "id": "<sentence_0x3532cad4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ", uses cURL to download",
                    "html": ", uses cURL to download "
                },
                {
                    "id": "<sentence_0xf465e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x53ebe6cc>": "https://github.com/PowerShell/PowerShell/releases/download/v7.1.3/powershell_7.1.3-1.ubuntu.18.04_amd64."
                    },
                    "text": "PowerShell from GitHub",
                    "html": "<a href=\"https://github.com/PowerShell/PowerShell/releases/download/v7.1.3/powershell_7.1.3-1.ubuntu.18.04_amd64.\">PowerShell from GitHub</a>"
                },
                {
                    "id": "<sentence_0xe3094660>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ", and writes a configuration file to disk at the following location: \"/usr/bin/rbm/Config/config.txt\" and runs three other scripts: install.sh, initclient.sh and start-screen.sh. It also performs the usual hostname and existing service checks and cleans up old configuration files if they are present on the system. The configuration file contains the server login information in the screenshot above. By pinging the IP address, it was determined that the server is still up, but we've not been able to determine any other further details.<crlf>Setup_ETH_Miner.sh<crlf>Similarly to Setup_Rainbow_miner.sh, this script specifies the URLs for the open-source",
                    "html": ", and writes a configuration file to disk at the following location: \"/usr/bin/rbm/Config/config.txt\" and runs three other scripts: install.sh, initclient.sh and start-screen.sh. It also performs the usual hostname and existing service checks and cleans up old configuration files if they are present on the system. The configuration file contains the server login information in the screenshot above. By pinging the IP address, it was determined that the server is still up, but we've not been able to determine any other further details.\nSetup_ETH_Miner.sh\nSimilarly to Setup_Rainbow_miner.sh, this script specifies the URLs for the open-source "
                },
                {
                    "id": "<sentence_0xbda6992c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x7256495b>": "https://github.com/Lolliedieb/lolMiner-releases/releases/download/1.31/lolMiner_v1.31_Lin64.tar.gz"
                    },
                    "text": "lolMiner from GitHub",
                    "html": "<a href=\"https://github.com/Lolliedieb/lolMiner-releases/releases/download/1.31/lolMiner_v1.31_Lin64.tar.gz\"> lolMiner from GitHub</a>"
                },
                {
                    "id": "<sentence_0xcaff281>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "and the NVIDIA Tesla_T4 driver, and starts mining with the command:<crlf>./systemd --algo ETHASH --pool 51.195.105.101:2020 --user 0x7420343c767fa5942aF034a6C61b13060160f59C.$(cat /etc/hostname)<crlf>It also performs a check for the presence of VGA devices using the lspci utility. Despite specifying the URLs for lolMiner and the Nvidia driver, it does not appear to download or install it.<crlf>Setup_ETH_MinerService.sh<crlf>Building upon Setup_ETH_Miner.sh, this script starts mining using the same Ether pool, writes the process ID number of the miner to the file \"/usr/bin/emin.dat\" and sets up the process as a system service. The service provides options for starting, stopping, restarting and getting the status of the miner.<crlf>Setup_WeaveScope.sh<crlf>To handle monitoring all the other container scripts included, the open-source",
                    "html": " and the NVIDIA Tesla_T4 driver, and starts mining with the command:\n./systemd --algo ETHASH --pool 51.195.105.101:2020 --user 0x7420343c767fa5942aF034a6C61b13060160f59C.$(cat /etc/hostname) \nIt also performs a check for the presence of VGA devices using the lspci utility. Despite specifying the URLs for lolMiner and the Nvidia driver, it does not appear to download or install it. \nSetup_ETH_MinerService.sh\nBuilding upon Setup_ETH_Miner.sh, this script starts mining using the same Ether pool, writes the process ID number of the miner to the file \"/usr/bin/emin.dat\" and sets up the process as a system service. The service provides options for starting, stopping, restarting and getting the status of the miner. \nSetup_WeaveScope.sh\nTo handle monitoring all the other container scripts included, the open-source "
                },
                {
                    "id": "<sentence_0x77431d41>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x125c7f8c>": "https://github.com/weaveworks/scope/"
                    },
                    "text": "WeaveWorks Scope",
                    "html": "<a href=\"https://github.com/weaveworks/scope/\">WeaveWorks Scope</a>"
                },
                {
                    "id": "<sentence_0x1b8a4aad>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "utility is installed using this script. First, Docker is installed and started, then a Base64-encoded version of the scope's source code is echoed to the terminal, decoded and written to \"/tmp/Cscope\". A decoded copy of the defanged script is",
                    "html": " utility is installed using this script. First, Docker is installed and started, then a Base64-encoded version of the scope's source code is echoed to the terminal, decoded and written to \"/tmp/Cscope\". A decoded copy of the defanged script is "
                },
                {
                    "id": "<sentence_0x3f3b334b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xd4aa6c12>": "https://talosintelligence.com/resources/425"
                    },
                    "text": "saved here.",
                    "html": "<a href=\"https://talosintelligence.com/resources/425\">saved here.</a>"
                },
                {
                    "id": "<sentence_0xdc438d3c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Next, /tmp is mounted, /tmp/Cscope is given execute permissions, and it's launched with service token eido7wcr1dy9zqa47tjb8wb5539yqogq.<crlf>MOUNTSPLOIT_V2.sh<crlf>This script is enables persistence (ATT&CK TA0003) via editing SSH configuration (ATT&CK",
                    "html": " Next, /tmp is mounted, /tmp/Cscope is given execute permissions, and it's launched with service token eido7wcr1dy9zqa47tjb8wb5539yqogq.\nMOUNTSPLOIT_V2.sh\nThis script is enables persistence (ATT&CK TA0003) via editing SSH configuration (ATT&CK "
                },
                {
                    "id": "<sentence_0xf1dfed20>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x8ee40559>": "https://www.google.com/url?q=https://attack.mitre.org/techniques/T1098/004/"
                    },
                    "text": "T1098.004",
                    "html": "<a href=\"https://www.google.com/url?q=https://attack.mitre.org/techniques/T1098/004/\">T1098.004</a>"
                },
                {
                    "id": "<sentence_0x8873e637>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ") on the victim instance. As a secondary goal, it gathers local host system information (",
                    "html": ") on the victim instance. As a secondary goal, it gathers local host system information ("
                },
                {
                    "id": "<sentence_0x18947a56>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3c74f98a>": "https://attack.mitre.org/techniques/T1592/002/"
                    },
                    "text": "ATT&CK T1592.002)",
                    "html": "<a href=\"https://attack.mitre.org/techniques/T1592/002/\">ATT&amp;CK T1592.002)</a>"
                },
                {
                    "id": "<sentence_0xaf876122>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "using commands such as fdisk -lu and lvdisplay, and writes the output to files in /var/tmp, specifically \"auth.dat\", \"sshconfig.dat\", \"sshconfig.txt\" and \"dev_path.dat\". It includes an SSH key for \"hilde@teamtnt[.]red\",",
                    "html": " using commands such as fdisk -lu and lvdisplay, and writes the output to files in /var/tmp, specifically \"auth.dat\", \"sshconfig.dat\", \"sshconfig.txt\" and \"dev_path.dat\". It includes an SSH key for \"hilde@teamtnt[.]red\", "
                },
                {
                    "id": "<sentence_0x4e0fdfa8>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x54b86191>": "https://cisco.box.com/s/pemvg8409t3oie9rqno9hp8qkqicql44"
                    },
                    "text": "saved here",
                    "html": "<a href=\"https://cisco.box.com/s/pemvg8409t3oie9rqno9hp8qkqicql44\">saved here</a>"
                },
                {
                    "id": "<sentence_0x9a0c6d36>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ", which will be added as an authorized key and then generates a new SSH key and saves it as /root/id_rsa. It also installs OpenSSH if it is not already present on the victim system, and sets PermitRootLogin, PasswordAuthentication and PubKeyAuthentication to \"yes\" in the sshd configuration file. If the other operations are successful, it also uses SSH to download and execute Kubernetes_root_PayLoad_2.sh as the root user on localhost.<crlf>Setup_tmate.sh<crlf>As the name implies, this script installs the open-source terminal sharing utility tmate, which is a fork of tmux. While it declares",
                    "html": ", which will be added as an authorized key and then generates a new SSH key and saves it as /root/id_rsa. It also installs OpenSSH if it is not already present on the victim system, and sets PermitRootLogin, PasswordAuthentication and PubKeyAuthentication to \"yes\" in the sshd configuration file. If the other operations are successful, it also uses SSH to download and execute Kubernetes_root_PayLoad_2.sh as the root user on localhost. \nSetup_tmate.sh\nAs the name implies, this script installs the open-source terminal sharing utility tmate, which is a fork of tmux. While it declares "
                },
                {
                    "id": "<sentence_0x679f9e93>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x379d6e11>": "https://github.com/tmate-io/tmate/releases/download/2.4.0/tmate-2.4.0-static-linux-amd64.tar.xz"
                    },
                    "text": "the GitHub URL",
                    "html": "<a href=\"https://github.com/tmate-io/tmate/releases/download/2.4.0/tmate-2.4.0-static-linux-amd64.tar.xz\">the GitHub URL</a>"
                },
                {
                    "id": "<sentence_0xf63412bf>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "for a version of tmate as a variable, it actually downloads tmate from the distribution server 45.9.148[.]182 using wget, saving as \"tmp/tmate\". The API key \"tmk-4ST6GRXU6GPUjlXHfSlNe0ZaT2\" and session name \"testung002\" are hardcoded in the script. It appears from one of the comments in the code (the URL https://tmate[.]io/t/HildeGard/testung001) that the malware author's tmate username is HildeGard. Tmate named sessions require registration according to",
                    "html": " for a version of tmate as a variable, it actually downloads tmate from the distribution server 45.9.148[.]182 using wget, saving as \"tmp/tmate\". The API key \"tmk-4ST6GRXU6GPUjlXHfSlNe0ZaT2\" and session name \"testung002\" are hardcoded in the script. It appears from one of the comments in the code (the URL https://tmate[.]io/t/HildeGard/testung001) that the malware author's tmate username is HildeGard. Tmate named sessions require registration according to "
                },
                {
                    "id": "<sentence_0x4e116a8>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x1467e8b3>": "https://tmate.io/"
                    },
                    "text": "their documentation,",
                    "html": "<a href=\"https://tmate.io/\">their documentation,</a>"
                },
                {
                    "id": "<sentence_0xe9406b0c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "meaning tmate should have at a minimum the user's email address and possibly other information.<crlf>DockerAPI-SSH-BreakOut.sh<crlf>This is a script for using SSH to connect to the localhost IP address and execute the script",
                    "html": " meaning tmate should have at a minimum the user's email address and possibly other information. \nDockerAPI-SSH-BreakOut.sh\nThis is a script for using SSH to connect to the localhost IP address and execute the script "
                },
                {
                    "id": "<sentence_0x5aed2a68>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x5a2b95c4>": "https://raw.githubusercontent.com/MoneroOcean/xmrig_setup/master/setup_moneroocean_miner.sh"
                    },
                    "text": "setup_moneroocean_miner.sh",
                    "html": "<a href=\"https://raw.githubusercontent.com/MoneroOcean/xmrig_setup/master/setup_moneroocean_miner.sh\">setup_moneroocean_miner.sh</a>"
                },
                {
                    "id": "<sentence_0x6e8caf64>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "on the instance at that IP by first removing any existing SSH keys containing the string \"chimaera\" in their name, then generating a new keypair with ssh-keygen and attempting to write it to /root/.ssh/authorized_keys. It then will attempt to connect to root@127.0.0.1, echo a Base64-encoded version of the MoneroOcean script to the SSH terminal, decode it and run it. Next, it downloads the same MoneroOcean setup script from GitHub using cURL and tries to execute it again.<crlf>Kubernetes.LAN.IP.Range.sh<crlf>This script's primary purpose is scanning local IP address ranges and then deploying various miner payloads to any Kubernetes clusters or other instances within them. It performs the usual hostname and guardrail checks, looking for the path \"/etc/.../.kube.lan.lock/\" and exiting if present, or creating the directory if not. Then it uses a custom pull() function to download cURL from 85.214.149[.]236, and then uses cURL to reach out to iplogger[.]org/1A4Cu7 which is a logging and analytics site, and icanhazip.com to get the victim system's public IP address. Next, it saves the file at http://chimaera[.]cc/data/bot.txt as ~/.dockerd, and then installs and tests pnscan, jq and masscan, pulls the file libpcap.so from 85.214.149[.]236 and sets it as the environment variable LD_PRELOAD. This ensures that the libpcap library will be loaded into any future C programs compiled before any other libraries are loaded. Next, any existing file at \"/usr/bin/kuben2\" is deleted and the script is downloaded again using wget. Then, the IP ranges 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 169.254.0.0/16, and \"100.64.0.0/10\" are scanned using masscan and the results are saved in \"/var/tmp/.out.txt\". Finally, kuben2 is run with each local IP identified, and finally \"/var/tmp/.out.txt\" is deleted and the bash history is cleared.<crlf>Kubernetes_scan_LAN_IPs.sh<crlf>This seems to be an incomplete or corrupted script. It performs the normal environment setup and discovery and the hostname check, with no actual functionality.<crlf>Docker-API.IP.Range.sh<crlf>This is another container-oriented infection script, targeting Docker this time. The comments are again in German, and the description translates to \"Infects all Docker containers of an x86_64 system with XmRig.The file /.dockerenv is replaced by XMRig and started'. As is typical, it checks if it has been run already on the target instance by looking for a hidden directory called \".docker-api.ip.range.lock\" and exits if so. If not, it makes this directory and then attempts to kill masscan, pnscan and zgrab if they are running. It will also check if jq, masscan, zgrab, pnscan, docker and cURL are installed, and download them from \"http://dl1.chimaera[.]cc:443/sugarcrm/themes/default/images/SugarLogic/...\" if not. Additionally, the files \"libpcap.so\", \"ca.pem\" and \"kuben2.sh\" are downloaded from \"http://chimaera[.]cc\" All of these utilities are installed and tested, the LD_PRELOAD environment variable is exported, and the file http://chimaera[.]cc/data/bot.txt is downloaded and saved as ~/.dockerd.<crlf>kuben2.sh<crlf>The following section in this script provides documentation on what the other scripts perform:<crlf>P1L=\"http://chimaera[.]cc/sh/Kubernetes.put.the.bot.sh\" # first touch payload<crlf>P2L=\"http://chimaera[.]cc/sh/MountSshExploit.sh\" # mount & breakout payload<crlf>P3L=\"http://chimaera[.]cc/sh/mo.sh\" # setup root pod miner<crlf>P4L=\"http://chimaera[.]cc/sh/Kubernetes.XMR.tmp.Setup.sh\" # setup temporr pod miner<crlf>P5L=\"http://chimaera[.]cc/sh/Kubernetes.put.the.bot.sh\" # install just the bot payload<crlf>Kubernetes.XMR.tmp.Setup.sh<crlf>This is a simple script that downloads XMRig from http://chimaera[.]cc/bin/x86_64/xmrig and saves it as /tmp/xmrig, then runs it with the IP 15.236.100[.]141:10128 and a wallet address (captured in the \"Indicators of Compromise\" section below) specified. From the name, we can presume it was intended for use in Kubernetes pods, but could conceivably be run on almost any Linux-based system.",
                    "html": " on the instance at that IP by first removing any existing SSH keys containing the string \"chimaera\" in their name, then generating a new keypair with ssh-keygen and attempting to write it to /root/.ssh/authorized_keys. It then will attempt to connect to root@127.0.0.1, echo a Base64-encoded version of the MoneroOcean script to the SSH terminal, decode it and run it. Next, it downloads the same MoneroOcean setup script from GitHub using cURL and tries to execute it again. \nKubernetes.LAN.IP.Range.sh\nThis script's primary purpose is scanning local IP address ranges and then deploying various miner payloads to any Kubernetes clusters or other instances within them. It performs the usual hostname and guardrail checks, looking for the path \"/etc/.../.kube.lan.lock/\" and exiting if present, or creating the directory if not. Then it uses a custom pull() function to download cURL from 85.214.149[.]236, and then uses cURL to reach out to iplogger[.]org/1A4Cu7 which is a logging and analytics site, and icanhazip.com to get the victim system's public IP address. Next, it saves the file at http://chimaera[.]cc/data/bot.txt as ~/.dockerd, and then installs and tests pnscan, jq and masscan, pulls the file libpcap.so from 85.214.149[.]236 and sets it as the environment variable LD_PRELOAD. This ensures that the libpcap library will be loaded into any future C programs compiled before any other libraries are loaded. Next, any existing file at \"/usr/bin/kuben2\" is deleted and the script is downloaded again using wget. Then, the IP ranges 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 169.254.0.0/16, and \"100.64.0.0/10\" are scanned using masscan and the results are saved in \"/var/tmp/.out.txt\". Finally, kuben2 is run with each local IP identified, and finally \"/var/tmp/.out.txt\" is deleted and the bash history is cleared. \nKubernetes_scan_LAN_IPs.sh\nThis seems to be an incomplete or corrupted script. It performs the normal environment setup and discovery and the hostname check, with no actual functionality. \nDocker-API.IP.Range.sh\nThis is another container-oriented infection script, targeting Docker this time. The comments are again in German, and the description translates to \"Infects all Docker containers of an x86_64 system with XmRig.The file /.dockerenv is replaced by XMRig and started'. As is typical, it checks if it has been run already on the target instance by looking for a hidden directory called \".docker-api.ip.range.lock\" and exits if so. If not, it makes this directory and then attempts to kill masscan, pnscan and zgrab if they are running. It will also check if jq, masscan, zgrab, pnscan, docker and cURL are installed, and download them from \"http://dl1.chimaera[.]cc:443/sugarcrm/themes/default/images/SugarLogic/...\" if not. Additionally, the files \"libpcap.so\", \"ca.pem\" and \"kuben2.sh\" are downloaded from \"http://chimaera[.]cc\" All of these utilities are installed and tested, the LD_PRELOAD environment variable is exported, and the file http://chimaera[.]cc/data/bot.txt is downloaded and saved as ~/.dockerd. \nkuben2.sh\nThe following section in this script provides documentation on what the other scripts perform:\nP1L=\"http://chimaera[.]cc/sh/Kubernetes.put.the.bot.sh\" # first touch payload\nP2L=\"http://chimaera[.]cc/sh/MountSshExploit.sh\" # mount & breakout payload\nP3L=\"http://chimaera[.]cc/sh/mo.sh\" # setup root pod miner\nP4L=\"http://chimaera[.]cc/sh/Kubernetes.XMR.tmp.Setup.sh\" # setup tempor\u00e4r pod miner\nP5L=\"http://chimaera[.]cc/sh/Kubernetes.put.the.bot.sh\" # install just the bot payload\nKubernetes.XMR.tmp.Setup.sh\nThis is a simple script that downloads XMRig from http://chimaera[.]cc/bin/x86_64/xmrig and saves it as /tmp/xmrig, then runs it with the IP 15.236.100[.]141:10128 and a wallet address (captured in the \"Indicators of Compromise\" section below) specified. From the name, we can presume it was intended for use in Kubernetes pods, but could conceivably be run on almost any Linux-based system. \n"
                }
            ]
        },
        {
            "id": "<chapter_0x380e4189>",
            "title": "TeamTNT disables cloud security",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0xc8baf47c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "There are two public articles about TeamTNT's defense impairment capabilities by",
                    "html": "\nThere are two public articles about TeamTNT's defense impairment capabilities by "
                },
                {
                    "id": "<sentence_0x31418600>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x596cce68>": "https://www.trendmicro.com/en_us/research/21/k/groups-target-alibaba-ecs-instances-for-cryptojacking.html"
                    },
                    "text": "Trend Micro",
                    "html": "<a href=\"https://www.trendmicro.com/en_us/research/21/k/groups-target-alibaba-ecs-instances-for-cryptojacking.html\">Trend Micro</a>"
                },
                {
                    "id": "<sentence_0x74cae4f2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "and",
                    "html": " and "
                },
                {
                    "id": "<sentence_0xb310d985>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x42be3e56>": "https://www.cadosecurity.com/team-tnt-the-first-crypto-mining-worm-to-steal-aws-credentials/"
                    },
                    "text": "Cado Security",
                    "html": "<a href=\"https://www.cadosecurity.com/team-tnt-the-first-crypto-mining-worm-to-steal-aws-credentials/\">Cado Security</a>"
                },
                {
                    "id": "<sentence_0xb81c5ffd>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ", but neither goes into substantive detail. There is one rather unique and interesting aspect that was not covered in depth in either of those documents, which is their extensive capabilities around disabling cloud security tools (",
                    "html": ", but neither goes into substantive detail. There is one rather unique and interesting aspect that was not covered in depth in either of those documents, which is their extensive capabilities around disabling cloud security tools ("
                },
                {
                    "id": "<sentence_0xe95097bb>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf0347af1>": "https://attack.mitre.org/techniques/T1562/008/"
                    },
                    "text": "Mitre T1562.008",
                    "html": "<a href=\"https://attack.mitre.org/techniques/T1562/008/\">Mitre T1562.008</a>"
                },
                {
                    "id": "<sentence_0xf9509fc4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ".) TeamTNT is of interest due to its use of techniques that target modern development operations environments such as Docker, Kubernetes and public cloud providers, long avoided by malware authors who traditionally stick to on-premise and mobile environments. Basic analysis of the functions and their capabilities is provided below, followed by the results of setting up a virtual machine with the defensive security agents targeted for impairment and running the TeamTNT tool to test their actual behavior. IOCs identified and defensive recommendations are also provided.",
                    "html": ".) TeamTNT is of interest due to its use of techniques that target modern development operations environments such as Docker, Kubernetes and public cloud providers, long avoided by malware authors who traditionally stick to on-premise and mobile environments. Basic analysis of the functions and their capabilities is provided below, followed by the results of setting up a virtual machine with the defensive security agents targeted for impairment and running the TeamTNT tool to test their actual behavior. IOCs identified and defensive recommendations are also provided. \n"
                }
            ]
        },
        {
            "id": "<chapter_0x596cffae>",
            "title": "Analysis",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x84720625>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The majority of the defense impairment functions are targeted at",
                    "html": "\nThe majority of the defense impairment functions are targeted at "
                },
                {
                    "id": "<sentence_0x4ea0ab0f>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa83dee6a>": "https://www.alibabacloud.com/help/en/product/28498.html"
                    },
                    "text": "Alibaba Cloud Security's",
                    "html": "<a href=\"https://www.alibabacloud.com/help/en/product/28498.html\">Alibaba Cloud Security's</a>"
                },
                {
                    "id": "<sentence_0xbdbbd2e1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "various agents, but",
                    "html": " various agents, but "
                },
                {
                    "id": "<sentence_0x3c978427>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa7bb7ad8>": "https://intl.cloud.tencent.com/document/product/248/32799"
                    },
                    "text": "Tencent Cloud Monitor",
                    "html": "<a href=\"https://intl.cloud.tencent.com/document/product/248/32799\">Tencent Cloud Monitor</a>"
                },
                {
                    "id": "<sentence_0x6be1a4c0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "and the third-party",
                    "html": " and the third-party "
                },
                {
                    "id": "<sentence_0x21553b70>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xacc5aed7>": "https://docs.bmc.com/docs/CloudSecurity/home-680323802.html"
                    },
                    "text": "BMC Helix Cloud Security",
                    "html": "<a href=\"https://docs.bmc.com/docs/CloudSecurity/home-680323802.html\">BMC Helix Cloud Security</a>"
                },
                {
                    "id": "<sentence_0x968f3d64>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "agents are also targeted. This is of interest as while the majority of the malicious scripts target Amazon Web Services (AWS) Elastic Compute Cloud (EC2) virtual machines, these agents are most commonly found running within Alibaba Cloud Elastic Compute Service (ECS) or a Tencent Cloud VM. They certainly could be installed on a VM running within AWS or any other service, however, that would be somewhat unusual. TeamTNT does not make any attempts to disable the AWS CloudWatch agent, Microsoft Defender, Google Cloud Monitor, Cisco Secure Cloud Analytics, CrowdStrike Falcon, Palo Alto Prisma Cloud, or other common United States cloud security tools.<crlf>A version of the Alibaba defense impairment functions has been extracted from the script Kubernetes_root_payload_2.sh and",
                    "html": " agents are also targeted. This is of interest as while the majority of the malicious scripts target Amazon Web Services (AWS) Elastic Compute Cloud (EC2) virtual machines, these agents are most commonly found running within Alibaba Cloud Elastic Compute Service (ECS) or a Tencent Cloud VM. They certainly could be installed on a VM running within AWS or any other service, however, that would be somewhat unusual. TeamTNT does not make any attempts to disable the AWS CloudWatch agent, Microsoft Defender, Google Cloud Monitor, Cisco Secure Cloud Analytics, CrowdStrike Falcon, Palo Alto Prisma Cloud, or other common United States cloud security tools.\nA version of the Alibaba defense impairment functions has been extracted from the script Kubernetes_root_payload_2.sh and "
                },
                {
                    "id": "<sentence_0x220f30b4>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x43d18331>": "https://cisco.box.com/s/gydn8ahfq16pseu4t3povfyrdrj0ifmr"
                    },
                    "text": "are saved here.",
                    "html": "<a href=\"https://cisco.box.com/s/gydn8ahfq16pseu4t3povfyrdrj0ifmr\">are saved here. </a>"
                },
                {
                    "id": "<sentence_0xfda91714>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The defense impairment functions have several",
                    "html": "The defense impairment functions have several "
                },
                {
                    "id": "<sentence_0x77b60878>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x4f16b4c4>": "https://talosintelligence.com/resources/422"
                    },
                    "text": "Base64 encoded strings",
                    "html": "<a href=\"https://talosintelligence.com/resources/422\" target=\"_blank\">Base64 encoded strings</a>"
                },
                {
                    "id": "<sentence_0xdab93a62>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ", which makes static analysis difficult so those functions have been decoded and copied back into the file",
                    "html": ", which makes static analysis difficult so those functions have been decoded and copied back into the file "
                },
                {
                    "id": "<sentence_0xbaba8c01>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xb3c09300>": "https://talosintelligence.com/resources/421"
                    },
                    "text": "ali-defense-impairment-base64-decoded.sh.txt here",
                    "html": "<a href=\"https://talosintelligence.com/resources/421\" target=\"_blank\">ali-defense-impairment-base64-decoded.sh.txt here</a>"
                },
                {
                    "id": "<sentence_0x7a2cd90f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ".<crlf>The following is a description of the various functions related to Alibaba defense impairment, in order:",
                    "html": ". \nThe following is a description of the various functions related to Alibaba defense impairment, in order:\n"
                },
                {
                    "id": "<sentence_0xc089b47e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xca64fe2e>": "https://www.alibabacloud.com/help/en/doc-detail/68611.htm%23concept-rbw-fzc-zdb",
                        "<a_0xa83dee6a>": "https://www.alibabacloud.com/help/en/product/28498.html",
                        "<a_0xf53a3e92>": "https://www.kernel.org/doc/html/latest/trace/kprobes.html",
                        "<a_0x476ef66a>": "https://www.man7.org/linux/man-pages/man8/umount.8.html",
                        "<a_0x62bbbf3>": "https://www.man7.org/linux/man-pages/man1/systemctl.1.html",
                        "<a_0x7055a92>": "https://www.unix.com/man-page/debian/4/init.d/"
                    },
                    "text": "If there is a running process containing the string [a]liyun (with the 'a' being optional) in its name the operating system will be profiled by a simple check of the /etc/os-release file, then attempts will be made to kill various running Alibaba tools. Alibaba Cloud's official English/US documentation provides more information about their aegis cloud security agent and about the Security Center threat detection and posture management service.<crlf>The next function prints the name of various potential kprobes for aegis function calls to the command line, which will either enable or disable them depending on if they were already set on the system. Kprobes provide monitoring of any specified kernel instruction and are typically used for debugging or by security tools.<crlf>Next, if the default aegis directory (/usr/local/aegis) is present on the system, attempts will be made using the umount command to unmount and then remove various sub directories, as well as delete the code for aegis and its associated utilities.<crlf>At this point, aegis and associated tools should have been stopped, their instruction monitors disabled and their installation directory removed. Next, the function uninstall_service and stop/remove functions attempt to actually remove the installed agent, using various approaches depending on which distribution of Linux the script is running on.<crlf>If a systemctl orinit.d service is registered for aliyun or the bcm-agent (which is the Linux agent for BMC Helix), those are also disabled and stopped.<crlf>The yum and apt-get package managers are also utilized to attempt to remove the aegis, bcm and aliyun agents.<crlf>Finally, the malware attempts to disable and remove Tencent Cloud's qcloud agents and the Alibaba cloudmonitor tool, a GoLang version of their cloud security agent.",
                    "html": "<ul>\n<li>\nIf there is a running process containing the string [a]liyun (with the 'a' being optional) in its name the operating system will be profiled by a simple check of the /etc/os-release file, then attempts will be made to kill various running Alibaba tools. Alibaba Cloud's official English/US documentation provides more information about their <a href=\"https://www.alibabacloud.com/help/en/doc-detail/68611.htm%23concept-rbw-fzc-zdb\">aegis cloud security agent</a> and about the <a href=\"https://www.alibabacloud.com/help/en/product/28498.html\">Security Center threat detection and posture management service</a>.</li>\n<li>\nThe next function prints the name of various potential <a href=\"https://www.kernel.org/doc/html/latest/trace/kprobes.html\">kprobes</a> for aegis function calls to the command line, which will either enable or disable them depending on if they were already set on the system. Kprobes provide monitoring of any specified kernel instruction and are typically used for debugging or by security tools.</li>\n<li>\nNext, if the default aegis directory (/usr/local/aegis) is present on the system, attempts will be made using the <a href=\"https://www.man7.org/linux/man-pages/man8/umount.8.html\">umount command</a> to unmount and then remove various sub directories, as well as delete the code for aegis and its associated utilities.</li>\n<li>\nAt this point, aegis and associated tools should have been stopped, their instruction monitors disabled and their installation directory removed. Next, the function uninstall_service and stop/remove functions attempt to actually remove the installed agent, using various approaches depending on which distribution of Linux the script is running on.</li>\n<li>\nIf a <a href=\"https://www.man7.org/linux/man-pages/man1/systemctl.1.html\">systemctl</a> or<a href=\"https://www.unix.com/man-page/debian/4/init.d/\">init.d</a> service is registered for aliyun or the bcm-agent (which is the Linux agent for BMC Helix), those are also disabled and stopped.</li>\n<li>\nThe yum and apt-get package managers are also utilized to attempt to remove the aegis, bcm and aliyun agents.</li>\n<li>\nFinally, the malware attempts to disable and remove Tencent Cloud's qcloud agents and the Alibaba cloudmonitor tool, a GoLang version of their cloud security agent.</li>\n</ul>"
                }
            ]
        },
        {
            "id": "<chapter_0x131d9dbc>",
            "title": "Testing",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x27dfb9b5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Alibaba",
                    "html": "\nAlibaba\n"
                },
                {
                    "id": "<sentence_0x58cfefa4>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xbe7a0f08>": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgOsIE1gLq2llGv94vtNlb1ePQXVUoTHO5ZJZ-obHupX3KQtr1fb1-MQjCHeQPK5VaGRyMONQrTL0GhmF1-0SHJQayR9IwpcOCqimIgvZqgFXDS3VqDzfDtNtaEQzGQYXymr8dDTZKSDKWKyzQ_zuiX1o5FZZqzEOsMgkiAHRHN6aiEkBPQODydH5iJ/w640-h81/image2.png"
                    },
                    "text": "",
                    "html": "<img alt=\"\" border=\"0\" height=\"81\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgOsIE1gLq2llGv94vtNlb1ePQXVUoTHO5ZJZ-obHupX3KQtr1fb1-MQjCHeQPK5VaGRyMONQrTL0GhmF1-0SHJQayR9IwpcOCqimIgvZqgFXDS3VqDzfDtNtaEQzGQYXymr8dDTZKSDKWKyzQ_zuiX1o5FZZqzEOsMgkiAHRHN6aiEkBPQODydH5iJ/w640-h81/image2.png\" width=\"640\"/>"
                },
                {
                    "id": "<sentence_0x9ca5b64b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To test out these capabilities, the aegis Alibaba Cloud Security agent was installed on an EC2 instance within AWS, which also had the Cisco Secure Endpoint (CSE) client installed and Cisco Secure Cloud Analytics (SCA) integrated with the AWS account. The following command was utilized to install Alibaba's agents:",
                    "html": "\nTo test out these capabilities, the aegis Alibaba Cloud Security agent was installed on an EC2 instance within AWS, which also had the Cisco Secure Endpoint (CSE) client installed and Cisco Secure Cloud Analytics (SCA) integrated with the AWS account. The following command was utilized to install Alibaba's agents: \n"
                },
                {
                    "id": "<sentence_0x8332fd39>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "wget \"https://aegis.alicdn.com/download/install/2.0/linux/AliAqsInstall.sh\" && chmod +x AliAqsInstall.sh && sudo ./AliAqsInstall.sh -k=Lu7q94",
                    "html": "<ul>\n<li>\nwget \"https://aegis.alicdn.com/download/install/2.0/linux/AliAqsInstall.sh\" &amp;&amp; chmod +x AliAqsInstall.sh &amp;&amp; sudo ./AliAqsInstall.sh -k=Lu7q94</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xbab957b1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After about five minutes, the VM showed up in Alibaba Cloud Security's \"Assets\" page as pictured above, and various vulnerability and configuration information could be assessed. Next, the TeamTNT script Kubernetes_root_payload_2.sh, which has been modified to send all network traffic to a Google Cloud VM rather than the actual TeamTNT server, was transferred to the target EC2 instance.<crlf>The script was run first without root privileges, which caused a large amount of permission denied errors for the removal of various files and directories, then with sudo. The cloud defense impairment functions worked as intended, shutting down the agent and removing all related files. There was a systemctl service left for aegis but it was no longer running. From the Alibaba Cloud console side, the connection to the agent and thus monitoring of the EC2 instance was lost. The XMRig configuration and other files were created in the directory /usr/sbin/.configure. Originally, before the script was modified to not contact the actual TeamTNT infrastructure, XMRig was downloaded from the IP address 85.214.149.236. A new user home directory, \"hilde\", is also created with an authorized SSH keys file that's available in the same extracted files directory. For other Indicators of Compromise, see the end of this document.",
                    "html": "\nAfter about five minutes, the VM showed up in Alibaba Cloud Security's \"Assets\" page as pictured above, and various vulnerability and configuration information could be assessed. Next, the TeamTNT script Kubernetes_root_payload_2.sh, which has been modified to send all network traffic to a Google Cloud VM rather than the actual TeamTNT server, was transferred to the target EC2 instance. \nThe script was run first without root privileges, which caused a large amount of permission denied errors for the removal of various files and directories, then with sudo. The cloud defense impairment functions worked as intended, shutting down the agent and removing all related files. There was a systemctl service left for aegis but it was no longer running. From the Alibaba Cloud console side, the connection to the agent and thus monitoring of the EC2 instance was lost. The XMRig configuration and other files were created in the directory /usr/sbin/.configure. Originally, before the script was modified to not contact the actual TeamTNT infrastructure, XMRig was downloaded from the IP address 85.214.149.236. A new user home directory, \"hilde\", is also created with an authorized SSH keys file that's available in the same extracted files directory. For other Indicators of Compromise, see the end of this document. \n"
                }
            ]
        },
        {
            "id": "<chapter_0x9f6287a2>",
            "title": "Defensive Recommendations",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x7b4bfb77>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Prevention<crlf>Standard AWS security best practices will help limit the threat from cryptominers and other threats by reducing access to credentials with the requisite permissions to install them. To reduce the number of accounts with unnecessary permissions, don't use the account root user or provide users console access unless they need it and give high-privileged users the PowerUser policy rather than admin. It's also best practice to use role-based authentication with temporary tokens where possible. Require multi-factor authentication for all Identity and Access Management (IAM) users and the root user and implement automated static analysis of all source code to make sure no credentials are accidentally leaked as part of public code. Moving beyond IAM, AWS CloudTrail and GuardDuty should be enabled and Cisco Secure Cloud Analytics (SCA) should be integrated so that any adversaries that do get access to the target account will have their actions logged and alerted on. AWS CloudWatch can be configured to collect system logs and metrics from all Amazon Elastic Compute Cloud (EC2) instances for both detection and forensic analysis in the event of an incident. This is particularly useful for cryptocurrency mining, as high CPU, GPU or storage utilization is a common sign of cryptomining. AWS Systems Manager can also be set up to provide a more secure, IAM-based way of accessing EC2 instances remotely, without requiring an open network port and key management infrastructure for SSH. Instances being created in new regions or anomalous autoscaling events are also always of concern.",
                    "html": "\nPrevention\nStandard AWS security best practices will help limit the threat from cryptominers and other threats by reducing access to credentials with the requisite permissions to install them. To reduce the number of accounts with unnecessary permissions, don't use the account root user or provide users console access unless they need it and give high-privileged users the PowerUser policy rather than admin. It's also best practice to use role-based authentication with temporary tokens where possible. Require multi-factor authentication for all Identity and Access Management (IAM) users and the root user and implement automated static analysis of all source code to make sure no credentials are accidentally leaked as part of public code. Moving beyond IAM, AWS CloudTrail and GuardDuty should be enabled and Cisco Secure Cloud Analytics (SCA) should be integrated so that any adversaries that do get access to the target account will have their actions logged and alerted on. AWS CloudWatch can be configured to collect system logs and metrics from all Amazon Elastic Compute Cloud (EC2) instances for both detection and forensic analysis in the event of an incident. This is particularly useful for cryptocurrency mining, as high CPU, GPU or storage utilization is a common sign of cryptomining. AWS Systems Manager can also be set up to provide a more secure, IAM-based way of accessing EC2 instances remotely, without requiring an open network port and key management infrastructure for SSH. Instances being created in new regions or anomalous autoscaling events are also always of concern. "
                },
                {
                    "id": "<sentence_0x902e8b14>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x91b2ddfb>": "https://securingthe.cloud/aws/aws-well-architected-infrastructure-protection/"
                    },
                    "text": "Securing the Cloud",
                    "html": "<a href=\"https://securingthe.cloud/aws/aws-well-architected-infrastructure-protection/\">Securing the Cloud</a>"
                },
                {
                    "id": "<sentence_0x6c7fb290>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "has an article on other best practices for AWS infrastructure protection.<crlf>Detection<crlf>TeamTNT sets the CPU utilization to 70%, so an Amazon CloudWatch Alarm could be configured for ongoing steady utilization of exactly 70%, depending on the use case of the account and whether that is common for benign reasons. Similarly, the sudden creation or expansion of an Elastic Block Store (EBS) volume mounted to an EC2 instance to an unusual amount of utilized space may indicate a full blockchain has been downloaded, which some cryptominers perform. Of course, the defense impairment techniques themselves can be detected. At a simplistic level, if monitoring agents such as aegis unexpectedly go offline, that is concerning. Cisco Secure Cloud Analytics has a substantial amount of additional monitoring around various defense impairment techniques, but it is focused on AWS and Azure services not Alibaba Cloud Security.",
                    "html": " has an article on other best practices for AWS infrastructure protection.\nDetection\nTeamTNT sets the CPU utilization to 70%, so an Amazon CloudWatch Alarm could be configured for ongoing steady utilization of exactly 70%, depending on the use case of the account and whether that is common for benign reasons. Similarly, the sudden creation or expansion of an Elastic Block Store (EBS) volume mounted to an EC2 instance to an unusual amount of utilized space may indicate a full blockchain has been downloaded, which some cryptominers perform. Of course, the defense impairment techniques themselves can be detected. At a simplistic level, if monitoring agents such as aegis unexpectedly go offline, that is concerning. Cisco Secure Cloud Analytics has a substantial amount of additional monitoring around various defense impairment techniques, but it is focused on AWS and Azure services \u2014 not Alibaba Cloud Security. \n"
                }
            ]
        },
        {
            "id": "<chapter_0x777d56a7>",
            "title": "Conclusion",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x3b4e702f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Cybercriminals who are outed by security researchers must update their tools in order to continue to operate successfully. As defenders, we can learn a lot from the updates made by these cybercriminals. The tools used by TeamTNT demonstrate that cybercriminals are increasingly comfortable attacking modern environments such as Docker, Kubernetes and public cloud providers, which have traditionally been avoided by other cybercriminals who have instead focused on on-premise or mobile environments. Successfully deploying malware in these modern environments requires cybercriminals to get creative when it comes to avoiding detection, as we can see from TeamTNT's efforts to disable cloud security services. Network defenders must also get creative when it comes to implementing new forms of detection and monitoring if we are to ensure the ongoing security of these systems.",
                    "html": "\nCybercriminals who are outed by security researchers must update their tools in order to continue to operate successfully. As defenders, we can learn a lot from the updates made by these cybercriminals. The tools used by TeamTNT demonstrate that cybercriminals are increasingly comfortable attacking modern environments such as Docker, Kubernetes and public cloud providers, which have traditionally been avoided by other cybercriminals who have instead focused on on-premise or mobile environments. Successfully deploying malware in these modern environments requires cybercriminals to get creative when it comes to avoiding detection, as we can see from TeamTNT's efforts to disable cloud security services. Network defenders must also get creative when it comes to implementing new forms of detection and monitoring if we are to ensure the ongoing security of these systems. \n"
                },
                {
                    "id": "<sentence_0x1c6929e6>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x66ddb53b>": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi6dJbdyf0w9nKSxYY-Dze9BYHxF9viEhwljrhjDZ2X11AIa6Xp3UX8sX_Qc-HArUhdx8yQFKnCeE0zeCKOTbGhza9C2eVmP6aXsZMyVP5gUuB5reYTqS9OQbM8n2aSOZ9rC6eLEP3CNCl5Wq518PsdJbscfhttXqzkOtK9nO4SzSmneQu5rkVOpWic/s400/image5.jpg"
                    },
                    "text": "",
                    "html": "<img alt=\"\" border=\"0\" src=\"https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEi6dJbdyf0w9nKSxYY-Dze9BYHxF9viEhwljrhjDZ2X11AIa6Xp3UX8sX_Qc-HArUhdx8yQFKnCeE0zeCKOTbGhza9C2eVmP6aXsZMyVP5gUuB5reYTqS9OQbM8n2aSOZ9rC6eLEP3CNCl5Wq518PsdJbscfhttXqzkOtK9nO4SzSmneQu5rkVOpWic/s400/image5.jpg\" width=\"400\"/>"
                }
            ]
        },
        {
            "id": "<chapter_0xe755e27b>",
            "title": "Indicators of Compromise",
            "title_level": 3,
            "sentences": [
                {
                    "id": "<sentence_0x71a649dc>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Domains:<crlf>teamtnt[.]red<crlf>chimaera[.]cc<crlf>IP Addresses:<crlf>45.9.148[.]108<crlf>45.9.148[.]182<crlf>85.214.149[.]236<crlf>94.130.12[.]30<crlf>94.130.12[.]27<crlf>3.125.10[.]23<crlf>15.236.100[.]141<crlf>51.195.105[.]101<crlf>Wallet Addresses:<crlf>Monero:<crlf>85HgMCkoDiP4LQ1XN5dQ7k73h6WX3pZn3BG4K5a5YdwxiSxcJWe6JoH9jHtiLtPbYCQqzYLPyQkEBRkjSVUc1HjjDT8jJ3D<crlf>84hYzyMkfn8RAb5yMq7v7QfcZ3zgBhsGxYjMKcZU8E43ZDDwDAdKY5t84TMZqfPVW84Dq58AhP3AbUNoxznhvxEaV23f57T<crlf>438ss2gYTKze7kMqrgUagwEjtm993CVHk1uKHUBZGy6yPaZ2WNe5vdDFXGoVvtf7wcbiAUJix3NR9Ph1aq2NqSgyBkVFEtZ<crlf>Ethereum:<crlf>0x7420343c767fa5942aF034a6C61b13060160f59C",
                    "html": "\nDomains:\nteamtnt[.]red\nchimaera[.]cc\nIP Addresses:\n45.9.148[.]108\n45.9.148[.]182\n85.214.149[.]236\n94.130.12[.]30\n94.130.12[.]27\n3.125.10[.]23\n15.236.100[.]141\n51.195.105[.]101\nWallet Addresses:\nMonero:\n85HgMCkoDiP4LQ1XN5dQ7k73h6WX3pZn3BG4K5a5YdwxiSxcJWe6JoH9jHtiLtPbYCQqzYLPyQkEBRkjSVUc1HjjDT8jJ3D \n84hYzyMkfn8RAb5yMq7v7QfcZ3zgBhsGxYjMKcZU8E43ZDDwDAdKY5t84TMZqfPVW84Dq58AhP3AbUNoxznhvxEaV23f57T\n438ss2gYTKze7kMqrgUagwEjtm993CVHk1uKHUBZGy6yPaZ2WNe5vdDFXGoVvtf7wcbiAUJix3NR9Ph1aq2NqSgyBkVFEtZ\nEthereum:\n0x7420343c767fa5942aF034a6C61b13060160f59C\n"
                },
                {
                    "id": "<sentence_0xbf8fe6d1>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xbdad25a1>": "https://talosintelligence.com/resources/424"
                    },
                    "text": "SSH keys",
                    "html": "<a href=\"https://talosintelligence.com/resources/424\" target=\"_blank\">SSH keys</a>"
                },
                {
                    "id": "<sentence_0x7730e3c7>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Kubernetes_root_PayLoad_2.sh:<crlf>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDYmuFzpuEpN/KHPbQkSUT1Xe/gVl3FpIe/GlhJEnW84rCMsYhRe2xxcPc1xfZd10JBhM1kEhs5aycIYiPvLYTRi7mA88hE15OVCkwgPT2HgaY8oetbiNiu18jBygbnku2/avpf/Xl2vkcNJRwHjkik3/Vid9fSleNWeAI+RGrMRRiP4hXVBQjHbuSFlw2VDg0uZINodP+n8oWBDHGnMGei9W6OXxQ3R5C+oKBw9NA3K/drsqvJh81jbEkDXyqCG0Nj0sAUk6o/aGIIQpwxI3ez2Vi/lqm5LYsRO6ICsHP6RXJT/08XkUVNMu7BLnje2RCG/kSKjVqW8QePyajHJ64kHwYf1yeyGfObZJWhUSP3yPK6UtGxBouyA/TPTqvba4vAmUy1Jl7hyWkoa4KUwgmsEizmT9n8GEg1USPXxRWNqv0VIi5160tcoujrB85HYwjwIhbphCqhTKyNwnnFJNratI1hGurgr8t0fflC/igLph8PapiayTwTLEbNwSUwVp8D3rvBkYB+XV2wO4+q24IoNZJO6ePXEA80jAVEa7eGhlnV5BUIIG+pYP/CkukcggyW+vGRTrl07KrvhAn9dLGDg1J8KZM2hMx5L/2ulgjKTjPZI566fL6Y0dDhPJZH8bxAq6i/ciXXZFeuaG4eCDkitPdSzhFtyuZQj712h6NLow== root@localhost<crlf>MOUNTSPLOIT_V2.sh.txt:<crlf>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDYmuFzpuEpN/KHPbQkSUT1Xe/gVl3FpIe/GlhJEnW84rCMsYhRe2xxcPc1xfZd10JBhM1kEhs5aycIYiPvLYTRi7mA88hE15OVCkwgPT2HgaY8oetbiNiu18jBygbnku2/avpf/Xl2vkcNJRwHjkik3/Vid9fSleNWeAI+RGrMRRiP4hXVBQjHbuSFlw2VDg0uZINodP+n8oWBDHGnMGei9W6OXxQ3R5C+oKBw9NA3K/drsqvJh81jbEkDXyqCG0Nj0sAUk6o/aGIIQpwxI3ez2Vi/lqm5LYsRO6ICsHP6RXJT/08XkUVNMu7BLnje2RCG/kSKjVqW8QePyajHJ64kHwYf1yeyGfObZJWhUSP3yPK6UtGxBouyA/TPTqvba4vAmUy1Jl7hyWkoa4KUwgmsEizmT9n8GEg1USPXxRWNqv0VIi5160tcoujrB85HYwjwIhbphCqhTKyNwnnFJNratI1hGurgr8t0fflC/igLph8PapiayTwTLEbNwSUwVp8D3rvBkYB+XV2wO4+q24IoNZJO6ePXEA80jAVEa7eGhlnV5BUIIG+pYP/CkukcggyW+vGRTrl07KrvhAn9dLGDg1J8KZM2hMx5L/2ulgjKTjPZI566fL6Y0dDhPJZH8bxAq6i/ciXXZFeuaG4eCDkitPdSzhFtyuZQj712h6NLow== hilde@teamtnt.red<crlf>MountSshExploit.sh:<crlf>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDYmuFzpuEpN/KHPbQkSUT1Xe/gVl3FpIe/GlhJEnW84rCMsYhRe2xxcPc1xfZd10JBhM1kEhs5aycIYiPvLYTRi7mA88hE15OVCkwgPT2HgaY8oetbiNiu18jBygbnku2/avpf/Xl2vkcNJRwHjkik3/Vid9fSleNWeAI+RGrMRRiP4hXVBQjHbuSFlw2VDg0uZINodP+n8oWBDHGnMGei9W6OXxQ3R5C+oKBw9NA3K/drsqvJh81jbEkDXyqCG0Nj0sAUk6o/aGIIQpwxI3ez2Vi/lqm5LYsRO6ICsHP6RXJT/08XkUVNMu7BLnje2RCG/kSKjVqW8QePyajHJ64kHwYf1yeyGfObZJWhUSP3yPK6UtGxBouyA/TPTqvba4vAmUy1Jl7hyWkoa4KUwgmsEizmT9n8GEg1USPXxRWNqv0VIi5160tcoujrB85HYwjwIhbphCqhTKyNwnnFJNratI1hGurgr8t0fflC/igLph8PapiayTwTLEbNwSUwVp8D3rvBkYB+XV2wO4+q24IoNZJO6ePXEA80jAVEa7eGhlnV5BUIIG+pYP/CkukcggyW+vGRTrl07KrvhAn9dLGDg1J8KZM2hMx5L/2ulgjKTjPZI566fL6Y0dDhPJZH8bxAq6i/ciXXZFeuaG4eCDkitPdSzhFtyuZQj712h6NLow== hilde@parrot<crlf>File hashes:",
                    "html": "\nKubernetes_root_PayLoad_2.sh:\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDYmuFzpuEpN/KHPbQkSUT1Xe/gVl3FpIe/GlhJEnW84rCMsYhRe2xxcPc1xfZd10JBhM1kEhs5aycIYiPvLYTRi7mA88hE15OVCkwgPT2HgaY8oetbiNiu18jBygbnku2/avpf/Xl2vkcNJRwHjkik3/Vid9fSleNWeAI+RGrMRRiP4hXVBQjHbuSFlw2VDg0uZINodP+n8oWBDHGnMGei9W6OXxQ3R5C+oKBw9NA3K/drsqvJh81jbEkDXyqCG0Nj0sAUk6o/aGIIQpwxI3ez2Vi/lqm5LYsRO6ICsHP6RXJT/08XkUVNMu7BLnje2RCG/kSKjVqW8QePyajHJ64kHwYf1yeyGfObZJWhUSP3yPK6UtGxBouyA/TPTqvba4vAmUy1Jl7hyWkoa4KUwgmsEizmT9n8GEg1USPXxRWNqv0VIi5160tcoujrB85HYwjwIhbphCqhTKyNwnnFJNratI1hGurgr8t0fflC/igLph8PapiayTwTLEbNwSUwVp8D3rvBkYB+XV2wO4+q24IoNZJO6ePXEA80jAVEa7eGhlnV5BUIIG+pYP/CkukcggyW+vGRTrl07KrvhAn9dLGDg1J8KZM2hMx5L/2ulgjKTjPZI566fL6Y0dDhPJZH8bxAq6i/ciXXZFeuaG4eCDkitPdSzhFtyuZQj712h6NLow== root@localhost\nMOUNTSPLOIT_V2.sh.txt:\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDYmuFzpuEpN/KHPbQkSUT1Xe/gVl3FpIe/GlhJEnW84rCMsYhRe2xxcPc1xfZd10JBhM1kEhs5aycIYiPvLYTRi7mA88hE15OVCkwgPT2HgaY8oetbiNiu18jBygbnku2/avpf/Xl2vkcNJRwHjkik3/Vid9fSleNWeAI+RGrMRRiP4hXVBQjHbuSFlw2VDg0uZINodP+n8oWBDHGnMGei9W6OXxQ3R5C+oKBw9NA3K/drsqvJh81jbEkDXyqCG0Nj0sAUk6o/aGIIQpwxI3ez2Vi/lqm5LYsRO6ICsHP6RXJT/08XkUVNMu7BLnje2RCG/kSKjVqW8QePyajHJ64kHwYf1yeyGfObZJWhUSP3yPK6UtGxBouyA/TPTqvba4vAmUy1Jl7hyWkoa4KUwgmsEizmT9n8GEg1USPXxRWNqv0VIi5160tcoujrB85HYwjwIhbphCqhTKyNwnnFJNratI1hGurgr8t0fflC/igLph8PapiayTwTLEbNwSUwVp8D3rvBkYB+XV2wO4+q24IoNZJO6ePXEA80jAVEa7eGhlnV5BUIIG+pYP/CkukcggyW+vGRTrl07KrvhAn9dLGDg1J8KZM2hMx5L/2ulgjKTjPZI566fL6Y0dDhPJZH8bxAq6i/ciXXZFeuaG4eCDkitPdSzhFtyuZQj712h6NLow== hilde@teamtnt.red\nMountSshExploit.sh:\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDYmuFzpuEpN/KHPbQkSUT1Xe/gVl3FpIe/GlhJEnW84rCMsYhRe2xxcPc1xfZd10JBhM1kEhs5aycIYiPvLYTRi7mA88hE15OVCkwgPT2HgaY8oetbiNiu18jBygbnku2/avpf/Xl2vkcNJRwHjkik3/Vid9fSleNWeAI+RGrMRRiP4hXVBQjHbuSFlw2VDg0uZINodP+n8oWBDHGnMGei9W6OXxQ3R5C+oKBw9NA3K/drsqvJh81jbEkDXyqCG0Nj0sAUk6o/aGIIQpwxI3ez2Vi/lqm5LYsRO6ICsHP6RXJT/08XkUVNMu7BLnje2RCG/kSKjVqW8QePyajHJ64kHwYf1yeyGfObZJWhUSP3yPK6UtGxBouyA/TPTqvba4vAmUy1Jl7hyWkoa4KUwgmsEizmT9n8GEg1USPXxRWNqv0VIi5160tcoujrB85HYwjwIhbphCqhTKyNwnnFJNratI1hGurgr8t0fflC/igLph8PapiayTwTLEbNwSUwVp8D3rvBkYB+XV2wO4+q24IoNZJO6ePXEA80jAVEa7eGhlnV5BUIIG+pYP/CkukcggyW+vGRTrl07KrvhAn9dLGDg1J8KZM2hMx5L/2ulgjKTjPZI566fL6Y0dDhPJZH8bxAq6i/ciXXZFeuaG4eCDkitPdSzhFtyuZQj712h6NLow== hilde@parrot\nFile hashes:\n"
                },
                {
                    "id": "<sentence_0xaee199e6>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x29b5bcd7>": {
                            "0": {
                                "0": "Filename",
                                "1": "./CLEAN.TeamTNT.sh",
                                "2": "./Setup_tmate.sh",
                                "3": "./Setup_RainBow_Miner.sh",
                                "4": "./Setup_ETH_MinerService.sh",
                                "5": "./DockerAPI-SSH-BreakOut.sh",
                                "6": "./ssh_user.sh",
                                "7": "./GRABBER_aws-cloud.sh",
                                "8": "./CLEAN.other.miners.sh",
                                "9": "./clean.sh",
                                "10": "./init_main_root.sh",
                                "11": "./MOUNTSPLOIT_V2.sh.txt",
                                "12": "./Kubernetes_root_PayLoad_2.sh",
                                "13": "./Setup.User.cURL.sh",
                                "14": "./Kubernetes_root_PayLoad_1.sh",
                                "15": "./install-NVIDIA-driver.sh",
                                "16": "./Kubernetes_root_PayLoad_2.2.sh",
                                "17": "./Setup_ETH_Miner.sh",
                                "18": "./GRABBER_aws-cloud2.sh",
                                "19": "./GRABBER_google-cloud.sh",
                                "20": "./Kubernetes.LAN.IP.Range.sh",
                                "21": "./ld.so.preload.sh",
                                "22": "./init.sh",
                                "23": "./Setup_WeaveScope.sh",
                                "24": "./Kubernetes_scan_LAN_IPs.sh",
                                "25": "./setup_moneroocean_miner.sh",
                                "26": "./scan.kubernetes.lan.sh",
                                "27": "./TNTb/x86_64",
                                "28": "./TNTb/aarch64",
                                "29": "./bot_u",
                                "30": "./libpcap.so",
                                "31": "./my.xmr.sh",
                                "32": "./scan.sh",
                                "33": "./AWS.sh",
                                "34": "./ca.pem",
                                "35": "./Kubernetes_root_PayLoad_2.sh",
                                "36": "./x86_64",
                                "37": "./kuben2.sh",
                                "38": "./MountSshExploit.sh",
                                "39": "./Kubernetes.XMR.tmp.Setup.sh",
                                "40": "./sx.sh",
                                "41": "./Docker-API.IP.Range.sh",
                                "42": "./Kubernetes.put.the.bot.sh",
                                "43": "./win/init2.bat",
                                "44": "./win/nssm.zip",
                                "45": "./win/xmrig-6.13.1-msvc-win64.zip",
                                "46": "./win/xmrig.zip",
                                "47": "./win/k32r.sh",
                                "48": "./win/init.bat",
                                "49": "./xmr/x86_64",
                                "50": "./xmrig",
                                "51": "./mo.sh",
                                "52": "Kubernetes_root_payload_2.sh:",
                                "53": "./TNTb/x86_64",
                                "54": "./TNTb/aarch64",
                                "55": "./xmr/x86_64",
                                "56": "/xmrig"
                            },
                            "1": {
                                "0": "SHA256",
                                "1": "5483941dcb2fb017850f3d358e4b1cc45837f30f517ebbbb0718947c5c4d5d50",
                                "2": "dd60805ec68e3285a2cd4f32083f10a8571e81fb99c03434359bf339011a4a4c",
                                "3": "96a52109973d50174252b05be64f3ddf0182137fc4186d7a5cef989a4604010d",
                                "4": "f05155c8be6efbd94c0ec891494aa064a93def34b122bd70b4d225ea13fffff9",
                                "5": "19575166abd57feccf7cb0a1459daf476e736b7386c54a2b3320b2fc6ae12b9d",
                                "6": "84ce185b70b337342f3c43b594daa5f78737eff32bff03361349a81ac7808b78",
                                "7": "6075906fbc8898515fe09a046d81ca66429c9b3052a13d6b3ca6f8294c70d207",
                                "8": "6158197143f1696368e5a0b26f995b9801c2b29ca2e09d6f0aeb374a0fb3ce1b",
                                "9": "024445ae9d41915af25a347e47122db2fbebb223e01acab3dd30de4b35464965",
                                "10": "244c8993f9092f47c78e8e1414cc7499de94cc3126d591ec920a3dc5cef9c6af",
                                "11": "c991bedd44ce0425a157aa0c1fd03d39c5ae2bc019be4518fd979be780889537",
                                "12": "c57f61e24814c9ae17c57efaf4149504e36bd3e6171e9299fd54b6fbb1ec108c",
                                "13": "5dc3daf24fcef6ccaef2fec45bbb554f8090930d92a76f5d4c5a1f2487e484e0",
                                "14": "48f92bdc4c039437ba77e6c6a74bb0d4b747aa94fb815223ea6d735d04fcb733",
                                "15": "030f3a45d2c0a5200a7fed4734fead988eea4bc1ec48b92e6530610ffd082afe",
                                "16": "b07ca49abd118bc2db92ccd436aec1f14bb8deb74c29b581842499642cc5c473",
                                "17": "de651f9bc4e26a09a0d1ebc63a36c6139593bef6625822d59b2ccf37452ef716",
                                "18": "6075906fbc8898515fe09a046d81ca66429c9b3052a13d6b3ca6f8294c70d207",
                                "19": "7856273b2378b5a46e87fd8f91411c3c068a28c20d120d953e5307d5704ae0a2",
                                "20": "06e8e4e480c4f19983f58c789503dbd31ee5076935a81ed0fe1f1af69b6f1d3d",
                                "21": "ea02410b2983cfa8cf6740f1f0dbd41d3d07da3f8d2b64ca85defa83060cae72",
                                "22": "fa2a7374219d10a4835c7a6f0906184daaffd7dec2df954cfa38c3d4dd62d30d",
                                "23": "8388b707ddacfa551642a9a20a0eb3b7d40b9bdb8024e4f9c0ce8ee9e8a56d7d",
                                "24": "71af0d59f289cac9a3a80eacd011f5897e0c8a72141523c1c0a3e623eceed8a5",
                                "25": "cef2707760086718175235810e3e49a7bbfedce482dee09eef3d302247e97142",
                                "26": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
                                "27": "33c8591edd61c6e968e727683a63fba0352b5b6b59a0b3005628c38848dd7dd3",
                                "28": "95809d96f85e1571a3120c7c09a7f34fa84cb5902ad5172398dc2bb0ff1dd24a",
                                "29": "5e1af7f4e6cf89cff44ee209399a9fab3bfd8f1ca9703fb54cee05cce2b16d4c",
                                "30": "78facfc012957637c52763a17b94fd21f1e85f5dfaf26e459c1e4a9041e6f0e0",
                                "31": "0085bf33d4e4e051a15a1bd70636055d709aeef79025080afc7a8148ece55339",
                                "32": "6c8a2ba339141b93c67f9d79d86a469da75bfbc69f128a6ed702a6e3925d5a29",
                                "33": "af2cf9af17f6db338ba3079b312f182593bad19fab9075a77698f162ce127758",
                                "34": "3c4ddcf3e6bff60d52479d0d17c908e4813926e9729cf0a2bade843f8d8d4cb1",
                                "35": "f82ea98d1dc5d14817c80937b91b381e9cd29d82367a2dfbde60cfb073ea4316",
                                "36": "a46c870d1667a3ee31d2ba8969c9024bdb521ae8aad2079b672ce8416d85e8df",
                                "37": "2d85b47cdb87a81d5fbac6000b8ee89daa1d8a3c8fbb5d2bce7a840dd348ff1d",
                                "38": "da4a2ae560a6fad9c80182212da3440d678264b4d2d440c94168e36a530490a5",
                                "39": "721d15556bd3c22f3b4c6240ff9c6d58bfa60b73b3793fa8cdc64b9e89521c5b",
                                "40": "a4000315471cf197c0552aeec0e7afbe0a935b86ff9afe5b1443812d3f7185fa",
                                "41": "0dab485f5eacbbaa62c2dd5385a67becf2c352f2ebedd2b5184ab4fba89d8f19",
                                "42": "220737c1ee400061e886eab23471f98dba38fa8e0098a018ea75d479dceece05",
                                "43": "451a4cbb6b931d8bb8392f08e7c9ec517b1b1ef06f42e1c8105e4feaafd6b157",
                                "44": "5b12c3838e47f7bc6e5388408a1701eb12c4bbfcd9c19efd418781304590d201",
                                "45": "79bb16aa326a401e9cd1716d0ea1d6e1fdfdac945a7b4f4f4480be3a1e77cdd3",
                                "46": "17862610ea8190e3ed4d22099d324d9058b15c941ce97236405fc80d3c50d747",
                                "47": "0ae5c1ddf91f8d5e64d58eb5395bf2216cc86d462255868e98cfb70a5a21813f",
                                "48": "7bb1bd97dc93f0acf22eff6a5cbd9be685d18c8dbc982a24219928159c916c69",
                                "49": "9315e055f4570b7a392447300dcc2ec06f09b57858c131a35e012bd0bb2356cd",
                                "50": "b158fc11e1d4aeaf9d3111a285cd353eaff6627e328737a5a242d7ec219f4121",
                                "51": "1b72088fc6d780da95465f80ab26ba094d89232ff30a41b1b0113c355cfffa57",
                                "52": "c57f61e24814c9ae17c57efaf4149504e36bd3e6171e9299fd54b6fbb1ec108c",
                                "53": "33c8591edd61c6e968e727683a63fba0352b5b6b59a0b3005628c38848dd7dd3",
                                "54": "95809d96f85e1571a3120c7c09a7f34fa84cb5902ad5172398dc2bb0ff1dd24a",
                                "55": "9315e055f4570b7a392447300dcc2ec06f09b57858c131a35e012bd0bb2356cd",
                                "56": "b158fc11e1d4aeaf9d3111a285cd353eaff6627e328737a5a242d7ec219f4121"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table>\n<tbody>\n<tr>\n<td>Filename</td>\n<td>SHA256</td>\n</tr>\n<tr>\n<td> ./CLEAN.TeamTNT.sh</td>\n<td> 5483941dcb2fb017850f3d358e4b1cc45837f30f517ebbbb0718947c5c4d5d50</td>\n</tr>\n<tr>\n<td> ./Setup_tmate.sh</td>\n<td> dd60805ec68e3285a2cd4f32083f10a8571e81fb99c03434359bf339011a4a4c</td>\n</tr>\n<tr>\n<td> ./Setup_RainBow_Miner.sh</td>\n<td> 96a52109973d50174252b05be64f3ddf0182137fc4186d7a5cef989a4604010d</td>\n</tr>\n<tr>\n<td> ./Setup_ETH_MinerService.sh</td>\n<td> f05155c8be6efbd94c0ec891494aa064a93def34b122bd70b4d225ea13fffff9</td>\n</tr>\n<tr>\n<td> ./DockerAPI-SSH-BreakOut.sh</td>\n<td> 19575166abd57feccf7cb0a1459daf476e736b7386c54a2b3320b2fc6ae12b9d</td>\n</tr>\n<tr>\n<td> ./ssh_user.sh</td>\n<td> 84ce185b70b337342f3c43b594daa5f78737eff32bff03361349a81ac7808b78</td>\n</tr>\n<tr>\n<td> ./GRABBER_aws-cloud.sh</td>\n<td> 6075906fbc8898515fe09a046d81ca66429c9b3052a13d6b3ca6f8294c70d207</td>\n</tr>\n<tr>\n<td> ./CLEAN.other.miners.sh</td>\n<td> 6158197143f1696368e5a0b26f995b9801c2b29ca2e09d6f0aeb374a0fb3ce1b</td>\n</tr>\n<tr>\n<td> ./clean.sh</td>\n<td> 024445ae9d41915af25a347e47122db2fbebb223e01acab3dd30de4b35464965</td>\n</tr>\n<tr>\n<td> ./init_main_root.sh</td>\n<td> 244c8993f9092f47c78e8e1414cc7499de94cc3126d591ec920a3dc5cef9c6af</td>\n</tr>\n<tr>\n<td> ./MOUNTSPLOIT_V2.sh.txt</td>\n<td> c991bedd44ce0425a157aa0c1fd03d39c5ae2bc019be4518fd979be780889537</td>\n</tr>\n<tr>\n<td> ./Kubernetes_root_PayLoad_2.sh</td>\n<td> c57f61e24814c9ae17c57efaf4149504e36bd3e6171e9299fd54b6fbb1ec108c</td>\n</tr>\n<tr>\n<td> ./Setup.User.cURL.sh</td>\n<td> 5dc3daf24fcef6ccaef2fec45bbb554f8090930d92a76f5d4c5a1f2487e484e0</td>\n</tr>\n<tr>\n<td> ./Kubernetes_root_PayLoad_1.sh</td>\n<td> 48f92bdc4c039437ba77e6c6a74bb0d4b747aa94fb815223ea6d735d04fcb733</td>\n</tr>\n<tr>\n<td> ./install-NVIDIA-driver.sh</td>\n<td> 030f3a45d2c0a5200a7fed4734fead988eea4bc1ec48b92e6530610ffd082afe</td>\n</tr>\n<tr>\n<td> ./Kubernetes_root_PayLoad_2.2.sh</td>\n<td> b07ca49abd118bc2db92ccd436aec1f14bb8deb74c29b581842499642cc5c473</td>\n</tr>\n<tr>\n<td> ./Setup_ETH_Miner.sh</td>\n<td> de651f9bc4e26a09a0d1ebc63a36c6139593bef6625822d59b2ccf37452ef716</td>\n</tr>\n<tr>\n<td> ./GRABBER_aws-cloud2.sh</td>\n<td> 6075906fbc8898515fe09a046d81ca66429c9b3052a13d6b3ca6f8294c70d207</td>\n</tr>\n<tr>\n<td> ./GRABBER_google-cloud.sh</td>\n<td> 7856273b2378b5a46e87fd8f91411c3c068a28c20d120d953e5307d5704ae0a2</td>\n</tr>\n<tr>\n<td> ./Kubernetes.LAN.IP.Range.sh</td>\n<td> 06e8e4e480c4f19983f58c789503dbd31ee5076935a81ed0fe1f1af69b6f1d3d</td>\n</tr>\n<tr>\n<td> ./ld.so.preload.sh</td>\n<td> ea02410b2983cfa8cf6740f1f0dbd41d3d07da3f8d2b64ca85defa83060cae72</td>\n</tr>\n<tr>\n<td> ./init.sh</td>\n<td> fa2a7374219d10a4835c7a6f0906184daaffd7dec2df954cfa38c3d4dd62d30d</td>\n</tr>\n<tr>\n<td> ./Setup_WeaveScope.sh</td>\n<td> 8388b707ddacfa551642a9a20a0eb3b7d40b9bdb8024e4f9c0ce8ee9e8a56d7d</td>\n</tr>\n<tr>\n<td> ./Kubernetes_scan_LAN_IPs.sh</td>\n<td> 71af0d59f289cac9a3a80eacd011f5897e0c8a72141523c1c0a3e623eceed8a5</td>\n</tr>\n<tr>\n<td> ./setup_moneroocean_miner.sh</td>\n<td> cef2707760086718175235810e3e49a7bbfedce482dee09eef3d302247e97142</td>\n</tr>\n<tr>\n<td> ./scan.kubernetes.lan.sh</td>\n<td> e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855</td>\n</tr>\n<tr>\n<td> ./TNTb/x86_64</td>\n<td> 33c8591edd61c6e968e727683a63fba0352b5b6b59a0b3005628c38848dd7dd3</td>\n</tr>\n<tr>\n<td> ./TNTb/aarch64</td>\n<td> 95809d96f85e1571a3120c7c09a7f34fa84cb5902ad5172398dc2bb0ff1dd24a</td>\n</tr>\n<tr>\n<td> ./bot_u</td>\n<td> 5e1af7f4e6cf89cff44ee209399a9fab3bfd8f1ca9703fb54cee05cce2b16d4c</td>\n</tr>\n<tr>\n<td> ./libpcap.so</td>\n<td> 78facfc012957637c52763a17b94fd21f1e85f5dfaf26e459c1e4a9041e6f0e0</td>\n</tr>\n<tr>\n<td> ./my.xmr.sh</td>\n<td> 0085bf33d4e4e051a15a1bd70636055d709aeef79025080afc7a8148ece55339</td>\n</tr>\n<tr>\n<td> ./scan.sh</td>\n<td> 6c8a2ba339141b93c67f9d79d86a469da75bfbc69f128a6ed702a6e3925d5a29</td>\n</tr>\n<tr>\n<td> ./AWS.sh</td>\n<td> af2cf9af17f6db338ba3079b312f182593bad19fab9075a77698f162ce127758</td>\n</tr>\n<tr>\n<td> ./ca.pem</td>\n<td> 3c4ddcf3e6bff60d52479d0d17c908e4813926e9729cf0a2bade843f8d8d4cb1</td>\n</tr>\n<tr>\n<td> ./Kubernetes_root_PayLoad_2.sh</td>\n<td> f82ea98d1dc5d14817c80937b91b381e9cd29d82367a2dfbde60cfb073ea4316</td>\n</tr>\n<tr>\n<td> ./x86_64</td>\n<td> a46c870d1667a3ee31d2ba8969c9024bdb521ae8aad2079b672ce8416d85e8df</td>\n</tr>\n<tr>\n<td> ./kuben2.sh</td>\n<td> 2d85b47cdb87a81d5fbac6000b8ee89daa1d8a3c8fbb5d2bce7a840dd348ff1d</td>\n</tr>\n<tr>\n<td> ./MountSshExploit.sh</td>\n<td> da4a2ae560a6fad9c80182212da3440d678264b4d2d440c94168e36a530490a5</td>\n</tr>\n<tr>\n<td> ./Kubernetes.XMR.tmp.Setup.sh</td>\n<td> 721d15556bd3c22f3b4c6240ff9c6d58bfa60b73b3793fa8cdc64b9e89521c5b</td>\n</tr>\n<tr>\n<td> ./sx.sh</td>\n<td> a4000315471cf197c0552aeec0e7afbe0a935b86ff9afe5b1443812d3f7185fa</td>\n</tr>\n<tr>\n<td> ./Docker-API.IP.Range.sh</td>\n<td> 0dab485f5eacbbaa62c2dd5385a67becf2c352f2ebedd2b5184ab4fba89d8f19</td>\n</tr>\n<tr>\n<td> ./Kubernetes.put.the.bot.sh</td>\n<td> 220737c1ee400061e886eab23471f98dba38fa8e0098a018ea75d479dceece05</td>\n</tr>\n<tr>\n<td> ./win/init2.bat</td>\n<td> 451a4cbb6b931d8bb8392f08e7c9ec517b1b1ef06f42e1c8105e4feaafd6b157</td>\n</tr>\n<tr>\n<td> ./win/nssm.zip</td>\n<td> 5b12c3838e47f7bc6e5388408a1701eb12c4bbfcd9c19efd418781304590d201</td>\n</tr>\n<tr>\n<td> ./win/xmrig-6.13.1-msvc-win64.zip</td>\n<td> 79bb16aa326a401e9cd1716d0ea1d6e1fdfdac945a7b4f4f4480be3a1e77cdd3</td>\n</tr>\n<tr>\n<td> ./win/xmrig.zip</td>\n<td> 17862610ea8190e3ed4d22099d324d9058b15c941ce97236405fc80d3c50d747</td>\n</tr>\n<tr>\n<td> ./win/k32r.sh</td>\n<td> 0ae5c1ddf91f8d5e64d58eb5395bf2216cc86d462255868e98cfb70a5a21813f</td>\n</tr>\n<tr>\n<td> ./win/init.bat</td>\n<td> 7bb1bd97dc93f0acf22eff6a5cbd9be685d18c8dbc982a24219928159c916c69</td>\n</tr>\n<tr>\n<td> ./xmr/x86_64</td>\n<td>9315e055f4570b7a392447300dcc2ec06f09b57858c131a35e012bd0bb2356cd</td>\n</tr>\n<tr>\n<td> ./xmrig</td>\n<td> b158fc11e1d4aeaf9d3111a285cd353eaff6627e328737a5a242d7ec219f4121</td>\n</tr>\n<tr>\n<td> ./mo.sh</td>\n<td> 1b72088fc6d780da95465f80ab26ba094d89232ff30a41b1b0113c355cfffa57</td>\n</tr>\n<tr>\n<td>Kubernetes_root_payload_2.sh: </td>\n<td>c57f61e24814c9ae17c57efaf4149504e36bd3e6171e9299fd54b6fbb1ec108c</td>\n</tr>\n<tr>\n<td> ./TNTb/x86_64</td>\n<td>33c8591edd61c6e968e727683a63fba0352b5b6b59a0b3005628c38848dd7dd3</td>\n</tr>\n<tr>\n<td>./TNTb/aarch64</td>\n<td>95809d96f85e1571a3120c7c09a7f34fa84cb5902ad5172398dc2bb0ff1dd24a</td>\n</tr>\n<tr>\n<td>./xmr/x86_64</td>\n<td>9315e055f4570b7a392447300dcc2ec06f09b57858c131a35e012bd0bb2356cd</td>\n</tr>\n<tr>\n<td>/xmrig</td>\n<td>b158fc11e1d4aeaf9d3111a285cd353eaff6627e328737a5a242d7ec219f4121</td>\n</tr>\n</tbody>\n</table>"
                },
                {
                    "id": "<sentence_0x82b9f0f2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Posted by",
                    "html": "\nPosted by\n"
                },
                {
                    "id": "<sentence_0x93330a9e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x22e54481>": "https://www.blogger.com/profile/02331805684861640423"
                    },
                    "text": "Jaeson Schultz",
                    "html": "<a class=\"g-profile\" href=\"https://www.blogger.com/profile/02331805684861640423\" rel=\"author\" title=\"author profile\">\nJaeson Schultz\n</a>"
                },
                {
                    "id": "<sentence_0x7432eb53>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "at",
                    "html": "\nat\n"
                },
                {
                    "id": "<sentence_0x4321381a>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf531a6e4>": "http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html"
                    },
                    "text": "8:49 AM",
                    "html": "<a class=\"timestamp-link\" href=\"http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html\" rel=\"bookmark\" title=\"permanent link\">8:49 AM</a>"
                },
                {
                    "id": "<sentence_0x6b89ddaa>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x5fc7e6ef>": "https://www.blogger.com/post-edit.g?blogID=1029833275466591797&postID=8555514210551471206&from=pencil",
                        "<img_0xd4efeff7>": "https://img2.blogblog.com/img/icon18_edit_allbkg.gif"
                    },
                    "text": "",
                    "html": "<a href=\"https://www.blogger.com/post-edit.g?blogID=1029833275466591797&amp;postID=8555514210551471206&amp;from=pencil\" title=\"Edit Post\">\n<img alt=\"\" class=\"icon-action\" height=\"18\" src=\"https://img2.blogblog.com/img/icon18_edit_allbkg.gif\" width=\"18\"/>\n</a>"
                },
                {
                    "id": "<sentence_0xf0cdcf12>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Labels:",
                    "html": "\nLabels:\n"
                },
                {
                    "id": "<sentence_0x532b4f21>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3903f5a>": "http://blog.talosintelligence.com/search/label/SecureX"
                    },
                    "text": "SecureX",
                    "html": "<a href=\"http://blog.talosintelligence.com/search/label/SecureX\" rel=\"tag\">SecureX</a>"
                },
                {
                    "id": "<sentence_0xf01adbec>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ",",
                    "html": ",\n"
                },
                {
                    "id": "<sentence_0x8dab8a8a>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x66d92de6>": "http://blog.talosintelligence.com/search/label/TeamTNT"
                    },
                    "text": "TeamTNT",
                    "html": "<a href=\"http://blog.talosintelligence.com/search/label/TeamTNT\" rel=\"tag\">TeamTNT</a>"
                },
                {
                    "id": "<sentence_0xba1a76ad>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": ",",
                    "html": ",\n"
                },
                {
                    "id": "<sentence_0xd8890285>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa611e0a2>": "http://blog.talosintelligence.com/search/label/threats"
                    },
                    "text": "threats",
                    "html": "<a href=\"http://blog.talosintelligence.com/search/label/threats\" rel=\"tag\">threats</a>"
                },
                {
                    "id": "<sentence_0x4701334>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Share This Post",
                    "html": "\nShare This Post\n"
                },
                {
                    "id": "<sentence_0x391d5d65>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x28ac4231>": "https://www.facebook.com/sharer.php?u=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&text=TeamTNT%20targeting%20AWS,%20Alibaba",
                        "<img_0x7320dd03>": "https://www.talosintelligence.com/assets/icon_fb-share_grey.svg"
                    },
                    "text": "",
                    "html": "<a class=\"facebook\" href=\"https://www.facebook.com/sharer.php?u=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&amp;text=TeamTNT%20targeting%20AWS,%20Alibaba\" rel=\"nofollow\" target=\"_blank\" title=\"Share This On Facebook\">\n<img alt=\"Facebook share\" border=\"0\" src=\"https://www.talosintelligence.com/assets/icon_fb-share_grey.svg\"/>\n</a>"
                },
                {
                    "id": "<sentence_0x8447c034>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x4bb72d23>": "https://twitter.com/share?url=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&text=TeamTNT%20targeting%20AWS,%20Alibaba",
                        "<img_0x9fd9655d>": "https://www.talosintelligence.com/assets/icon_tw-share_grey.svg"
                    },
                    "text": "",
                    "html": "<a class=\"twitter\" href=\"https://twitter.com/share?url=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&amp;text=TeamTNT%20targeting%20AWS,%20Alibaba\" rel=\"nofollow\" target=\"_blank\" title=\"Tweet This\">\n<img alt=\"Twitter share\" border=\"0\" src=\"https://www.talosintelligence.com/assets/icon_tw-share_grey.svg\"/>\n</a>"
                },
                {
                    "id": "<sentence_0x14b635f8>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0xabbbed8a>": "https://www.linkedin.com/sharing/share-offsite/?url=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&text=TeamTNT%20targeting%20AWS,%20Alibaba",
                        "<img_0x9b40077>": "https://www.talosintelligence.com/assets/icon_li-share_grey.svg"
                    },
                    "text": "",
                    "html": "<a class=\"linkedin\" href=\"https://www.linkedin.com/sharing/share-offsite/?url=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&amp;text=TeamTNT%20targeting%20AWS,%20Alibaba\" rel=\"nofollow\" target=\"_blank\" title=\"Share This On Linkedin\">\n<img alt=\"Linkedin share\" border=\"0\" src=\"https://www.talosintelligence.com/assets/icon_li-share_grey.svg\"/>\n</a>"
                },
                {
                    "id": "<sentence_0x7b3ad8a4>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x7cd30ce>": "https://www.reddit.com/submit?url=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&title=TeamTNT%20targeting%20AWS,%20Alibaba",
                        "<img_0x5d82b91f>": "https://www.talosintelligence.com/assets/icon_re-share_grey.svg"
                    },
                    "text": "",
                    "html": "<a class=\"reddit\" href=\"https://www.reddit.com/submit?url=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&amp;title=TeamTNT%20targeting%20AWS,%20Alibaba\" rel=\"nofollow\" target=\"_blank\" title=\"Reddit This\">\n<img alt=\"Reddit share\" border=\"0\" src=\"https://www.talosintelligence.com/assets/icon_re-share_grey.svg\"/>\n</a>"
                },
                {
                    "id": "<sentence_0x8b251b02>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<a_0x48a1656e>": "mailto:?body=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&subject=TeamTNT%20targeting%20AWS,%20Alibaba",
                        "<img_0x23e6cdef>": "https://www.talosintelligence.com/assets/icon_em-share_grey.svg"
                    },
                    "text": "",
                    "html": "<a href=\"mailto:?body=http://blog.talosintelligence.com/2022/04/teamtnt-targeting-aws-alibaba.html&amp;subject=TeamTNT%20targeting%20AWS,%20Alibaba\">\n<img alt=\"Email This\" border=\"0\" src=\"https://www.talosintelligence.com/assets/icon_em-share_grey.svg\"/>\n</a>"
                }
            ]
        }
    ]
}