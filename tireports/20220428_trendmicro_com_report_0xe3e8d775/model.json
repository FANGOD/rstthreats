{
    "id": "<report_0xe3e8d775>",
    "url": "https://www.trendmicro.com/en_us/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old.html",
    "title": "New APT Group Earth Berberoka Targets Gambling Websites With Old and New Malware. Technical analysis",
    "meta": [],
    "chapters": [
        {
            "id": "<chapter_0xf66293be>",
            "title": "New APT Group Earth Berberoka Targets Gambling Websites With Old and New Malware",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0xd6c19374>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We recently found a new advanced persistent threat (APT) group that we have dubbed Earth Berberoka (aka GamblingPuppet). This APT group targets gambling websites on Windows, macOS, and Linux platforms using old and new malware families.",
                    "html": "<p class=\"article-details__description\">We recently found a new advanced persistent threat (APT) group that we have dubbed Earth Berberoka (aka GamblingPuppet). This APT group targets gambling websites on Windows, macOS, and Linux platforms using old and new malware families.</p>"
                },
                {
                    "id": "<sentence_0xecfd4eb3>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "By: Daniel Lunghi, Jaromir Horejsi<crlf><crlf>April 27, 2022<crlf>Read time: 10 min (2653 words)",
                    "html": "<p class=\"article-details__author-by\">By: Daniel Lunghi, Jaromir Horejsi\n\t\t\n\t\t\tApril 27, 2022\nRead time: 10 min (2653 words)\n\t</p>"
                },
                {
                    "id": "<sentence_0xd117e6e5>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0xf6a84615>": "https://www.trendmicro.com/etc.clientlibs/trendresearch/clientlibs/clientlib-trendresearch/resources/img/share-more.svg"
                    },
                    "text": "",
                    "html": "<a class=\"addthis_button_compact addthis_link\">\n<img alt=\"Share\" class=\"addthis-icon\" src=\"/etc.clientlibs/trendresearch/clientlibs/clientlib-trendresearch/resources/img/share-more.svg\"/>\n</a>"
                },
                {
                    "id": "<sentence_0x2bccceb2>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<img_0x423d5533>": "https://www.trendmicro.com/etc.clientlibs/trendresearch/clientlibs/clientlib-trendresearch/resources/img/printer.svg"
                    },
                    "text": "",
                    "html": "<a class=\"addthis_button_print addthis_link\">\n<img alt=\"Print\" class=\"addthis-icon\" src=\"/etc.clientlibs/trendresearch/clientlibs/clientlib-trendresearch/resources/img/printer.svg\"/>\n</a>"
                },
                {
                    "id": "<sentence_0x9fe2c5e6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Save to Folio",
                    "html": "<p>Save to Folio</p>"
                },
                {
                    "id": "<sentence_0x768d8a66>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x8e964256>": "https://www.trendmicro.com/subscription"
                    },
                    "text": "Subscribe",
                    "html": "<a href=\"https://www.trendmicro.com/subscription\" target=\"target\" title=\"Subscribe\">\n Subscribe\n</a>"
                },
                {
                    "id": "<sentence_0xb1043a1d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We recently discovered a new advanced persistent threat (APT) group that we have dubbed Earth Berberoka (aka GamblingPuppet). Based on our analysis, this group targets gambling websites. Our investigation has also uncovered that Earth Berberoka targets the Windows, Linux, and macOS platforms, and uses malware families that have been historically aimed at Chinese-speaking individuals.",
                    "html": "<p>We recently discovered a new advanced persistent threat (APT) group that we have dubbed Earth Berberoka (aka GamblingPuppet). Based on our analysis, this group targets gambling websites. Our investigation has also uncovered that Earth Berberoka targets the Windows, Linux, and macOS platforms, and uses malware families that have been historically aimed at Chinese-speaking individuals.</p>"
                },
                {
                    "id": "<sentence_0xf154de88>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In this blog entry, we provide an overview of the Windows malware families used by Earth Berberoka in its campaign. This malware lineup includes tried-and-tested malware families that have been upgraded, such as PlugX and Gh0st RAT, and a brand-new multistage malware family that we have dubbed PuppetLoader.",
                    "html": "<p>In this blog entry, we provide an overview of the Windows malware families used by Earth Berberoka in its campaign. This malware lineup includes tried-and-tested malware families that have been upgraded, such as PlugX and Gh0st RAT, and a brand-new multistage malware family that we have dubbed PuppetLoader.</p>"
                },
                {
                    "id": "<sentence_0x290141b0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We discuss the full technical details of Earth Berberokas malware families aimed at Linux and macOS, infection vectors, targets, and possible connections with other APT groups in our research paper Operation Earth Berberoka: An Analysis of a Multivector and Multiplatform APT Campaign Targeting Online Gambling Sites.",
                    "html": "<p>We discuss the full technical details of Earth Berberoka\u2019s malware families aimed at Linux and macOS, infection vectors, targets, and possible connections with other APT groups in our research paper \u201cOperation Earth Berberoka: An Analysis of a Multivector and Multiplatform APT Campaign Targeting Online Gambling Sites.\u201d</p>"
                }
            ]
        },
        {
            "id": "<chapter_0xeaef830c>",
            "title": "Technical analysis",
            "title_level": 1,
            "sentences": [
                {
                    "id": "<sentence_0x41b935ae>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PuppetLoader",
                    "html": "<p>PuppetLoader</p>"
                },
                {
                    "id": "<sentence_0x377927d6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We discovered a new malware family that we have dubbed PuppetLoader. It is a complex, five-stage malware family that uses some interesting techniques, including hijacking loaded modules to launch malicious code and hiding malicious payloads and modules in modified bitmap image (BMP) files.",
                    "html": "<p>We discovered a new malware family that we have dubbed PuppetLoader. It is a complex, five-stage malware family that uses some interesting techniques, including hijacking loaded modules to launch malicious code and hiding malicious payloads and modules in modified bitmap image (BMP) files.</p>"
                },
                {
                    "id": "<sentence_0x4ee6a8e0>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Stage 1: Obfuscator and loader",
                    "html": "<p>Stage 1: Obfuscator and loader</p>"
                },
                {
                    "id": "<sentence_0x2c65d440>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Incorrect RC4 implementation",
                    "html": "<p>Incorrect RC4 implementation</p>"
                },
                {
                    "id": "<sentence_0x4601c2e4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "In this stage, a blob of payload data is decrypted using a hard-coded key (2726c6aea9970bb95211304705b5f595) and what appears to be an RC4 (Rivest Cipher 4) algorithm. However, the ciphers swap operation in the pseudorandom generation part of the cipher code was improperly implemented. This resulted in the proper encryption of only the headers and the first few sections of the payload, while the latter sections were left almost entirely in clear text.",
                    "html": "<p>In this stage, a blob of payload data is decrypted using a hard-coded key (2726c6aea9970bb95211304705b5f595) and what appears to be an RC4 (Rivest Cipher 4) algorithm. However, the cipher\u2019s \u201cswap\u201d operation in the pseudorandom generation part of the cipher code was improperly implemented. This resulted in the proper encryption of only the headers and the first few sections of the payload, while the latter sections were left almost entirely in clear text.</p>"
                },
                {
                    "id": "<sentence_0x827735e5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "It seems that this hard-coded key and flawed RC4 implementation were also used in a malware family that is a variant of the TigerPlug malware, probably because it spreads the PlugX malware. We found no public reporting of its behavior and features.",
                    "html": "<p>It seems that this hard-coded key and flawed RC4 implementation were also used in a malware family that is a variant of the TigerPlug malware, probably because it spreads the PlugX malware. We found no public reporting of its behavior and features.</p>"
                },
                {
                    "id": "<sentence_0xe9b67875>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Hijacking loaded module",
                    "html": "<p>Hijacking loaded module</p>"
                },
                {
                    "id": "<sentence_0xbb40c369>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After the payload is decrypted, it is loaded in the machines memory and is executed using a stealthy method: PuppetLoader starts by loading a legitimate DLL from the Windows\\System32 directory. The loading process is then hijacked to replace the legitimate library with a malicious one. This is done by hooking NTDLL APIs such as NtQueryAttributesFile, NtOpenFile, NtCreateSection, NtMapViewOfSection, NtQuerySection and ZwClose.",
                    "html": "<p>After the payload is decrypted, it is loaded in the machine\u2019s memory and is executed using a stealthy method: PuppetLoader starts by loading a legitimate DLL from the Windows\\System32 directory. The loading process is then hijacked to replace the legitimate library with a malicious one. This is done by hooking NTDLL APIs such as NtQueryAttributesFile, NtOpenFile, NtCreateSection, NtMapViewOfSection, NtQuerySection and ZwClose. </p>"
                },
                {
                    "id": "<sentence_0x253b6e68>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The loader uses undocumented NTDLL APIs, such as RtlPushFrame, RtlPopFrame, and RtlGetFrame, to avoid recursive booking, which happens when a hooked function indirectly calls itself.",
                    "html": "<p>The loader uses undocumented NTDLL APIs, such as RtlPushFrame, RtlPopFrame, and RtlGetFrame, to avoid recursive booking, which happens when a hooked function indirectly calls itself.</p>"
                },
                {
                    "id": "<sentence_0x4e62ce5a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "To properly load the malicious payload, a frame tagged as LDFM is allocated and filled with the necessary parameters, such as file names memory addresses and allocated buffer handles or addresses that contain the malicious payload. After their values are identified, some parameters are set immediately, while others are set at a later time.",
                    "html": "<p>To properly load the malicious payload, a frame tagged as \u201cLDFM\u201d is allocated and filled with the necessary parameters, such as file names\u2019 memory addresses and allocated buffer handles or addresses that contain the malicious payload. After their values are identified, some parameters are set immediately, while others are set at a later time.</p>"
                },
                {
                    "id": "<sentence_0x45388d6e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x6dd2c28f>": "https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig1_Earth%20Berberoka%20Targets%20Gambling%20Websites.png"
                    },
                    "text": "Figure 1. LDFM loading frame",
                    "html": "<figure class=\"image-figure\">\n<img alt=\"LDFM loading frame\" src=\"https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig1_Earth%20Berberoka%20Targets%20Gambling%20Websites.png\"/>\n<figcaption>Figure 1. LDFM loading frame</figcaption>\n</figure>"
                },
                {
                    "id": "<sentence_0xbd6ccd40>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Two APIs are then called: RTIPushFrame to push the frame on stack and LDRLoadDLL to load a legitimate asyclfilt.dll library. Afterward, previously hooked API functions are called, resulting in the loaded DLL names being replaced with lz32.dll, which is a legitimate DLL. The content of this legitimate DLL is then replaced by a malicious payload that is inside the hooked NtMapViewOfSection function.",
                    "html": "<p>Two APIs are then called: RTIPushFrame to push the frame on stack and LDRLoadDLL to load a legitimate asyclfilt.dll library. Afterward, previously hooked API functions are called, resulting in the loaded DLL name\u2019s being replaced with lz32.dll, which is a legitimate DLL. The content of this legitimate DLL is then replaced by a malicious payload that is inside the hooked NtMapViewOfSection function.</p>"
                },
                {
                    "id": "<sentence_0x5af32be8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Then, the LDRLoadDLL function rebases the newly loaded malicious image and loads all of the needed dependencies. The malware no longer needs the frame once the handle is returned from the LdrLoadDLL function, which is why it pops the frame by calling RtlPopFrame, unhooks previously hooked functions, and verifies whether the loading is successful or not by calling GetModuleHandleW (asycfilt.dll).",
                    "html": "<p>Then, the LDRLoadDLL function rebases the newly loaded malicious image and loads all of the needed dependencies. The malware no longer needs the frame once the handle is returned from the LdrLoadDLL function, which is why it pops the frame by calling RtlPopFrame, unhooks previously hooked functions, and verifies whether the loading is successful or not by calling GetModuleHandleW (asycfilt.dll).\n</p>"
                },
                {
                    "id": "<sentence_0xa2d4689b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The malware then dynamically resolves the export function called Install and sets the parameter value to 11BF29E1371C0D83C530BD1BF346, which decrypts to a function called OneTime. For its command-line parameters, PuppetLoader uses the same flawed RC4 implementation using the password whk0q9ogev6ofg8d.",
                    "html": "<p>The malware then dynamically resolves the export function called Install and sets the parameter value to \u201c11BF29E1371C0D83C530BD1BF346\u201d, which decrypts to a function called OneTime. For its command-line parameters, PuppetLoader uses the same flawed RC4 implementation using the password \u201cwhk0q9ogev6ofg8d\u201d.</p>"
                },
                {
                    "id": "<sentence_0x2dc28a0f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "These hijacking steps result in the following:",
                    "html": "<p>These hijacking steps result in the following:</p>"
                },
                {
                    "id": "<sentence_0x8b07908e>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xa8113ba0>": "https://docs.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb_ldr_data"
                    },
                    "text": "The loaded asycfilt.dll module can be seen by parsing the PEB_LDR_DATA structure that contains all loaded modules in the current process.",
                    "html": "<ul>\n<li class=\"rich-text-li\">The loaded asycfilt.dll module can be seen by parsing the <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb_ldr_data\">PEB_LDR_DATA</a> structure that contains all loaded modules in the current process.</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xaea99349>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x268d49b3>": "https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig2_Earth%20Berberoka%20Targets%20Gambling%20Websites.png"
                    },
                    "text": "Figure 2. asycfilt.dll shown among loaded module names",
                    "html": "<figure class=\"image-figure\">\n<img alt=\"asycfilt.dll shown among loaded module names\" src=\"https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig2_Earth%20Berberoka%20Targets%20Gambling%20Websites.png\"/>\n<figcaption>Figure 2. asycfilt.dll shown among loaded module names</figcaption>\n</figure>"
                },
                {
                    "id": "<sentence_0xff357d8b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "lz32.dll is opened based on process monitoring tools.",
                    "html": "<ul>\n<li class=\"rich-text-li\">lz32.dll is opened based on process monitoring tools.</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x5cc3a55>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x1568a7b9>": "https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig3_Earth%20Berberoka%20Targets%20Gambling%20Websites.png"
                    },
                    "text": "Figure 3. lz32.dll shown among opened files",
                    "html": "<figure class=\"image-figure\">\n<img alt=\"lz32.dll shown among opened files\" src=\"https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig3_Earth%20Berberoka%20Targets%20Gambling%20Websites.png\"/>\n<figcaption>Figure 3. lz32.dll shown among opened files</figcaption>\n</figure>"
                },
                {
                    "id": "<sentence_0x61374381>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Only PuppetLoaders dropper payload is loaded and none of the previously mentioned libraries is actually loaded.",
                    "html": "<ul>\n<li class=\"rich-text-li\">Only PuppetLoader\u2019s dropper payload is loaded and none of the previously mentioned libraries is actually loaded.</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x6b1059d7>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Stage 2: Dropper",
                    "html": "<p>Stage 2: Dropper</p>"
                },
                {
                    "id": "<sentence_0x847589ce>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The dropper creates and drops several files in an infected machine.",
                    "html": "<p>The dropper creates and drops several files in an infected machine.</p>"
                },
                {
                    "id": "<sentence_0x1610132f>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0xc28815b7>": {
                            "0": {
                                "0": "File",
                                "1": "CpuppetProcessFileSharer",
                                "2": "Config.ini",
                                "3": "MSVCPX00.dll",
                                "4": "verisign.bmp",
                                "5": "bitmap.bmp"
                            },
                            "1": {
                                "0": "Function",
                                "1": "Used for sharing data during the different infection stages",
                                "2": "Saves the execution reason and the globally unique identifier (GUID) value based on ComputerName",
                                "3": "DLL file of BasicLoader",
                                "4": "BMP file with encrypted core",
                                "5": "BMP file with encrypted Client.MainConsole"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table border=\"1\" cellpadding=\"1\" cellspacing=\"0\">\n<tbody><tr><td>File</td>\n<td>Function</td>\n</tr><tr><td>CpuppetProcessFileSharer</td>\n<td>Used for sharing data during the different infection stages</td>\n</tr><tr><td>Config.ini</td>\n<td>Saves the execution reason and the globally unique identifier (GUID) value based on ComputerName</td>\n</tr><tr><td>MSVCPX00.dll</td>\n<td>DLL file of BasicLoader</td>\n</tr><tr><td>verisign.bmp</td>\n<td>BMP file with encrypted core</td>\n</tr><tr><td>bitmap.bmp</td>\n<td>BMP file with encrypted Client.MainConsole</td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0xbecff3b9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Table 1. Files created and dropped",
                    "html": "<p>Table 1. Files created and dropped</p>"
                },
                {
                    "id": "<sentence_0xbd315592>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The hard-coded GUID ({78106D5F-CD1A-A8C4-A625-6863092B4BBA}) is inserted into CPuppetProcessFileSharer (C:\\\\Users\\\\Public\\\\Pictures\\\\Desktop.inf). We believe that it serves as a marker that stage 2 has been completed.",
                    "html": "<p>The hard-coded GUID ({78106D5F-CD1A-A8C4-A625-6863092B4BBA}) is inserted into CPuppetProcessFileSharer (C:\\\\Users\\\\Public\\\\Pictures\\\\Desktop.inf). We believe that it serves as a marker that stage 2 has been completed.</p>"
                },
                {
                    "id": "<sentence_0xf1442ba9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Config.ini (C:\\Users\\Public\\Videos\\Config.ini) contains the GUID and the reason, which is the hard-coded value StartupBasicLoader encrypted using a key (whk0q9ogev6ofg8d).",
                    "html": "<p>Config.ini (C:\\Users\\Public\\Videos\\Config.ini) contains the GUID and the reason, which is the hard-coded value \u201cStartupBasicLoader\u201d encrypted using a key (whk0q9ogev6ofg8d).</p>"
                },
                {
                    "id": "<sentence_0x5452f48e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The svchost.exe is started in suspended mode with this command-line parameter:",
                    "html": "<p>The svchost.exe is started in suspended mode with this command-line parameter:\n</p>"
                },
                {
                    "id": "<sentence_0x1000124b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-cmd -NoModuleLoadDLL -DisplayName=KeepAuthority.Client.MainConsole.x64.Release -InvokeMethodName=Run -InokeMethodParam=NULL",
                    "html": "<p> -cmd -NoModuleLoadDLL -DisplayName=KeepAuthority.Client.MainConsole.x64.Release -InvokeMethodName=Run -InokeMethodParam=NULL\u201d</p>"
                },
                {
                    "id": "<sentence_0x5661486b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This is also encrypted with the previously mentioned key and a new thread is created within svchost.exe to make it load the BasicLoader payload, MSVCPX00.dll. It is interesting to note that there is a typographic error in -InokeMethodParam.",
                    "html": "<p>This is also encrypted with the previously mentioned key and a new thread is created within svchost.exe to make it load the BasicLoader payload, MSVCPX00.dll. It is interesting to note that there is a typographic error in \u201c-InokeMethodParam.\u201d</p>"
                },
                {
                    "id": "<sentence_0x19db7491>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Stage 3: BasicLoader",
                    "html": "<p>Stage 3: BasicLoader</p>"
                },
                {
                    "id": "<sentence_0x70867745>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The BasicLoader stage starts by adding a hard-coded GUID ({78106D5F-CD1A-A8C4-A625-6863092B4BBA}) into CPuppetProcessFileSharer. As with stage 2, we believe that this is likely a marker that stage 3 has started running.",
                    "html": "<p>The BasicLoader stage starts by adding a hard-coded GUID ({78106D5F-CD1A-A8C4-A625-6863092B4BBA}) into CPuppetProcessFileSharer. As with stage 2, we believe that this is likely a marker that stage 3 has started running.</p>"
                },
                {
                    "id": "<sentence_0x5542f484>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "BasicLoader searches for BMP files among several directories in Users\\\\Public (Desktop, Documents, Downloads, Music, Pictures, and Videos). It then checks each directory for BMP files that would pass the required structure. For the BMP files that do, the payload appended to the BMP file is decrypted, loaded into memory, and executed. The BMP file is made up of only 33 x 11 pixels and 338 bytes, and the data appended to it is the payload that is encrypted with the same flawed RC4 implementation.",
                    "html": "<p>BasicLoader searches for BMP files among several directories in Users\\\\Public (Desktop, Documents, Downloads, Music, Pictures, and Videos). It then checks each directory for BMP files that would pass the required structure. For the BMP files that do, the payload appended to the BMP file is decrypted, loaded into memory, and executed. The BMP file is made up of only 33 x 11 pixels and 338 bytes, and the data appended to it is the payload that is encrypted with the same flawed RC4 implementation.</p>"
                },
                {
                    "id": "<sentence_0xc7ce8280>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x5c763b2d>": "https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig4_Earth%20Berberoka%20Targets%20Gambling%20Websites.png"
                    },
                    "text": "Figure 4. A small BMP file, to which encrypted payloads are appended",
                    "html": "<figure class=\"image-figure\">\n<img alt=\"A small BMP file, to which encrypted payloads are appended\" src=\"https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig4_Earth%20Berberoka%20Targets%20Gambling%20Websites.png\"/>\n<figcaption>Figure 4. A small BMP file, to which encrypted payloads are appended</figcaption>\n</figure>"
                },
                {
                    "id": "<sentence_0x2f289032>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Stage 4: Core",
                    "html": "<p>Stage 4: Core</p>"
                },
                {
                    "id": "<sentence_0xa84c9fb6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This stage begins when a hard-coded GUID ({7D8DA9DC-1F3B-2E5C-AA59-9418E652E4AA}) is added to CPuppetProcessFileSharer. Similar to the other stages, this is likely a marker that stage 4 has started running.",
                    "html": "<p>This stage begins when a hard-coded GUID ({7D8DA9DC-1F3B-2E5C-AA59-9418E652E4AA}) is added to CPuppetProcessFileSharer. Similar to the other stages, this is likely a marker that stage 4 has started running.</p>"
                },
                {
                    "id": "<sentence_0x4184b774>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "After this, the malware starts a system logger thread, where the logged information is received via a pipe and is saved to a file with a hard-coded name. The logged information can come from other modules or processes. Based on our analysis, each log file entry is separated by a separator (0xAABBCCDD), followed by a custom RC4 password and message length.",
                    "html": "<p>After this, the malware starts a system logger thread, where the logged information is received via a pipe and is saved to a file with a hard-coded name. The logged information can come from other modules or processes. Based on our analysis, each log file entry is separated by a separator (0xAABBCCDD), followed by a custom RC4 password and message length.</p>"
                },
                {
                    "id": "<sentence_0x3ee41d33>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The decrypted log can include the following information:",
                    "html": "<p>The decrypted log can include the following information:</p>"
                },
                {
                    "id": "<sentence_0xbcbc38c6>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The module that was run<crlf>The parameters at which this module was run<crlf>At which stage (GUID from CPuppetProcessFileSharer) the action was performed",
                    "html": "<ul>\n<li class=\"rich-text-li\">The module that was run</li>\n<li class=\"rich-text-li\">The parameters at which this module was run</li>\n<li class=\"rich-text-li\">At which stage (GUID from CPuppetProcessFileSharer) the action was performed</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x45eaafcf>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xa0c27fb5>": "https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig5_Earth%20Berberoka%20Targets%20Gambling%20Websites.png"
                    },
                    "text": "Figure 5. Decrypted log from core",
                    "html": "<figure class=\"image-figure\">\n<img alt=\"Decrypted log from core\" src=\"https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig5_Earth%20Berberoka%20Targets%20Gambling%20Websites.png\"/>\n<figcaption>Figure 5. Decrypted log from core</figcaption>\n</figure>"
                },
                {
                    "id": "<sentence_0xcc3b3150>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The following command-line arguments are also implemented during this stage:",
                    "html": "<p>The following command-line arguments are also implemented during this stage:</p>"
                },
                {
                    "id": "<sentence_0x4423aeff>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-DisplayName<crlf>-InokeMethodParam (sic)<crlf>-InvokeMethodName<crlf>-NoModuleLoadDLL<crlf>-LoadShellcode",
                    "html": "<ul>\n<li class=\"rich-text-li\">-DisplayName</li>\n<li class=\"rich-text-li\">-InokeMethodParam (sic)</li>\n<li class=\"rich-text-li\">-InvokeMethodName</li>\n<li class=\"rich-text-li\">-NoModuleLoadDLL</li>\n<li class=\"rich-text-li\">-LoadShellcode</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xbc97452e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "While the other arguments are mostly self-explanatory, we highlight two arguments worth noting:",
                    "html": "<p>While the other arguments are mostly self-explanatory, we highlight two arguments worth noting:</p>"
                },
                {
                    "id": "<sentence_0xfebf963b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-NoModuleLoadDLL uses the same technique as the stage 1 loader and -LoadShellcode allocates a memory block, copies shellcode, and executes it.",
                    "html": "<p>-NoModuleLoadDLL uses the same technique as the stage 1 loader and -LoadShellcode allocates a memory block, copies shellcode, and executes it.</p>"
                },
                {
                    "id": "<sentence_0x877a0af>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Stage 5: Client.MainConsole",
                    "html": "<p>Stage 5: Client.MainConsole</p>"
                },
                {
                    "id": "<sentence_0x7e4a8b31>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This is the main client binary written in C++, which is the last stage of PuppetLoaders infection chain.",
                    "html": "<p>This is the main client binary written in C++, which is the last stage of PuppetLoader\u2019s infection chain.</p>"
                },
                {
                    "id": "<sentence_0xa98b4f5d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The code is structured in several classes that handle different tasks, such as managing the interactive shell, uploading and downloading files, installing new modules, monitoring victim behavior, and executing callback functions when conditions are met.",
                    "html": "<p>The code is structured in several classes that handle different tasks, such as managing the interactive shell, uploading and downloading files, installing new modules, monitoring victim behavior, and executing callback functions when conditions are met.</p>"
                },
                {
                    "id": "<sentence_0xe233ba8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "CPipeCmdManager interactive shell manager",
                    "html": "<ul>\n<li class=\"rich-text-li\">CPipeCmdManager \u2013 interactive shell manager</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xcc338beb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Arguments:",
                    "html": "<p>Arguments:</p>"
                },
                {
                    "id": "<sentence_0x9a23ebb8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-flushusersession",
                    "html": "<p>-flushusersession</p>"
                },
                {
                    "id": "<sentence_0x65f9d9f1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-createcmd",
                    "html": "<p>-createcmd</p>"
                },
                {
                    "id": "<sentence_0x693bac4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-destorycmd (sic)",
                    "html": "<p>-destorycmd (sic)</p>"
                },
                {
                    "id": "<sentence_0x7f0ad62a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-excutecmd",
                    "html": "<p>-excutecmd</p>"
                },
                {
                    "id": "<sentence_0x9bc93ba4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-cmdkeepalive",
                    "html": "<p>-cmdkeepalive</p>"
                },
                {
                    "id": "<sentence_0xf0814afb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "CommonLib::CcmdMulArgDecoder command-line argument decoder, additional module related to command-line arguments",
                    "html": "<ul>\n<li class=\"rich-text-li\">CommonLib::CcmdMulArgDecoder \u2013 command-line argument decoder, additional module related to command-line arguments</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x1f622116>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Arguments:",
                    "html": "<p>Arguments:</p>"
                },
                {
                    "id": "<sentence_0xa4bc308f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-ModuleLog",
                    "html": "<p>-ModuleLog</p>"
                },
                {
                    "id": "<sentence_0xdb9e181d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-LogText",
                    "html": "<p>-LogText</p>"
                },
                {
                    "id": "<sentence_0x5d2a7f94>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-ModuleID",
                    "html": "<p>-ModuleID</p>"
                },
                {
                    "id": "<sentence_0x4c02331>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-ModuleVersion",
                    "html": "<p>-ModuleVersion</p>"
                },
                {
                    "id": "<sentence_0xd6cc472f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-MountStatus",
                    "html": "<p>-MountStatus</p>"
                },
                {
                    "id": "<sentence_0xef406cda>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-Path",
                    "html": "<p>-Path</p>"
                },
                {
                    "id": "<sentence_0xd6877b74>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-IsDelete",
                    "html": "<p>-IsDelete</p>"
                },
                {
                    "id": "<sentence_0x8b4ecc5a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-ModuleKeepAlive",
                    "html": "<p>-ModuleKeepAlive</p>"
                },
                {
                    "id": "<sentence_0x89847866>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "-UploadFile",
                    "html": "<p>-UploadFile</p>"
                },
                {
                    "id": "<sentence_0x7be532c2>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The client then establishes communication with a command-and-control (C&C) server via UDP (User Datagram Protocol) and recognizes different types of custom UDP packets:",
                    "html": "<p>The client then establishes communication with a command-and-control (C&amp;C) server via UDP (User Datagram Protocol) and recognizes different types of custom UDP packets:</p>"
                },
                {
                    "id": "<sentence_0x22330016>",
                    "is_empty": true,
                    "have_tags": true,
                    "tags": {
                        "<table_0x2586ff9>": {
                            "0": {
                                "0": "UDP packet",
                                "1": "RemoteModuleCommandPacket",
                                "2": "RemoteModuleCommandResultPacket",
                                "3": "FileTransferContent_Packet",
                                "4": "UploadFilePacket",
                                "5": "FileManage_FolderContent_Packet",
                                "6": "VecProcessPacket",
                                "7": "InstallModulePacket",
                                "8": "RemoteClientSystemInfoPacket",
                                "9": "ModuleKeepAlivePacket"
                            },
                            "1": {
                                "0": "Description",
                                "1": "Executes interactive shell",
                                "2": "Result of running shell command",
                                "3": "Determines whether to upload or download a file",
                                "4": "Uploaded file content",
                                "5": "Folder content",
                                "6": "Vector object with running processes",
                                "7": "BMP with encrypted module to be installed",
                                "8": "Sent by login callback every time a new user logs in",
                                "9": "Tells the C&C server that the connection is still alive"
                            }
                        }
                    },
                    "text": "",
                    "html": "<table border=\"1\" cellpadding=\"1\" cellspacing=\"0\">\n<tbody><tr><td>UDP packet</td>\n<td>Description</td>\n</tr><tr><td>RemoteModuleCommandPacket</td>\n<td>Executes interactive shell</td>\n</tr><tr><td>RemoteModuleCommandResultPacket</td>\n<td>Result of running shell command</td>\n</tr><tr><td>FileTransferContent_Packet</td>\n<td>Determines whether to upload or download a file</td>\n</tr><tr><td>UploadFilePacket</td>\n<td>Uploaded file content</td>\n</tr><tr><td>FileManage_FolderContent_Packet</td>\n<td>Folder content</td>\n</tr><tr><td>VecProcessPacket</td>\n<td>Vector object with running processes</td>\n</tr><tr><td>InstallModulePacket</td>\n<td>BMP with encrypted module to be installed</td>\n</tr><tr><td>RemoteClientSystemInfoPacket </td>\n<td>Sent by login callback every time a new user logs in</td>\n</tr><tr><td>ModuleKeepAlivePacket</td>\n<td>Tells the C&amp;C server that the connection is still alive</td>\n</tr></tbody></table>"
                },
                {
                    "id": "<sentence_0x912de1c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Table 2. Custom UDP packets recognized by the client",
                    "html": "<p>Table 2. Custom UDP packets recognized by the client</p>"
                },
                {
                    "id": "<sentence_0xe9838cf9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The backdoor functions implemented in the main client are:",
                    "html": "<p>The backdoor functions implemented in the main client are:</p>"
                },
                {
                    "id": "<sentence_0xa799ee2a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Interactive shell<crlf>Upload file<crlf>Download file<crlf>List files<crlf>Terminate process<crlf>List processes<crlf>Install module<crlf>Login callback<crlf>Enumerate RDP sessions",
                    "html": "<ul>\n<li class=\"rich-text-li\">Interactive shell</li>\n<li class=\"rich-text-li\">Upload file</li>\n<li class=\"rich-text-li\">Download file</li>\n<li class=\"rich-text-li\">List files</li>\n<li class=\"rich-text-li\">Terminate process</li>\n<li class=\"rich-text-li\">List processes</li>\n<li class=\"rich-text-li\">Install module</li>\n<li class=\"rich-text-li\">Login callback</li>\n<li class=\"rich-text-li\">Enumerate RDP sessions</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x74452e76>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The communication protocol via UDP uses the same RC4 encryption. A sent and/or received packet contains a 16-byte RC4 key and the length of an RC4-encrypted payload, followed by another packet with the encrypted payload itself.",
                    "html": "<p>The communication protocol via UDP uses the same RC4 encryption. A sent and/or received packet contains a 16-byte RC4 key and the length of an RC4-encrypted payload, followed by another packet with the encrypted payload itself.</p>"
                },
                {
                    "id": "<sentence_0xeb071935>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "oRAT",
                    "html": "<p>oRAT</p>"
                },
                {
                    "id": "<sentence_0x72900958>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Another malware family that we obtained both Windows and macOS samples of during our investigation was oRAT. Interestingly, this was the first time that we had analyzed samples of this malware family written in the Go language.",
                    "html": "<p>Another malware family that we obtained both Windows and macOS samples of during our investigation was oRAT. Interestingly, this was the first time that we had analyzed samples of this malware family written in the Go language.</p>"
                },
                {
                    "id": "<sentence_0x8818e1a8>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The oRAT droppers that we found in our analysis were a MiMi chat application built using the Electron JS framework and a DMG file. We discuss the full details of both in our research paper.",
                    "html": "<p>The oRAT droppers that we found in our analysis were a MiMi chat application built using the Electron JS framework and a DMG file. We discuss the full details of both in our research paper.</p>"
                },
                {
                    "id": "<sentence_0x4b9e83d7>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The samples are flagged as version 0.5.1 for both Windows and macOS samples, and have the same features and configurations.",
                    "html": "<p>The samples are flagged as version 0.5.1 for both Windows and macOS samples, and have the same features and configurations.</p>"
                },
                {
                    "id": "<sentence_0xa18bea30>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The configuration file and the AES decryption key are appended in an encrypted form to the PE file overlay.",
                    "html": "<p>The configuration file and the AES decryption key are appended in an encrypted form to the PE file overlay.</p>"
                },
                {
                    "id": "<sentence_0x61a37f30>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0xfef0d3c3>": "https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig6_Earth%20Berberoka%20Targets%20Gambling%20Websites.png"
                    },
                    "text": "Figure 6. Decrypted oRAT configuration",
                    "html": "<figure class=\"image-figure\">\n<img alt=\"Decrypted oRAT configuration\" src=\"https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig6_Earth%20Berberoka%20Targets%20Gambling%20Websites.png\"/>\n<figcaption>Figure 6. Decrypted oRAT configuration</figcaption>\n</figure>"
                },
                {
                    "id": "<sentence_0xf89a365e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The configuration is decrypted using the AES-GCM (AES with Galois Counter Mode) algorithm. The malware then parses it and enables the gateway or traffic forwarder mode if it is specified in the configuration settings.",
                    "html": "<p>The configuration is decrypted using the AES-GCM (AES with Galois Counter Mode) algorithm. The malware then parses it and enables the gateway or traffic forwarder mode if it is specified in the configuration settings.</p>"
                },
                {
                    "id": "<sentence_0x40150826>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "For the malware operator to directly connect to an infected machine and execute commands via GET or POST requests, the malware starts local servers on the infected machine to listen on ports that have been specified in the configuration settings for control commands.",
                    "html": "<p>For the malware operator to directly connect to an infected machine and execute commands via GET or POST requests, the malware starts local servers on the infected machine to listen on ports that have been specified in the configuration settings for control commands.</p>"
                },
                {
                    "id": "<sentence_0xbad37615>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The network communications can be in plain text or encrypted, depending on the configuration of the file:",
                    "html": "<p>The network communications can be in plain text or encrypted, depending on the configuration of the file:</p>"
                },
                {
                    "id": "<sentence_0xacbd3d8a>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3cff6eaf>": "https://github.com/denji/golang-tls",
                        "<a_0xec68b81e>": "https://github.com/lucas-clemente/quic-go"
                    },
                    "text": "tcp for plain text<crlf>stcp for encrypted TCP communications using the golang-tls library<crlf>sudp for encrypted UDP traffic using the Quic-go library",
                    "html": "<ul>\n<li class=\"rich-text-li\"> \u201ctcp\u201d for plain text</li>\n<li class=\"rich-text-li\"> \u201cstcp\u201d for encrypted TCP communications using the <a href=\"https://github.com/denji/golang-tls\">golang-tls library</a></li>\n<li class=\"rich-text-li\"> \u201csudp\u201d for encrypted UDP traffic using the <a href=\"https://github.com/lucas-clemente/quic-go\">Quic-go library</a></li>\n</ul>"
                },
                {
                    "id": "<sentence_0x989c6b01>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x925dd0b1>": "https://developpaper.com/understanding-the-implementation-of-http-server-in-golang/"
                    },
                    "text": "The control server is implemented by registering routes. This simple mechanism leads to translating GET/POST requests directly as internal Go commands. Requesting a URL therefore results in executing the corresponding code on an infected system.",
                    "html": "<p>The control server is implemented by <a href=\"https://developpaper.com/understanding-the-implementation-of-http-server-in-golang/\">registering routes</a>. This simple mechanism leads to translating GET/POST requests directly as internal Go commands. Requesting a URL therefore results in executing the corresponding code on an infected system.</p>"
                },
                {
                    "id": "<sentence_0x5fa2295b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We obtained oRAT samples that register these routes:",
                    "html": "<p>We obtained oRAT samples that register these routes:\n</p>"
                },
                {
                    "id": "<sentence_0x9fd75e4a>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "GET /agent/info<crlf>GET /agent/ping<crlf>POST /agent/upload<crlf>GET /agent/download<crlf>GET /agent/screenshot<crlf>GET /agent/zip<crlf>GET /agent/unzip<crlf>GET /agent/kill-self<crlf>GET /agent/portscan<crlf>GET /agent/proxy<crlf>GET /agent/ssh<crlf>GET /agent/net",
                    "html": "<ul>\n<li class=\"rich-text-li\">GET /agent/info</li>\n<li class=\"rich-text-li\">GET /agent/ping</li>\n<li class=\"rich-text-li\">POST /agent/upload</li>\n<li class=\"rich-text-li\">GET /agent/download</li>\n<li class=\"rich-text-li\">GET /agent/screenshot</li>\n<li class=\"rich-text-li\">GET /agent/zip</li>\n<li class=\"rich-text-li\">GET /agent/unzip</li>\n<li class=\"rich-text-li\">GET /agent/kill-self</li>\n<li class=\"rich-text-li\">GET /agent/portscan</li>\n<li class=\"rich-text-li\">GET /agent/proxy</li>\n<li class=\"rich-text-li\">GET /agent/ssh</li>\n<li class=\"rich-text-li\">GET /agent/net</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xc3fffbd5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PuppetDownloaders (C++ downloaders)",
                    "html": "<p>PuppetDownloaders (C++ downloaders)\n</p>"
                },
                {
                    "id": "<sentence_0xc9f63db5>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "During our investigation, we also saw malicious websites that distribute fake Adobe Flash Player updates that were actually delivering C++ downloaders.",
                    "html": "<p>During our investigation, we also saw malicious websites that distribute fake Adobe Flash Player updates that were actually delivering C++ downloaders.</p>"
                },
                {
                    "id": "<sentence_0xeaeb6e8f>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The infection starts with an executable written in C++ that connects through a Winsock API to a domain or IP address in a specific port. The downloaded content is saved as SMTemp.dat, and using the executables file name and a hard-coded XOR key, a file named Loader.dll is decrypted and copied to the disk. If the executable is renamed for whatever reason, the DLL decryption fails and the malwares second stage does not go through.",
                    "html": "<p>The infection starts with an executable written in C++ that connects through a Winsock API to a domain or IP address in a specific port. The downloaded content is saved as SMTemp.dat, and using the executable\u2019s file name and a hard-coded XOR key, a file named Loader.dll is decrypted and copied to the disk. If the executable is renamed for whatever reason, the DLL decryption fails and the malware\u2019s second stage does not go through.</p>"
                },
                {
                    "id": "<sentence_0xaed07d3e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "If the SMTemp.dat file exists, the Loader.dll file executes it. After that, the loader decrypts a legitimate Adobe Flash Player installer and executes it, in order to deceive the victim into thinking that the executable is a legitimate installer.",
                    "html": "<p>If the SMTemp.dat file exists, the Loader.dll file executes it. After that, the loader decrypts a legitimate Adobe Flash Player installer and executes it, in order to deceive the victim into thinking that the executable is a legitimate installer.</p>"
                },
                {
                    "id": "<sentence_0x822ff9f1>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "During our investigation, we noted that the server hosting the second stage of the PuppetDownloaders malware payload was offline. It is also interesting to note that the string decryption routine of this malware is a simple XOR with the string 2020-05-24 13:00:29 as its key. The first 13 bytes of the password that is used to decode the string are the same as the last 13 bytes.",
                    "html": "<p>During our investigation, we noted that the server hosting the second stage of the PuppetDownloaders malware payload was offline. It is also interesting to note that the string decryption routine of this malware is a simple XOR with the string \u201c2020-05-24 13:00:29\u201d as its key. The first 13 bytes of the password that is used to decode the string are the same as the last 13 bytes.</p>"
                },
                {
                    "id": "<sentence_0xf9cfae9c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<img_0x58e4cd41>": "https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig7_Earth%20Berberoka%20Targets%20Gambling%20Websites.png"
                    },
                    "text": "Figure 7. XOR decryption routine",
                    "html": "<figure class=\"image-figure\">\n<img alt=\"XOR decryption routine \" src=\"https://marvel-b1-cdn.bc0a.com/f00000000017219/www.trendmicro.com/content/dam/trendmicro/global/en/research/22/d/new-apt-group-earth-berberoka-targets-gambling-websites-with-old-and-new-malware/Fig7_Earth%20Berberoka%20Targets%20Gambling%20Websites.png\"/>\n<figcaption>Figure 7. XOR decryption routine </figcaption>\n</figure>"
                },
                {
                    "id": "<sentence_0x69f5180c>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We dubbed these downloaders PuppetDownloaders since they are connected to the PuppetLoader malware family, as evidenced by our observations:",
                    "html": "<p>We dubbed these downloaders PuppetDownloaders since they are connected to the PuppetLoader malware family, as evidenced by our observations:</p>"
                },
                {
                    "id": "<sentence_0x55b624b9>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This malware and PuppetLoader both use the same string decryption routine that uses the same key.<crlf>This malware and PuppetLoader both use the same XOR key (2726c6aea9970bb95211304705b5f595) that is used to decrypt the embedded Loader.dll file.<crlf>This malware and PuppetLoaders decrypted Loader.dlls share similar strings such as [-] UnExist pwszModuleFunName:. This suggests that a common framework was used to compile both DLLs.",
                    "html": "<ul>\n<li class=\"rich-text-li\">This malware and PuppetLoader both use the same string decryption routine that uses the same key.</li>\n<li class=\"rich-text-li\">This malware and PuppetLoader both use the same XOR key (2726c6aea9970bb95211304705b5f595) that is used to decrypt the embedded Loader.dll file.</li>\n<li class=\"rich-text-li\">This malware and PuppetLoader\u2019s decrypted Loader.dlls share similar strings such as \u201c[-] UnExist pwszModuleFunName:\u201d. This suggests that a common framework was used to compile both DLLs.</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x16e7ccb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "MFC socket downloaders",
                    "html": "<p>MFC socket downloaders</p>"
                },
                {
                    "id": "<sentence_0x535a4c3d>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We also saw WinRAR self-extracting (SFX) files dropping downloaders written using the Microsoft Foundation Class Library (MFC) framework. These MFC socket downloaders have an identical structure: One function creates a socket, connects to a domain or IP address, sends a short string, and then calls recv twice.",
                    "html": "<p>We also saw WinRAR self-extracting (SFX) files dropping downloaders written using the Microsoft Foundation Class Library (MFC) framework. These MFC socket downloaders have an identical structure: One function creates a socket, connects to a domain or IP address, sends a short string, and then calls \u201crecv\u201d twice.</p>"
                },
                {
                    "id": "<sentence_0xc5285069>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The code flow is redirected through a call to EnumDesktopsA or EnumWindows, whose callback function pointers point to the downloaded content.",
                    "html": "<p>The code flow is redirected through a call to EnumDesktopsA or EnumWindows, whose callback function pointers point to the downloaded content.</p>"
                },
                {
                    "id": "<sentence_0xea40377b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "The downloaders attempt to access ports 8080, 29527, and 8885. They also send the strings feiji, @5436, and fhfgj@jfggdsg to the sockets. We found multiple samples of the same malware family that have the same structure and send the same strings. However, it is possible that multiple groups might be covertly sharing the source code for this malware.",
                    "html": "<p>The downloaders attempt to access ports 8080, 29527, and 8885. They also send the strings \u201cfeiji\u201d, \u201c@5436\u201d, and \u201cfhfgj@jfggdsg\u201d to the sockets. We found multiple samples of the same malware family that have the same structure and send the same strings. However, it is possible that multiple groups might be covertly sharing the source code for this malware.</p>"
                },
                {
                    "id": "<sentence_0x183bc41b>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "PlugX",
                    "html": "<p>PlugX</p>"
                },
                {
                    "id": "<sentence_0xec0aa5eb>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x3273f2cd>": "https://www.trendmicro.com/en_us/research/12/i/unplugging-plugx-capabilities.html"
                    },
                    "text": "PlugX is a remote access tool (RAT) that has been used as a malicious tool for espionage for more than a decade. We found that Earth Berberoka uses PlugX to target 32-bit and 64-bit architectures based on the samples we obtained and analyzed.",
                    "html": "<p><a href=\"https://www.trendmicro.com/en_us/research/12/i/unplugging-plugx-capabilities.html\">PlugX</a> is a remote access tool (RAT) that has been used as a malicious tool for espionage for more than a decade. We found that Earth Berberoka uses PlugX to target 32-bit and 64-bit architectures based on the samples we obtained and analyzed.</p>"
                },
                {
                    "id": "<sentence_0x2df80164>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "This malware family has been upgraded to send a DWORD, a 32-bit unsigned integer, in the HELLO packet. A compromised system then sends the HELLO packet, which looks like a date in the yyyymmdd format, to the C&C server.",
                    "html": "<p>This malware family has been upgraded to send a DWORD, a 32-bit unsigned integer, in the HELLO packet. A compromised system then sends the HELLO packet, which looks like a date in the yyyymmdd format, to the C&amp;C server.</p>"
                },
                {
                    "id": "<sentence_0xce037b0e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We found the following DWORDs in multiple samples we analyzed, which suggest that the versions we found were developed within the last two years: 20190520, 20201106, and 20210804.",
                    "html": "<p>We found the following DWORDs in multiple samples we analyzed, which suggest that the versions we found were developed within the last two years: 20190520, 20201106, and 20210804.</p>"
                },
                {
                    "id": "<sentence_0xc754fdef>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "All of the samples we found are loaded in the same way: A legitimate and signed file that is vulnerable to DLL sideloading is placed alongside a malicious DLL, which decrypts and loads the third file containing the final payload.",
                    "html": "<p>All of the samples we found are loaded in the same way: A legitimate and signed file that is vulnerable to DLL sideloading is placed alongside a malicious DLL, which decrypts and loads the third file containing the final payload.</p>"
                },
                {
                    "id": "<sentence_0xad8cc194>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "One of these malicious DLL files has the PDB path C:\\Users\\Administrator\\Desktop\\Plug7.0(Logger)\\logexts\\x64\\Release\\logexts.pdb.",
                    "html": "<p>One of these malicious DLL files has the PDB path C:\\Users\\Administrator\\Desktop\\Plug7.0(Logger)\\logexts\\x64\\Release\\logexts.pdb.</p>"
                },
                {
                    "id": "<sentence_0xc48cd7aa>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Gh0st RAT",
                    "html": "<p>Gh0st RAT</p>"
                },
                {
                    "id": "<sentence_0xc4750d07>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x34a80f1b>": "https://attack.mitre.org/software/S0032/",
                        "<a_0x396999d0>": "https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ghostrat"
                    },
                    "text": "We also saw at least three different variants of Gh0st RAT, another malware family that has been in the wild for more than 10 years, being used in Earth Berberokas campaign. This malware familys source code is public, which is why it has many variants.",
                    "html": "<p>We also saw at least three different variants of <a href=\"https://attack.mitre.org/software/S0032/\">Gh0st RAT</a>, another malware family that has been in the wild for <a href=\"https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ghostrat\">more than 10 years</a>, being used in Earth Berberoka\u2019s campaign. This malware family\u2019s source code is public, which is why it has many variants.</p>"
                },
                {
                    "id": "<sentence_0xef799215>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x68a761c>": "https://d.thaihosttalk.com/t/i-am-virus-fuck-you/34081",
                        "<a_0xf1dbc7c6>": "https://www.cisa.gov/uscert/sites/default/files/documents/Destructive_Malware_White_Paper_S508C.pdf"
                    },
                    "text": "One of the variants we analyzed had an interesting destructive feature: It replaces the master boot record (MBR) to display an explicit message (I am virus ! F*ck you :-)). This particular message was also seen in a public report from a victim of this Gh0st RAT variant. A 2017 Industrial Control Systems Cyber Emergency Response Team (ICS-CERT) report also discussed how Gh0st RAT variants wiped the MBR and replaced it with messages that varied across different samples.",
                    "html": "<p>One of the variants we analyzed had an interesting destructive feature: It replaces the master boot record (MBR) to display an explicit message (\u201cI am virus ! F*ck you :-)\u201d). This particular message was also seen in a <a href=\"https://d.thaihosttalk.com/t/i-am-virus-fuck-you/34081\">public report</a> from a victim of this Gh0st RAT variant. A 2017 Industrial Control Systems Cyber Emergency Response Team (ICS-CERT) <a href=\"https://www.cisa.gov/uscert/sites/default/files/documents/Destructive_Malware_White_Paper_S508C.pdf\">report</a> also discussed how Gh0st RAT variants wiped the MBR and replaced it with messages that varied across different samples.</p>"
                },
                {
                    "id": "<sentence_0x748fa17e>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Other Known Malware Families",
                    "html": "<p>Other Known Malware Families</p>"
                },
                {
                    "id": "<sentence_0xc8a85ad>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "We also found other legitimate tools being abused by Earth Berberoka and a malware family being used by the group in its campaign:",
                    "html": "<p>We also found other legitimate tools being abused by Earth Berberoka and a malware family being used by the group in its campaign:</p>"
                },
                {
                    "id": "<sentence_0xbadb18ab>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x6c1b658e>": "https://www.cisa.gov/uscert/ncas/analysis-reports/AR18-352A",
                        "<a_0x2bef961>": "https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat",
                        "<a_0xf0040a22>": "https://securityaffairs.co/wordpress/43889/cyber-crime/new-rat-trochilus.html"
                    },
                    "text": "Quasar RAT a Windows-based open-source RAT that has been used by APT groups for network exploitation<crlf>AsyncRAT an open-source RAT that can be used to remotely monitor and control devices via an encrypted connection<crlf>Trochilus a stealthy RAT that can evade sandbox analysis and can be used in cyberespionage campaigns",
                    "html": "<ul>\n<li class=\"rich-text-li\"><a href=\"https://www.cisa.gov/uscert/ncas/analysis-reports/AR18-352A\">Quasar RAT</a> \u2013 a Windows-based open-source RAT that has been used by APT groups for network exploitation</li>\n<li class=\"rich-text-li\"><a href=\"https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat\">AsyncRAT</a> \u2013 an open-source RAT that can be used to remotely monitor and control devices via an encrypted connection</li>\n<li class=\"rich-text-li\"><a href=\"https://securityaffairs.co/wordpress/43889/cyber-crime/new-rat-trochilus.html\">Trochilus</a> \u2013 a stealthy RAT that can evade sandbox analysis and can be used in cyberespionage campaigns</li>\n</ul>"
                },
                {
                    "id": "<sentence_0x7916d6dc>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Security recommendations",
                    "html": "<p>Security recommendations</p>"
                },
                {
                    "id": "<sentence_0xa45c5b4>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Our analysis points to Earth Berberokas having multiple tools and a large infrastructure at its disposal to target the gambling market. To avoid falling victim to Earth Berberokas attacks, users and operators of gambling websites can adopt the following security recommendations:",
                    "html": "<p>Our analysis points to Earth Berberoka\u2019s having multiple tools and a large infrastructure at its disposal to target the gambling market. To avoid falling victim to Earth Berberoka\u2019s attacks, users and operators of gambling websites can adopt the following security recommendations:</p>"
                },
                {
                    "id": "<sentence_0x9a4e3aeb>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Properly vet emails, websites, and apps before clicking on links or downloading apps.<crlf>Download apps only from trusted sources.<crlf>Watch out for malicious website flags, such as errors in grammar and spelling.<crlf>Block threats that arrive via email, such as malicious links, through hosted email security and antispam protection.<crlf>Use a multilayered security solution that helps with detecting, scanning, and blocking malicious URLs.",
                    "html": "<ul>\n<li class=\"rich-text-li\">Properly vet emails, websites, and apps before clicking on links or downloading apps.</li>\n<li class=\"rich-text-li\">Download apps only from trusted sources.</li>\n<li class=\"rich-text-li\">Watch out for malicious website flags, such as errors in grammar and spelling.</li>\n<li class=\"rich-text-li\">Block threats that arrive via email, such as malicious links, through hosted email security and antispam protection.</li>\n<li class=\"rich-text-li\">Use a multilayered security solution that helps with detecting, scanning, and blocking malicious URLs.</li>\n</ul>"
                },
                {
                    "id": "<sentence_0xebebfa28>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xf946746e>": "https://documents.trendmicro.com/assets/txt/earth-berberoka-windows-iocs.txt",
                        "<a_0xab843d4b>": "https://documents.trendmicro.com/assets/txt/earth-berberoka-linux-iocs.txt",
                        "<a_0x5eebf12d>": "https://documents.trendmicro.com/assets/txt/earth-berberoka-macos-iocs.txt"
                    },
                    "text": "The full technical details of our investigation can be found in our research paper, which we will publish soon. We list down the indicators of compromise (IOCs) for Windows, Linux, and macOS in separate text files.",
                    "html": "<p>The full technical details of our investigation can be found in our research paper, which we will publish soon. We list down the indicators of compromise (IOCs) for <a href=\"https://documents.trendmicro.com/assets/txt/earth-berberoka-windows-iocs.txt\" target=\"_blank\">Windows</a>, <a href=\"https://documents.trendmicro.com/assets/txt/earth-berberoka-linux-iocs.txt\" target=\"_blank\">Linux</a>, and <a href=\"https://documents.trendmicro.com/assets/txt/earth-berberoka-macos-iocs.txt\" target=\"_blank\">macOS</a> in separate text files.</p>"
                },
                {
                    "id": "<sentence_0x8a3c6887>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "Tags",
                    "html": "\nTags\n"
                },
                {
                    "id": "<sentence_0x34dc3462>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xcf19ce58>": "https://www.trendmicro.com/en_us/research.html?category=trend-micro-research:threats/apt-and-targeted-attacks"
                    },
                    "text": "APT & Targeted Attacks",
                    "html": "<a class=\"tag--list-anchor\" href=\"/en_us/research.html?category=trend-micro-research:threats/apt-and-targeted-attacks\">APT &amp; Targeted Attacks</a>"
                },
                {
                    "id": "<sentence_0x63377431>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "|",
                    "html": "\n|\n"
                },
                {
                    "id": "<sentence_0xe810453b>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xeac3b29b>": "https://www.trendmicro.com/en_us/research.html?category=trend-micro-research:environments/endpoints"
                    },
                    "text": "Endpoints",
                    "html": "<a class=\"tag--list-anchor\" href=\"/en_us/research.html?category=trend-micro-research:environments/endpoints\">Endpoints</a>"
                },
                {
                    "id": "<sentence_0x67fca92>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "|",
                    "html": "\n|\n"
                },
                {
                    "id": "<sentence_0x5fbb474c>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0x236cbe5e>": "https://www.trendmicro.com/en_us/research.html?category=trend-micro-research:article-type/research"
                    },
                    "text": "Research",
                    "html": "<a class=\"tag--list-anchor\" href=\"/en_us/research.html?category=trend-micro-research:article-type/research\">Research</a>"
                },
                {
                    "id": "<sentence_0x70465104>",
                    "is_empty": false,
                    "have_tags": false,
                    "tags": {},
                    "text": "|",
                    "html": "\n|\n"
                },
                {
                    "id": "<sentence_0x130866ae>",
                    "is_empty": false,
                    "have_tags": true,
                    "tags": {
                        "<a_0xd55b963b>": "https://www.trendmicro.com/en_us/research.html?category=trend-micro-research:medium/article"
                    },
                    "text": "Articles, News, Reports",
                    "html": "<a class=\"tag--list-anchor\" href=\"/en_us/research.html?category=trend-micro-research:medium/article\">Articles, News, Reports</a>"
                }
            ]
        },
        {
            "id": "<chapter_0x909a2b53>",
            "title": "New APT Group Earth Berberoka Targets Gambling Websites With Old and New Malware",
            "title_level": 1,
            "sentences": []
        }
    ]
}